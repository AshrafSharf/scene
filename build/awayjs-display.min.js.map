{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "../index.ts",
    "lib/View.ts",
    "lib/animators/lib/animators/data/ParticleData.ts",
    "lib/animators/lib/animators/nodes/AnimationNodeBase.ts",
    "lib/animators.ts",
    "lib/lib/base/AlignmentMode.ts",
    "lib/lib/base/HierarchicalProperties.ts",
    "lib/lib/base/OrientationMode.ts",
    "lib/lib/base/Style.ts",
    "lib/lib/base/Timeline.ts",
    "lib/lib/base/TouchPoint.ts",
    "lib/lib/base/Transform.ts",
    "lib/base.ts",
    "lib/lib/bounds/AxisAlignedBoundingBox.ts",
    "lib/lib/bounds/BoundingSphere.ts",
    "lib/lib/bounds/BoundingVolumeBase.ts",
    "lib/lib/bounds/BoundsType.ts",
    "lib/lib/bounds/NullBounds.ts",
    "lib/bounds.ts",
    "lib/lib/controllers/ControllerBase.ts",
    "lib/lib/controllers/FirstPersonController.ts",
    "lib/lib/controllers/FollowController.ts",
    "lib/lib/controllers/HoverController.ts",
    "lib/lib/controllers/LookAtController.ts",
    "lib/lib/controllers/SpringController.ts",
    "lib/controllers.ts",
    "lib/lib/display/Billboard.ts",
    "lib/lib/display/Camera.ts",
    "lib/lib/display/DirectionalLight.ts",
    "lib/lib/display/DisplayObjectContainer.ts",
    "lib/lib/display/DisplayObject.ts",
    "lib/lib/display/LightBase.ts",
    "lib/lib/display/LightProbe.ts",
    "lib/lib/display/LineSegment.ts",
    "lib/lib/display/LoaderContainer.ts",
    "lib/lib/display/MovieClip.ts",
    "lib/lib/display/PointLight.ts",
    "lib/lib/display/Scene.ts",
    "lib/lib/display/Shape.ts",
    "lib/lib/display/Skybox.ts",
    "lib/lib/display/Sprite.ts",
    "lib/lib/display/TextField.ts",
    "lib/display.ts",
    "lib/lib/draw/CapsStyle.ts",
    "lib/lib/draw/GradientType.ts",
    "lib/lib/draw/GraphicsFactoryFills.ts",
    "lib/lib/draw/GraphicsFactoryHelper.ts",
    "lib/lib/draw/GraphicsFactoryStrokes.ts",
    "lib/lib/draw/GraphicsFillStyle.ts",
    "lib/lib/draw/GraphicsPathCommand.ts",
    "lib/lib/draw/GraphicsPathWinding.ts",
    "lib/lib/draw/GraphicsPath.ts",
    "lib/lib/draw/GraphicsStrokeStyle.ts",
    "lib/lib/draw/InterpolationMethod.ts",
    "lib/lib/draw/JointStyle.ts",
    "lib/lib/draw/LineScaleMode.ts",
    "lib/lib/draw/PixelSnapping.ts",
    "lib/lib/draw/SpreadMethod.ts",
    "lib/lib/draw/TriangleCulling.ts",
    "lib/draw.ts",
    "lib/lib/errors/CastError.ts",
    "lib/errors.ts",
    "lib/lib/events/CameraEvent.ts",
    "lib/lib/events/DisplayObjectEvent.ts",
    "lib/lib/events/ElementsEvent.ts",
    "lib/lib/events/LightEvent.ts",
    "lib/lib/events/MouseEvent.ts",
    "lib/lib/events/RenderableEvent.ts",
    "lib/lib/events/RendererEvent.ts",
    "lib/lib/events/ResizeEvent.ts",
    "lib/lib/events/StyleEvent.ts",
    "lib/lib/events/SurfaceEvent.ts",
    "lib/lib/events/TouchEvent.ts",
    "lib/lib/events/TransformEvent.ts",
    "lib/events.ts",
    "lib/lib/graphics/ElementsBase.ts",
    "lib/lib/graphics/ElementsType.ts",
    "lib/lib/graphics/Graphics.ts",
    "lib/lib/graphics/Graphic.ts",
    "lib/lib/graphics/HitTestCache.ts",
    "lib/lib/graphics/LineElements.ts",
    "lib/lib/graphics/TriangleElements.ts",
    "lib/graphics.ts",
    "lib/lib/managers/DefaultMaterialManager.ts",
    "lib/lib/managers/FrameScriptManager.ts",
    "lib/lib/managers/MouseManager.ts",
    "lib/lib/managers/TouchManager.ts",
    "lib/managers.ts",
    "lib/lib/materials/BasicMaterial.ts",
    "lib/lib/materials/LightSources.ts",
    "lib/lib/materials/MaterialBase.ts",
    "lib/materials/lib/materials/lightpickers/LightPickerBase.ts",
    "lib/materials/lib/materials/lightpickers/StaticLightPicker.ts",
    "lib/materials/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "lib/materials.ts",
    "lib/lib/partition/BasicPartition.ts",
    "lib/lib/partition/CameraNode.ts",
    "lib/lib/partition/DirectionalLightNode.ts",
    "lib/lib/partition/DisplayObjectNode.ts",
    "lib/lib/partition/EntityNode.ts",
    "lib/lib/partition/LightProbeNode.ts",
    "lib/lib/partition/NodeBase.ts",
    "lib/lib/partition/PartitionBase.ts",
    "lib/lib/partition/PointLightNode.ts",
    "lib/lib/partition/SceneGraphNode.ts",
    "lib/lib/partition/SceneGraphPartition.ts",
    "lib/lib/partition/SkyboxNode.ts",
    "lib/partition.ts",
    "lib/lib/pick/JSPickingCollider.ts",
    "lib/lib/pick/PickingCollision.ts",
    "lib/lib/pick/RaycastPicker.ts",
    "lib/pick.ts",
    "lib/lib/prefabs/PrefabBase.ts",
    "lib/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "lib/lib/prefabs/PrimitiveConePrefab.ts",
    "lib/lib/prefabs/PrimitiveCubePrefab.ts",
    "lib/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "lib/lib/prefabs/PrimitivePlanePrefab.ts",
    "lib/lib/prefabs/PrimitivePolygonPrefab.ts",
    "lib/lib/prefabs/PrimitivePrefabBase.ts",
    "lib/lib/prefabs/PrimitiveSpherePrefab.ts",
    "lib/lib/prefabs/PrimitiveTorusPrefab.ts",
    "lib/prefabs.ts",
    "lib/lib/text/AntiAliasType.ts",
    "lib/lib/text/Font.ts",
    "lib/lib/text/GridFitType.ts",
    "lib/lib/text/TesselatedFontChar.ts",
    "lib/lib/text/TesselatedFontTable.ts",
    "lib/lib/text/TextFieldAutoSize.ts",
    "lib/lib/text/TextFieldType.ts",
    "lib/lib/text/TextFormatAlign.ts",
    "lib/lib/text/TextFormat.ts",
    "lib/lib/text/TextInteractionMode.ts",
    "lib/lib/text/TextLineMetrics.ts",
    "lib/text.ts",
    "lib/lib/textures/MappingMode.ts",
    "lib/lib/textures/Single2DTexture.ts",
    "lib/lib/textures/SingleCubeTexture.ts",
    "lib/lib/textures/TextureBase.ts",
    "lib/textures.ts",
    "lib/lib/utils/Cast.ts",
    "lib/lib/utils/ElementsUtils.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "adapters",
    "animators",
    "base",
    "bounds",
    "controllers",
    "display",
    "draw",
    "errors",
    "events",
    "factories",
    "graphics",
    "managers",
    "materials",
    "partition",
    "pick",
    "prefabs",
    "text",
    "textures",
    "utils",
    "View_1",
    "View",
    "default",
    "PartitionBase",
    "registerAbstraction",
    "CameraNode",
    "Camera",
    "DirectionalLightNode",
    "DirectionalLight",
    "EntityNode",
    "Sprite",
    "Shape",
    "MovieClip",
    "Billboard",
    "LineSegment",
    "TextField",
    "LightProbeNode",
    "LightProbe",
    "PointLightNode",
    "PointLight",
    "SkyboxNode",
    "Skybox",
    "./lib/View",
    "./lib/adapters",
    "./lib/animators",
    "./lib/base",
    "./lib/bounds",
    "./lib/controllers",
    "./lib/display",
    "./lib/draw",
    "./lib/errors",
    "./lib/events",
    "./lib/factories",
    "./lib/graphics",
    "./lib/managers",
    "./lib/materials",
    "./lib/partition",
    "./lib/pick",
    "./lib/prefabs",
    "./lib/text",
    "./lib/textures",
    "./lib/utils",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/ITraverser",
    "awayjs-display/lib/View",
    "getTimer_1",
    "TouchPoint_1",
    "Scene_1",
    "RaycastPicker_1",
    "Camera_1",
    "CameraEvent_1",
    "DisplayObjectEvent_1",
    "RendererEvent_1",
    "MouseManager_1",
    "renderer",
    "scene",
    "camera",
    "_this",
    "this",
    "_width",
    "_height",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "Array",
    "_onPartitionChangedDelegate",
    "event",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "position",
    "appendChild",
    "_mouseManager",
    "getInstance",
    "registerView",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "_pMouseX",
    "enumerable",
    "configurable",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "inverseSceneTransform",
    "transformVector",
    "unproject",
    "x",
    "getLocalMouseY",
    "y",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "len",
    "push",
    "id",
    "_pRenderer",
    "set",
    "value",
    "dispose",
    "removeEventListener",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "addEventListener",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "width",
    "height",
    "shareContext",
    "_shareContext",
    "_pCamera",
    "PROJECTION_CHANGED",
    "_pScene",
    "_iRegisterEntity",
    "PARTITION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollision",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "./base/TouchPoint",
    "./display/Camera",
    "./display/Scene",
    "./events/CameraEvent",
    "./events/DisplayObjectEvent",
    "./events/RendererEvent",
    "./managers/MouseManager",
    "./pick/RaycastPicker",
    "awayjs-core/lib/utils/getTimer",
    "undefined",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/adapters",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/data/ParticleData",
    "ParticleData",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "create",
    "AssetBase_1",
    "AnimationNodeBase",
    "_super",
    "_pStateClass",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-display/lib/animators",
    "ParticleData_1",
    "AnimationNodeBase_1",
    "./animators/data/ParticleData",
    "./animators/nodes/AnimationNodeBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/HierarchicalProperties",
    "HierarchicalProperties",
    "MOUSE_ENABLED",
    "VISIBLE",
    "MASK_ID",
    "MASKS",
    "COLOR_TRANSFORM",
    "SCENE_TRANSFORM",
    "ALL",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderable",
    "awayjs-display/lib/base/ISurface",
    "awayjs-display/lib/base/OrientationMode",
    "OrientationMode",
    "DEFAULT",
    "CAMERA_PLANE",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher_1",
    "StyleEvent_1",
    "Style",
    "_samplers",
    "_images",
    "_color",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "_uvMatrix",
    "getImageAt",
    "texture",
    "index",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "dispatchEvent",
    "INVALIDATE_PROPERTIES",
    "../events/StyleEvent",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/base/Timeline",
    "HierarchicalProperties_1",
    "ColorTransform_1",
    "FrameScriptManager_1",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "indexOf",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "adapter",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "numChildren",
    "_children",
    "_depthID",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "_sessionID",
    "isBlockedByScript",
    "transform",
    "clearMatrix3D",
    "clearColorTransform",
    "masks",
    "maskMode",
    "isVisibilityByScript",
    "visible",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "matrix3D",
    "rawData",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "colorTransform",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "m",
    "properties_stream_strings",
    "registerScriptObject",
    "target",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "pInvalidateHierarchicalProperties",
    "properties_stream_f32_mtx_pos",
    "invalidatePosition",
    "../base/HierarchicalProperties",
    "../managers/FrameScriptManager",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "awayjs-display/lib/base/Transform",
    "Matrix3D_1",
    "Matrix3DUtils_1",
    "Vector3D_1",
    "TransformEvent_1",
    "Transform",
    "_matrix3D",
    "_rotation",
    "_skew",
    "_scale",
    "_components",
    "director",
    "getForward",
    "negate",
    "_colorTransform",
    "val",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_matrix3DDirty",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "z",
    "invalidateMatrix3D",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "Y_AXIS",
    "moveDown",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "Math",
    "sqrt",
    "appendTranslation",
    "prependTranslation",
    "identity",
    "clear",
    "INVALIDATE_MATRIX3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "recompose",
    "elements",
    "decompose",
    "vec",
    "../events/TransformEvent",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base",
    "AlignmentMode_1",
    "OrientationMode_1",
    "Style_1",
    "Timeline_1",
    "Transform_1",
    "./base/AlignmentMode",
    "./base/HierarchicalProperties",
    "./base/OrientationMode",
    "./base/Style",
    "./base/Timeline",
    "./base/Transform",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification_1",
    "ElementsType_1",
    "BoundingVolumeBase_1",
    "PrimitiveCubePrefab_1",
    "AxisAlignedBoundingBox",
    "entity",
    "_x",
    "_y",
    "_z",
    "_depth",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "getBox",
    "matrix",
    "sceneTransform",
    "hx",
    "hy",
    "hz",
    "depth",
    "cx",
    "cy",
    "cz",
    "raw",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "LINE",
    "getNewObject",
    "../bounds/BoundingVolumeBase",
    "../graphics/ElementsType",
    "../prefabs/PrimitiveCubePrefab",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab_1",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "getSphere",
    "radius",
    "rx",
    "ry",
    "rz",
    "../prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "AbstractMethodError_1",
    "BoundingVolumeBase",
    "invalidate",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "awayjs-display/lib/bounds",
    "AxisAlignedBoundingBox_1",
    "BoundingSphere_1",
    "BoundsType_1",
    "NullBounds_1",
    "./bounds/AxisAlignedBoundingBox",
    "./bounds/BoundingSphere",
    "./bounds/BoundingVolumeBase",
    "./bounds/BoundsType",
    "./bounds/NullBounds",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "invalidatePartitionBounds",
    "_iController",
    "update",
    "interpolate",
    "updateController",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "MathConsts_1",
    "ControllerBase_1",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "rotationX",
    "rotationY",
    "sin",
    "DEGREES_TO_RADIANS",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "../controllers/ControllerBase",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController_1",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "../controllers/HoverController",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController_1",
    "HoverController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "lookAt",
    "scenePosition",
    "../controllers/LookAtController",
    "awayjs-display/lib/controllers/LookAtController",
    "LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "SCENETRANSFORM_CHANGED",
    "../events/DisplayObjectEvent",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "copyFrom",
    "incrementBy",
    "awayjs-display/lib/controllers",
    "FirstPersonController_1",
    "FollowController_1",
    "SpringController_1",
    "./controllers/ControllerBase",
    "./controllers/FirstPersonController",
    "./controllers/FollowController",
    "./controllers/HoverController",
    "./controllers/LookAtController",
    "./controllers/SpringController",
    "awayjs-display/lib/display/Billboard",
    "Rectangle_1",
    "DisplayObject_1",
    "RenderableEvent_1",
    "SurfaceEvent_1",
    "DefaultMaterialManager_1",
    "material",
    "pixelSnapping",
    "smoothing",
    "_pIsEntity",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "_updateDimensions",
    "_boundsType",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "_material",
    "iRemoveOwner",
    "INVALIDATE_TEXTURE",
    "iAddOwner",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "_style",
    "_iTestCollision",
    "pickingCollision",
    "pickingCollider",
    "testBillboardCollision",
    "_acceptTraverser",
    "traverser",
    "applyRenderable",
    "getTextureAt",
    "getDefaultSampler",
    "imageRect",
    "rect",
    "frameRect",
    "_pInvalidateBounds",
    "invalidateElements",
    "INVALIDATE_ELEMENTS",
    "invalidateSurface",
    "INVALIDATE_SURFACE",
    "../bounds/BoundsType",
    "../display/DisplayObject",
    "../events/RenderableEvent",
    "../events/SurfaceEvent",
    "../managers/DefaultMaterialManager",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/display/Camera",
    "Plane3D_1",
    "ProjectionEvent_1",
    "PerspectiveProjection_1",
    "DisplayObjectContainer_1",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "bitFlag",
    "_hierarchicalPropsDirty",
    "append",
    "nX",
    "nY",
    "_applyRenderer",
    "_iSourcePrefab",
    "_iValidate",
    "../display/DisplayObjectContainer",
    "../events/CameraEvent",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/display/DirectionalLight",
    "LightBase_1",
    "DirectionalShadowMapper_1",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "pUpdateSceneTransform",
    "_direction",
    "_tmpLookAt",
    "copyColumnTo",
    "normalize",
    "pCreateShadowMapper",
    "iGetObjectProjectionMatrix",
    "cameraTransform",
    "RAW_DATA_CONTAINER",
    "getRenderSceneTransform",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "copyRawDataFrom",
    "prepend",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "../display/LightBase",
    "../materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/display/DisplayObjectContainer",
    "ArgumentError_1",
    "RangeError_1",
    "DisplayObjectContainer",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "_updateMouseEnabled",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "_pParent",
    "removeChildAtInternal",
    "getChildIndex",
    "iSetParent",
    "_invalidateChildren",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "newInstance",
    "copyTo",
    "mouseChildren",
    "contains",
    "disposeValues",
    "removeChild",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "point",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "box",
    "setBoundIdentity",
    "_iSetScene",
    "splice",
    "_hitTestPointInternal",
    "shapeFlag",
    "masksFlag",
    "hitTestPoint",
    "_updateMaskMode",
    "_pIsContainer",
    "_pImplicitPartition",
    "_iUnregisterEntity",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/display/DisplayObject",
    "Box_1",
    "Sphere_1",
    "Point_1",
    "PickingCollision_1",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "zOffset",
    "_transform",
    "_onInvalidateMatrix3D",
    "_onInvalidateColorTransform",
    "_adapter",
    "scaleZ",
    "_setScaleZ",
    "_eulers",
    "rotationZ",
    "scaleY",
    "_setScaleY",
    "_inverseSceneTransformDirty",
    "invert",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iAssignedPartition",
    "_pivot",
    "pivot",
    "_pivotScale",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "scale",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "_shaderPickingDetails",
    "_debugVisible",
    "_explicitMasks",
    "scaleX",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "_listenToSceneTransformChanged",
    "boundsType",
    "mouseEnabled",
    "extra",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "transformBox",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "setTo",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "maskHit",
    "isMask",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "subtract",
    "crossProduct",
    "localToGlobal3D",
    "movePivot",
    "reset",
    "comps",
    "hasEventListener",
    "_pickingCollision",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "queueDispatch",
    "_sceneTransformChanged",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iRegisterPartition",
    "_sceneChanged",
    "_iIsRoot",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iInternalUpdate",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "collector",
    "concat",
    "numLayers",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "INVALIDATE_PARTITION_BOUNDS",
    "../base/AlignmentMode",
    "../base/OrientationMode",
    "../base/Transform",
    "../pick/PickingCollision",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/display/IEntity",
    "awayjs-display/lib/display/LightBase",
    "LightEvent_1",
    "LightBase",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_shadowsEnabled",
    "_shadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "../events/LightEvent",
    "awayjs-display/lib/display/LightProbe",
    "SamplerCube_1",
    "ErrorBase_1",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "specularSampler",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "awayjs-display/lib/display/LineSegment",
    "startPosition",
    "endPosition",
    "thickness",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/display/LoaderContainer",
    "AssetLibraryBundle_1",
    "Loader_1",
    "AssetEvent_1",
    "URLLoaderEvent_1",
    "LoaderEvent_1",
    "ParserEvent_1",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "LOAD_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "LOAD_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "awayjs-display/lib/display/MovieClip",
    "Sprite_1",
    "TextField_1",
    "MouseEvent_1",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "isAsset",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "pop",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "../base/Timeline",
    "../display/Sprite",
    "../display/TextField",
    "../events/MouseEvent",
    "awayjs-display/lib/display/PointLight",
    "CubeMapShadowMapper_1",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "../materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/display/Scene",
    "BasicPartition_1",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverse",
    "../partition/BasicPartition",
    "awayjs-display/lib/display/Shape",
    "Graphics_1",
    "_tempPoint",
    "_onGraphicsInvalidateDelegate",
    "_onGraphicsInvalidate",
    "_graphics",
    "INVALIDATE",
    "animator",
    "removeOwner",
    "addOwner",
    "bakeTransformations",
    "applyTransformation",
    "_shapes",
    "shape",
    "union",
    "getBoxBounds",
    "_center",
    "getSphereBounds",
    "count",
    "acceptTraverser",
    "local",
    "../graphics/Graphics",
    "awayjs-display/lib/display/Skybox",
    "BlendMode_1",
    "SingleCubeTexture_1",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "NORMAL",
    "_curves",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "../base/Style",
    "../textures/SingleCubeTexture",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/display/Sprite",
    "_sprites",
    "sprite",
    "awayjs-display/lib/display/TextField",
    "AttributesView_1",
    "Float2Attributes_1",
    "Byte4Attributes_1",
    "Matrix_1",
    "Sampler2D_1",
    "TextFieldType_1",
    "TriangleElements_1",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGraphicsDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "color",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textElements",
    "_textFields",
    "_textGraphic",
    "numVertices",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "letterSpacing",
    "textlines",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "final_lines_justify_bool",
    "final_lines_justify",
    "maxlineWidth",
    "textWidth",
    "leftMargin",
    "rightMargin",
    "indent",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "getChar",
    "charCodeAt",
    "fallback_font_table",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "fw",
    "ascent",
    "vertices",
    "Float32Array",
    "x_offset",
    "justify_addion",
    "align",
    "buffer",
    "concatenatedBuffer",
    "descent",
    "leading",
    "attributesView",
    "vertexBuffer",
    "setPositions",
    "setCustomAttributes",
    "addGraphic",
    "uvMatrix",
    "uv_values",
    "animateUVs",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "../graphics/TriangleElements",
    "../text/TextFieldType",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/display",
    "Billboard_1",
    "DirectionalLight_1",
    "LightProbe_1",
    "LineSegment_1",
    "LoaderContainer_1",
    "MovieClip_1",
    "PointLight_1",
    "Shape_1",
    "Skybox_1",
    "./display/Billboard",
    "./display/DirectionalLight",
    "./display/DisplayObject",
    "./display/DisplayObjectContainer",
    "./display/LightBase",
    "./display/LightProbe",
    "./display/LineSegment",
    "./display/LoaderContainer",
    "./display/MovieClip",
    "./display/PointLight",
    "./display/Shape",
    "./display/Skybox",
    "./display/Sprite",
    "./display/TextField",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsFactoryFills",
    "GraphicsPathCommand_1",
    "Float3Attributes_1",
    "GraphicsFactoryHelper_1",
    "GraphicsFactoryFills",
    "draw_pathes",
    "targetGraphic",
    "queued_fill_pathes",
    "cp",
    "one_path",
    "contour_commands",
    "commands",
    "contour_data",
    "vert_cnt",
    "data_cnt",
    "draw_direction",
    "contours_vertices",
    "final_vert_list",
    "final_vert_cnt",
    "lastPoint",
    "last_dir_vec",
    "end_point",
    "new_dir",
    "new_dir_1",
    "new_dir_2",
    "dir_delta",
    "last_direction",
    "tmp_dir_point",
    "LINE_TO",
    "CURVE_TO",
    "atan2",
    "MOVE_TO",
    "control_x",
    "control_y",
    "end_x",
    "end_y",
    "curve_direction",
    "curve_attr_1",
    "isClockWiseXY",
    "CUBIC_CURVE",
    "verts",
    "all_verts",
    "vertIndicess",
    "elems",
    "verticesF32",
    "_tess_obj",
    "addContour",
    "tesselate",
    "getVertices",
    "getElements",
    "numVerts",
    "numElems",
    "p1",
    "p2",
    "p3",
    "attributesBuffer",
    "setUVs",
    "getDefaultMaterial",
    "bothSides",
    "useColorTransform",
    "curves",
    "thisGraphic",
    "../draw/GraphicsFactoryHelper",
    "../draw/GraphicsPathCommand",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/draw/GraphicsFactoryHelper",
    "CapsStyle_1",
    "GraphicsFactoryHelper",
    "point1x",
    "point1y",
    "point2x",
    "point2y",
    "point3x",
    "point3y",
    "num",
    "getSign",
    "bx",
    "by",
    "pointInTri",
    "xx",
    "xy",
    "b1",
    "b2",
    "b3",
    "getControlXForCurveX",
    "getControlYForCurveY",
    "drawPoint",
    "startX",
    "startY",
    "addTriangle",
    "controlX",
    "controlY",
    "endX",
    "endY",
    "tri_type",
    "createCap",
    "start_le",
    "start_ri",
    "dir_vec",
    "capstyle",
    "cap_position",
    "tmp1_x",
    "tmp1_y",
    "tmp2_x",
    "tmp2_y",
    "getLineFormularData",
    "tmp_x",
    "tmp_y",
    "return_point",
    "getQuadricBezierPosition",
    "start",
    "control",
    "end",
    "xt",
    "subdivideCurve",
    "startx",
    "starty",
    "endx",
    "endy",
    "startx2",
    "starty2",
    "cx2",
    "cy2",
    "endx2",
    "endy2",
    "array_out",
    "array2_out",
    "angle_1",
    "angle_2",
    "angle_delta",
    "c1x",
    "c1y",
    "c2x",
    "c2y",
    "c1x2",
    "c1y2",
    "c2x2",
    "c2y2",
    "ax2",
    "ay2",
    "../draw/CapsStyle",
    "awayjs-display/lib/draw/GraphicsFactoryStrokes",
    "JointStyle_1",
    "GraphicsFactoryStrokes",
    "queued_stroke_pathes",
    "strokeStyle",
    "start_point",
    "start_left",
    "start_right",
    "ctr_left",
    "ctr_right",
    "ctr_left2",
    "ctr_right2",
    "end_left",
    "end_right",
    "tmp_point",
    "tmp_point2",
    "tmp_point3",
    "closed",
    "stroke",
    "tessVerts",
    "new_cmds",
    "new_pnts",
    "new_cmds_cnt",
    "new_pnts_cnt",
    "prev_normal",
    "le_point",
    "curve_end_point",
    "ri_point",
    "ctr_point",
    "half_thickness",
    "add_segment",
    "half_angle",
    "merged_pnt_ri",
    "merged_pnt_le",
    "contour_le",
    "contour_prev_le",
    "contour_ri",
    "contour_prev_ri",
    "addJoints",
    "jointstyle",
    "MITER",
    "distance_miter",
    "miter_limit",
    "BUILD_JOINT",
    "BUILD_ROUND_JOINT",
    "NO_OP",
    "length1",
    "length2",
    "length_calc",
    "dirNumber",
    "lengthpos",
    "curve_x",
    "curve_y",
    "curve_2x",
    "curve_2y",
    "subdivided",
    "subdivided2",
    "sc",
    "../draw/JointStyle",
    "awayjs-display/lib/draw/GraphicsFillStyle",
    "GraphicsFillStyle",
    "alpha",
    "_alpha",
    "data_type",
    "awayjs-display/lib/draw/GraphicsPathCommand",
    "GraphicsPathCommand",
    "WIDE_LINE_TO",
    "WIDE_MOVE_TO",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/GraphicsPath",
    "GraphicsPathWinding_1",
    "GraphicsFillStyle_1",
    "GraphicsStrokeStyle_1",
    "GraphicsPath",
    "winding_rule",
    "_data",
    "_commands",
    "_startPoint",
    "_cur_point",
    "_winding_rule",
    "_winding_directions",
    "fill",
    "curveTo",
    "anchorX",
    "anchorY",
    "lineTo",
    "wideLineTo",
    "wideMoveTo",
    "../draw/GraphicsFillStyle",
    "../draw/GraphicsPathWinding",
    "../draw/GraphicsStrokeStyle",
    "awayjs-display/lib/draw/GraphicsStrokeStyle",
    "GraphicsStrokeStyle",
    "_thickness",
    "_jointstyle",
    "_capstyle",
    "_miter_limit",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/draw",
    "GradientType_1",
    "GraphicsFactoryFills_1",
    "GraphicsFactoryStrokes_1",
    "GraphicsPath_1",
    "InterpolationMethod_1",
    "LineScaleMode_1",
    "PixelSnapping_1",
    "SpreadMethod_1",
    "TriangleCulling_1",
    "./draw/CapsStyle",
    "./draw/GradientType",
    "./draw/GraphicsFactoryFills",
    "./draw/GraphicsFactoryHelper",
    "./draw/GraphicsFactoryStrokes",
    "./draw/GraphicsFillStyle",
    "./draw/GraphicsPath",
    "./draw/GraphicsPathCommand",
    "./draw/GraphicsPathWinding",
    "./draw/GraphicsStrokeStyle",
    "./draw/InterpolationMethod",
    "./draw/JointStyle",
    "./draw/LineScaleMode",
    "./draw/PixelSnapping",
    "./draw/SpreadMethod",
    "./draw/TriangleCulling",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "awayjs-display/lib/errors",
    "CastError_1",
    "./errors/CastError",
    "awayjs-display/lib/events/CameraEvent",
    "EventBase_1",
    "CameraEvent",
    "_camera",
    "awayjs-core/lib/events/EventBase",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "DisplayObjectEvent",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/ElementsEvent",
    "ElementsEvent",
    "_attributesView",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "awayjs-display/lib/events/LightEvent",
    "LightEvent",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderable",
    "uv",
    "normal",
    "elementIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableEvent",
    "RenderableEvent",
    "_renderable",
    "awayjs-display/lib/events/RendererEvent",
    "RendererEvent",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "NaN",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/events/StyleEvent",
    "StyleEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "SurfaceEvent",
    "surface",
    "_surface",
    "INVALIDATE_ANIMATION",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/events/TransformEvent",
    "TransformEvent",
    "awayjs-display/lib/events",
    "ElementsEvent_1",
    "ResizeEvent_1",
    "TouchEvent_1",
    "./events/ElementsEvent",
    "./events/LightEvent",
    "./events/MouseEvent",
    "./events/RenderableEvent",
    "./events/ResizeEvent",
    "./events/StyleEvent",
    "./events/SurfaceEvent",
    "./events/TouchEvent",
    "./events/TransformEvent",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/factories",
    "awayjs-display/lib/graphics/ElementsBase",
    "Short3Attributes_1",
    "ElementsBase",
    "_customAttributesNames",
    "_customAttributes",
    "_numElements",
    "_numVertices",
    "_verticesDirty",
    "_invalidateVertices",
    "_concatenatedBuffer",
    "_indices",
    "getCustomAtributesNames",
    "getCustomAtributes",
    "indices",
    "setIndices",
    "values",
    "offset",
    "clearIndices",
    "invalidateIndicies",
    "clearVertices",
    "invalidateVertices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "center",
    "_invalidateIndices",
    "../events/ElementsEvent",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/graphics/ElementsType",
    "ElementsType",
    "TRIANGLE",
    "awayjs-display/lib/graphics/Graphics",
    "Graphic_1",
    "PartialImplementationError_1",
    "Graphics",
    "_current_position",
    "_queued_fill_pathes",
    "_queued_stroke_pathes",
    "_active_fill_path",
    "_active_stroke_path",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "graphic",
    "_iInvalidateSurfaces",
    "_iGetExplicitMaterial",
    "_available",
    "_iIndex",
    "parent",
    "removeGraphic",
    "getGraphicAt",
    "particles",
    "numParticles",
    "_iGetExplicitStyle",
    "_boxBounds",
    "setEmpty",
    "positions",
    "draw_fills",
    "draw_strokes",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "drawCircle",
    "radius2",
    "degree",
    "PI",
    "degree2",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "drawTriangles",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "miterLimit",
    "../draw/GraphicsFactoryFills",
    "../draw/GraphicsFactoryStrokes",
    "../draw/GraphicsPath",
    "../graphics/Graphic",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/graphics/Graphic",
    "Graphic",
    "_elements",
    "awayjs-display/lib/graphics/HitTestCache",
    "HitTestCache",
    "cells",
    "lastCollisionIndex",
    "awayjs-display/lib/graphics/LineElements",
    "Float1Attributes_1",
    "ElementsBase_1",
    "ElementsUtils_1",
    "LineElements",
    "_positions",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "floor",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "../graphics/ElementsBase",
    "../utils/ElementsUtils",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/graphics/TriangleElements",
    "TriangleElements",
    "apply",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "hitTestCache",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_uvs",
    "_condensedIndexLookUp",
    "getTriangleGraphicsBoxBounds",
    "getTriangleGraphicsSphereBounds",
    "hitTestTriangleElements",
    "generateNormals",
    "faceNormals",
    "generateTangents",
    "faceTangents",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "uvs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "scaleUVs",
    "generateFaceTangents",
    "numElements",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/graphics",
    "LineElements_1",
    "./graphics/ElementsBase",
    "./graphics/ElementsType",
    "./graphics/Graphic",
    "./graphics/Graphics",
    "./graphics/LineElements",
    "./graphics/TriangleElements",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D_1",
    "BitmapImageCube_1",
    "BasicMaterial_1",
    "Single2DTexture_1",
    "DefaultMaterialManager",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "setPixel",
    "../display/Skybox",
    "../graphics/LineElements",
    "../materials/BasicMaterial",
    "../textures/Single2DTexture",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-display/lib/managers/FrameScriptManager",
    "FrameScriptManager",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "awayjs-display/lib/managers/MouseManager",
    "MouseManager",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collision",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "../base/TouchPoint",
    "awayjs-display/lib/managers/TouchManager",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollisionFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "collider",
    "touchPointID",
    "../events/TouchEvent",
    "awayjs-display/lib/managers",
    "TouchManager_1",
    "./managers/DefaultMaterialManager",
    "./managers/FrameScriptManager",
    "./managers/TouchManager",
    "awayjs-display/lib/materials/BasicMaterial",
    "Image2D_1",
    "MaterialBase_1",
    "BasicMaterial",
    "imageColor",
    "_preserveAlpha",
    "invalidateTexture",
    "../materials/MaterialBase",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "awayjs-display/lib/materials/MaterialBase",
    "ImageBase_1",
    "MaterialBase",
    "_pUseColorTransform",
    "_alphaBlending",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateSurfaces",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "LightPickerBase_1",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "shadowsEnabled",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "../../display/DirectionalLight",
    "../../display/LightProbe",
    "../../display/PointLight",
    "../../events/LightEvent",
    "../../materials/lightpickers/LightPickerBase",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection_1",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "cullPlanes",
    "_pCullPlanes",
    "_iRenderCascades",
    "_pOverallDepthCamera",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "../../display/Camera",
    "../../materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "ImageCube_1",
    "ShadowMapperBase_1",
    "CubeMapShadowMapper",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "../../materials/shadowmappers/ShadowMapperBase",
    "../../textures/SingleCubeTexture",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "DirectionalShadowMapper",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "../../textures/Single2DTexture",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "ShadowMapperBase",
    "_autoUpdateShadows",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "awayjs-display/lib/materials",
    "StaticLightPicker_1",
    "CascadeShadowMapper_1",
    "NearDirectionalShadowMapper_1",
    "LightSources_1",
    "./materials/BasicMaterial",
    "./materials/LightSources",
    "./materials/MaterialBase",
    "./materials/lightpickers/LightPickerBase",
    "./materials/lightpickers/StaticLightPicker",
    "./materials/shadowmappers/CascadeShadowMapper",
    "./materials/shadowmappers/CubeMapShadowMapper",
    "./materials/shadowmappers/DirectionalShadowMapper",
    "./materials/shadowmappers/NearDirectionalShadowMapper",
    "./materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/partition/BasicPartition",
    "NodeBase_1",
    "PartitionBase_1",
    "BasicPartition",
    "_rootNode",
    "../partition/NodeBase",
    "../partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode_1",
    "../partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase_1",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "debugVisible",
    "_updateBounds",
    "onClear",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "isRenderable",
    "../bounds/AxisAlignedBoundingBox",
    "../bounds/BoundingSphere",
    "../bounds/NullBounds",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/partition/EntityNode",
    "DisplayObjectNode_1",
    "_maskPosition",
    "_partition",
    "globalRayPosition",
    "globalRayDirection",
    "isIntersectingMasks",
    "_iPickingCollision",
    "rayOriginIsInsideBounds",
    "_isRenderable",
    "applyEntity",
    "iMarkForUpdate",
    "children",
    "layerHit",
    "../partition/DisplayObjectNode",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "applyLightProbe",
    "awayjs-display/lib/partition/NodeBase",
    "NodeBase",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "awayjs-display/lib/partition/PartitionBase",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "assetClass",
    "awayjs-display/lib/partition/PointLightNode",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_childDepths",
    "_childMasks",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphNode_1",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "SceneGraphNodePool",
    "isContainer",
    "displayObjectContainer",
    "../partition/SceneGraphNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "applySkybox",
    "awayjs-display/lib/partition",
    "CameraNode_1",
    "DirectionalLightNode_1",
    "LightProbeNode_1",
    "PointLightNode_1",
    "SceneGraphPartition_1",
    "SkyboxNode_1",
    "./partition/BasicPartition",
    "./partition/CameraNode",
    "./partition/DirectionalLightNode",
    "./partition/DisplayObjectNode",
    "./partition/EntityNode",
    "./partition/LightProbeNode",
    "./partition/NodeBase",
    "./partition/PartitionBase",
    "./partition/PointLightNode",
    "./partition/SceneGraphNode",
    "./partition/SceneGraphPartition",
    "./partition/SkyboxNode",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleElements",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "posDim",
    "uvDim",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "lineElements",
    "awayjs-display/lib/pick/PickingCollision",
    "PickingCollision",
    "awayjs-display/lib/pick/RaycastPicker",
    "RaycastPicker",
    "_entities",
    "onlyMouseEnabled",
    "_rayPosition",
    "_rayDirection",
    "_view",
    "getSceneCollision",
    "getPickingCollision",
    "setIgnoreList",
    "entities",
    "_ignoredEntities",
    "isIgnored",
    "sortOnNearT",
    "entity1",
    "entity2",
    "sort",
    "_bestCollision",
    "_testCollision",
    "_testCollider",
    "MAX_VALUE",
    "updatePosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/pick",
    "JSPickingCollider_1",
    "./pick/JSPickingCollider",
    "./pick/PickingCollision",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase_1",
    "PrimitiveCapsulePrefab",
    "elementsType",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidatePrimitive",
    "_pInvalidateUVs",
    "_pBuildGraphics",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGraphics",
    "horangle",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "_scaleU",
    "_scaleV",
    "../prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab_1",
    "PrimitiveConePrefab",
    "_pBottomRadius",
    "../prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "PrimitiveCubePrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGraphics",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "PrimitiveCylinderPrefab",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "AttributesBuffer_1",
    "PrefabBase_1",
    "PrimitivePrefabBase",
    "_primitiveDirty",
    "_uvDirty",
    "_elementsType",
    "updateGraphics",
    "updateUVs",
    "../prefabs/PrefabBase",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/prefabs",
    "PrimitiveCapsulePrefab_1",
    "PrimitiveConePrefab_1",
    "PrimitivePlanePrefab_1",
    "PrimitivePolygonPrefab_1",
    "PrimitiveTorusPrefab_1",
    "./prefabs/PrefabBase",
    "./prefabs/PrimitiveCapsulePrefab",
    "./prefabs/PrimitiveConePrefab",
    "./prefabs/PrimitiveCubePrefab",
    "./prefabs/PrimitiveCylinderPrefab",
    "./prefabs/PrimitivePlanePrefab",
    "./prefabs/PrimitivePolygonPrefab",
    "./prefabs/PrimitivePrefabBase",
    "./prefabs/PrimitiveSpherePrefab",
    "./prefabs/PrimitiveTorusPrefab",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "TesselatedFontTable_1",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "../text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "awayjs-display/lib/text/TesselatedFontTable",
    "TesselatedFontChar_1",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_ascent",
    "_descent",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "setChar",
    "tesselated_font_char",
    "../text/TesselatedFontChar",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "awayjs-display/lib/text",
    "AntiAliasType_1",
    "Font_1",
    "GridFitType_1",
    "TextFieldAutoSize_1",
    "TextFormat_1",
    "TextFormatAlign_1",
    "TextInteractionMode_1",
    "TextLineMetrics_1",
    "./text/AntiAliasType",
    "./text/Font",
    "./text/GridFitType",
    "./text/TesselatedFontChar",
    "./text/TesselatedFontTable",
    "./text/TextFieldAutoSize",
    "./text/TextFieldType",
    "./text/TextFormat",
    "./text/TextFormatAlign",
    "./text/TextInteractionMode",
    "./text/TextLineMetrics",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "awayjs-display/lib/textures/Single2DTexture",
    "ImageUtils_1",
    "MappingMode_1",
    "TextureBase_1",
    "Single2DTexture",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "isImage2DValid",
    "setImageAt",
    "../textures/MappingMode",
    "../textures/TextureBase",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "SingleCubeTexture",
    "awayjs-display/lib/textures/TextureBase",
    "TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/textures",
    "./textures/MappingMode",
    "./textures/Single2DTexture",
    "./textures/SingleCubeTexture",
    "./textures/TextureBase",
    "awayjs-display/lib/utils/Cast",
    "ByteArray_1",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "../errors/CastError",
    "awayjs-core/lib/utils/ByteArray",
    "awayjs-display/lib/utils/ElementsUtils",
    "Float4Attributes_1",
    "HitTestCache_1",
    "ElementsUtils",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "index3",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "stride",
    "bufferView",
    "splitVerts",
    "curveAttributes",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "precheck",
    "dot",
    "curvey0",
    "curvey1",
    "curvey2",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "../graphics/HitTestCache",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/utils",
    "Cast_1",
    "./utils/Cast",
    "./utils/ElementsUtils"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar adapters = require(\"./lib/adapters\");\nexports.adapters = adapters;\nvar animators = require(\"./lib/animators\");\nexports.animators = animators;\nvar base = require(\"./lib/base\");\nexports.base = base;\nvar bounds = require(\"./lib/bounds\");\nexports.bounds = bounds;\nvar controllers = require(\"./lib/controllers\");\nexports.controllers = controllers;\nvar display = require(\"./lib/display\");\nexports.display = display;\nvar draw = require(\"./lib/draw\");\nexports.draw = draw;\nvar errors = require(\"./lib/errors\");\nexports.errors = errors;\nvar events = require(\"./lib/events\");\nexports.events = events;\nvar factories = require(\"./lib/factories\");\nexports.factories = factories;\nvar graphics = require(\"./lib/graphics\");\nexports.graphics = graphics;\nvar managers = require(\"./lib/managers\");\nexports.managers = managers;\nvar materials = require(\"./lib/materials\");\nexports.materials = materials;\nvar partition = require(\"./lib/partition\");\nexports.partition = partition;\nvar pick = require(\"./lib/pick\");\nexports.pick = pick;\nvar prefabs = require(\"./lib/prefabs\");\nexports.prefabs = prefabs;\nvar text = require(\"./lib/text\");\nexports.text = text;\nvar textures = require(\"./lib/textures\");\nexports.textures = textures;\nvar utils = require(\"./lib/utils\");\nexports.utils = utils;\nvar View_1 = require(\"./lib/View\");\nexports.View = View_1.default;\npartition.PartitionBase.registerAbstraction(partition.CameraNode, display.Camera);\npartition.PartitionBase.registerAbstraction(partition.DirectionalLightNode, display.DirectionalLight);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Sprite);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Shape);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.MovieClip);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Billboard);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.LineSegment);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextField);\npartition.PartitionBase.registerAbstraction(partition.LightProbeNode, display.LightProbe);\npartition.PartitionBase.registerAbstraction(partition.PointLightNode, display.PointLight);\npartition.PartitionBase.registerAbstraction(partition.SkyboxNode, display.Skybox);\n\n},{\"./lib/View\":\"awayjs-display/lib/View\",\"./lib/adapters\":\"awayjs-display/lib/adapters\",\"./lib/animators\":\"awayjs-display/lib/animators\",\"./lib/base\":\"awayjs-display/lib/base\",\"./lib/bounds\":\"awayjs-display/lib/bounds\",\"./lib/controllers\":\"awayjs-display/lib/controllers\",\"./lib/display\":\"awayjs-display/lib/display\",\"./lib/draw\":\"awayjs-display/lib/draw\",\"./lib/errors\":\"awayjs-display/lib/errors\",\"./lib/events\":\"awayjs-display/lib/events\",\"./lib/factories\":\"awayjs-display/lib/factories\",\"./lib/graphics\":\"awayjs-display/lib/graphics\",\"./lib/managers\":\"awayjs-display/lib/managers\",\"./lib/materials\":\"awayjs-display/lib/materials\",\"./lib/partition\":\"awayjs-display/lib/partition\",\"./lib/pick\":\"awayjs-display/lib/pick\",\"./lib/prefabs\":\"awayjs-display/lib/prefabs\",\"./lib/text\":\"awayjs-display/lib/text\",\"./lib/textures\":\"awayjs-display/lib/textures\",\"./lib/utils\":\"awayjs-display/lib/utils\"}],\"awayjs-display/lib/IRenderer\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/ITraverser\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/View\":[function(require,module,exports){\n\"use strict\";\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\nvar TouchPoint_1 = require(\"./base/TouchPoint\");\nvar Scene_1 = require(\"./display/Scene\");\nvar RaycastPicker_1 = require(\"./pick/RaycastPicker\");\nvar Camera_1 = require(\"./display/Camera\");\nvar CameraEvent_1 = require(\"./events/CameraEvent\");\nvar DisplayObjectEvent_1 = require(\"./events/DisplayObjectEvent\");\nvar RendererEvent_1 = require(\"./events/RendererEvent\");\nvar MouseManager_1 = require(\"./managers/MouseManager\");\nvar View = (function () {\n    /*\n     ***********************************************************************\n     * Disabled / Not yet implemented\n     ***********************************************************************\n     *\n     * private _background:away.textures.Texture2DBase;\n     *\n     * public _pTouch3DManager:away.managers.Touch3DManager;\n     *\n     */\n    function View(renderer, scene, camera) {\n        var _this = this;\n        if (scene === void 0) { scene = null; }\n        if (camera === void 0) { camera = null; }\n        this._width = 0;\n        this._height = 0;\n        this._time = 0;\n        this._deltaTime = 0;\n        this._backgroundColor = 0x000000;\n        this._backgroundAlpha = 1;\n        this._viewportDirty = true;\n        this._scissorDirty = true;\n        this._mousePicker = new RaycastPicker_1.default();\n        this._pTouchPoints = new Array();\n        this._onPartitionChangedDelegate = function (event) { return _this._onPartitionChanged(event); };\n        this._onProjectionChangedDelegate = function (event) { return _this._onProjectionChanged(event); };\n        this._onViewportUpdatedDelegate = function (event) { return _this._onViewportUpdated(event); };\n        this._onScissorUpdatedDelegate = function (event) { return _this._onScissorUpdated(event); };\n        this.scene = scene || new Scene_1.default();\n        this.camera = camera || new Camera_1.default();\n        this.renderer = renderer;\n        //make sure document border is zero\n        if (document) {\n            document.body.style.margin = \"0px\";\n            this._htmlElement = document.createElement(\"div\");\n            this._htmlElement.style.position = \"absolute\";\n            document.body.appendChild(this._htmlElement);\n        }\n        this._mouseManager = MouseManager_1.default.getInstance();\n        this._mouseManager.registerView(this);\n        //\t\t\tif (this._shareContext)\n        //\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n    }\n    Object.defineProperty(View.prototype, \"mouseX\", {\n        get: function () {\n            return this._pMouseX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"mouseY\", {\n        get: function () {\n            return this._pMouseY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"touchPoints\", {\n        get: function () {\n            return this._pTouchPoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    View.prototype.getLocalMouseX = function (displayObject) {\n        return displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n    };\n    View.prototype.getLocalMouseY = function (displayObject) {\n        return displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n    };\n    View.prototype.getLocalTouchPoints = function (displayObject) {\n        var localPosition;\n        var localTouchPoints = new Array();\n        var len = this._pTouchPoints.length;\n        for (var i = 0; i < len; i++) {\n            localPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n            localTouchPoints.push(new TouchPoint_1.default(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n        }\n        return localTouchPoints;\n    };\n    Object.defineProperty(View.prototype, \"htmlElement\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._htmlElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"renderer\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pRenderer;\n        },\n        set: function (value) {\n            if (this._pRenderer == value)\n                return;\n            if (this._pRenderer) {\n                this._pRenderer.dispose();\n                this._pRenderer.removeEventListener(RendererEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n                this._pRenderer.removeEventListener(RendererEvent_1.default.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n            }\n            this._pRenderer = value;\n            this._pRenderer.addEventListener(RendererEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n            this._pRenderer.addEventListener(RendererEvent_1.default.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n            //reset back buffer\n            this._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundB = (this._backgroundColor & 0xff) / 0xff;\n            this._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n            this._pRenderer.width = this._width;\n            this._pRenderer.height = this._height;\n            this._pRenderer.shareContext = this._shareContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"shareContext\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._shareContext;\n        },\n        set: function (value) {\n            if (this._shareContext == value)\n                return;\n            this._shareContext = value;\n            if (this._pRenderer)\n                this._pRenderer.shareContext = this._shareContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"backgroundColor\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._backgroundColor;\n        },\n        set: function (value) {\n            if (this._backgroundColor == value)\n                return;\n            this._backgroundColor = value;\n            this._pRenderer._iBackgroundR = ((value >> 16) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundG = ((value >> 8) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundB = (value & 0xff) / 0xff;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"backgroundAlpha\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._backgroundAlpha;\n        },\n        /**\n         *\n         * @param value\n         */\n        set: function (value) {\n            if (value > 1)\n                value = 1;\n            else if (value < 0)\n                value = 0;\n            if (this._backgroundAlpha == value)\n                return;\n            this._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"camera\", {\n        /**\n         *\n         * @returns {Camera3D}\n         */\n        get: function () {\n            return this._pCamera;\n        },\n        /**\n         * Set camera that's used to render the scene for this viewport\n         */\n        set: function (value) {\n            if (this._pCamera == value)\n                return;\n            if (this._pCamera)\n                this._pCamera.removeEventListener(CameraEvent_1.default.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n            this._pCamera = value;\n            if (this._pScene)\n                this._pScene.partition._iRegisterEntity(this._pCamera);\n            this._pCamera.addEventListener(CameraEvent_1.default.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n            this._scissorDirty = true;\n            this._viewportDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"scene\", {\n        /**\n         *\n         * @returns {away.containers.Scene3D}\n         */\n        get: function () {\n            return this._pScene;\n        },\n        /**\n         * Set the scene that's used to render for this viewport\n         */\n        set: function (value) {\n            if (this._pScene == value)\n                return;\n            if (this._pScene)\n                this._pScene.removeEventListener(DisplayObjectEvent_1.default.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n            this._pScene = value;\n            this._pScene.addEventListener(DisplayObjectEvent_1.default.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n            if (this._pCamera)\n                this._pScene.partition._iRegisterEntity(this._pCamera);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"deltaTime\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._deltaTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"width\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            if (this._width == value)\n                return;\n            this._width = value;\n            this._aspectRatio = this._width / this._height;\n            this._pCamera.projection._iAspectRatio = this._aspectRatio;\n            this._pRenderer.width = value;\n            if (this._htmlElement) {\n                this._htmlElement.style.width = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"height\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            if (this._height == value)\n                return;\n            this._height = value;\n            this._aspectRatio = this._width / this._height;\n            this._pCamera.projection._iAspectRatio = this._aspectRatio;\n            this._pRenderer.height = value;\n            if (this._htmlElement) {\n                this._htmlElement.style.height = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"mousePicker\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._mousePicker;\n        },\n        set: function (value) {\n            if (this._mousePicker == value)\n                return;\n            if (value == null)\n                this._mousePicker = new RaycastPicker_1.default();\n            else\n                this._mousePicker = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"x\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pRenderer.x;\n        },\n        set: function (value) {\n            if (this._pRenderer.x == value)\n                return;\n            this._pRenderer.x == value;\n            if (this._htmlElement) {\n                this._htmlElement.style.left = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"y\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pRenderer.y;\n        },\n        set: function (value) {\n            if (this._pRenderer.y == value)\n                return;\n            this._pRenderer.y == value;\n            if (this._htmlElement) {\n                this._htmlElement.style.top = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"visible\", {\n        /**\n         *\n         */\n        get: function () {\n            return (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n        },\n        set: function (value) {\n            if (this._htmlElement) {\n                this._htmlElement.style.visibility = value ? \"visible\" : \"hidden\";\n            }\n            //TODO transfer visible property to associated context (if one exists)\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"renderedFacesCount\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return 0; //TODO\n            //return this._pEntityCollector._pNumTriangles;//numTriangles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Renders the view.\n     */\n    View.prototype.render = function () {\n        this.pUpdateTime();\n        //update view and size data\n        this._pCamera.projection._iAspectRatio = this._aspectRatio;\n        if (this._scissorDirty) {\n            this._scissorDirty = false;\n            this._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n        }\n        if (this._viewportDirty) {\n            this._viewportDirty = false;\n            this._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n        }\n        // update picking\n        if (!this._shareContext) {\n            if (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n                this._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n            this._mouseManager.fireMouseEvents(this.forceMouseMove);\n        }\n        //_touch3DManager.updateCollider();\n        //render the contents of the scene\n        this._pRenderer.render(this._pCamera, this._pScene);\n    };\n    /**\n     *\n     */\n    View.prototype.pUpdateTime = function () {\n        var time = getTimer_1.default();\n        if (this._time == 0)\n            this._time = time;\n        this._deltaTime = time - this._time;\n        this._time = time;\n    };\n    /**\n     *\n     */\n    View.prototype.dispose = function () {\n        this._pRenderer.dispose();\n        // TODO: imeplement mouseManager / touch3DManager\n        this._mouseManager.unregisterView(this);\n        //this._touch3DManager.disableTouchListeners(this);\n        //this._touch3DManager.dispose();\n        this._mouseManager = null;\n        //this._touch3DManager = null;\n        this._pRenderer = null;\n    };\n    /**\n     *\n     * @param e\n     */\n    View.prototype._onPartitionChanged = function (event) {\n        if (this._pCamera)\n            this._pScene.partition._iRegisterEntity(this._pCamera);\n    };\n    /**\n     *\n     */\n    View.prototype._onProjectionChanged = function (event) {\n        this._scissorDirty = true;\n        this._viewportDirty = true;\n    };\n    /**\n     *\n     */\n    View.prototype._onViewportUpdated = function (event) {\n        this._viewportDirty = true;\n    };\n    /**\n     *\n     */\n    View.prototype._onScissorUpdated = function (event) {\n        this._scissorDirty = true;\n    };\n    View.prototype.project = function (point3d) {\n        var v = this._pCamera.project(point3d);\n        v.x = v.x * this._pRenderer.viewPort.width / 2 + this._width * this._pCamera.projection.originX;\n        v.y = v.y * this._pRenderer.viewPort.height / 2 + this._height * this._pCamera.projection.originY;\n        return v;\n    };\n    View.prototype.unproject = function (sX, sY, sZ) {\n        return this._pCamera.unproject(2 * (sX - this._width * this._pCamera.projection.originX) / this._pRenderer.viewPort.width, 2 * (sY - this._height * this._pCamera.projection.originY) / this._pRenderer.viewPort.height, sZ);\n    };\n    View.prototype.getRay = function (sX, sY, sZ) {\n        return this._pCamera.getRay((sX * 2 - this._width) / this._width, (sY * 2 - this._height) / this._height, sZ);\n    };\n    /*TODO: implement Background\n     public get background():away.textures.Texture2DBase\n     {\n     return this._background;\n     }\n     */\n    /*TODO: implement Background\n     public set background( value:away.textures.Texture2DBase )\n     {\n     this._background = value;\n     this._renderer.background = _background;\n     }\n     */\n    // TODO: required dependency stageGL\n    View.prototype.updateCollider = function () {\n        if (!this._shareContext) {\n            if (this._htmlElement == this._mouseManager._iActiveDiv)\n                this._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n        }\n        else {\n            var collidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n            if (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\n                this._mouseManager._iCollision = collidingObject;\n        }\n    };\n    return View;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = View;\n\n},{\"./base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"./display/Camera\":\"awayjs-display/lib/display/Camera\",\"./display/Scene\":\"awayjs-display/lib/display/Scene\",\"./events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"./events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"./events/RendererEvent\":\"awayjs-display/lib/events/RendererEvent\",\"./managers/MouseManager\":\"awayjs-display/lib/managers/MouseManager\",\"./pick/RaycastPicker\":\"awayjs-display/lib/pick/RaycastPicker\",\"awayjs-core/lib/utils/getTimer\":undefined}],\"awayjs-display/lib/adapters/IDisplayObjectAdapter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/adapters/IMovieClipAdapter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/adapters\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/animators/IAnimationSet\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/animators/IAnimator\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/animators/data/ParticleData\":[function(require,module,exports){\n\"use strict\";\nvar ParticleData = (function () {\n    function ParticleData() {\n    }\n    return ParticleData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleData;\n\n},{}],\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nvar AnimationNodeBase = (function (_super) {\n    __extends(AnimationNodeBase, _super);\n    /**\n     * Creates a new <code>AnimationNodeBase</code> object.\n     */\n    function AnimationNodeBase() {\n        _super.call(this);\n    }\n    Object.defineProperty(AnimationNodeBase.prototype, \"stateClass\", {\n        get: function () {\n            return this._pStateClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    AnimationNodeBase.prototype.dispose = function () {\n    };\n    Object.defineProperty(AnimationNodeBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimationNodeBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationNodeBase.assetType = \"[asset AnimationNodeBase]\";\n    return AnimationNodeBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationNodeBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/animators\":[function(require,module,exports){\n\"use strict\";\nvar ParticleData_1 = require(\"./animators/data/ParticleData\");\nexports.ParticleData = ParticleData_1.default;\nvar AnimationNodeBase_1 = require(\"./animators/nodes/AnimationNodeBase\");\nexports.AnimationNodeBase = AnimationNodeBase_1.default;\n\n},{\"./animators/data/ParticleData\":\"awayjs-display/lib/animators/data/ParticleData\",\"./animators/nodes/AnimationNodeBase\":\"awayjs-display/lib/animators/nodes/AnimationNodeBase\"}],\"awayjs-display/lib/base/AlignmentMode\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar AlignmentMode = (function () {\n    function AlignmentMode() {\n    }\n    /**\n     *\n     */\n    AlignmentMode.REGISTRATION_POINT = \"registrationPoint\";\n    /**\n     *\n     */\n    AlignmentMode.PIVOT_POINT = \"pivot\";\n    return AlignmentMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AlignmentMode;\n\n},{}],\"awayjs-display/lib/base/HierarchicalProperties\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar HierarchicalProperties = (function () {\n    function HierarchicalProperties() {\n    }\n    /**\n     *\n     */\n    HierarchicalProperties.MOUSE_ENABLED = 1;\n    /**\n     *\n     */\n    HierarchicalProperties.VISIBLE = 2;\n    /**\n     *\n     */\n    HierarchicalProperties.MASK_ID = 4;\n    /**\n     *\n     */\n    HierarchicalProperties.MASKS = 8;\n    /**\n     *\n     */\n    HierarchicalProperties.COLOR_TRANSFORM = 16;\n    /**\n     *\n     */\n    HierarchicalProperties.SCENE_TRANSFORM = 32;\n    /**\n     *\n     */\n    HierarchicalProperties.ALL = 63;\n    return HierarchicalProperties;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = HierarchicalProperties;\n\n},{}],\"awayjs-display/lib/base/IBitmapDrawable\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/base/IRenderable\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/base/ISurface\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/base/OrientationMode\":[function(require,module,exports){\n\"use strict\";\nvar OrientationMode = (function () {\n    function OrientationMode() {\n    }\n    /**\n     *\n     */\n    OrientationMode.DEFAULT = \"default\";\n    /**\n     *\n     */\n    OrientationMode.CAMERA_PLANE = \"cameraPlane\";\n    /**\n     *\n     */\n    OrientationMode.CAMERA_POSITION = \"cameraPosition\";\n    return OrientationMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = OrientationMode;\n\n},{}],\"awayjs-display/lib/base/Style\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n *\n */\nvar Style = (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        _super.call(this);\n        this._samplers = new Object();\n        this._images = new Object();\n        this._color = 0xFFFFFF;\n    }\n    Object.defineProperty(Style.prototype, \"sampler\", {\n        get: function () {\n            return this._sampler;\n        },\n        set: function (value) {\n            if (this._sampler == value)\n                return;\n            this._sampler = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"image\", {\n        get: function () {\n            return this._image;\n        },\n        set: function (value) {\n            if (this._image == value)\n                return;\n            this._image = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"uvMatrix\", {\n        get: function () {\n            return this._uvMatrix;\n        },\n        set: function (value) {\n            if (this._uvMatrix == value)\n                return;\n            this._uvMatrix = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"color\", {\n        /**\n         * The diffuse reflectivity color of the surface.\n         */\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            if (this._color == value)\n                return;\n            this._color = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Style.prototype.getImageAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return (this._images[texture.id] ? this._images[texture.id][index] : null) || this._image;\n    };\n    Style.prototype.getSamplerAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return (this._samplers[texture.id] ? this._samplers[texture.id][index] : null) || this._sampler;\n    };\n    Style.prototype.addImageAt = function (image, texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._images[texture.id])\n            this._images[texture.id] = new Array();\n        this._images[texture.id][index] = image;\n    };\n    Style.prototype.addSamplerAt = function (sampler, texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._samplers[texture.id])\n            this._samplers[texture.id] = new Array();\n        this._samplers[texture.id][index] = sampler;\n        this._invalidateProperties();\n    };\n    Style.prototype.removeImageAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._images[texture.id])\n            return;\n        this._images[texture.id][index] = null;\n        this._invalidateProperties();\n    };\n    Style.prototype.removeSamplerAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._samplers[texture.id])\n            return;\n        this._samplers[texture.id][index] = null;\n        this._invalidateProperties();\n    };\n    Style.prototype._invalidateProperties = function () {\n        this.dispatchEvent(new StyleEvent_1.default(StyleEvent_1.default.INVALIDATE_PROPERTIES, this));\n    };\n    return Style;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Style;\n\n},{\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined}],\"awayjs-display/lib/base/Timeline\":[function(require,module,exports){\n\"use strict\";\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar FrameScriptManager_1 = require(\"../managers/FrameScriptManager\");\nvar Timeline = (function () {\n    function Timeline() {\n        this._functions = [];\n        this._update_indices = [];\n        this.numKeyFrames = 0;\n        this.keyframe_indices = [];\n        this._potentialPrototypes = [];\n        this._labels = {};\n        this._framescripts = {};\n        this._framescripts_translated = {};\n        //cache functions\n        this._functions[1] = this.update_mtx_all;\n        this._functions[2] = this.update_colortransform;\n        this._functions[3] = this.update_masks;\n        this._functions[4] = this.update_name;\n        this._functions[5] = this.update_button_name;\n        this._functions[6] = this.update_visibility;\n        this._functions[11] = this.update_mtx_scale_rot;\n        this._functions[12] = this.update_mtx_pos;\n        this._functions[200] = this.enable_maskmode;\n        this._functions[201] = this.remove_masks;\n    }\n    Timeline.prototype.init = function () {\n        if ((this.frame_command_indices == null) || (this.frame_recipe == null) || (this.keyframe_durations == null))\n            return;\n        this.keyframe_firstframes = [];\n        this.keyframe_constructframes = [];\n        var frame_cnt = 0;\n        var ic = 0;\n        var ic2 = 0;\n        var keyframe_cnt = 0;\n        var last_construct_frame = 0;\n        for (ic = 0; ic < this.numKeyFrames; ic++) {\n            var duration = this.keyframe_durations[(ic)];\n            if (this.frame_recipe[ic] & 1)\n                last_construct_frame = keyframe_cnt;\n            this.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n            this.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n            for (ic2 = 0; ic2 < duration; ic2++)\n                this.keyframe_indices[frame_cnt++] = ic;\n        }\n    };\n    Timeline.prototype.get_framescript = function (keyframe_index) {\n        if (this._framescripts[keyframe_index] == null)\n            return \"\";\n        if (typeof this._framescripts[keyframe_index] == \"string\")\n            return this._framescripts[keyframe_index];\n        else {\n            throw new Error(\"Framescript is already translated to Function!!!\");\n        }\n    };\n    Timeline.prototype.add_framescript = function (value, keyframe_index) {\n        if (FrameScriptManager_1.default.frameScriptDebug) {\n            // if we are in debug mode, we try to extract the function name from the first line of framescript code,\n            // and check if this function is available on the object that is set as frameScriptDebug\n            // try to get the functions name (it should be the first line as comment)\n            var functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n            if (FrameScriptManager_1.default.frameScriptDebug[functionname]) {\n                this._framescripts[keyframe_index] = FrameScriptManager_1.default.frameScriptDebug[functionname];\n                this._framescripts_translated[keyframe_index] = true;\n                return;\n            }\n            else {\n                throw new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\" + functionname + \"' !!!\");\n            }\n        }\n        this._framescripts[keyframe_index] = value;\n    };\n    Timeline.prototype.regexIndexOf = function (str, regex, startpos) {\n        var indexOf = str.substring(startpos || 0).search(regex);\n        return (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n    };\n    Timeline.prototype.add_script_for_postcontruct = function (target_mc, keyframe_idx, scriptPass1) {\n        if (scriptPass1 === void 0) { scriptPass1 = false; }\n        if (this._framescripts[keyframe_idx] != null) {\n            if (this._framescripts_translated[keyframe_idx] == null) {\n                this._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n                this._framescripts_translated[keyframe_idx] = true;\n            }\n            if (scriptPass1)\n                FrameScriptManager_1.default.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n            else\n                FrameScriptManager_1.default.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n        }\n    };\n    Object.defineProperty(Timeline.prototype, \"numFrames\", {\n        get: function () {\n            return this.keyframe_indices.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Timeline.prototype.getPotentialChildPrototype = function (id) {\n        return this._potentialPrototypes[id];\n    };\n    Timeline.prototype.getKeyframeIndexForFrameIndex = function (frame_index) {\n        return this.keyframe_indices[frame_index];\n    };\n    Timeline.prototype.getPotentialChildInstance = function (id) {\n        var this_clone = this._potentialPrototypes[id].clone();\n        this_clone.name = \"\";\n        return this_clone;\n    };\n    Timeline.prototype.registerPotentialChild = function (prototype) {\n        var id = this._potentialPrototypes.length;\n        this._potentialPrototypes[id] = prototype;\n    };\n    Timeline.prototype.jumpToLabel = function (target_mc, label) {\n        var key_frame_index = this._labels[label];\n        if (key_frame_index >= 0)\n            target_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n    };\n    Timeline.prototype.gotoFrame = function (target_mc, value, skip_script) {\n        if (skip_script === void 0) { skip_script = false; }\n        var current_keyframe_idx = target_mc.constructedKeyFrameIndex;\n        var target_keyframe_idx = this.keyframe_indices[value];\n        if (current_keyframe_idx == target_keyframe_idx)\n            return;\n        if (current_keyframe_idx + 1 == target_keyframe_idx) {\n            this.constructNextFrame(target_mc, !skip_script, true);\n            return;\n        }\n        var break_frame_idx = this.keyframe_constructframes[target_keyframe_idx];\n        //we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n        var jump_forward = (target_keyframe_idx > current_keyframe_idx);\n        var jump_gap = (break_frame_idx > current_keyframe_idx);\n        // in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n        // in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n        var start_construct_idx = (jump_forward && !jump_gap) ? current_keyframe_idx + 1 : break_frame_idx;\n        var i;\n        var k;\n        if (jump_gap)\n            for (i = target_mc.numChildren - 1; i >= 0; i--)\n                if (target_mc._children[i]._depthID < 0)\n                    target_mc.removeChildAt(i);\n        //if we jump back, we want to reset all objects (but not the timelines of the mcs)\n        if (!jump_forward)\n            target_mc.resetSessionIDs();\n        // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n        var depth_sessionIDs = target_mc.getSessionIDDepths();\n        //pass1: only apply add/remove commands into depth_sessionIDs.\n        this.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n        // check what childs are alive on both frames.\n        // childs that are not alive anymore get removed and unregistered\n        // childs that are alive on both frames have their properties reset if we are jumping back\n        var child;\n        for (i = target_mc.numChildren - 1; i >= 0; i--) {\n            child = target_mc._children[i];\n            if (child._depthID < 0) {\n                if (depth_sessionIDs[child._depthID] != child._sessionID) {\n                    target_mc.removeChildAt(i);\n                }\n                else if (!jump_forward) {\n                    if (child.adapter) {\n                        if (!child.adapter.isBlockedByScript()) {\n                            child.transform.clearMatrix3D();\n                            child.transform.clearColorTransform();\n                            //this.name=\"\";\n                            child.masks = null;\n                            child.maskMode = false;\n                        }\n                        if (!child.adapter.isVisibilityByScript()) {\n                            child.visible = true;\n                        }\n                    }\n                }\n            }\n        }\n        // now we need to addchild the objects that were added before targetframe first\n        // than we can add the script of the targetframe\n        // than we can addchild objects added on targetframe\n        for (var key in depth_sessionIDs) {\n            child = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key] * 2]);\n            if (child._sessionID == -1)\n                target_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n        }\n        if (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value)\n            this.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n        //pass2: apply update commands for objects on stage (only if they are not blocked by script)\n        this.pass2(target_mc);\n        target_mc.constructedKeyFrameIndex = target_keyframe_idx;\n    };\n    Timeline.prototype.pass1 = function (start_construct_idx, target_keyframe_idx, depth_sessionIDs) {\n        var i;\n        var k;\n        this._update_indices.length = 0; // store a list of updatecommand_indices, so we dont have to read frame_recipe again\n        var update_cnt = 0;\n        var start_index;\n        var end_index;\n        for (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n            var frame_command_idx = this.frame_command_indices[k];\n            var frame_recipe = this.frame_recipe[k];\n            if (frame_recipe & 2) {\n                // remove childs\n                start_index = this.command_index_stream[frame_command_idx];\n                end_index = start_index + this.command_length_stream[frame_command_idx++];\n                for (i = start_index; i < end_index; i++)\n                    delete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n            }\n            if (frame_recipe & 4) {\n                start_index = this.command_index_stream[frame_command_idx];\n                end_index = start_index + this.command_length_stream[frame_command_idx++];\n                // apply add commands in reversed order to have script exeucted in correct order.\n                // this could be changed in exporter\n                for (i = end_index - 1; i >= start_index; i--)\n                    depth_sessionIDs[this.add_child_stream[i * 2 + 1] - 16383] = i;\n            }\n            if (frame_recipe & 8)\n                this._update_indices[update_cnt++] = frame_command_idx; // execute update command later\n        }\n    };\n    Timeline.prototype.pass2 = function (target_mc) {\n        var k;\n        var len = this._update_indices.length;\n        for (k = 0; k < len; k++)\n            this.update_childs(target_mc, this._update_indices[k]);\n    };\n    Timeline.prototype.constructNextFrame = function (target_mc, queueScript, scriptPass1) {\n        if (queueScript === void 0) { queueScript = true; }\n        if (scriptPass1 === void 0) { scriptPass1 = false; }\n        var frameIndex = target_mc.currentFrameIndex;\n        var new_keyFrameIndex = this.keyframe_indices[frameIndex];\n        if (queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n            this.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n        if (target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n            target_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n            var frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n            var frame_recipe = this.frame_recipe[new_keyFrameIndex];\n            if (frame_recipe & 1) {\n                for (var i = target_mc.numChildren - 1; i >= 0; i--)\n                    if (target_mc._children[i]._depthID < 0)\n                        target_mc.removeChildAt(i);\n            }\n            else if (frame_recipe & 2) {\n                this.remove_childs_continous(target_mc, frame_command_idx++);\n            }\n            if (frame_recipe & 4)\n                this.add_childs_continous(target_mc, frame_command_idx++);\n            if (frame_recipe & 8)\n                this.update_childs(target_mc, frame_command_idx++);\n        }\n    };\n    Timeline.prototype.remove_childs_continous = function (sourceMovieClip, frame_command_idx) {\n        var start_index = this.command_index_stream[frame_command_idx];\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\n        for (var i = start_index; i < end_index; i++)\n            sourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n    };\n    // used to add childs when jumping between frames\n    Timeline.prototype.add_childs_continous = function (sourceMovieClip, frame_command_idx) {\n        // apply add commands in reversed order to have script exeucted in correct order.\n        // this could be changed in exporter\n        var idx;\n        var start_index = this.command_index_stream[frame_command_idx];\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\n        for (var i = end_index - 1; i >= start_index; i--) {\n            idx = i * 2;\n            sourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n        }\n    };\n    Timeline.prototype.update_childs = function (target_mc, frame_command_idx) {\n        var p;\n        var props_start_idx;\n        var props_end_index;\n        var start_index = this.command_index_stream[frame_command_idx];\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\n        var child;\n        for (var i = start_index; i < end_index; i++) {\n            child = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n            if (child) {\n                // check if the child is active + not blocked by script\n                this._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n                props_start_idx = this.update_child_props_indices_stream[i];\n                props_end_index = props_start_idx + this.update_child_props_length_stream[i];\n                for (p = props_start_idx; p < props_end_index; p++)\n                    this._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n            }\n        }\n    };\n    Timeline.prototype.update_mtx_all = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 6;\n        var new_matrix = child.transform.matrix3D;\n        new_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n        child.transform.invalidateComponents();\n    };\n    Timeline.prototype.update_colortransform = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 8;\n        var new_ct = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform_1.default());\n        new_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n        new_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n        new_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n        new_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n        new_ct.redOffset = this.properties_stream_f32_ct[i++];\n        new_ct.greenOffset = this.properties_stream_f32_ct[i++];\n        new_ct.blueOffset = this.properties_stream_f32_ct[i++];\n        new_ct.alphaOffset = this.properties_stream_f32_ct[i];\n        child.transform.invalidateColorTransform();\n    };\n    Timeline.prototype.update_masks = function (child, target_mc, i) {\n        // an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n        // this is not implmeented in the runtime yet\n        // for now, a second mask-groupd would overwrite the first one\n        var mask;\n        var masks = new Array();\n        var numMasks = this.properties_stream_int[i++];\n        //mask may not exist if a goto command moves the playhead to a point in the timeline after\n        //one of the masks in a mask array has already been removed. Therefore a check is needed.\n        for (var m = 0; m < numMasks; m++)\n            if ((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n                masks.push(mask);\n        child.masks = masks;\n    };\n    Timeline.prototype.update_name = function (child, target_mc, i) {\n        child.name = this.properties_stream_strings[i];\n        target_mc.adapter.registerScriptObject(child);\n    };\n    Timeline.prototype.update_button_name = function (target, sourceMovieClip, i) {\n        target.name = this.properties_stream_strings[i];\n        // todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n        target.addButtonListeners();\n        sourceMovieClip.adapter.registerScriptObject(target);\n    };\n    Timeline.prototype.update_visibility = function (child, target_mc, i) {\n        if (!child.adapter || !child.adapter.isVisibilityByScript())\n            child.visible = Boolean(i);\n    };\n    Timeline.prototype.update_mtx_scale_rot = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 4;\n        var new_matrix = child.transform.matrix3D;\n        new_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n        new_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n        new_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n        new_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n        child.transform.invalidateComponents();\n        child.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.SCENE_TRANSFORM);\n    };\n    Timeline.prototype.update_mtx_pos = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 2;\n        var new_matrix = child.transform.matrix3D;\n        new_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n        new_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n        child.transform.invalidatePosition();\n    };\n    Timeline.prototype.enable_maskmode = function (child, target_mc, i) {\n        child.maskMode = true;\n    };\n    Timeline.prototype.remove_masks = function (child, target_mc, i) {\n        child.masks = null;\n    };\n    return Timeline;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Timeline;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-core/lib/geom/ColorTransform\":undefined}],\"awayjs-display/lib/base/TouchPoint\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar TouchPoint = (function () {\n    function TouchPoint(x, y, id) {\n        this.x = x;\n        this.y = y;\n        this.id = id;\n    }\n    return TouchPoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TouchPoint;\n\n},{}],\"awayjs-display/lib/base/Transform\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar TransformEvent_1 = require(\"../events/TransformEvent\");\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nvar Transform = (function (_super) {\n    __extends(Transform, _super);\n    function Transform() {\n        _super.call(this);\n        this._matrix3D = new Matrix3D_1.default();\n        this._rotation = new Vector3D_1.default();\n        this._skew = new Vector3D_1.default();\n        this._scale = new Vector3D_1.default(1, 1, 1);\n        // Cached vector of transformation components used when\n        // recomposing the transform matrix in updateTransform()\n        this._components = new Array(4);\n        this._components[1] = this._rotation;\n        this._components[2] = this._skew;\n        this._components[3] = this._scale;\n    }\n    Object.defineProperty(Transform.prototype, \"backVector\", {\n        /**\n         *\n         */\n        get: function () {\n            var director = Matrix3DUtils_1.default.getForward(this._matrix3D);\n            director.negate();\n            return director;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"colorTransform\", {\n        /**\n         * A ColorTransform object containing values that universally adjust the\n         * colors in the display object.\n         *\n         * @throws TypeError The colorTransform is null when being set\n         */\n        get: function () {\n            return this._colorTransform;\n        },\n        set: function (val) {\n            if (this._colorTransform == val)\n                return;\n            this._colorTransform = val;\n            this.invalidateColorTransform();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"concatenatedColorTransform\", {\n        /**\n         * A ColorTransform object representing the combined color transformations\n         * applied to the display object and all of its parent objects, back to the\n         * root level. If different color transformations have been applied at\n         * different levels, all of those transformations are concatenated into one\n         * ColorTransform object for this property.\n         */\n        get: function () {\n            return this._concatenatedColorTransform; //TODO\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"concatenatedMatrix\", {\n        /**\n         * A Matrix object representing the combined transformation matrixes of the\n         * display object and all of its parent objects, back to the root level. If\n         * different transformation matrixes have been applied at different levels,\n         * all of those matrixes are concatenated into one matrix for this property.\n         * Also, for resizeable SWF content running in the browser, this property\n         * factors in the difference between stage coordinates and window coordinates\n         * due to window resizing. Thus, the property converts local coordinates to\n         * window coordinates, which may not be the same coordinate space as that of\n         * the Scene.\n         */\n        get: function () {\n            return this._concatenatedMatrix; //TODO\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"downVector\", {\n        /**\n         *\n         */\n        get: function () {\n            var director = Matrix3DUtils_1.default.getUp(this._matrix3D);\n            director.negate();\n            return director;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"forwardVector\", {\n        /**\n         *\n         */\n        get: function () {\n            return Matrix3DUtils_1.default.getForward(this._matrix3D);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"leftVector\", {\n        /**\n         *\n         */\n        get: function () {\n            var director = Matrix3DUtils_1.default.getRight(this._matrix3D);\n            director.negate();\n            return director;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"matrix3D\", {\n        /**\n         * Provides access to the Matrix3D object of a three-dimensional display\n         * object. The Matrix3D object represents a transformation matrix that\n         * determines the display object's position and orientation. A Matrix3D\n         * object can also perform perspective projection.\n         *\n         * <p>If the <code>matrix</code> property is set to a value(not\n         * <code>null</code>), the <code>matrix3D</code> property is\n         * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n         * value(not <code>null</code>), the <code>matrix</code> property is\n         * <code>null</code>.</p>\n         */\n        get: function () {\n            if (this._matrix3DDirty)\n                this._updateMatrix3D();\n            return this._matrix3D;\n        },\n        set: function (val) {\n            for (var i = 0; i < 15; i++)\n                this._matrix3D.rawData[i] = val.rawData[i];\n            this.invalidateComponents();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"pixelBounds\", {\n        /**\n         * A Rectangle object that defines the bounding rectangle of the display\n         * object on the stage.\n         */\n        get: function () {\n            return this._pixelBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"position\", {\n        /**\n         * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            return this._matrix3D.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"rightVector\", {\n        /**\n         *\n         */\n        get: function () {\n            return Matrix3DUtils_1.default.getRight(this.matrix3D);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"rotation\", {\n        /**\n         * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            if (this._componentsDirty)\n                this._updateComponents();\n            return this._rotation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Rotates the 3d object directly to a euler angle\n     *\n     * @param    ax        The angle in degrees of the rotation around the x axis.\n     * @param    ay        The angle in degrees of the rotation around the y axis.\n     * @param    az        The angle in degrees of the rotation around the z axis.\n     */\n    Transform.prototype.rotateTo = function (ax, ay, az) {\n        if (this._componentsDirty)\n            this._updateComponents();\n        this._rotation.x = ax;\n        this._rotation.y = ay;\n        this._rotation.z = az;\n        this.invalidateMatrix3D();\n    };\n    Object.defineProperty(Transform.prototype, \"scale\", {\n        /**\n         * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            if (this._componentsDirty)\n                this._updateComponents();\n            return this._scale;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transform.prototype.scaleTo = function (sx, sy, sz) {\n        if (this._componentsDirty)\n            this._updateComponents();\n        this._scale.x = sx;\n        this._scale.y = sy;\n        this._scale.z = sz;\n        this.invalidateMatrix3D();\n    };\n    Object.defineProperty(Transform.prototype, \"skew\", {\n        /**\n         * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            if (this._componentsDirty)\n                this._updateComponents();\n            return this._skew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transform.prototype.skewTo = function (sx, sy, sz) {\n        if (this._componentsDirty)\n            this._updateComponents();\n        this._skew.x = sx;\n        this._skew.y = sy;\n        this._skew.z = sz;\n        this.invalidateMatrix3D();\n    };\n    Object.defineProperty(Transform.prototype, \"upVector\", {\n        /**\n         *\n         */\n        get: function () {\n            return Matrix3DUtils_1.default.getUp(this.matrix3D);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transform.prototype.dispose = function () {\n    };\n    /**\n     * Returns a Matrix3D object, which can transform the space of a specified\n     * display object in relation to the current display object's space. You can\n     * use the <code>getRelativeMatrix3D()</code> method to move one\n     * three-dimensional display object relative to another three-dimensional\n     * display object.\n     *\n     * @param relativeTo The display object relative to which the transformation\n     *                   occurs. To get a Matrix3D object relative to the stage,\n     *                   set the parameter to the <code>root</code> or\n     *                   <code>stage</code> object. To get the world-relative\n     *                   matrix of the display object, set the parameter to a\n     *                   display object that has a perspective transformation\n     *                   applied to it.\n     * @return A Matrix3D object that can be used to transform the space from the\n     *         <code>relativeTo</code> display object to the current display\n     *         object space.\n     */\n    Transform.prototype.getRelativeMatrix3D = function (relativeTo) {\n        return new Matrix3D_1.default(); //TODO\n    };\n    /**\n     * Moves the 3d object forwards along it's local z axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveForward = function (distance) {\n        this.translateLocal(Vector3D_1.default.Z_AXIS, distance);\n    };\n    /**\n     * Moves the 3d object backwards along it's local z axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveBackward = function (distance) {\n        this.translateLocal(Vector3D_1.default.Z_AXIS, -distance);\n    };\n    /**\n     * Moves the 3d object backwards along it's local x axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveLeft = function (distance) {\n        this.translateLocal(Vector3D_1.default.X_AXIS, -distance);\n    };\n    /**\n     * Moves the 3d object forwards along it's local x axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveRight = function (distance) {\n        this.translateLocal(Vector3D_1.default.X_AXIS, distance);\n    };\n    /**\n     * Moves the 3d object forwards along it's local y axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveUp = function (distance) {\n        this.translateLocal(Vector3D_1.default.Y_AXIS, distance);\n    };\n    /**\n     * Moves the 3d object backwards along it's local y axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveDown = function (distance) {\n        this.translateLocal(Vector3D_1.default.Y_AXIS, -distance);\n    };\n    /**\n     * Moves the 3d object directly to a point in space\n     *\n     * @param    dx        The amount of movement along the local x axis.\n     * @param    dy        The amount of movement along the local y axis.\n     * @param    dz        The amount of movement along the local z axis.\n     */\n    Transform.prototype.moveTo = function (dx, dy, dz) {\n        this._matrix3D.rawData[12] = dx;\n        this._matrix3D.rawData[13] = dy;\n        this._matrix3D.rawData[14] = dz;\n        this.invalidatePosition();\n    };\n    /**\n     * Rotates the 3d object around it's local x-axis\n     *\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.pitch = function (angle) {\n        this.rotate(Vector3D_1.default.X_AXIS, angle);\n    };\n    /**\n     * Rotates the 3d object around it's local z-axis\n     *\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.roll = function (angle) {\n        this.rotate(Vector3D_1.default.Z_AXIS, angle);\n    };\n    /**\n     * Rotates the 3d object around it's local y-axis\n     *\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.yaw = function (angle) {\n        this.rotate(Vector3D_1.default.Y_AXIS, angle);\n    };\n    /**\n     * Rotates the 3d object around an axis by a defined angle\n     *\n     * @param    axis        The vector defining the axis of rotation\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.rotate = function (axis, angle) {\n        this.matrix3D.prependRotation(angle, axis);\n        this.invalidateComponents();\n    };\n    /**\n     * Moves the 3d object along a vector by a defined length\n     *\n     * @param    axis        The vector defining the axis of movement\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.translate = function (axis, distance) {\n        var x = axis.x, y = axis.y, z = axis.z;\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\n        this.matrix3D.appendTranslation(x * len, y * len, z * len);\n        this.invalidatePosition();\n    };\n    /**\n     * Moves the 3d object along a vector by a defined length\n     *\n     * @param    axis        The vector defining the axis of movement\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.translateLocal = function (axis, distance) {\n        var x = axis.x, y = axis.y, z = axis.z;\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\n        this.matrix3D.prependTranslation(x * len, y * len, z * len);\n        this.invalidatePosition();\n    };\n    Transform.prototype.clearMatrix3D = function () {\n        this._matrix3D.identity();\n        this.invalidateComponents();\n    };\n    Transform.prototype.clearColorTransform = function () {\n        if (!this._colorTransform)\n            return;\n        this._colorTransform.clear();\n        this.invalidateColorTransform();\n    };\n    /**\n     * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n     *\n     * @private\n     */\n    Transform.prototype.invalidateMatrix3D = function () {\n        this._matrix3DDirty = true;\n        this.dispatchEvent(new TransformEvent_1.default(TransformEvent_1.default.INVALIDATE_MATRIX3D, this));\n    };\n    Transform.prototype.invalidateComponents = function () {\n        this.invalidatePosition();\n        this._componentsDirty = true;\n    };\n    /**\n     *\n     */\n    Transform.prototype.invalidatePosition = function () {\n        this._matrix3D.invalidatePosition();\n        this.dispatchEvent(new TransformEvent_1.default(TransformEvent_1.default.INVALIDATE_MATRIX3D, this));\n    };\n    Transform.prototype.invalidateColorTransform = function () {\n        this.dispatchEvent(new TransformEvent_1.default(TransformEvent_1.default.INVALIDATE_COLOR_TRANSFORM, this));\n    };\n    /**\n     *\n     */\n    Transform.prototype._updateMatrix3D = function () {\n        this._matrix3D.recompose(this._components);\n        this._matrix3DDirty = false;\n    };\n    Transform.prototype._updateComponents = function () {\n        var elements = this._matrix3D.decompose();\n        var vec;\n        vec = elements[1];\n        this._rotation.x = vec.x;\n        this._rotation.y = vec.y;\n        this._rotation.z = vec.z;\n        vec = elements[2];\n        this._skew.x = vec.x;\n        this._skew.y = vec.y;\n        this._skew.z = vec.z;\n        vec = elements[3];\n        this._scale.x = vec.x;\n        this._scale.y = vec.y;\n        this._scale.z = vec.z;\n        this._componentsDirty = false;\n    };\n    return Transform;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Transform;\n\n},{\"../events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/base\":[function(require,module,exports){\n\"use strict\";\nvar AlignmentMode_1 = require(\"./base/AlignmentMode\");\nexports.AlignmentMode = AlignmentMode_1.default;\nvar HierarchicalProperties_1 = require(\"./base/HierarchicalProperties\");\nexports.HierarchicalProperties = HierarchicalProperties_1.default;\nvar OrientationMode_1 = require(\"./base/OrientationMode\");\nexports.OrientationMode = OrientationMode_1.default;\nvar Style_1 = require(\"./base/Style\");\nexports.Style = Style_1.default;\nvar Timeline_1 = require(\"./base/Timeline\");\nexports.Timeline = Timeline_1.default;\nvar TouchPoint_1 = require(\"./base/TouchPoint\");\nexports.TouchPoint = TouchPoint_1.default;\nvar Transform_1 = require(\"./base/Transform\");\nexports.Transform = Transform_1.default;\n\n},{\"./base/AlignmentMode\":\"awayjs-display/lib/base/AlignmentMode\",\"./base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"./base/OrientationMode\":\"awayjs-display/lib/base/OrientationMode\",\"./base/Style\":\"awayjs-display/lib/base/Style\",\"./base/Timeline\":\"awayjs-display/lib/base/Timeline\",\"./base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"./base/Transform\":\"awayjs-display/lib/base/Transform\"}],\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar BoundingVolumeBase_1 = require(\"../bounds/BoundingVolumeBase\");\nvar PrimitiveCubePrefab_1 = require(\"../prefabs/PrimitiveCubePrefab\");\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most sprites.\n */\nvar AxisAlignedBoundingBox = (function (_super) {\n    __extends(AxisAlignedBoundingBox, _super);\n    /**\n     * Creates a new <code>AxisAlignedBoundingBox</code> object.\n     */\n    function AxisAlignedBoundingBox(entity) {\n        _super.call(this, entity);\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._width = 0;\n        this._height = 0;\n        this._depth = 0;\n        this._centerX = 0;\n        this._centerY = 0;\n        this._centerZ = 0;\n        this._halfExtentsX = 0;\n        this._halfExtentsY = 0;\n        this._halfExtentsZ = 0;\n    }\n    /**\n     * @inheritDoc\n     */\n    AxisAlignedBoundingBox.prototype.nullify = function () {\n        this._x = this._y = this._z = 0;\n        this._width = this._height = this._depth = 0;\n        this._centerX = this._centerY = this._centerZ = 0;\n        this._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    AxisAlignedBoundingBox.prototype.isInFrustum = function (planes, numPlanes) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        for (var i = 0; i < numPlanes; ++i) {\n            var plane = planes[i];\n            var a = plane.a;\n            var b = plane.b;\n            var c = plane.c;\n            var flippedExtentX = a < 0 ? -this._halfExtentsX : this._halfExtentsX;\n            var flippedExtentY = b < 0 ? -this._halfExtentsY : this._halfExtentsY;\n            var flippedExtentZ = c < 0 ? -this._halfExtentsZ : this._halfExtentsZ;\n            var projDist = a * (this._centerX + flippedExtentX) + b * (this._centerY + flippedExtentY) + c * (this._centerZ + flippedExtentZ) - plane.d;\n            if (projDist < 0)\n                return false;\n        }\n        return true;\n    };\n    AxisAlignedBoundingBox.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        return this._box.rayIntersection(position, direction, targetNormal);\n    };\n    AxisAlignedBoundingBox.prototype.classifyToPlane = function (plane) {\n        var a = plane.a;\n        var b = plane.b;\n        var c = plane.c;\n        var centerDistance = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;\n        if (a < 0)\n            a = -a;\n        if (b < 0)\n            b = -b;\n        if (c < 0)\n            c = -c;\n        var boundOffset = a * this._halfExtentsX + b * this._halfExtentsY + c * this._halfExtentsZ;\n        return centerDistance > boundOffset ? PlaneClassification_1.default.FRONT : centerDistance < -boundOffset ? PlaneClassification_1.default.BACK : PlaneClassification_1.default.INTERSECT;\n    };\n    AxisAlignedBoundingBox.prototype._pUpdate = function () {\n        _super.prototype._pUpdate.call(this);\n        this._box = this._pEntity.getBox();\n        var matrix = this._pEntity.sceneTransform;\n        var hx = this._box.width / 2;\n        var hy = this._box.height / 2;\n        var hz = this._box.depth / 2;\n        var cx = this._box.x + hx;\n        var cy = this._box.y + hy;\n        var cz = this._box.z + hz;\n        var raw = matrix.rawData;\n        var m11 = raw[0], m12 = raw[4], m13 = raw[8], m14 = raw[12];\n        var m21 = raw[1], m22 = raw[5], m23 = raw[9], m24 = raw[13];\n        var m31 = raw[2], m32 = raw[6], m33 = raw[10], m34 = raw[14];\n        this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;\n        this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;\n        this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;\n        this._halfExtentsX = Math.abs(hx * m11 + hy * m12 + hz * m13);\n        this._halfExtentsY = Math.abs(hx * m21 + hy * m22 + hz * m23);\n        this._halfExtentsZ = Math.abs(hx * m31 + hy * m32 + hz * m33);\n        if (this._prefab) {\n            this._prefab.width = this._box.width;\n            this._prefab.height = this._box.height;\n            this._prefab.depth = this._box.depth;\n            this._pBoundsPrimitive.transform.matrix3D = matrix;\n        }\n        this._width = this._halfExtentsX * 2;\n        this._height = this._halfExtentsY * 2;\n        this._depth = this._halfExtentsZ * 2;\n        this._x = this._centerX - this._halfExtentsX;\n        this._y = this._centerY - this._halfExtentsY;\n        this._z = this._centerZ - this._halfExtentsZ;\n    };\n    AxisAlignedBoundingBox.prototype._pCreateBoundsPrimitive = function () {\n        this._prefab = new PrimitiveCubePrefab_1.default(null, ElementsType_1.default.LINE);\n        return this._prefab.getNewObject();\n    };\n    return AxisAlignedBoundingBox;\n}(BoundingVolumeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AxisAlignedBoundingBox;\n\n},{\"../bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitiveCubePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\",\"awayjs-core/lib/geom/PlaneClassification\":undefined}],\"awayjs-display/lib/bounds/BoundingSphere\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar BoundingVolumeBase_1 = require(\"../bounds/BoundingVolumeBase\");\nvar PrimitiveSpherePrefab_1 = require(\"../prefabs/PrimitiveSpherePrefab\");\nvar BoundingSphere = (function (_super) {\n    __extends(BoundingSphere, _super);\n    function BoundingSphere(entity) {\n        _super.call(this, entity);\n        this._radius = 0;\n        this._centerX = 0;\n        this._centerY = 0;\n        this._centerZ = 0;\n    }\n    BoundingSphere.prototype.nullify = function () {\n        this._centerX = this._centerY = this._centerZ = 0;\n        this._radius = 0;\n    };\n    BoundingSphere.prototype.isInFrustum = function (planes, numPlanes) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        for (var i = 0; i < numPlanes; ++i) {\n            var plane = planes[i];\n            var flippedExtentX = plane.a < 0 ? -this._radius : this._radius;\n            var flippedExtentY = plane.b < 0 ? -this._radius : this._radius;\n            var flippedExtentZ = plane.c < 0 ? -this._radius : this._radius;\n            var projDist = plane.a * (this._centerX + flippedExtentX) + plane.b * (this._centerY + flippedExtentY) + plane.c * (this._centerZ + flippedExtentZ) - plane.d;\n            if (projDist < 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BoundingSphere.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        return this._sphere.rayIntersection(position, direction, targetNormal);\n    };\n    //@override\n    BoundingSphere.prototype.classifyToPlane = function (plane) {\n        var a = plane.a;\n        var b = plane.b;\n        var c = plane.c;\n        var dd = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;\n        if (a < 0)\n            a = -a;\n        if (b < 0)\n            b = -b;\n        if (c < 0)\n            c = -c;\n        var rr = (a + b + c) * this._radius;\n        return dd > rr ? PlaneClassification_1.default.FRONT : dd < -rr ? PlaneClassification_1.default.BACK : PlaneClassification_1.default.INTERSECT;\n    };\n    BoundingSphere.prototype._pUpdate = function () {\n        _super.prototype._pUpdate.call(this);\n        this._sphere = this._pEntity.getSphere();\n        var matrix = this._pEntity.sceneTransform;\n        var cx = this._sphere.x;\n        var cy = this._sphere.y;\n        var cz = this._sphere.z;\n        var r = this._sphere.radius;\n        var raw = matrix.rawData;\n        var m11 = raw[0], m12 = raw[4], m13 = raw[8], m14 = raw[12];\n        var m21 = raw[1], m22 = raw[5], m23 = raw[9], m24 = raw[13];\n        var m31 = raw[2], m32 = raw[6], m33 = raw[10], m34 = raw[14];\n        this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;\n        this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;\n        this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;\n        var rx = m11 + m12 + m13;\n        var ry = m21 + m22 + m23;\n        var rz = m31 + m32 + m33;\n        this._radius = r * Math.sqrt((rx * rx + ry * ry + rz * rz) / 3);\n        if (this._prefab) {\n            this._prefab.radius = r;\n            this._pBoundsPrimitive.x = cx;\n            this._pBoundsPrimitive.y = cy;\n            this._pBoundsPrimitive.z = cz;\n            this._pBoundsPrimitive.transform.matrix3D = matrix;\n        }\n    };\n    BoundingSphere.prototype._pCreateBoundsPrimitive = function () {\n        this._prefab = new PrimitiveSpherePrefab_1.default(null, ElementsType_1.default.LINE);\n        return this._prefab.getNewObject();\n    };\n    return BoundingSphere;\n}(BoundingVolumeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BoundingSphere;\n\n},{\"../bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitiveSpherePrefab\":\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\",\"awayjs-core/lib/geom/PlaneClassification\":undefined}],\"awayjs-display/lib/bounds/BoundingVolumeBase\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar BoundingVolumeBase = (function () {\n    function BoundingVolumeBase(entity) {\n        this._pInvalidated = true;\n        this._pEntity = entity;\n    }\n    BoundingVolumeBase.prototype.dispose = function () {\n        this._pEntity = null;\n        this._pBoundsPrimitive = null;\n    };\n    Object.defineProperty(BoundingVolumeBase.prototype, \"boundsPrimitive\", {\n        get: function () {\n            if (this._pBoundsPrimitive == null) {\n                this._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n                this._pInvalidated = true;\n            }\n            if (this._pInvalidated)\n                this._pUpdate();\n            return this._pBoundsPrimitive;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BoundingVolumeBase.prototype.nullify = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    BoundingVolumeBase.prototype.isInFrustum = function (planes, numPlanes) {\n        throw new AbstractMethodError_1.default();\n    };\n    BoundingVolumeBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    BoundingVolumeBase.prototype.rayIntersection = function (position, direction, targetNormal) {\n        return -1;\n    };\n    BoundingVolumeBase.prototype.classifyToPlane = function (plane) {\n        throw new AbstractMethodError_1.default();\n    };\n    BoundingVolumeBase.prototype._pUpdate = function () {\n        this._pInvalidated = false;\n    };\n    BoundingVolumeBase.prototype.invalidate = function () {\n        this._pInvalidated = true;\n    };\n    BoundingVolumeBase.prototype._pCreateBoundsPrimitive = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    return BoundingVolumeBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BoundingVolumeBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/bounds/BoundsType\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar BoundsType = (function () {\n    function BoundsType() {\n    }\n    /**\n     *\n     */\n    BoundsType.SPHERE = \"sphere\";\n    /**\n     *\n     */\n    BoundsType.AXIS_ALIGNED_BOX = \"axisAlignedBox\";\n    /**\n     *\n     */\n    BoundsType.NULL = \"null\";\n    return BoundsType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BoundsType;\n\n},{}],\"awayjs-display/lib/bounds/NullBounds\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar BoundingVolumeBase_1 = require(\"../bounds/BoundingVolumeBase\");\nvar NullBounds = (function (_super) {\n    __extends(NullBounds, _super);\n    function NullBounds(alwaysIn) {\n        if (alwaysIn === void 0) { alwaysIn = true; }\n        _super.call(this, null);\n        this._alwaysIn = alwaysIn;\n    }\n    //@override\n    NullBounds.prototype.clone = function () {\n        return new NullBounds(this._alwaysIn);\n    };\n    //@override\n    NullBounds.prototype.isInFrustum = function (planes, numPlanes) {\n        return this._alwaysIn;\n    };\n    NullBounds.prototype.classifyToPlane = function (plane) {\n        return PlaneClassification_1.default.INTERSECT;\n    };\n    return NullBounds;\n}(BoundingVolumeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = NullBounds;\n\n},{\"../bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"awayjs-core/lib/geom/PlaneClassification\":undefined}],\"awayjs-display/lib/bounds\":[function(require,module,exports){\n\"use strict\";\nvar AxisAlignedBoundingBox_1 = require(\"./bounds/AxisAlignedBoundingBox\");\nexports.AxisAlignedBoundingBox = AxisAlignedBoundingBox_1.default;\nvar BoundingSphere_1 = require(\"./bounds/BoundingSphere\");\nexports.BoundingSphere = BoundingSphere_1.default;\nvar BoundingVolumeBase_1 = require(\"./bounds/BoundingVolumeBase\");\nexports.BoundingVolumeBase = BoundingVolumeBase_1.default;\nvar BoundsType_1 = require(\"./bounds/BoundsType\");\nexports.BoundsType = BoundsType_1.default;\nvar NullBounds_1 = require(\"./bounds/NullBounds\");\nexports.NullBounds = NullBounds_1.default;\n\n},{\"./bounds/AxisAlignedBoundingBox\":\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\",\"./bounds/BoundingSphere\":\"awayjs-display/lib/bounds/BoundingSphere\",\"./bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"./bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"./bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\"}],\"awayjs-display/lib/controllers/ControllerBase\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar ControllerBase = (function () {\n    function ControllerBase(targetObject) {\n        if (targetObject === void 0) { targetObject = null; }\n        this._pAutoUpdate = true;\n        this.targetObject = targetObject;\n    }\n    ControllerBase.prototype.pNotifyUpdate = function () {\n        if (this._pTargetObject)\n            this._pTargetObject.invalidatePartitionBounds();\n    };\n    Object.defineProperty(ControllerBase.prototype, \"targetObject\", {\n        get: function () {\n            return this._pTargetObject;\n        },\n        set: function (val) {\n            if (this._pTargetObject == val)\n                return;\n            if (this._pTargetObject && this._pAutoUpdate)\n                this._pTargetObject._iController = null;\n            this._pTargetObject = val;\n            if (this._pTargetObject && this._pAutoUpdate)\n                this._pTargetObject._iController = this;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControllerBase.prototype, \"autoUpdate\", {\n        get: function () {\n            return this._pAutoUpdate;\n        },\n        set: function (val) {\n            if (this._pAutoUpdate == val)\n                return;\n            this._pAutoUpdate = val;\n            if (this._pTargetObject) {\n                if (this._pAutoUpdate)\n                    this._pTargetObject._iController = this;\n                else\n                    this._pTargetObject._iController = null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ControllerBase.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        throw new AbstractMethodError_1.default();\n    };\n    ControllerBase.prototype.updateController = function () {\n        if (this._pControllerDirty && this._pAutoUpdate) {\n            this._pControllerDirty = false;\n            this.pNotifyUpdate();\n        }\n    };\n    return ControllerBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ControllerBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/controllers/FirstPersonController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar ControllerBase_1 = require(\"../controllers/ControllerBase\");\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nvar FirstPersonController = (function (_super) {\n    __extends(FirstPersonController, _super);\n    /**\n     * Creates a new <code>HoverController</code> object.\n     */\n    function FirstPersonController(targetObject, panAngle, tiltAngle, minTiltAngle, maxTiltAngle, steps, wrapPanAngle) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (panAngle === void 0) { panAngle = 0; }\n        if (tiltAngle === void 0) { tiltAngle = 90; }\n        if (minTiltAngle === void 0) { minTiltAngle = -90; }\n        if (maxTiltAngle === void 0) { maxTiltAngle = 90; }\n        if (steps === void 0) { steps = 8; }\n        if (wrapPanAngle === void 0) { wrapPanAngle = false; }\n        _super.call(this, targetObject);\n        this._iCurrentPanAngle = 0;\n        this._iCurrentTiltAngle = 90;\n        this._panAngle = 0;\n        this._tiltAngle = 90;\n        this._minTiltAngle = -90;\n        this._maxTiltAngle = 90;\n        this._steps = 8;\n        this._walkIncrement = 0;\n        this._strafeIncrement = 0;\n        this._wrapPanAngle = false;\n        this.fly = false;\n        this.panAngle = panAngle;\n        this.tiltAngle = tiltAngle;\n        this.minTiltAngle = minTiltAngle;\n        this.maxTiltAngle = maxTiltAngle;\n        this.steps = steps;\n        this.wrapPanAngle = wrapPanAngle;\n        //values passed in contrustor are applied immediately\n        this._iCurrentPanAngle = this._panAngle;\n        this._iCurrentTiltAngle = this._tiltAngle;\n    }\n    Object.defineProperty(FirstPersonController.prototype, \"steps\", {\n        /**\n         * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n         *\n         * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n         *\n         * @see    #tiltAngle\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._steps;\n        },\n        set: function (val) {\n            val = (val < 1) ? 1 : val;\n            if (this._steps == val)\n                return;\n            this._steps = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"panAngle\", {\n        /**\n         * Rotation of the camera in degrees around the y axis. Defaults to 0.\n         */\n        get: function () {\n            return this._panAngle;\n        },\n        set: function (val) {\n            if (this._panAngle == val)\n                return;\n            this._panAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"tiltAngle\", {\n        /**\n         * Elevation angle of the camera in degrees. Defaults to 90.\n         */\n        get: function () {\n            return this._tiltAngle;\n        },\n        set: function (val) {\n            val = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n            if (this._tiltAngle == val)\n                return;\n            this._tiltAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"minTiltAngle\", {\n        /**\n         * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._minTiltAngle;\n        },\n        set: function (val) {\n            if (this._minTiltAngle == val)\n                return;\n            this._minTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"maxTiltAngle\", {\n        /**\n         * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._maxTiltAngle;\n        },\n        set: function (val) {\n            if (this._maxTiltAngle == val)\n                return;\n            this._maxTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"wrapPanAngle\", {\n        /**\n         * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n         */\n        get: function () {\n            return this._wrapPanAngle;\n        },\n        set: function (val) {\n            if (this._wrapPanAngle == val)\n                return;\n            this._wrapPanAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the current tilt angle and pan angle values.\n     *\n     * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n     *\n     * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n     *\n     * @see    #tiltAngle\n     * @see    #panAngle\n     * @see    #steps\n     */\n    FirstPersonController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n            this._pControllerDirty = true;\n            if (this._wrapPanAngle) {\n                if (this._panAngle < 0) {\n                    this._iCurrentPanAngle += this._panAngle % 360 + 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360 + 360;\n                }\n                else {\n                    this._iCurrentPanAngle += this._panAngle % 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360;\n                }\n                while (this._panAngle - this._iCurrentPanAngle < -180)\n                    this._iCurrentPanAngle -= 360;\n                while (this._panAngle - this._iCurrentPanAngle > 180)\n                    this._iCurrentPanAngle += 360;\n            }\n            if (interpolate) {\n                this._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle) / (this.steps + 1);\n                this._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle) / (this.steps + 1);\n            }\n            else {\n                this._iCurrentTiltAngle = this._tiltAngle;\n                this._iCurrentPanAngle = this._panAngle;\n            }\n            //snap coords if angle differences are close\n            if ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n                this._iCurrentTiltAngle = this._tiltAngle;\n                this._iCurrentPanAngle = this._panAngle;\n            }\n        }\n        this.targetObject.rotationX = this._iCurrentTiltAngle;\n        this.targetObject.rotationY = this._iCurrentPanAngle;\n        if (this._walkIncrement) {\n            if (this.fly) {\n                this.targetObject.transform.moveForward(this._walkIncrement);\n            }\n            else {\n                this.targetObject.x += this._walkIncrement * Math.sin(this._panAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n                this.targetObject.z += this._walkIncrement * Math.cos(this._panAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n            }\n            this._walkIncrement = 0;\n        }\n        if (this._strafeIncrement) {\n            this.targetObject.transform.moveRight(this._strafeIncrement);\n            this._strafeIncrement = 0;\n        }\n    };\n    FirstPersonController.prototype.incrementWalk = function (val) {\n        if (val == 0)\n            return;\n        this._walkIncrement += val;\n        this.pNotifyUpdate();\n    };\n    FirstPersonController.prototype.incrementStrafe = function (val) {\n        if (val == 0)\n            return;\n        this._strafeIncrement += val;\n        this.pNotifyUpdate();\n    };\n    return FirstPersonController;\n}(ControllerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FirstPersonController;\n\n},{\"../controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"awayjs-core/lib/geom/MathConsts\":undefined}],\"awayjs-display/lib/controllers/FollowController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar HoverController_1 = require(\"../controllers/HoverController\");\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nvar FollowController = (function (_super) {\n    __extends(FollowController, _super);\n    function FollowController(targetObject, lookAtObject, tiltAngle, distance) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        if (tiltAngle === void 0) { tiltAngle = 45; }\n        if (distance === void 0) { distance = 700; }\n        _super.call(this, targetObject, lookAtObject, 0, tiltAngle, distance);\n    }\n    FollowController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (!this.lookAtObject)\n            return;\n        this.panAngle = this._pLookAtObject.rotationY - 180;\n        _super.prototype.update.call(this);\n    };\n    return FollowController;\n}(HoverController_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FollowController;\n\n},{\"../controllers/HoverController\":\"awayjs-display/lib/controllers/HoverController\"}],\"awayjs-display/lib/controllers/HoverController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LookAtController_1 = require(\"../controllers/LookAtController\");\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nvar HoverController = (function (_super) {\n    __extends(HoverController, _super);\n    /**\n     * Creates a new <code>HoverController</code> object.\n     */\n    function HoverController(targetObject, lookAtObject, panAngle, tiltAngle, distance, minTiltAngle, maxTiltAngle, minPanAngle, maxPanAngle, steps, yFactor, wrapPanAngle) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        if (panAngle === void 0) { panAngle = 0; }\n        if (tiltAngle === void 0) { tiltAngle = 90; }\n        if (distance === void 0) { distance = 1000; }\n        if (minTiltAngle === void 0) { minTiltAngle = -90; }\n        if (maxTiltAngle === void 0) { maxTiltAngle = 90; }\n        if (minPanAngle === void 0) { minPanAngle = null; }\n        if (maxPanAngle === void 0) { maxPanAngle = null; }\n        if (steps === void 0) { steps = 8; }\n        if (yFactor === void 0) { yFactor = 2; }\n        if (wrapPanAngle === void 0) { wrapPanAngle = false; }\n        _super.call(this, targetObject, lookAtObject);\n        this._iCurrentPanAngle = 0;\n        this._iCurrentTiltAngle = 90;\n        this._panAngle = 0;\n        this._tiltAngle = 90;\n        this._distance = 1000;\n        this._minPanAngle = -Infinity;\n        this._maxPanAngle = Infinity;\n        this._minTiltAngle = -90;\n        this._maxTiltAngle = 90;\n        this._steps = 8;\n        this._yFactor = 2;\n        this._wrapPanAngle = false;\n        this._upAxis = new Vector3D_1.default();\n        this.distance = distance;\n        this.panAngle = panAngle;\n        this.tiltAngle = tiltAngle;\n        this.minPanAngle = (minPanAngle != null) ? minPanAngle : -Infinity;\n        this.maxPanAngle = (maxPanAngle != null) ? maxPanAngle : Infinity;\n        this.minTiltAngle = minTiltAngle;\n        this.maxTiltAngle = maxTiltAngle;\n        this.steps = steps;\n        this.yFactor = yFactor;\n        this.wrapPanAngle = wrapPanAngle;\n        //values passed in contrustor are applied immediately\n        this._iCurrentPanAngle = this._panAngle;\n        this._iCurrentTiltAngle = this._tiltAngle;\n    }\n    Object.defineProperty(HoverController.prototype, \"steps\", {\n        /**\n         * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n         *\n         * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n         *\n         * @see    #tiltAngle\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._steps;\n        },\n        set: function (val) {\n            val = (val < 1) ? 1 : val;\n            if (this._steps == val)\n                return;\n            this._steps = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"panAngle\", {\n        /**\n         * Rotation of the camera in degrees around the y axis. Defaults to 0.\n         */\n        get: function () {\n            return this._panAngle;\n        },\n        set: function (val) {\n            val = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n            if (this._panAngle == val)\n                return;\n            this._panAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"tiltAngle\", {\n        /**\n         * Elevation angle of the camera in degrees. Defaults to 90.\n         */\n        get: function () {\n            return this._tiltAngle;\n        },\n        set: function (val) {\n            val = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n            if (this._tiltAngle == val)\n                return;\n            this._tiltAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"distance\", {\n        /**\n         * Distance between the camera and the specified target. Defaults to 1000.\n         */\n        get: function () {\n            return this._distance;\n        },\n        set: function (val) {\n            if (this._distance == val)\n                return;\n            this._distance = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"minPanAngle\", {\n        /**\n         * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n         *\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._minPanAngle;\n        },\n        set: function (val) {\n            if (this._minPanAngle == val)\n                return;\n            this._minPanAngle = val;\n            this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"maxPanAngle\", {\n        /**\n         * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n         *\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._maxPanAngle;\n        },\n        set: function (val) {\n            if (this._maxPanAngle == val)\n                return;\n            this._maxPanAngle = val;\n            this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"minTiltAngle\", {\n        /**\n         * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._minTiltAngle;\n        },\n        set: function (val) {\n            if (this._minTiltAngle == val)\n                return;\n            this._minTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"maxTiltAngle\", {\n        /**\n         * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._maxTiltAngle;\n        },\n        set: function (val) {\n            if (this._maxTiltAngle == val)\n                return;\n            this._maxTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"yFactor\", {\n        /**\n         * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n         *\n         * @see    #distance\n         */\n        get: function () {\n            return this._yFactor;\n        },\n        set: function (val) {\n            if (this._yFactor == val)\n                return;\n            this._yFactor = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"wrapPanAngle\", {\n        /**\n         * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n         */\n        get: function () {\n            return this._wrapPanAngle;\n        },\n        set: function (val) {\n            if (this._wrapPanAngle == val)\n                return;\n            this._wrapPanAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the current tilt angle and pan angle values.\n     *\n     * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n     *\n     * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n     *\n     * @see    #tiltAngle\n     * @see    #panAngle\n     * @see    #steps\n     */\n    HoverController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n            this._pControllerDirty = true;\n            if (this._wrapPanAngle) {\n                if (this._panAngle < 0) {\n                    this._iCurrentPanAngle += this._panAngle % 360 + 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360 + 360;\n                }\n                else {\n                    this._iCurrentPanAngle += this._panAngle % 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360;\n                }\n                while (this._panAngle - this._iCurrentPanAngle < -180)\n                    this._iCurrentPanAngle -= 360;\n                while (this._panAngle - this._iCurrentPanAngle > 180)\n                    this._iCurrentPanAngle += 360;\n            }\n            if (interpolate) {\n                this._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle) / (this.steps + 1);\n                this._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle) / (this.steps + 1);\n            }\n            else {\n                this._iCurrentPanAngle = this._panAngle;\n                this._iCurrentTiltAngle = this._tiltAngle;\n            }\n            //snap coords if angle differences are close\n            if ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n                this._iCurrentTiltAngle = this._tiltAngle;\n                this._iCurrentPanAngle = this._panAngle;\n            }\n        }\n        var pos = (this.lookAtObject) ? this.lookAtObject.transform.position : (this.lookAtPosition) ? this.lookAtPosition : this._pOrigin;\n        this.targetObject.x = pos.x + this.distance * Math.sin(this._iCurrentPanAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * Math.cos(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        this.targetObject.y = pos.y + this.distance * Math.sin(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * this.yFactor;\n        this.targetObject.z = pos.z + this.distance * Math.cos(this._iCurrentPanAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * Math.cos(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        this._upAxis.x = -Math.sin(this._iCurrentPanAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * Math.sin(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        this._upAxis.y = Math.cos(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        this._upAxis.z = -Math.cos(this._iCurrentPanAngle * MathConsts_1.default.DEGREES_TO_RADIANS) * Math.sin(this._iCurrentTiltAngle * MathConsts_1.default.DEGREES_TO_RADIANS);\n        if (this._pTargetObject) {\n            if (this._pLookAtPosition)\n                this._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n            else if (this._pLookAtObject)\n                this._pTargetObject.lookAt(this._pLookAtObject.scene ? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n        }\n    };\n    return HoverController;\n}(LookAtController_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = HoverController;\n\n},{\"../controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/controllers/LookAtController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ControllerBase_1 = require(\"../controllers/ControllerBase\");\nvar DisplayObjectEvent_1 = require(\"../events/DisplayObjectEvent\");\nvar LookAtController = (function (_super) {\n    __extends(LookAtController, _super);\n    function LookAtController(targetObject, lookAtObject) {\n        var _this = this;\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        _super.call(this, targetObject);\n        this._pOrigin = new Vector3D_1.default(0.0, 0.0, 0.0);\n        this._onLookAtObjectChangedDelegate = function (event) { return _this.onLookAtObjectChanged(event); };\n        if (lookAtObject)\n            this.lookAtObject = lookAtObject;\n        else\n            this.lookAtPosition = new Vector3D_1.default();\n    }\n    Object.defineProperty(LookAtController.prototype, \"lookAtPosition\", {\n        get: function () {\n            return this._pLookAtPosition;\n        },\n        set: function (val) {\n            if (this._pLookAtObject) {\n                this._pLookAtObject.removeEventListener(DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n                this._pLookAtObject = null;\n            }\n            this._pLookAtPosition = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LookAtController.prototype, \"lookAtObject\", {\n        get: function () {\n            return this._pLookAtObject;\n        },\n        set: function (val) {\n            if (this._pLookAtPosition)\n                this._pLookAtPosition = null;\n            if (this._pLookAtObject == val)\n                return;\n            if (this._pLookAtObject)\n                this._pLookAtObject.removeEventListener(DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n            this._pLookAtObject = val;\n            if (this._pLookAtObject)\n                this._pLookAtObject.addEventListener(DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    LookAtController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (this._pTargetObject) {\n            if (this._pLookAtPosition)\n                this._pTargetObject.lookAt(this._pLookAtPosition);\n            else if (this._pLookAtObject)\n                this._pTargetObject.lookAt(this._pLookAtObject.scene ? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n        }\n    };\n    LookAtController.prototype.onLookAtObjectChanged = function (event) {\n        this.pNotifyUpdate();\n    };\n    return LookAtController;\n}(ControllerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LookAtController;\n\n},{\"../controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"../events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/controllers/SpringController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LookAtController_1 = require(\"../controllers/LookAtController\");\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nvar SpringController = (function (_super) {\n    __extends(SpringController, _super);\n    function SpringController(targetObject, lookAtObject, stiffness, mass, damping) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        if (stiffness === void 0) { stiffness = 1; }\n        if (mass === void 0) { mass = 40; }\n        if (damping === void 0) { damping = 4; }\n        _super.call(this, targetObject, lookAtObject);\n        /**\n         * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n         */\n        this.positionOffset = new Vector3D_1.default(0, 500, -1000);\n        this.stiffness = stiffness;\n        this.damping = damping;\n        this.mass = mass;\n        this._velocity = new Vector3D_1.default();\n        this._dv = new Vector3D_1.default();\n        this._stretch = new Vector3D_1.default();\n        this._force = new Vector3D_1.default();\n        this._acceleration = new Vector3D_1.default();\n        this._desiredPosition = new Vector3D_1.default();\n    }\n    SpringController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        var offs;\n        if (!this._pLookAtObject || !this._pTargetObject)\n            return;\n        this._pControllerDirty = true;\n        offs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n        this._desiredPosition.x = this._pLookAtObject.x + offs.x;\n        this._desiredPosition.y = this._pLookAtObject.y + offs.y;\n        this._desiredPosition.z = this._pLookAtObject.z + offs.z;\n        this._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n        this._stretch.scaleBy(-this.stiffness);\n        this._dv.copyFrom(this._velocity);\n        this._dv.scaleBy(this.damping);\n        this._force.x = this._stretch.x - this._dv.x;\n        this._force.y = this._stretch.y - this._dv.y;\n        this._force.z = this._stretch.z - this._dv.z;\n        this._acceleration.copyFrom(this._force);\n        this._acceleration.scaleBy(1 / this.mass);\n        this._velocity.incrementBy(this._acceleration);\n        var position = this._pTargetObject.transform.position.add(this._velocity);\n        this._pTargetObject.transform.moveTo(position.x, position.y, position.z);\n        _super.prototype.update.call(this);\n    };\n    return SpringController;\n}(LookAtController_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SpringController;\n\n},{\"../controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/controllers\":[function(require,module,exports){\n\"use strict\";\nvar ControllerBase_1 = require(\"./controllers/ControllerBase\");\nexports.ControllerBase = ControllerBase_1.default;\nvar FirstPersonController_1 = require(\"./controllers/FirstPersonController\");\nexports.FirstPersonController = FirstPersonController_1.default;\nvar FollowController_1 = require(\"./controllers/FollowController\");\nexports.FollowController = FollowController_1.default;\nvar HoverController_1 = require(\"./controllers/HoverController\");\nexports.HoverController = HoverController_1.default;\nvar LookAtController_1 = require(\"./controllers/LookAtController\");\nexports.LookAtController = LookAtController_1.default;\nvar SpringController_1 = require(\"./controllers/SpringController\");\nexports.SpringController = SpringController_1.default;\n\n},{\"./controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"./controllers/FirstPersonController\":\"awayjs-display/lib/controllers/FirstPersonController\",\"./controllers/FollowController\":\"awayjs-display/lib/controllers/FollowController\",\"./controllers/HoverController\":\"awayjs-display/lib/controllers/HoverController\",\"./controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"./controllers/SpringController\":\"awayjs-display/lib/controllers/SpringController\"}],\"awayjs-display/lib/display/Billboard\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\nvar SurfaceEvent_1 = require(\"../events/SurfaceEvent\");\nvar DefaultMaterialManager_1 = require(\"../managers/DefaultMaterialManager\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\nvar Billboard = (function (_super) {\n    __extends(Billboard, _super);\n    function Billboard(material, pixelSnapping, smoothing) {\n        var _this = this;\n        if (pixelSnapping === void 0) { pixelSnapping = \"auto\"; }\n        if (smoothing === void 0) { smoothing = false; }\n        _super.call(this);\n        this._pIsEntity = true;\n        this.onInvalidateTextureDelegate = function (event) { return _this.onInvalidateTexture(event); };\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this.material = material;\n        this._updateDimensions();\n        //default bounds type\n        this._boundsType = BoundsType_1.default.AXIS_ALIGNED_BOX;\n    }\n    Object.defineProperty(Billboard.prototype, \"animator\", {\n        /**\n         * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Billboard.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"billboardRect\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._billboardRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"billboardHeight\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._billboardHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"billboardWidth\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._billboardWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"material\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (value == this._material)\n                return;\n            if (this._material) {\n                this._material.iRemoveOwner(this);\n                this._material.removeEventListener(SurfaceEvent_1.default.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n            }\n            this._material = value;\n            if (this._material) {\n                this._material.iAddOwner(this);\n                this._material.addEventListener(SurfaceEvent_1.default.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @protected\n     */\n    Billboard.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.width = this._billboardRect.width;\n        this._pBoxBounds.height = this._billboardRect.height;\n    };\n    Billboard.prototype.clone = function () {\n        var clone = new Billboard(this.material);\n        return clone;\n    };\n    Object.defineProperty(Billboard.prototype, \"style\", {\n        /**\n         * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._onInvalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    Billboard.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\n    };\n    /**\n     * @private\n     */\n    Billboard.prototype.onInvalidateTexture = function (event) {\n        this._updateDimensions();\n    };\n    Billboard.prototype._acceptTraverser = function (traverser) {\n        traverser.applyRenderable(this);\n    };\n    Billboard.prototype._updateDimensions = function () {\n        var texture = this.material.getTextureAt(0);\n        var image = texture ? ((this._style ? this._style.getImageAt(texture) : null) || (this.material.style ? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n        if (image) {\n            var sampler = ((this._style ? this._style.getSamplerAt(texture) : null) || (this.material.style ? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager_1.default.getDefaultSampler());\n            if (sampler.imageRect) {\n                this._billboardWidth = sampler.imageRect.width * image.width;\n                this._billboardHeight = sampler.imageRect.height * image.height;\n            }\n            else {\n                this._billboardWidth = image.rect.width;\n                this._billboardHeight = image.rect.height;\n            }\n            this._billboardRect = sampler.frameRect || new Rectangle_1.default(0, 0, this._billboardWidth, this._billboardHeight);\n        }\n        else {\n            this._billboardWidth = 1;\n            this._billboardHeight = 1;\n            this._billboardRect = new Rectangle_1.default(0, 0, 1, 1);\n        }\n        this._pInvalidateBounds();\n        this.invalidateElements();\n    };\n    Billboard.prototype.invalidateElements = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this));\n    };\n    Billboard.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_SURFACE, this));\n    };\n    Billboard.prototype._onInvalidateProperties = function (event) {\n        if (event === void 0) { event = null; }\n        this.invalidateSurface();\n        this._updateDimensions();\n    };\n    Billboard.assetType = \"[asset Billboard]\";\n    return Billboard;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Billboard;\n\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"../managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-core/lib/geom/Rectangle\":undefined}],\"awayjs-display/lib/display/Camera\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Plane3D_1 = require(\"awayjs-core/lib/geom/Plane3D\");\nvar ProjectionEvent_1 = require(\"awayjs-core/lib/events/ProjectionEvent\");\nvar PerspectiveProjection_1 = require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\nvar CameraEvent_1 = require(\"../events/CameraEvent\");\nvar Camera = (function (_super) {\n    __extends(Camera, _super);\n    function Camera(projection) {\n        var _this = this;\n        if (projection === void 0) { projection = null; }\n        _super.call(this);\n        this._viewProjection = new Matrix3D_1.default();\n        this._viewProjectionDirty = true;\n        this._frustumPlanesDirty = true;\n        this._pIsEntity = true;\n        this._onProjectionMatrixChangedDelegate = function (event) { return _this.onProjectionMatrixChanged(event); };\n        this._projection = projection || new PerspectiveProjection_1.default();\n        this._projection.addEventListener(ProjectionEvent_1.default.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n        this._frustumPlanes = [];\n        for (var i = 0; i < 6; ++i)\n            this._frustumPlanes[i] = new Plane3D_1.default();\n        this.z = -1000;\n        //default bounds type\n        this._boundsType = BoundsType_1.default.NULL;\n    }\n    Object.defineProperty(Camera.prototype, \"assetType\", {\n        //@override\n        get: function () {\n            return Camera.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Camera.prototype.onProjectionMatrixChanged = function (event) {\n        this._viewProjectionDirty = true;\n        this._frustumPlanesDirty = true;\n        this.dispatchEvent(event);\n    };\n    Object.defineProperty(Camera.prototype, \"frustumPlanes\", {\n        get: function () {\n            if (this._frustumPlanesDirty)\n                this.updateFrustum();\n            return this._frustumPlanes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Camera.prototype.updateFrustum = function () {\n        var a, b, c;\n        //var d : Number;\n        var c11, c12, c13, c14;\n        var c21, c22, c23, c24;\n        var c31, c32, c33, c34;\n        var c41, c42, c43, c44;\n        var p;\n        var raw = this.viewProjection.rawData;\n        var invLen;\n        c11 = raw[0];\n        c12 = raw[4];\n        c13 = raw[8];\n        c14 = raw[12];\n        c21 = raw[1];\n        c22 = raw[5];\n        c23 = raw[9];\n        c24 = raw[13];\n        c31 = raw[2];\n        c32 = raw[6];\n        c33 = raw[10];\n        c34 = raw[14];\n        c41 = raw[3];\n        c42 = raw[7];\n        c43 = raw[11];\n        c44 = raw[15];\n        // left plane\n        p = this._frustumPlanes[0];\n        a = c41 + c11;\n        b = c42 + c12;\n        c = c43 + c13;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = -(c44 + c14) * invLen;\n        // right plane\n        p = this._frustumPlanes[1];\n        a = c41 - c11;\n        b = c42 - c12;\n        c = c43 - c13;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = (c14 - c44) * invLen;\n        // bottom\n        p = this._frustumPlanes[2];\n        a = c41 + c21;\n        b = c42 + c22;\n        c = c43 + c23;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = -(c44 + c24) * invLen;\n        // top\n        p = this._frustumPlanes[3];\n        a = c41 - c21;\n        b = c42 - c22;\n        c = c43 - c23;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = (c24 - c44) * invLen;\n        // near\n        p = this._frustumPlanes[4];\n        a = c31;\n        b = c32;\n        c = c33;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = -c34 * invLen;\n        // far\n        p = this._frustumPlanes[5];\n        a = c41 - c31;\n        b = c42 - c32;\n        c = c43 - c33;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = (c34 - c44) * invLen;\n        this._frustumPlanesDirty = false;\n    };\n    Camera.prototype.pInvalidateHierarchicalProperties = function (bitFlag) {\n        if (_super.prototype.pInvalidateHierarchicalProperties.call(this, bitFlag))\n            return true;\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.SCENE_TRANSFORM) {\n            this._viewProjectionDirty = true;\n            this._frustumPlanesDirty = true;\n        }\n        return false;\n    };\n    Object.defineProperty(Camera.prototype, \"projection\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._projection;\n        },\n        set: function (value) {\n            if (this._projection == value)\n                return;\n            if (!value)\n                throw new Error(\"Projection cannot be null!\");\n            this._projection.removeEventListener(ProjectionEvent_1.default.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            this._projection = value;\n            this._projection.addEventListener(ProjectionEvent_1.default.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            this.dispatchEvent(new CameraEvent_1.default(CameraEvent_1.default.PROJECTION_CHANGED, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Camera.prototype, \"viewProjection\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._viewProjectionDirty) {\n                this._viewProjection.copyFrom(this.inverseSceneTransform);\n                this._viewProjection.append(this._projection.matrix);\n                this._viewProjectionDirty = false;\n            }\n            return this._viewProjection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n     *\n     * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n     * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n     * @param sZ The z coordinate in screen space, representing the distance into the screen.\n     * @return The ray from the camera to the scene space position of the given screen coordinates.\n     */\n    Camera.prototype.getRay = function (nX, nY, sZ) {\n        return this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n    };\n    /**\n     * Calculates the normalised position in screen space of the given scene position.\n     *\n     * @param point3d the position vector of the scene coordinates to be projected.\n     * @return The normalised screen position of the given scene coordinates.\n     */\n    Camera.prototype.project = function (point3d) {\n        return this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n    };\n    /**\n     * Calculates the scene position of the given normalized coordinates in screen space.\n     *\n     * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n     * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n     * @param sZ The z coordinate in screen space, representing the distance into the screen.\n     * @return The scene position of the given screen coordinates.\n     */\n    Camera.prototype.unproject = function (nX, nY, sZ) {\n        return this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n    };\n    Camera.prototype._applyRenderer = function (renderer) {\n        // Since this getter is invoked every iteration of the render loop, and\n        // the prefab construct could affect the sub-sprites, the prefab is\n        // validated here to give it a chance to rebuild.\n        if (this._iSourcePrefab)\n            this._iSourcePrefab._iValidate();\n        //nothing to do here\n    };\n    Camera.assetType = \"[asset Camera]\";\n    return Camera;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Camera;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"awayjs-core/lib/events/ProjectionEvent\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Plane3D\":undefined,\"awayjs-core/lib/projections/PerspectiveProjection\":undefined}],\"awayjs-display/lib/display/DirectionalLight\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LightBase_1 = require(\"../display/LightBase\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar DirectionalShadowMapper_1 = require(\"../materials/shadowmappers/DirectionalShadowMapper\");\nvar DirectionalLight = (function (_super) {\n    __extends(DirectionalLight, _super);\n    function DirectionalLight(xDir, yDir, zDir) {\n        if (xDir === void 0) { xDir = 0; }\n        if (yDir === void 0) { yDir = -1; }\n        if (zDir === void 0) { zDir = 1; }\n        _super.call(this);\n        this._pAabbPoints = new Array(24);\n        this._pIsEntity = true;\n        this.direction = new Vector3D_1.default(xDir, yDir, zDir);\n        this._sceneDirection = new Vector3D_1.default();\n        //default bounds type\n        this._boundsType = BoundsType_1.default.NULL;\n    }\n    Object.defineProperty(DirectionalLight.prototype, \"assetType\", {\n        get: function () {\n            return DirectionalLight.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalLight.prototype, \"sceneDirection\", {\n        get: function () {\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.SCENE_TRANSFORM)\n                this.pUpdateSceneTransform();\n            return this._sceneDirection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalLight.prototype, \"direction\", {\n        get: function () {\n            return this._direction;\n        },\n        set: function (value) {\n            this._direction = value;\n            if (!this._tmpLookAt)\n                this._tmpLookAt = new Vector3D_1.default();\n            this._tmpLookAt.x = this.x + this._direction.x;\n            this._tmpLookAt.y = this.y + this._direction.y;\n            this._tmpLookAt.z = this.z + this._direction.z;\n            this.lookAt(this._tmpLookAt);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    DirectionalLight.prototype.pUpdateSceneTransform = function () {\n        _super.prototype.pUpdateSceneTransform.call(this);\n        this.sceneTransform.copyColumnTo(2, this._sceneDirection);\n        this._sceneDirection.normalize();\n    };\n    //@override\n    DirectionalLight.prototype.pCreateShadowMapper = function () {\n        return new DirectionalShadowMapper_1.default();\n    };\n    //override\n    DirectionalLight.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var m = new Matrix3D_1.default();\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n        m.append(this.inverseSceneTransform);\n        if (!this._projAABBPoints)\n            this._projAABBPoints = [];\n        m.transformVectors(this._pAabbPoints, this._projAABBPoints);\n        var xMin = Infinity, xMax = -Infinity;\n        var yMin = Infinity, yMax = -Infinity;\n        var zMin = Infinity, zMax = -Infinity;\n        var d;\n        for (var i = 0; i < 24;) {\n            d = this._projAABBPoints[i++];\n            if (d < xMin)\n                xMin = d;\n            if (d > xMax)\n                xMax = d;\n            d = this._projAABBPoints[i++];\n            if (d < yMin)\n                yMin = d;\n            if (d > yMax)\n                yMax = d;\n            d = this._projAABBPoints[i++];\n            if (d < zMin)\n                zMin = d;\n            if (d > zMax)\n                zMax = d;\n        }\n        var invXRange = 1 / (xMax - xMin);\n        var invYRange = 1 / (yMax - yMin);\n        var invZRange = 1 / (zMax - zMin);\n        raw[0] = 2 * invXRange;\n        raw[5] = 2 * invYRange;\n        raw[10] = invZRange;\n        raw[12] = -(xMax + xMin) * invXRange;\n        raw[13] = -(yMax + yMin) * invYRange;\n        raw[14] = -zMin * invZRange;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        raw[15] = 1;\n        if (!target)\n            target = new Matrix3D_1.default();\n        target.copyRawDataFrom(raw);\n        target.prepend(m);\n        return target;\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    DirectionalLight.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        //update points\n        var minX = this._pBoxBounds.x;\n        var minY = this._pBoxBounds.y - this._pBoxBounds.height;\n        var minZ = this._pBoxBounds.z;\n        var maxX = this._pBoxBounds.x + this._pBoxBounds.width;\n        var maxY = this._pBoxBounds.y;\n        var maxZ = this._pBoxBounds.z + this._pBoxBounds.depth;\n        this._pAabbPoints[0] = minX;\n        this._pAabbPoints[1] = minY;\n        this._pAabbPoints[2] = minZ;\n        this._pAabbPoints[3] = maxX;\n        this._pAabbPoints[4] = minY;\n        this._pAabbPoints[5] = minZ;\n        this._pAabbPoints[6] = minX;\n        this._pAabbPoints[7] = maxY;\n        this._pAabbPoints[8] = minZ;\n        this._pAabbPoints[9] = maxX;\n        this._pAabbPoints[10] = maxY;\n        this._pAabbPoints[11] = minZ;\n        this._pAabbPoints[12] = minX;\n        this._pAabbPoints[13] = minY;\n        this._pAabbPoints[14] = maxZ;\n        this._pAabbPoints[15] = maxX;\n        this._pAabbPoints[16] = minY;\n        this._pAabbPoints[17] = maxZ;\n        this._pAabbPoints[18] = minX;\n        this._pAabbPoints[19] = maxY;\n        this._pAabbPoints[20] = maxZ;\n        this._pAabbPoints[21] = maxX;\n        this._pAabbPoints[22] = maxY;\n        this._pAabbPoints[23] = maxZ;\n    };\n    DirectionalLight.assetType = \"[light DirectionalLight]\";\n    return DirectionalLight;\n}(LightBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DirectionalLight;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"../materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/DisplayObjectContainer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nvar RangeError_1 = require(\"awayjs-core/lib/errors/RangeError\");\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nvar DisplayObjectContainer = (function (_super) {\n    __extends(DisplayObjectContainer, _super);\n    /**\n     * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n     * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n     * constructors for the following subclasses of DisplayObjectContainer:\n     * <ul>\n     *   <li><code>new Loader()</code></li>\n     *   <li><code>new Sprite()</code></li>\n     *   <li><code>new MovieClip()</code></li>\n     * </ul>\n     */\n    function DisplayObjectContainer() {\n        _super.call(this);\n        this._mouseChildren = true;\n        this._depth_childs = {};\n        this._nextHighestDepth = 0;\n        this._children = new Array();\n    }\n    Object.defineProperty(DisplayObjectContainer.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return DisplayObjectContainer.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObjectContainer.prototype, \"mouseChildren\", {\n        /**\n         * Determines whether or not the children of the object are mouse, or user\n         * input device, enabled. If an object is enabled, a user can interact with\n         * it by using a mouse or user input device. The default is\n         * <code>true</code>.\n         *\n         * <p>This property is useful when you create a button with an instance of\n         * the Sprite class(instead of using the SimpleButton class). When you use a\n         * Sprite instance to create a button, you can choose to decorate the button\n         * by using the <code>addChild()</code> method to add additional Sprite\n         * instances. This process can cause unexpected behavior with mouse events\n         * because the Sprite instances you add as children can become the target\n         * object of a mouse event when you expect the parent instance to be the\n         * target object. To ensure that the parent instance serves as the target\n         * objects for mouse events, you can set the <code>mouseChildren</code>\n         * property of the parent instance to <code>false</code>.</p>\n         *\n         * <p> No event is dispatched by setting this property. You must use the\n         * <code>addEventListener()</code> method to create interactive\n         * functionality.</p>\n         */\n        get: function () {\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MOUSE_ENABLED)\n                this._updateMouseEnabled();\n            return this._mouseChildren;\n        },\n        set: function (value) {\n            if (this._mouseChildren == value)\n                return;\n            this._mouseChildren = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.MOUSE_ENABLED);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObjectContainer.prototype, \"numChildren\", {\n        /**\n         * Returns the number of children of this object.\n         */\n        get: function () {\n            return this._children.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a child DisplayObject instance to this DisplayObjectContainer\n     * instance. The child is added to the front(top) of all other children in\n     * this DisplayObjectContainer instance.(To add a child to a specific index\n     * position, use the <code>addChildAt()</code> method.)\n     *\n     * <p>If you add a child object that already has a different display object\n     * container as a parent, the object is removed from the child list of the\n     * other display object container. </p>\n     *\n     * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n     * problems with a published SWF file, including security problems and\n     * conflicts with other loaded SWF files. There is only one Stage within a\n     * Flash runtime instance, no matter how many SWF files you load into the\n     * runtime. So, generally, objects should not be added to the Stage,\n     * directly, at all. The only object the Stage should contain is the root\n     * object. Create a DisplayObjectContainer to contain all of the items on the\n     * display list. Then, if necessary, add that DisplayObjectContainer instance\n     * to the Stage.</p>\n     *\n     * @param child The DisplayObject instance to add as a child of this\n     *              DisplayObjectContainer instance.\n     * @return The DisplayObject instance that you pass in the <code>child</code>\n     *         parameter.\n     * @throws ArgumentError Throws if the child is the same as the parent. Also\n     *                       throws if the caller is a child(or grandchild etc.)\n     *                       of the child being added.\n     * @event added Dispatched when a display object is added to the display\n     *              list.\n     */\n    DisplayObjectContainer.prototype.addChild = function (child) {\n        return this.addChildAt(child, this._children.length);\n    };\n    DisplayObjectContainer.prototype.addChildAtDepth = function (child, depth, replace) {\n        if (replace === void 0) { replace = true; }\n        if (child == null)\n            throw new ArgumentError_1.default(\"Parameter child cannot be null.\");\n        //if child already has a parent, remove it.\n        if (child._pParent)\n            child._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n        var index = this.getDepthIndexInternal(depth);\n        if (index != -1) {\n            if (replace) {\n                this.removeChildAt(index);\n            }\n            else {\n                //move depth of existing child up by 1\n                this.addChildAtDepth(this._children[index], depth + 1, false);\n            }\n        }\n        if (this._nextHighestDepth < depth + 1)\n            this._nextHighestDepth = depth + 1;\n        this._depth_childs[depth] = child;\n        this._children.push(child);\n        child._depthID = depth;\n        child.iSetParent(this);\n        this._invalidateChildren();\n        return child;\n    };\n    /**\n     * Adds a child DisplayObject instance to this DisplayObjectContainer\n     * instance. The child is added at the index position specified. An index of\n     * 0 represents the back(bottom) of the display list for this\n     * DisplayObjectContainer object.\n     *\n     * <p>For example, the following example shows three display objects, labeled\n     * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n     *\n     * <p>If you add a child object that already has a different display object\n     * container as a parent, the object is removed from the child list of the\n     * other display object container. </p>\n     *\n     * @param child The DisplayObject instance to add as a child of this\n     *              DisplayObjectContainer instance.\n     * @param index The index position to which the child is added. If you\n     *              specify a currently occupied index position, the child object\n     *              that exists at that position and all higher positions are\n     *              moved up one position in the child list.\n     * @return The DisplayObject instance that you pass in the <code>child</code>\n     *         parameter.\n     * @throws ArgumentError Throws if the child is the same as the parent. Also\n     *                       throws if the caller is a child(or grandchild etc.)\n     *                       of the child being added.\n     * @throws RangeError    Throws if the index position does not exist in the\n     *                       child list.\n     * @event added Dispatched when a display object is added to the display\n     *              list.\n     */\n    DisplayObjectContainer.prototype.addChildAt = function (child, index) {\n        return this.addChildAtDepth(child, (index < this._children.length) ? this._children[index]._depthID : this.getNextHighestDepth(), false);\n    };\n    DisplayObjectContainer.prototype.addChildren = function () {\n        var childarray = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            childarray[_i - 0] = arguments[_i];\n        }\n        var len = childarray.length;\n        for (var i = 0; i < len; i++)\n            this.addChild(childarray[i]);\n    };\n    /**\n     *\n     */\n    DisplayObjectContainer.prototype.clone = function () {\n        var newInstance = new DisplayObjectContainer();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    DisplayObjectContainer.prototype.copyTo = function (newInstance) {\n        _super.prototype.copyTo.call(this, newInstance);\n        newInstance.mouseChildren = this._mouseChildren;\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            newInstance.addChild(this._children[i].clone());\n    };\n    /**\n     * Determines whether the specified display object is a child of the\n     * DisplayObjectContainer instance or the instance itself. The search\n     * includes the entire display list including this DisplayObjectContainer\n     * instance. Grandchildren, great-grandchildren, and so on each return\n     * <code>true</code>.\n     *\n     * @param child The child object to test.\n     * @return <code>true</code> if the <code>child</code> object is a child of\n     *         the DisplayObjectContainer or the container itself; otherwise\n     *         <code>false</code>.\n     */\n    DisplayObjectContainer.prototype.contains = function (child) {\n        return this._children.indexOf(child) >= 0;\n    };\n    /**\n     *\n     */\n    DisplayObjectContainer.prototype.disposeValues = function () {\n        for (var i = this._children.length - 1; i >= 0; i--)\n            this.removeChild(this._children[i]);\n        _super.prototype.disposeValues.call(this);\n    };\n    DisplayObjectContainer.prototype.getChildAtDepth = function (depth) {\n        return this._depth_childs[depth];\n    };\n    /**\n     * Returns the child display object instance that exists at the specified\n     * index.\n     *\n     * @param index The index position of the child object.\n     * @return The child display object at the specified index position.\n     * @throws RangeError    Throws if the index does not exist in the child\n     *                       list.\n     */\n    DisplayObjectContainer.prototype.getChildAt = function (index /*int*/) {\n        var child = this._children[index];\n        if (child == null)\n            throw new RangeError_1.default(\"Index does not exist in the child list of the caller\");\n        return child;\n    };\n    /**\n     * Returns the child display object that exists with the specified name. If\n     * more that one child display object has the specified name, the method\n     * returns the first object in the child list.\n     *\n     * <p>The <code>getChildAt()</code> method is faster than the\n     * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n     * accesses a child from a cached array, whereas the\n     * <code>getChildByName()</code> method has to traverse a linked list to\n     * access a child.</p>\n     *\n     * @param name The name of the child to return.\n     * @return The child display object with the specified name.\n     */\n    DisplayObjectContainer.prototype.getChildByName = function (name) {\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            if (this._children[i].name == name)\n                return this._children[i];\n        return null;\n    };\n    /**\n     * Returns the index position of a <code>child</code> DisplayObject instance.\n     *\n     * @param child The DisplayObject instance to identify.\n     * @return The index position of the child display object to identify.\n     * @throws ArgumentError Throws if the child parameter is not a child of this\n     *                       object.\n     */\n    DisplayObjectContainer.prototype.getChildIndex = function (child) {\n        var childIndex = this._children.indexOf(child);\n        if (childIndex == -1)\n            throw new ArgumentError_1.default(\"Child parameter is not a child of the caller\");\n        return childIndex;\n    };\n    DisplayObjectContainer.prototype.getNextHighestDepth = function () {\n        if (this._nextHighestDepthDirty)\n            this._updateNextHighestDepth();\n        return this._nextHighestDepth;\n    };\n    /**\n     * Returns an array of objects that lie under the specified point and are\n     * children(or grandchildren, and so on) of this DisplayObjectContainer\n     * instance. Any child objects that are inaccessible for security reasons are\n     * omitted from the returned array. To determine whether this security\n     * restriction affects the returned array, call the\n     * <code>areInaccessibleObjectsUnderPoint()</code> method.\n     *\n     * <p>The <code>point</code> parameter is in the coordinate space of the\n     * Stage, which may differ from the coordinate space of the display object\n     * container(unless the display object container is the Stage). You can use\n     * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n     * methods to convert points between these coordinate spaces.</p>\n     *\n     * @param point The point under which to look.\n     * @return An array of objects that lie under the specified point and are\n     *         children(or grandchildren, and so on) of this\n     *         DisplayObjectContainer instance.\n     */\n    DisplayObjectContainer.prototype.getObjectsUnderPoint = function (point) {\n        return new Array();\n    };\n    /**\n     * Removes the specified <code>child</code> DisplayObject instance from the\n     * child list of the DisplayObjectContainer instance. The <code>parent</code>\n     * property of the removed child is set to <code>null</code> , and the object\n     * is garbage collected if no other references to the child exist. The index\n     * positions of any display objects above the child in the\n     * DisplayObjectContainer are decreased by 1.\n     *\n     * <p>The garbage collector reallocates unused memory space. When a variable\n     * or object is no longer actively referenced or stored somewhere, the\n     * garbage collector sweeps through and wipes out the memory space it used to\n     * occupy if no other references to it exist.</p>\n     *\n     * @param child The DisplayObject instance to remove.\n     * @return The DisplayObject instance that you pass in the <code>child</code>\n     *         parameter.\n     * @throws ArgumentError Throws if the child parameter is not a child of this\n     *                       object.\n     */\n    DisplayObjectContainer.prototype.removeChild = function (child) {\n        if (child == null)\n            throw new ArgumentError_1.default(\"Parameter child cannot be null\");\n        this.removeChildAt(this.getChildIndex(child));\n        return child;\n    };\n    DisplayObjectContainer.prototype.removeChildAtDepth = function (depth /*int*/) {\n        return this.removeChildAt(this.getDepthIndexInternal(depth));\n    };\n    /**\n     * Removes a child DisplayObject from the specified <code>index</code>\n     * position in the child list of the DisplayObjectContainer. The\n     * <code>parent</code> property of the removed child is set to\n     * <code>null</code>, and the object is garbage collected if no other\n     * references to the child exist. The index positions of any display objects\n     * above the child in the DisplayObjectContainer are decreased by 1.\n     *\n     * <p>The garbage collector reallocates unused memory space. When a variable\n     * or object is no longer actively referenced or stored somewhere, the\n     * garbage collector sweeps through and wipes out the memory space it used to\n     * occupy if no other references to it exist.</p>\n     *\n     * @param index The child index of the DisplayObject to remove.\n     * @return The DisplayObject instance that was removed.\n     * @throws RangeError    Throws if the index does not exist in the child\n     *                       list.\n     * @throws SecurityError This child display object belongs to a sandbox to\n     *                       which the calling object does not have access. You\n     *                       can avoid this situation by having the child movie\n     *                       call the <code>Security.allowDomain()</code> method.\n     */\n    DisplayObjectContainer.prototype.removeChildAt = function (index /*int*/) {\n        var child = this.removeChildAtInternal(index);\n        child.iSetParent(null);\n        this._invalidateChildren();\n        return child;\n    };\n    /**\n     * Removes all <code>child</code> DisplayObject instances from the child list\n     * of the DisplayObjectContainer instance. The <code>parent</code> property\n     * of the removed children is set to <code>null</code>, and the objects are\n     * garbage collected if no other references to the children exist.\n     *\n     * The garbage collector reallocates unused memory space. When a variable or\n     * object is no longer actively referenced or stored somewhere, the garbage\n     * collector sweeps through and wipes out the memory space it used to occupy\n     * if no other references to it exist.\n     *\n     * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n     * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n     * @throws RangeError    Throws if the beginIndex or endIndex positions do\n     *                       not exist in the child list.\n     */\n    DisplayObjectContainer.prototype.removeChildren = function (beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = 0; }\n        if (endIndex === void 0) { endIndex = 2147483647; }\n        if (beginIndex < 0)\n            throw new RangeError_1.default(\"beginIndex is out of range of the child list\");\n        if (endIndex > this._children.length)\n            throw new RangeError_1.default(\"endIndex is out of range of the child list\");\n        for (var i = beginIndex; i < endIndex; i++)\n            this.removeChild(this._children[i]);\n    };\n    /**\n     * Changes the position of an existing child in the display object container.\n     * This affects the layering of child objects. For example, the following\n     * example shows three display objects, labeled a, b, and c, at index\n     * positions 0, 1, and 2, respectively:\n     *\n     * <p>When you use the <code>setChildIndex()</code> method and specify an\n     * index position that is already occupied, the only positions that change\n     * are those in between the display object's former and new position. All\n     * others will stay the same. If a child is moved to an index LOWER than its\n     * current index, all children in between will INCREASE by 1 for their index\n     * reference. If a child is moved to an index HIGHER than its current index,\n     * all children in between will DECREASE by 1 for their index reference. For\n     * example, if the display object container in the previous example is named\n     * <code>container</code>, you can swap the position of the display objects\n     * labeled a and b by calling the following code:</p>\n     *\n     * <p>This code results in the following arrangement of objects:</p>\n     *\n     * @param child The child DisplayObject instance for which you want to change\n     *              the index number.\n     * @param index The resulting index number for the <code>child</code> display\n     *              object.\n     * @throws ArgumentError Throws if the child parameter is not a child of this\n     *                       object.\n     * @throws RangeError    Throws if the index does not exist in the child\n     *                       list.\n     */\n    DisplayObjectContainer.prototype.setChildIndex = function (child, index /*int*/) {\n        //TODO\n    };\n    /**\n     * Swaps the z-order (front-to-back order) of the two specified child\n     * objects. All other child objects in the display object container remain in\n     * the same index positions.\n     *\n     * @param child1 The first child object.\n     * @param child2 The second child object.\n     * @throws ArgumentError Throws if either child parameter is not a child of\n     *                       this object.\n     */\n    DisplayObjectContainer.prototype.swapChildren = function (child1, child2) {\n        this.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2));\n    };\n    /**\n     * Swaps the z-order(front-to-back order) of the child objects at the two\n     * specified index positions in the child list. All other child objects in\n     * the display object container remain in the same index positions.\n     *\n     * @param index1 The index position of the first child object.\n     * @param index2 The index position of the second child object.\n     * @throws RangeError If either index does not exist in the child list.\n     */\n    DisplayObjectContainer.prototype.swapChildrenAt = function (index1, index2) {\n        var depth = this._children[index2]._depthID;\n        var child = this._children[index1];\n        this.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n        this.addChildAtDepth(child, depth);\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    DisplayObjectContainer.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        var box;\n        var numChildren = this._children.length;\n        if (numChildren > 0) {\n            var min;\n            var max;\n            var minX, minY, minZ;\n            var maxX, maxY, maxZ;\n            for (var i = 0; i < numChildren; ++i) {\n                box = this._children[i].getBox(this);\n                if (i == 0) {\n                    maxX = box.width + (minX = box.x);\n                    maxY = box.height + (minY = box.y);\n                    maxZ = box.depth + (minZ = box.z);\n                }\n                else {\n                    max = box.width + (min = box.x);\n                    if (min < minX)\n                        minX = min;\n                    if (max > maxX)\n                        maxX = max;\n                    max = box.height + (min = box.y);\n                    if (min < minY)\n                        minY = min;\n                    if (max > maxY)\n                        maxY = max;\n                    max = box.depth + (min = box.z);\n                    if (min < minZ)\n                        minZ = min;\n                    if (max > maxZ)\n                        maxZ = max;\n                }\n            }\n            this._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n            this._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n            this._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n        }\n        else {\n            this._pBoxBounds.setBoundIdentity();\n        }\n    };\n    /**\n     * @protected\n     */\n    DisplayObjectContainer.prototype.pInvalidateHierarchicalProperties = function (bitFlag) {\n        if (_super.prototype.pInvalidateHierarchicalProperties.call(this, bitFlag))\n            return true;\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            this._children[i].pInvalidateHierarchicalProperties(bitFlag);\n        return false;\n    };\n    /**\n     * @internal\n     */\n    DisplayObjectContainer.prototype._iSetScene = function (value, partition) {\n        _super.prototype._iSetScene.call(this, value, partition);\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            this._children[i]._iSetScene(value, partition);\n    };\n    /**\n     * @private\n     *\n     * @param child\n     */\n    DisplayObjectContainer.prototype.removeChildAtInternal = function (index) {\n        var child = this._children.splice(index, 1)[0];\n        //update next highest depth\n        if (this._nextHighestDepth == child._depthID + 1)\n            this._nextHighestDepthDirty = true;\n        delete this._depth_childs[child._depthID];\n        child._depthID = -16384;\n        return child;\n    };\n    DisplayObjectContainer.prototype.getDepthIndexInternal = function (depth /*int*/) {\n        if (!this._depth_childs[depth])\n            return -1;\n        return this._children.indexOf(this._depth_childs[depth]);\n    };\n    DisplayObjectContainer.prototype._updateNextHighestDepth = function () {\n        this._nextHighestDepthDirty = false;\n        this._nextHighestDepth = 0;\n        var len = this._children.length;\n        for (var i = 0; i < len; i++)\n            if (this._nextHighestDepth < this._children[i]._depthID)\n                this._nextHighestDepth = this._children[i]._depthID;\n        this._nextHighestDepth += 1;\n    };\n    DisplayObjectContainer.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        var numChildren = this._children.length;\n        for (var i = 0; i < numChildren; i++)\n            if (this._children[i].hitTestPoint(x, y, shapeFlag, masksFlag))\n                return true;\n        return false;\n    };\n    DisplayObjectContainer.prototype._updateMaskMode = function () {\n        if (this.maskMode)\n            this.mouseChildren = false;\n        _super.prototype._updateMaskMode.call(this);\n    };\n    DisplayObjectContainer.prototype._invalidateChildren = function () {\n        if (this._pIsContainer != Boolean(this._children.length)) {\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iUnregisterEntity(this);\n            this._pIsContainer = Boolean(this._children.length);\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iRegisterEntity(this);\n        }\n        this._pInvalidateBounds();\n    };\n    DisplayObjectContainer.assetType = \"[asset DisplayObjectContainer]\";\n    return DisplayObjectContainer;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DisplayObjectContainer;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"awayjs-core/lib/errors/ArgumentError\":undefined,\"awayjs-core/lib/errors/RangeError\":undefined}],\"awayjs-display/lib/display/DisplayObject\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar Sphere_1 = require(\"awayjs-core/lib/geom/Sphere\");\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar AlignmentMode_1 = require(\"../base/AlignmentMode\");\nvar OrientationMode_1 = require(\"../base/OrientationMode\");\nvar Transform_1 = require(\"../base/Transform\");\nvar PickingCollision_1 = require(\"../pick/PickingCollision\");\nvar DisplayObjectEvent_1 = require(\"../events/DisplayObjectEvent\");\nvar TransformEvent_1 = require(\"../events/TransformEvent\");\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n *\n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nvar DisplayObject = (function (_super) {\n    __extends(DisplayObject, _super);\n    /**\n     * Creates a new <code>DisplayObject</code> instance.\n     */\n    function DisplayObject() {\n        var _this = this;\n        _super.call(this);\n        this._queuedEvents = new Array();\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        this._pSceneTransform = new Matrix3D_1.default();\n        this._pIsEntity = false;\n        this._pIsContainer = false;\n        this._sessionID = -1;\n        this._depthID = -16384;\n        this._inverseSceneTransform = new Matrix3D_1.default();\n        this._scenePosition = new Vector3D_1.default();\n        this._explicitVisibility = true;\n        this._explicitMaskId = -1;\n        this._pImplicitVisibility = true;\n        this._pImplicitMaskId = -1;\n        this._pImplicitMaskIds = new Array();\n        this._explicitMouseEnabled = true;\n        this._pImplicitMouseEnabled = true;\n        this._orientationMatrix = new Matrix3D_1.default();\n        this._inheritColorTransform = false;\n        this._maskMode = false;\n        //temp vector used in global to local\n        this._tempVector3D = new Vector3D_1.default();\n        /**\n         *\n         */\n        this.alignmentMode = AlignmentMode_1.default.REGISTRATION_POINT;\n        /**\n         *\n         */\n        this.castsShadows = true;\n        /**\n         *\n         */\n        this.orientationMode = OrientationMode_1.default.DEFAULT;\n        /**\n         *\n         */\n        this.zOffset = 0;\n        //creation of associated transform object\n        this._transform = new Transform_1.default();\n        //setup transform listeners\n        this._transform.addEventListener(TransformEvent_1.default.INVALIDATE_MATRIX3D, function (event) { return _this._onInvalidateMatrix3D(event); });\n        this._transform.addEventListener(TransformEvent_1.default.INVALIDATE_COLOR_TRANSFORM, function (event) { return _this._onInvalidateColorTransform(event); });\n        //default bounds type\n        this._boundsType = BoundsType_1.default.AXIS_ALIGNED_BOX;\n    }\n    Object.defineProperty(DisplayObject.prototype, \"adapter\", {\n        /**\n         * adapter is used to provide MovieClip to scripts taken from different platforms\n         * setter typically managed by factory\n         */\n        get: function () {\n            return this._adapter;\n        },\n        set: function (value) {\n            this._adapter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"inheritColorTransform\", {\n        get: function () {\n            return this._inheritColorTransform;\n        },\n        set: function (value) {\n            if (this._inheritColorTransform == value)\n                return;\n            this._inheritColorTransform = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.COLOR_TRANSFORM);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"alpha\", {\n        /**\n         * Indicates the alpha transparency value of the object specified. Valid\n         * values are 0(fully transparent) to 1(fully opaque). The default value is\n         * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n         * even though they are invisible.\n         */\n        get: function () {\n            return this._transform.colorTransform ? this._transform.colorTransform.alphaMultiplier : 1;\n        },\n        set: function (value) {\n            if (!this._transform.colorTransform)\n                this._transform.colorTransform = new ColorTransform_1.default();\n            this._transform.colorTransform.alphaMultiplier = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"boundsType\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._boundsType;\n        },\n        set: function (value) {\n            if (this._boundsType == value)\n                return;\n            this._boundsType = value;\n            this.invalidate();\n            this._pInvalidateBounds();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"depth\", {\n        /**\n         * Indicates the depth of the display object, in pixels. The depth is\n         * calculated based on the bounds of the content of the display object. When\n         * you set the <code>depth</code> property, the <code>scaleZ</code> property\n         * is adjusted accordingly, as shown in the following code:\n         *\n         * <p>Except for TextField and Video objects, a display object with no\n         * content (such as an empty sprite) has a depth of 0, even if you try to\n         * set <code>depth</code> to a different value.</p>\n         */\n        get: function () {\n            return this.getBox().depth * this.scaleZ;\n        },\n        set: function (val) {\n            if (this._depth == val)\n                return;\n            this._depth = val;\n            this._setScaleZ(val / this.getBox().depth);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"eulers\", {\n        /**\n         * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n         */\n        get: function () {\n            if (!this._eulers)\n                this._eulers = new Vector3D_1.default();\n            this._eulers.x = this.rotationX;\n            this._eulers.y = this.rotationY;\n            this._eulers.z = this.rotationZ;\n            return this._eulers;\n        },\n        set: function (value) {\n            this.rotationX = value.x;\n            this.rotationY = value.y;\n            this.rotationZ = value.z;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"height\", {\n        /**\n         * An indexed array that contains each filter object currently associated\n         * with the display object. The flash.filters package contains several\n         * classes that define specific filters you can use.\n         *\n         * <p>Filters can be applied in Flash Professional at design time, or at run\n         * time by using ActionScript code. To apply a filter by using ActionScript,\n         * you must make a temporary copy of the entire <code>filters</code> array,\n         * modify the temporary array, then assign the value of the temporary array\n         * back to the <code>filters</code> array. You cannot directly add a new\n         * filter object to the <code>filters</code> array.</p>\n         *\n         * <p>To add a filter by using ActionScript, perform the following steps\n         * (assume that the target display object is named\n         * <code>myDisplayObject</code>):</p>\n         *\n         * <ol>\n         *   <li>Create a new filter object by using the constructor method of your\n         * chosen filter class.</li>\n         *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n         * to a temporary array, such as one named <code>myFilters</code>.</li>\n         *   <li>Add the new filter object to the <code>myFilters</code> temporary\n         * array.</li>\n         *   <li>Assign the value of the temporary array to the\n         * <code>myDisplayObject.filters</code> array.</li>\n         * </ol>\n         *\n         * <p>If the <code>filters</code> array is undefined, you do not need to use\n         * a temporary array. Instead, you can directly assign an array literal that\n         * contains one or more filter objects that you create. The first example in\n         * the Examples section adds a drop shadow filter by using code that handles\n         * both defined and undefined <code>filters</code> arrays.</p>\n         *\n         * <p>To modify an existing filter object, you must use the technique of\n         * modifying a copy of the <code>filters</code> array:</p>\n         *\n         * <ol>\n         *   <li>Assign the value of the <code>filters</code> array to a temporary\n         * array, such as one named <code>myFilters</code>.</li>\n         *   <li>Modify the property by using the temporary array,\n         * <code>myFilters</code>. For example, to set the quality property of the\n         * first filter in the array, you could use the following code:\n         * <code>myFilters[0].quality = 1;</code></li>\n         *   <li>Assign the value of the temporary array to the <code>filters</code>\n         * array.</li>\n         * </ol>\n         *\n         * <p>At load time, if a display object has an associated filter, it is\n         * marked to cache itself as a transparent bitmap. From this point forward,\n         * as long as the display object has a valid filter list, the player caches\n         * the display object as a bitmap. This source bitmap is used as a source\n         * image for the filter effects. Each display object usually has two bitmaps:\n         * one with the original unfiltered source display object and another for the\n         * final image after filtering. The final image is used when rendering. As\n         * long as the display object does not change, the final image does not need\n         * updating.</p>\n         *\n         * <p>The flash.filters package includes classes for filters. For example, to\n         * create a DropShadow filter, you would write:</p>\n         *\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n         *                       and the shader output type is not compatible with\n         *                       this operation(the shader must specify a\n         *                       <code>pixel4</code> output).\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n         *                       and the shader doesn't specify any image input or\n         *                       the first input is not an <code>image4</code> input.\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n         *                       and the shader specifies an image input that isn't\n         *                       provided.\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n         *                       ByteArray or Vector.<Number> instance as a shader\n         *                       input, and the <code>width</code> and\n         *                       <code>height</code> properties aren't specified for\n         *                       the ShaderInput object, or the specified values\n         *                       don't match the amount of data in the input data.\n         *                       See the <code>ShaderInput.input</code> property for\n         *                       more information.\n         */\n        //\t\tpublic filters:Array<Dynamic>;\n        /**\n         * Indicates the height of the display object, in pixels. The height is\n         * calculated based on the bounds of the content of the display object. When\n         * you set the <code>height</code> property, the <code>scaleY</code> property\n         * is adjusted accordingly, as shown in the following code:\n         *\n         * <p>Except for TextField and Video objects, a display object with no\n         * content (such as an empty sprite) has a height of 0, even if you try to\n         * set <code>height</code> to a different value.</p>\n         */\n        get: function () {\n            return this.getBox().height * this.scaleY;\n        },\n        set: function (val) {\n            if (this._height == val)\n                return;\n            this._height = val;\n            this._setScaleY(val / this.getBox().height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"index\", {\n        /**\n         * Indicates the instance container index of the DisplayObject. The object can be\n         * identified in the child list of its parent display object container by\n         * calling the <code>getChildByIndex()</code> method of the display object\n         * container.\n         *\n         * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n         */\n        get: function () {\n            if (this._pParent)\n                return this._pParent.getChildIndex(this);\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"inverseSceneTransform\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._inverseSceneTransformDirty) {\n                this._inverseSceneTransform.copyFrom(this.sceneTransform);\n                this._inverseSceneTransform.invert();\n                this._inverseSceneTransformDirty = false;\n            }\n            return this._inverseSceneTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"isEntity\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pIsEntity;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"isContainer\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pIsContainer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"loaderInfo\", {\n        /**\n         * Returns a LoaderInfo object containing information about loading the file\n         * to which this display object belongs. The <code>loaderInfo</code> property\n         * is defined only for the root display object of a SWF file or for a loaded\n         * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n         * <code>loaderInfo</code> object associated with the SWF file that contains\n         * a display object named <code>myDisplayObject</code>, use\n         * <code>myDisplayObject.root.loaderInfo</code>.\n         *\n         * <p>A large SWF file can monitor its download by calling\n         * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n         * func)</code>.</p>\n         */\n        get: function () {\n            return this._loaderInfo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"maskMode\", {\n        get: function () {\n            return this._maskMode;\n        },\n        set: function (value) {\n            if (this._maskMode == value)\n                return;\n            this._maskMode = value;\n            this._explicitMaskId = value ? this.id : -1;\n            this._updateMaskMode();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mouseEnabled\", {\n        /**\n         * Specifies whether this object receives mouse, or other user input,\n         * messages. The default value is <code>true</code>, which means that by\n         * default any InteractiveObject instance that is on the display list\n         * receives mouse events or other user input events. If\n         * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n         * not receive any mouse events(or other user input events like keyboard\n         * events). Any children of this instance on the display list are not\n         * affected. To change the <code>mouseEnabled</code> behavior for all\n         * children of an object on the display list, use\n         * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n         *\n         * <p> No event is dispatched by setting this property. You must use the\n         * <code>addEventListener()</code> method to create interactive\n         * functionality.</p>\n         */\n        get: function () {\n            return this._explicitMouseEnabled;\n        },\n        set: function (value) {\n            if (this._explicitMouseEnabled == value)\n                return;\n            this._explicitMouseEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mouseX\", {\n        /**\n         * Indicates the x coordinate of the mouse or user input device position, in\n         * pixels.\n         *\n         * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n         * coordinate will reflect the non-rotated object.</p>\n         */\n        get: function () {\n            return this._mouseX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mouseY\", {\n        /**\n         * Indicates the y coordinate of the mouse or user input device position, in\n         * pixels.\n         *\n         * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n         * coordinate will reflect the non-rotated object.</p>\n         */\n        get: function () {\n            return this._mouseY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"name\", {\n        /**\n         * Indicates the instance name of the DisplayObject. The object can be\n         * identified in the child list of its parent display object container by\n         * calling the <code>getChildByName()</code> method of the display object\n         * container.\n         *\n         * @throws IllegalOperationError If you are attempting to set this property\n         *                               on an object that was placed on the timeline\n         *                               in the Flash authoring tool.\n         */\n        get: function () {\n            return this._pName;\n        },\n        set: function (value) {\n            this._pName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"parent\", {\n        /**\n         * Indicates the DisplayObjectContainer object that contains this display\n         * object. Use the <code>parent</code> property to specify a relative path to\n         * display objects that are above the current display object in the display\n         * list hierarchy.\n         *\n         * <p>You can use <code>parent</code> to move up multiple levels in the\n         * display list as in the following:</p>\n         *\n         * @throws SecurityError The parent display object belongs to a security\n         *                       sandbox to which you do not have access. You can\n         *                       avoid this situation by having the parent movie call\n         *                       the <code>Security.allowDomain()</code> method.\n         */\n        get: function () {\n            return this._pParent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"partition\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._explicitPartition;\n        },\n        set: function (value) {\n            if (this._explicitPartition == value)\n                return;\n            this._explicitPartition = value;\n            this._iSetScene(this._pScene, this._pParent ? this._pParent._iAssignedPartition : null);\n            this.dispatchEvent(new DisplayObjectEvent_1.default(DisplayObjectEvent_1.default.PARTITION_CHANGED, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"pivot\", {\n        /**\n         * Defines the local point around which the object rotates.\n         */\n        get: function () {\n            return this._pivot;\n        },\n        set: function (pivot) {\n            if (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n                return;\n            if (!pivot) {\n                this._pivot = null;\n                this._pivotScale = null;\n            }\n            else {\n                if (!this._pivot)\n                    this._pivot = new Vector3D_1.default();\n                this._pivot.x = pivot.x;\n                this._pivot.y = pivot.y;\n                this._pivot.z = pivot.z;\n            }\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.SCENE_TRANSFORM);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"root\", {\n        /**\n         * For a display object in a loaded SWF file, the <code>root</code> property\n         * is the top-most display object in the portion of the display list's tree\n         * structure represented by that SWF file. For a Bitmap object representing a\n         * loaded image file, the <code>root</code> property is the Bitmap object\n         * itself. For the instance of the main class of the first SWF file loaded,\n         * the <code>root</code> property is the display object itself. The\n         * <code>root</code> property of the Scene object is the Scene object itself.\n         * The <code>root</code> property is set to <code>null</code> for any display\n         * object that has not been added to the display list, unless it has been\n         * added to a display object container that is off the display list but that\n         * is a child of the top-most display object in a loaded SWF file.\n         *\n         * <p>For example, if you create a new Sprite object by calling the\n         * <code>Sprite()</code> constructor method, its <code>root</code> property\n         * is <code>null</code> until you add it to the display list(or to a display\n         * object container that is off the display list but that is a child of the\n         * top-most display object in a SWF file).</p>\n         *\n         * <p>For a loaded SWF file, even though the Loader object used to load the\n         * file may not be on the display list, the top-most display object in the\n         * SWF file has its <code>root</code> property set to itself. The Loader\n         * object does not have its <code>root</code> property set until it is added\n         * as a child of a display object for which the <code>root</code> property is\n         * set.</p>\n         */\n        get: function () {\n            return this._root;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotationX\", {\n        /**\n         * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n         * from its original orientation relative to the 3D parent container. Values\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\n         * represent counterclockwise rotation. Values outside this range are added\n         * to or subtracted from 360 to obtain a value within the range.\n         */\n        get: function () {\n            return this._transform.rotation.x * MathConsts_1.default.RADIANS_TO_DEGREES;\n        },\n        set: function (val) {\n            if (this.rotationX == val)\n                return;\n            this._transform.rotation.x = val * MathConsts_1.default.DEGREES_TO_RADIANS;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotationY\", {\n        /**\n         * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n         * from its original orientation relative to the 3D parent container. Values\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\n         * represent counterclockwise rotation. Values outside this range are added\n         * to or subtracted from 360 to obtain a value within the range.\n         */\n        get: function () {\n            return this._transform.rotation.y * MathConsts_1.default.RADIANS_TO_DEGREES;\n        },\n        set: function (val) {\n            if (this.rotationY == val)\n                return;\n            this._transform.rotation.y = val * MathConsts_1.default.DEGREES_TO_RADIANS;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotationZ\", {\n        /**\n         * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n         * from its original orientation relative to the 3D parent container. Values\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\n         * represent counterclockwise rotation. Values outside this range are added\n         * to or subtracted from 360 to obtain a value within the range.\n         */\n        get: function () {\n            return this._transform.rotation.z * MathConsts_1.default.RADIANS_TO_DEGREES;\n        },\n        set: function (val) {\n            if (this.rotationZ == val)\n                return;\n            this._transform.rotation.z = val * MathConsts_1.default.DEGREES_TO_RADIANS;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scaleX\", {\n        /**\n         * Indicates the horizontal scale(percentage) of the object as applied from\n         * the registration point. The default registration point is(0,0). 1.0\n         * equals 100% scale.\n         *\n         * <p>Scaling the local coordinate system changes the <code>x</code> and\n         * <code>y</code> property values, which are defined in whole pixels. </p>\n         */\n        get: function () {\n            return this._transform.scale.x;\n        },\n        set: function (val) {\n            //remove absolute width\n            this._width = null;\n            this._setScaleX(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scaleY\", {\n        /**\n         * Indicates the vertical scale(percentage) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         * 1.0 is 100% scale.\n         *\n         * <p>Scaling the local coordinate system changes the <code>x</code> and\n         * <code>y</code> property values, which are defined in whole pixels. </p>\n         */\n        get: function () {\n            return this._transform.scale.y;\n        },\n        set: function (val) {\n            //remove absolute height\n            this._height = null;\n            this._setScaleY(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scaleZ\", {\n        /**\n         * Indicates the depth scale(percentage) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         * 1.0 is 100% scale.\n         *\n         * <p>Scaling the local coordinate system changes the <code>x</code>,\n         * <code>y</code> and <code>z</code> property values, which are defined in\n         * whole pixels. </p>\n         */\n        get: function () {\n            return this._transform.scale.z;\n        },\n        set: function (val) {\n            //remove absolute depth\n            this._depth = null;\n            this._setScaleZ(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skewX\", {\n        /**\n         * Indicates the horizontal skew(angle) of the object as applied from\n         * the registration point. The default registration point is(0,0).\n         */\n        get: function () {\n            return this._transform.skew.x;\n        },\n        set: function (val) {\n            if (this.skewX == val)\n                return;\n            this._transform.skew.x = val;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skewY\", {\n        /**\n         * Indicates the vertical skew(angle) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         */\n        get: function () {\n            return this._transform.skew.y;\n        },\n        set: function (val) {\n            if (this.skewY == val)\n                return;\n            this._transform.skew.y = val;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skewZ\", {\n        /**\n         * Indicates the depth skew(angle) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         */\n        get: function () {\n            return this._transform.skew.z;\n        },\n        set: function (val) {\n            if (this.skewZ == val)\n                return;\n            this._transform.skew.z = val;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scene\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pScene;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scenePosition\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._scenePositionDirty) {\n                if (this._pivot && this.alignmentMode == AlignmentMode_1.default.PIVOT_POINT) {\n                    this._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n                }\n                else {\n                    this.sceneTransform.copyColumnTo(3, this._scenePosition);\n                }\n                this._scenePositionDirty = false;\n            }\n            return this._scenePosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"sceneTransform\", {\n        get: function () {\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.SCENE_TRANSFORM)\n                this.pUpdateSceneTransform();\n            return this._pSceneTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"shaderPickingDetails\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._shaderPickingDetails;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"debugVisible\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._debugVisible;\n        },\n        set: function (value) {\n            if (value == this._debugVisible)\n                return;\n            this._debugVisible = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"transform\", {\n        /**\n         * An object with properties pertaining to a display object's matrix, color\n         * transform, and pixel bounds. The specific properties  -  matrix,\n         * colorTransform, and three read-only properties\n         * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n         * and <code>pixelBounds</code>)  -  are described in the entry for the\n         * Transform class.\n         *\n         * <p>Each of the transform object's properties is itself an object. This\n         * concept is important because the only way to set new values for the matrix\n         * or colorTransform objects is to create a new object and copy that object\n         * into the transform.matrix or transform.colorTransform property.</p>\n         *\n         * <p>For example, to increase the <code>tx</code> value of a display\n         * object's matrix, you must make a copy of the entire matrix object, then\n         * copy the new object into the matrix property of the transform object:</p>\n         * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n         * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n         * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n         *\n         * <p>You cannot directly set the <code>tx</code> property. The following\n         * code has no effect on <code>myDisplayObject</code>: </p>\n         * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n         * 10; </code></pre>\n         *\n         * <p>You can also copy an entire transform object and assign it to another\n         * display object's transform property. For example, the following code\n         * copies the entire transform object from <code>myOldDisplayObj</code> to\n         * <code>myNewDisplayObj</code>:</p>\n         * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n         *\n         * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n         * same values for its matrix, color transform, and pixel bounds as the old\n         * display object, <code>myOldDisplayObj</code>.</p>\n         *\n         * <p>Note that AIR for TV devices use hardware acceleration, if it is\n         * available, for color transforms.</p>\n         */\n        get: function () {\n            return this._transform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"visible\", {\n        /**\n         * Whether or not the display object is visible. Display objects that are not\n         * visible are disabled. For example, if <code>visible=false</code> for an\n         * InteractiveObject instance, it cannot be clicked.\n         */\n        get: function () {\n            return this._explicitVisibility;\n        },\n        set: function (value) {\n            if (this._explicitVisibility == value)\n                return;\n            this._explicitVisibility = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.VISIBLE);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"masks\", {\n        get: function () {\n            return this._explicitMasks;\n        },\n        set: function (value) {\n            if (this._explicitMasks == value)\n                return;\n            this._explicitMasks = value;\n            //make sure maskMode is set to true for all masks\n            if (value != null && value.length) {\n                var len = value.length;\n                for (var i = 0; i < len; i++)\n                    value[i].maskMode = true;\n            }\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.MASKS);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"width\", {\n        /**\n         * Indicates the width of the display object, in pixels. The width is\n         * calculated based on the bounds of the content of the display object. When\n         * you set the <code>width</code> property, the <code>scaleX</code> property\n         * is adjusted accordingly, as shown in the following code:\n         *\n         * <p>Except for TextField and Video objects, a display object with no\n         * content(such as an empty sprite) has a width of 0, even if you try to set\n         * <code>width</code> to a different value.</p>\n         */\n        get: function () {\n            return this.getBox().width * this.scaleX;\n        },\n        set: function (val) {\n            if (this._width == val)\n                return;\n            this._width = val;\n            this._setScaleX(val / this.getBox().width);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"x\", {\n        /**\n         * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n         * to the local coordinates of the parent DisplayObjectContainer. If the\n         * object is inside a DisplayObjectContainer that has transformations, it is\n         * in the local coordinate system of the enclosing DisplayObjectContainer.\n         * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n         * DisplayObjectContainer's children inherit a coordinate system that is\n         * rotated 90° counterclockwise. The object's coordinates refer to the\n         * registration point position.\n         */\n        get: function () {\n            return this._transform.position.x;\n        },\n        set: function (val) {\n            if (this._transform.position.x == val)\n                return;\n            this._transform.matrix3D.rawData[12] = val;\n            this._transform.invalidatePosition();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"y\", {\n        /**\n         * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n         * to the local coordinates of the parent DisplayObjectContainer. If the\n         * object is inside a DisplayObjectContainer that has transformations, it is\n         * in the local coordinate system of the enclosing DisplayObjectContainer.\n         * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n         * DisplayObjectContainer's children inherit a coordinate system that is\n         * rotated 90° counterclockwise. The object's coordinates refer to the\n         * registration point position.\n         */\n        get: function () {\n            return this._transform.position.y;\n        },\n        set: function (val) {\n            if (this._transform.position.y == val)\n                return;\n            this._transform.matrix3D.rawData[13] = val;\n            this._transform.invalidatePosition();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"z\", {\n        /**\n         * Indicates the z coordinate position along the z-axis of the DisplayObject\n         * instance relative to the 3D parent container. The z property is used for\n         * 3D coordinates, not screen or pixel coordinates.\n         *\n         * <p>When you set a <code>z</code> property for a display object to\n         * something other than the default value of <code>0</code>, a corresponding\n         * Matrix3D object is automatically created. for adjusting a display object's\n         * position and orientation in three dimensions. When working with the\n         * z-axis, the existing behavior of x and y properties changes from screen or\n         * pixel coordinates to positions relative to the 3D parent container.</p>\n         *\n         * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n         * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n         * wherever the 3D projection calculation puts it. The calculation is:</p>\n         *\n         * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n         * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n         */\n        get: function () {\n            return this._transform.position.z;\n        },\n        set: function (val) {\n            if (this._transform.position.z == val)\n                return;\n            this._transform.matrix3D.rawData[14] = val;\n            this._transform.invalidatePosition();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    DisplayObject.prototype.addEventListener = function (type, listener) {\n        _super.prototype.addEventListener.call(this, type, listener);\n        switch (type) {\n            case DisplayObjectEvent_1.default.SCENE_CHANGED:\n                this._listenToSceneChanged = true;\n                break;\n            case DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED:\n                this._listenToSceneTransformChanged = true;\n                break;\n        }\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.clone = function () {\n        var newInstance = new DisplayObject();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    DisplayObject.prototype.copyTo = function (newInstance) {\n        newInstance.partition = this._explicitPartition;\n        newInstance.boundsType = this._boundsType;\n        newInstance.pivot = this._pivot;\n        newInstance.name = this._pName;\n        newInstance.mouseEnabled = this._explicitMouseEnabled;\n        newInstance.extra = this.extra;\n        newInstance.maskMode = this._maskMode;\n        newInstance.castsShadows = this.castsShadows;\n        if (this._explicitMasks)\n            newInstance.masks = this._explicitMasks;\n        if (this._adapter)\n            newInstance.adapter = this._adapter.clone(newInstance);\n        newInstance._transform.matrix3D = this._transform.matrix3D;\n        if (this._transform.colorTransform)\n            newInstance.transform.colorTransform = this._transform.colorTransform.clone();\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.dispose = function () {\n        this.disposeValues();\n    };\n    DisplayObject.prototype.disposeValues = function () {\n        if (this._pParent)\n            this._pParent.removeChild(this);\n        //if (this._adapter) {\n        //\tthis._adapter.dispose();\n        //\tthis._adapter = null;\n        //}\n        //this._pos = null;\n        //this._rot = null;\n        //this._sca = null;\n        //this._ske = null;\n        //this._transformComponents = null;\n        //this._transform.dispose();\n        //this._transform = null;\n        //\n        //this._matrix3D = null;\n        //this._pSceneTransform = null;\n        //this._inverseSceneTransform = null;\n        this._explicitMasks = null;\n    };\n    /**\n     * Returns a rectangle that defines the area of the display object relative\n     * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n     * Consider the following code, which shows how the rectangle returned can\n     * vary depending on the <code>targetCoordinateSpace</code> parameter that\n     * you pass to the method:\n     *\n     * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n     * <code>globalToLocal()</code> methods to convert the display object's local\n     * coordinates to display coordinates, or display coordinates to local\n     * coordinates, respectively.</p>\n     *\n     * <p>The <code>getBounds()</code> method is similar to the\n     * <code>getRect()</code> method; however, the Rectangle returned by the\n     * <code>getBounds()</code> method includes any strokes on shapes, whereas\n     * the Rectangle returned by the <code>getRect()</code> method does not. For\n     * an example, see the description of the <code>getRect()</code> method.</p>\n     *\n     * @param targetCoordinateSpace The display object that defines the\n     *                              coordinate system to use.\n     * @return The rectangle that defines the area of the display object relative\n     *         to the <code>targetCoordinateSpace</code> object's coordinate\n     *         system.\n     */\n    DisplayObject.prototype.getBounds = function (targetCoordinateSpace) {\n        return this._bounds; //TODO\n    };\n    /**\n     * Returns a rectangle that defines the boundary of the display object, based\n     * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n     * parameter, excluding any strokes on shapes. The values that the\n     * <code>getRect()</code> method returns are the same or smaller than those\n     * returned by the <code>getBounds()</code> method.\n     *\n     * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n     * <code>globalToLocal()</code> methods to convert the display object's local\n     * coordinates to Scene coordinates, or Scene coordinates to local\n     * coordinates, respectively.</p>\n     *\n     * @param targetCoordinateSpace The display object that defines the\n     *                              coordinate system to use.\n     * @return The rectangle that defines the area of the display object relative\n     *         to the <code>targetCoordinateSpace</code> object's coordinate\n     *         system.\n     */\n    DisplayObject.prototype.getRect = function (targetCoordinateSpace) {\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\n        return this._bounds; //TODO\n    };\n    DisplayObject.prototype.getBox = function (targetCoordinateSpace) {\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\n        if (this._iSourcePrefab)\n            this._iSourcePrefab._iValidate();\n        //TODO targetCoordinateSpace\n        if (this._boxBoundsInvalid) {\n            this._pUpdateBoxBounds();\n            //scale updates if absolute dimensions are detected\n            if (this._width != null)\n                this._setScaleX(this._width / this._pBoxBounds.width);\n            if (this._height != null)\n                this._setScaleY(this._height / this._pBoxBounds.height);\n            if (this._depth != null)\n                this._setScaleZ(this._depth / this._pBoxBounds.depth);\n        }\n        if (targetCoordinateSpace == null || targetCoordinateSpace == this)\n            return this._pBoxBounds;\n        if (targetCoordinateSpace == this._pParent)\n            return this._transform.matrix3D.transformBox(this._pBoxBounds);\n        else\n            return targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n    };\n    DisplayObject.prototype.getSphere = function (targetCoordinateSpace) {\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\n        if (this._iSourcePrefab)\n            this._iSourcePrefab._iValidate();\n        if (this._sphereBoundsInvalid)\n            this._pUpdateSphereBounds();\n        return this._pSphereBounds;\n    };\n    /**\n     * Converts the <code>point</code> object from the Scene(global) coordinates\n     * to the display object's(local) coordinates.\n     *\n     * <p>To use this method, first create an instance of the Point class. The\n     * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n     * because they relate to the origin(0,0) of the main display area. Then\n     * pass the Point instance as the parameter to the\n     * <code>globalToLocal()</code> method. The method returns a new Point object\n     * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n     * object instead of the origin of the Scene.</p>\n     *\n     * @param point An object created with the Point class. The Point object\n     *              specifies the <i>x</i> and <i>y</i> coordinates as\n     *              properties.\n     * @return A Point object with coordinates relative to the display object.\n     */\n    DisplayObject.prototype.globalToLocal = function (point, target) {\n        if (target === void 0) { target = null; }\n        this._tempVector3D.setTo(point.x, point.y, 0);\n        var pos = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n        if (!target)\n            target = new Point_1.default();\n        target.x = pos.x;\n        target.y = pos.y;\n        return target;\n    };\n    /**\n     * Converts a two-dimensional point from the Scene(global) coordinates to a\n     * three-dimensional display object's(local) coordinates.\n     *\n     * <p>To use this method, first create an instance of the Vector3D class. The x,\n     * y and z values that you assign to the Vector3D object represent global\n     * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n     * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n     * <code>position</code> parameter.\n     * The method returns three-dimensional coordinates as a Vector3D object\n     * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n     * are relative to the origin of the three-dimensional display object.</p>\n     *\n     * @param point A Vector3D object representing global x, y and z coordinates in\n     *              the scene.\n     * @return A Vector3D object with coordinates relative to the three-dimensional\n     *         display object.\n     */\n    DisplayObject.prototype.globalToLocal3D = function (position) {\n        return this.inverseSceneTransform.transformVector(position);\n    };\n    /**\n     * Evaluates the bounding box of the display object to see if it overlaps or\n     * intersects with the bounding box of the <code>obj</code> display object.\n     *\n     * @param obj The display object to test against.\n     * @return <code>true</code> if the bounding boxes of the display objects\n     *         intersect; <code>false</code> if not.\n     */\n    DisplayObject.prototype.hitTestObject = function (obj) {\n        var objBox = obj.getBox();\n        if (!objBox)\n            return false;\n        var topLeft = new Point_1.default(objBox.x, objBox.y);\n        var bottomLeft = new Point_1.default(objBox.x, objBox.y - objBox.height);\n        var topRight = new Point_1.default(objBox.x + objBox.width, objBox.y);\n        var bottomRight = new Point_1.default(objBox.x + objBox.width, objBox.y - objBox.height);\n        topLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n        bottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n        topRight = this.globalToLocal(obj.localToGlobal(topRight));\n        bottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n        var box = this.getBox();\n        if (!box)\n            return false;\n        //first check all points against targer box\n        if (topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom)\n            return true;\n        if (bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom)\n            return true;\n        if (topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom)\n            return true;\n        if (bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom)\n            return true;\n        //now test against obj box\n        var n0x = topRight.y - topLeft.y;\n        var n0y = -(topRight.x - topLeft.x);\n        var n1x = bottomRight.y - topRight.y;\n        var n1y = -(bottomRight.x - topRight.x);\n        var n2x = bottomLeft.y - bottomRight.y;\n        var n2y = -(bottomLeft.x - bottomRight.x);\n        var n3x = topLeft.y - bottomLeft.y;\n        var n3y = -(topLeft.x - bottomLeft.x);\n        var p0x = box.left - topLeft.x;\n        var p0y = box.top - topLeft.y;\n        var p1x = box.left - topRight.x;\n        var p1y = box.top - topRight.y;\n        var p2x = box.left - bottomRight.x;\n        var p2y = box.top - bottomRight.y;\n        var p3x = box.left - bottomLeft.x;\n        var p3y = box.top - bottomLeft.y;\n        var dot0 = (n0x * p0x) + (n0y * p0y);\n        var dot1 = (n1x * p1x) + (n1y * p1y);\n        var dot2 = (n2x * p2x) + (n2y * p2y);\n        var dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if topLeft is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        p0x = box.right - topLeft.x;\n        p0y = box.top - topLeft.y;\n        p1x = box.right - topRight.x;\n        p1y = box.top - topRight.y;\n        p2x = box.right - bottomRight.x;\n        p2y = box.top - bottomRight.y;\n        p3x = box.right - bottomLeft.x;\n        p3y = box.top - bottomLeft.y;\n        dot0 = (n0x * p0x) + (n0y * p0y);\n        dot1 = (n1x * p1x) + (n1y * p1y);\n        dot2 = (n2x * p2x) + (n2y * p2y);\n        dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if topRight is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        p0x = box.left - topLeft.x;\n        p0y = box.bottom - topLeft.y;\n        p1x = box.left - topRight.x;\n        p1y = box.bottom - topRight.y;\n        p2x = box.left - bottomRight.x;\n        p2y = box.bottom - bottomRight.y;\n        p3x = box.left - bottomLeft.x;\n        p3y = box.bottom - bottomLeft.y;\n        dot0 = (n0x * p0x) + (n0y * p0y);\n        dot1 = (n1x * p1x) + (n1y * p1y);\n        dot2 = (n2x * p2x) + (n2y * p2y);\n        dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if bottomLeft is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        p0x = box.right - topLeft.x;\n        p0y = box.bottom - topLeft.y;\n        p1x = box.right - topRight.x;\n        p1y = box.bottom - topRight.y;\n        p2x = box.right - bottomRight.x;\n        p2y = box.bottom - bottomRight.y;\n        p3x = box.right - bottomLeft.x;\n        p3y = box.bottom - bottomLeft.y;\n        dot0 = (n0x * p0x) + (n0y * p0y);\n        dot1 = (n1x * p1x) + (n1y * p1y);\n        dot2 = (n2x * p2x) + (n2y * p2y);\n        dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if bottomRight is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        return false; //TODO\n    };\n    /**\n     * Evaluates the display object to see if it overlaps or intersects with the\n     * point specified by the <code>x</code> and <code>y</code> parameters. The\n     * <code>x</code> and <code>y</code> parameters specify a point in the\n     * coordinate space of the Scene, not the display object container that\n     * contains the display object(unless that display object container is the\n     * Scene).\n     *\n     * @param x         The <i>x</i> coordinate to test against this object.\n     * @param y         The <i>y</i> coordinate to test against this object.\n     * @param shapeFlag Whether to check against the actual pixels of the object\n     *                 (<code>true</code>) or the bounding box\n     *                 (<code>false</code>).\n     * @param maskFlag Whether to check against the object when it is used as mask\n     *                 (<code>false</code>).\n     * @return <code>true</code> if the display object overlaps or intersects\n     *         with the specified point; <code>false</code> otherwise.\n     */\n    DisplayObject.prototype.hitTestPoint = function (x, y, shapeFlag, masksFlag) {\n        if (shapeFlag === void 0) { shapeFlag = false; }\n        if (masksFlag === void 0) { masksFlag = false; }\n        if (!this._pImplicitVisibility)\n            return;\n        if (this._pImplicitMaskId != -1 && !masksFlag)\n            return;\n        if (this._explicitMasks) {\n            var numMasks = this._explicitMasks.length;\n            var maskHit = false;\n            for (var i = 0; i < numMasks; i++) {\n                if (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n                    maskHit = true;\n                    break;\n                }\n            }\n            if (!maskHit)\n                return false;\n        }\n        return this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n    };\n    DisplayObject.prototype.isMask = function () {\n        return this._explicitMaskId == -1;\n    };\n    /**\n     * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n     *\n     * @param    target        The vector defining the point to be looked at\n     * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n     */\n    DisplayObject.prototype.lookAt = function (target, upAxis) {\n        if (upAxis === void 0) { upAxis = null; }\n        var yAxis;\n        var zAxis;\n        var xAxis;\n        var raw;\n        if (upAxis == null)\n            upAxis = Vector3D_1.default.Y_AXIS;\n        else\n            upAxis.normalize();\n        zAxis = target.subtract(this._transform.position);\n        zAxis.normalize();\n        xAxis = upAxis.crossProduct(zAxis);\n        xAxis.normalize();\n        if (xAxis.length < 0.05) {\n            xAxis.x = upAxis.y;\n            xAxis.y = upAxis.x;\n            xAxis.z = 0;\n            xAxis.normalize();\n        }\n        yAxis = zAxis.crossProduct(xAxis);\n        raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        raw[0] = xAxis.x;\n        raw[1] = xAxis.y;\n        raw[2] = xAxis.z;\n        raw[3] = 0;\n        raw[4] = yAxis.x;\n        raw[5] = yAxis.y;\n        raw[6] = yAxis.z;\n        raw[7] = 0;\n        raw[8] = zAxis.x;\n        raw[9] = zAxis.y;\n        raw[10] = zAxis.z;\n        raw[11] = 0;\n        var m = new Matrix3D_1.default();\n        m.copyRawDataFrom(raw);\n        var vec = m.decompose()[1];\n        this.rotationX = vec.x * MathConsts_1.default.RADIANS_TO_DEGREES;\n        this.rotationY = vec.y * MathConsts_1.default.RADIANS_TO_DEGREES;\n        this.rotationZ = vec.z * MathConsts_1.default.RADIANS_TO_DEGREES;\n    };\n    /**\n     * Converts the <code>point</code> object from the display object's(local)\n     * coordinates to the Scene(global) coordinates.\n     *\n     * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n     * coordinates from values that are relative to the origin(0,0) of a\n     * specific display object(local coordinates) to values that are relative to\n     * the origin of the Scene(global coordinates).</p>\n     *\n     * <p>To use this method, first create an instance of the Point class. The\n     * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n     * because they relate to the origin of the display object.</p>\n     *\n     * <p>You then pass the Point instance that you created as the parameter to\n     * the <code>localToGlobal()</code> method. The method returns a new Point\n     * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n     * Scene instead of the origin of the display object.</p>\n     *\n     * @param point The name or identifier of a point created with the Point\n     *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n     *              properties.\n     * @return A Point object with coordinates relative to the Scene.\n     */\n    DisplayObject.prototype.localToGlobal = function (point, target) {\n        if (target === void 0) { target = null; }\n        this._tempVector3D.setTo(point.x, point.y, 0);\n        var pos = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n        if (!target)\n            target = new Point_1.default();\n        target.x = pos.x;\n        target.y = pos.y;\n        return target;\n    };\n    /**\n     * Converts a three-dimensional point of the three-dimensional display\n     * object's(local) coordinates to a three-dimensional point in the Scene\n     * (global) coordinates.\n     *\n     * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n     * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n     * a specific display object(local coordinates) to values that are relative to\n     * the origin of the Scene(global coordinates).</p>\n     *\n     * <p>To use this method, first create an instance of the Point class. The\n     * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n     * because they relate to the origin of the display object.</p>\n     *\n     * <p>You then pass the Vector3D instance that you created as the parameter to\n     * the <code>localToGlobal3D()</code> method. The method returns a new\n     * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n     * the origin of the Scene instead of the origin of the display object.</p>\n     *\n     * @param position A Vector3D object containing either a three-dimensional\n     *                position or the coordinates of the three-dimensional\n     *                display object.\n     * @return A Vector3D object representing a three-dimensional position in\n     *         the Scene.\n     */\n    DisplayObject.prototype.localToGlobal3D = function (position) {\n        return this.sceneTransform.transformVector(position);\n    };\n    /**\n     * Moves the local point around which the object rotates.\n     *\n     * @param    dx        The amount of movement along the local x axis.\n     * @param    dy        The amount of movement along the local y axis.\n     * @param    dz        The amount of movement along the local z axis.\n     */\n    DisplayObject.prototype.movePivot = function (dx, dy, dz) {\n        if (dx == 0 && dy == 0 && dz == 0)\n            return;\n        this._pivot.x += dx;\n        this._pivot.y += dy;\n        this._pivot.z += dz;\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.SCENE_TRANSFORM);\n    };\n    DisplayObject.prototype.reset = function () {\n        this.visible = true;\n        if (this._transform.matrix3D)\n            this._transform.clearMatrix3D();\n        if (this._transform.colorTransform)\n            this._transform.clearColorTransform();\n        //this.name=\"\";\n        this.masks = null;\n        this.maskMode = false;\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.getRenderSceneTransform = function (cameraTransform) {\n        if (this.orientationMode == OrientationMode_1.default.CAMERA_PLANE) {\n            var comps = cameraTransform.decompose();\n            var scale = comps[3];\n            comps[0].copyFrom(this.scenePosition);\n            scale.x = this.scaleX;\n            scale.y = this.scaleY;\n            scale.z = this.scaleZ;\n            this._orientationMatrix.recompose(comps);\n            //add in case of pivot\n            if (this._pivot && this.alignmentMode == AlignmentMode_1.default.PIVOT_POINT)\n                this._orientationMatrix.prependTranslation(-this._pivot.x / this.scaleX, -this._pivot.y / this.scaleY, -this._pivot.z / this.scaleZ);\n            return this._orientationMatrix;\n        }\n        return this.sceneTransform;\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.removeEventListener = function (type, listener) {\n        _super.prototype.removeEventListener.call(this, type, listener);\n        if (this.hasEventListener(type))\n            return;\n        switch (type) {\n            case DisplayObjectEvent_1.default.SCENE_CHANGED:\n                this._listenToSceneChanged = false;\n                break;\n            case DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED:\n                this._listenToSceneTransformChanged = true;\n                break;\n        }\n    };\n    Object.defineProperty(DisplayObject.prototype, \"_iAssignedPartition\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            return this._pImplicitPartition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"_iPickingCollision\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            if (!this._pickingCollision)\n                this._pickingCollision = new PickingCollision_1.default(this);\n            return this._pickingCollision;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    DisplayObject.prototype.iSetParent = function (value) {\n        this._pParent = value;\n        if (value)\n            this._iSetScene(value._pScene, value._iAssignedPartition);\n        else\n            this._iSetScene(null, null);\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.ALL);\n    };\n    DisplayObject.prototype.pInvalidateHierarchicalProperties = function (propDirty) {\n        var newPropDirty = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n        if (!newPropDirty)\n            return true;\n        this._hierarchicalPropsDirty |= propDirty;\n        if (newPropDirty & HierarchicalProperties_1.default.SCENE_TRANSFORM) {\n            this._inverseSceneTransformDirty = true;\n            this._scenePositionDirty = true;\n            if (this.isEntity)\n                this.invalidatePartitionBounds();\n            if (this._pParent)\n                this._pParent._pInvalidateBounds();\n            if (this._listenToSceneTransformChanged)\n                this.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent_1.default(DisplayObjectEvent_1.default.SCENETRANSFORM_CHANGED, this)));\n        }\n        return false;\n    };\n    /**\n     * @protected\n     */\n    DisplayObject.prototype._iSetScene = function (scene, partition) {\n        var sceneChanged = this._pScene != scene;\n        if (this._pScene && this._pImplicitPartition) {\n            //unregister partition from current scene\n            this._pScene._iUnregisterPartition(this._pImplicitPartition);\n            //unregister entity from current partition\n            this._pImplicitPartition._iUnregisterEntity(this);\n            //gc abstraction objects\n            this.clear();\n        }\n        // assign parent implicit partition if no explicit one is given\n        this._pImplicitPartition = this._explicitPartition || partition;\n        //assign scene\n        if (sceneChanged)\n            this._pScene = scene;\n        if (this._pScene && this._pImplicitPartition) {\n            //register partition with scene\n            this._pScene._iRegisterPartition(this._pImplicitPartition);\n            //register entity with new partition\n            this._pImplicitPartition._iRegisterEntity(this);\n        }\n        if (sceneChanged && this._listenToSceneChanged)\n            this.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent_1.default(DisplayObjectEvent_1.default.SCENE_CHANGED, this)));\n    };\n    /**\n     * @protected\n     */\n    DisplayObject.prototype.pUpdateSceneTransform = function () {\n        if (this._iController)\n            this._iController.updateController();\n        this._pSceneTransform.copyFrom(this._transform.matrix3D);\n        if (this._pivot) {\n            if (!this._pivotScale)\n                this._pivotScale = new Vector3D_1.default();\n            this._pivotScale.x = this._pivot.x / this._transform.scale.x;\n            this._pivotScale.y = this._pivot.y / this._transform.scale.y;\n            this._pivotScale.z = this._pivot.z / this._transform.scale.z;\n            this._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n            if (this.alignmentMode != AlignmentMode_1.default.PIVOT_POINT)\n                this._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n        }\n        if (this._pParent && !this._pParent._iIsRoot)\n            this._pSceneTransform.append(this._pParent.sceneTransform);\n        this._matrix3DDirty = false;\n        this._positionDirty = false;\n        this._rotationDirty = false;\n        this._skewDirty = false;\n        this._scaleDirty = false;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.SCENE_TRANSFORM;\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype._iInternalUpdate = function () {\n        if (this._iController)\n            this._iController.update();\n        // Dispatch all queued events.\n        var len = this._queuedEvents.length;\n        for (var i = 0; i < len; ++i)\n            this.dispatchEvent(this._queuedEvents[i]);\n        this._queuedEvents.length = 0;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iIsVisible = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.VISIBLE)\n            this._updateVisible();\n        return this._pImplicitVisibility;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iAssignedMaskId = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MASK_ID)\n            this._updateMaskId();\n        return this._pImplicitMaskId;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iAssignedMasks = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MASKS)\n            this._updateMasks();\n        return this._pImplicitMasks;\n    };\n    DisplayObject.prototype._iMasksConfig = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MASKS)\n            this._updateMasks();\n        return this._pImplicitMaskIds;\n    };\n    DisplayObject.prototype._iAssignedColorTransform = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.COLOR_TRANSFORM)\n            this._updateColorTransform();\n        return this._pImplicitColorTransform;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iIsMouseEnabled = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.default.MOUSE_ENABLED)\n            this._updateMouseEnabled();\n        return this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n    };\n    DisplayObject.prototype._acceptTraverser = function (collector) {\n        //nothing to do here\n    };\n    /**\n     * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n     *\n     * @private\n     */\n    DisplayObject.prototype._onInvalidateMatrix3D = function (event) {\n        if (this._matrix3DDirty)\n            return;\n        this._matrix3DDirty = true;\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.SCENE_TRANSFORM);\n    };\n    /**\n     * @private\n     */\n    DisplayObject.prototype._onInvalidateColorTransform = function (event) {\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.COLOR_TRANSFORM);\n    };\n    DisplayObject.prototype._pInvalidateBounds = function () {\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        if (this.isEntity)\n            this.invalidatePartitionBounds();\n        if (this._pParent)\n            this._pParent._pInvalidateBounds();\n    };\n    DisplayObject.prototype._pUpdateBoxBounds = function () {\n        this._boxBoundsInvalid = false;\n        if (this._pBoxBounds == null)\n            this._pBoxBounds = new Box_1.default();\n    };\n    DisplayObject.prototype._pUpdateSphereBounds = function () {\n        this._sphereBoundsInvalid = false;\n        if (this._pSphereBounds == null)\n            this._pSphereBounds = new Sphere_1.default();\n    };\n    DisplayObject.prototype.queueDispatch = function (event) {\n        // Store event to be dispatched later.\n        this._queuedEvents.push(event);\n    };\n    DisplayObject.prototype._setScaleX = function (val) {\n        if (this.scaleX == val)\n            return;\n        this._transform.scale.x = val;\n        this._transform.invalidateMatrix3D();\n    };\n    DisplayObject.prototype._setScaleY = function (val) {\n        if (this.scaleY == val)\n            return;\n        this._transform.scale.y = val;\n        this._transform.invalidateMatrix3D();\n    };\n    DisplayObject.prototype._setScaleZ = function (val) {\n        if (this.scaleZ == val)\n            return;\n        this._transform.scale.z = val;\n        this._transform.invalidateMatrix3D();\n    };\n    DisplayObject.prototype._updateMouseEnabled = function () {\n        this._pImplicitMouseEnabled = (this._pParent) ? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n        // If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n        if (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\n            this.pickingCollider = this._pParent.pickingCollider;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.MOUSE_ENABLED;\n    };\n    DisplayObject.prototype._updateVisible = function () {\n        this._pImplicitVisibility = (this._pParent) ? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.VISIBLE;\n    };\n    DisplayObject.prototype._updateMaskId = function () {\n        this._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1) ? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.MASK_ID;\n    };\n    DisplayObject.prototype._updateMasks = function () {\n        this._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks()) ? (this._explicitMasks != null) ? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null) ? [this._explicitMasks] : null;\n        this._pImplicitMaskIds.length = 0;\n        if (this._pImplicitMasks && this._pImplicitMasks.length) {\n            var numLayers = this._pImplicitMasks.length;\n            var numChildren;\n            var implicitChildren;\n            var implicitChildIds;\n            for (var i = 0; i < numLayers; i++) {\n                implicitChildren = this._pImplicitMasks[i];\n                numChildren = implicitChildren.length;\n                implicitChildIds = new Array();\n                for (var j = 0; j < numChildren; j++)\n                    implicitChildIds.push(implicitChildren[j].id);\n                this._pImplicitMaskIds.push(implicitChildIds);\n            }\n        }\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.MASKS;\n    };\n    DisplayObject.prototype._updateColorTransform = function () {\n        if (!this._pImplicitColorTransform)\n            this._pImplicitColorTransform = new ColorTransform_1.default();\n        if (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n            this._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n            if (this._transform.colorTransform)\n                this._pImplicitColorTransform.prepend(this._transform.colorTransform);\n        }\n        else {\n            if (this._transform.colorTransform)\n                this._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n            else\n                this._pImplicitColorTransform.clear();\n        }\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.default.COLOR_TRANSFORM;\n    };\n    DisplayObject.prototype._updateMaskMode = function () {\n        if (this.maskMode)\n            this.mouseEnabled = false;\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.MASK_ID);\n    };\n    DisplayObject.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        var i;\n        this._pImplicitColorTransform = null;\n        this._pImplicitMasks = null;\n    };\n    DisplayObject.prototype.invalidatePartitionBounds = function () {\n        this.dispatchEvent(new DisplayObjectEvent_1.default(DisplayObjectEvent_1.default.INVALIDATE_PARTITION_BOUNDS, this));\n    };\n    DisplayObject.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        return false;\n    };\n    return DisplayObject;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DisplayObject;\n\n},{\"../base/AlignmentMode\":\"awayjs-display/lib/base/AlignmentMode\",\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../base/OrientationMode\":\"awayjs-display/lib/base/OrientationMode\",\"../base/Transform\":\"awayjs-display/lib/base/Transform\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"../events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\",\"../pick/PickingCollision\":\"awayjs-display/lib/pick/PickingCollision\",\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Sphere\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/display/IEntity\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/display/LightBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\nvar LightEvent_1 = require(\"../events/LightEvent\");\nvar LightBase = (function (_super) {\n    __extends(LightBase, _super);\n    function LightBase() {\n        _super.call(this);\n        this._color = 0xffffff;\n        this._colorR = 1;\n        this._colorG = 1;\n        this._colorB = 1;\n        this._ambientColor = 0xffffff;\n        this._ambient = 0;\n        this._iAmbientR = 0;\n        this._iAmbientG = 0;\n        this._iAmbientB = 0;\n        this._specular = 1;\n        this._iSpecularR = 1;\n        this._iSpecularG = 1;\n        this._iSpecularB = 1;\n        this._diffuse = 1;\n        this._iDiffuseR = 1;\n        this._iDiffuseG = 1;\n        this._iDiffuseB = 1;\n        this._shadowsEnabled = false;\n    }\n    Object.defineProperty(LightBase.prototype, \"shadowsEnabled\", {\n        get: function () {\n            return this._shadowsEnabled;\n        },\n        set: function (value) {\n            if (this._shadowsEnabled == value)\n                return;\n            this._shadowsEnabled = value;\n            if (value) {\n                if (this._shadowMapper == null)\n                    this._shadowMapper = this.pCreateShadowMapper();\n                this._shadowMapper.light = this;\n            }\n            else {\n                this._shadowMapper.dispose();\n                this._shadowMapper = null;\n            }\n            //*/\n            this.dispatchEvent(new LightEvent_1.default(LightEvent_1.default.CASTS_SHADOW_CHANGE));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LightBase.prototype.pCreateShadowMapper = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(LightBase.prototype, \"specular\", {\n        get: function () {\n            return this._specular;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            this._specular = value;\n            this.updateSpecular();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"diffuse\", {\n        get: function () {\n            return this._diffuse;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            this._diffuse = value;\n            this.updateDiffuse();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._color = value;\n            this._colorR = ((this._color >> 16) & 0xff) / 0xff;\n            this._colorG = ((this._color >> 8) & 0xff) / 0xff;\n            this._colorB = (this._color & 0xff) / 0xff;\n            this.updateDiffuse();\n            this.updateSpecular();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"ambient\", {\n        get: function () {\n            return this._ambient;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            else if (value > 1)\n                value = 1;\n            this._ambient = value;\n            this.updateAmbient();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"ambientColor\", {\n        get: function () {\n            return this._ambientColor;\n        },\n        set: function (value) {\n            this._ambientColor = value;\n            this.updateAmbient();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LightBase.prototype.updateAmbient = function () {\n        this._iAmbientR = ((this._ambientColor >> 16) & 0xff) / 0xff * this._ambient;\n        this._iAmbientG = ((this._ambientColor >> 8) & 0xff) / 0xff * this._ambient;\n        this._iAmbientB = (this._ambientColor & 0xff) / 0xff * this._ambient;\n    };\n    LightBase.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        throw new AbstractMethodError_1.default();\n    };\n    LightBase.prototype.updateSpecular = function () {\n        this._iSpecularR = this._colorR * this._specular;\n        this._iSpecularG = this._colorG * this._specular;\n        this._iSpecularB = this._colorB * this._specular;\n    };\n    LightBase.prototype.updateDiffuse = function () {\n        this._iDiffuseR = this._colorR * this._diffuse;\n        this._iDiffuseG = this._colorG * this._diffuse;\n        this._iDiffuseB = this._colorB * this._diffuse;\n    };\n    Object.defineProperty(LightBase.prototype, \"shadowMapper\", {\n        get: function () {\n            return this._shadowMapper;\n        },\n        set: function (value) {\n            this._shadowMapper = value;\n            this._shadowMapper.light = this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LightBase;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightBase;\n\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/display/LightProbe\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SamplerCube_1 = require(\"awayjs-core/lib/image/SamplerCube\");\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar LightBase_1 = require(\"../display/LightBase\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar LightProbe = (function (_super) {\n    __extends(LightProbe, _super);\n    function LightProbe(diffuseMap, specularMap) {\n        if (specularMap === void 0) { specularMap = null; }\n        _super.call(this);\n        this.diffuseSampler = new SamplerCube_1.default();\n        this.specularSampler = new SamplerCube_1.default();\n        this._pIsEntity = true;\n        this.diffuseMap = diffuseMap;\n        this.specularMap = specularMap;\n        //default bounds type\n        this._boundsType = BoundsType_1.default.NULL;\n    }\n    Object.defineProperty(LightProbe.prototype, \"assetType\", {\n        get: function () {\n            return LightProbe.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    LightProbe.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        throw new ErrorBase_1.default(\"Object projection matrices are not supported for LightProbe objects!\");\n    };\n    LightProbe.assetType = \"[light LightProbe]\";\n    return LightProbe;\n}(LightBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightProbe;\n\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"awayjs-core/lib/errors/ErrorBase\":undefined,\"awayjs-core/lib/image/SamplerCube\":undefined}],\"awayjs-display/lib/display/LineSegment\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * A Line Segment primitive.\n */\nvar LineSegment = (function (_super) {\n    __extends(LineSegment, _super);\n    /**\n     * Create a line segment\n     *\n     * @param startPosition Start position of the line segment\n     * @param endPosition Ending position of the line segment\n     * @param thickness Thickness of the line\n     */\n    function LineSegment(material, startPosition, endPosition, thickness) {\n        var _this = this;\n        if (thickness === void 0) { thickness = 1; }\n        _super.call(this);\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._pIsEntity = true;\n        this.material = material;\n        this._startPosition = startPosition;\n        this._endPosition = endPosition;\n        this._halfThickness = thickness * 0.5;\n        //default bounds type\n        this._boundsType = BoundsType_1.default.AXIS_ALIGNED_BOX;\n    }\n    Object.defineProperty(LineSegment.prototype, \"animator\", {\n        /**\n         * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return LineSegment.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"startPostion\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._startPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"startPosition\", {\n        set: function (value) {\n            if (this._startPosition == value)\n                return;\n            this._startPosition = value;\n            this.invalidateElements();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"endPosition\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._endPosition;\n        },\n        set: function (value) {\n            if (this._endPosition == value)\n                return;\n            this._endPosition = value;\n            this.invalidateElements();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"material\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (this.material)\n                this.material.iRemoveOwner(this);\n            this._material = value;\n            if (this.material)\n                this.material.iAddOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"thickness\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._halfThickness * 2;\n        },\n        set: function (value) {\n            if (this._halfThickness == value)\n                return;\n            this._halfThickness = value * 0.5;\n            this.invalidateElements();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"style\", {\n        /**\n         * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this.invalidateSurface();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @protected\n     */\n    LineSegment.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n        this._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n        this._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n        this._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n        this._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n        this._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n    };\n    LineSegment.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        this._pUpdateBoxBounds();\n        var halfWidth = (this._endPosition.x - this._startPosition.x) / 2;\n        var halfHeight = (this._endPosition.y - this._startPosition.y) / 2;\n        var halfDepth = (this._endPosition.z - this._startPosition.z) / 2;\n        this._pSphereBounds.x = this._startPosition.x + halfWidth;\n        this._pSphereBounds.y = this._startPosition.y + halfHeight;\n        this._pSphereBounds.z = this._startPosition.z + halfDepth;\n        this._pSphereBounds.radius = Math.sqrt(halfWidth * halfWidth + halfHeight * halfHeight + halfDepth * halfDepth);\n    };\n    /**\n     * @private\n     */\n    LineSegment.prototype.invalidateElements = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this)); //TODO improve performance by only using one geometry for all line segments\n    };\n    LineSegment.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_SURFACE, this));\n    };\n    LineSegment.prototype._onInvalidateProperties = function (event) {\n        this.invalidateSurface();\n    };\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @param findClosest\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    LineSegment.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return false; //TODO: detect line collisions\n    };\n    LineSegment.prototype._acceptTraverser = function (traverser) {\n        traverser.applyRenderable(this);\n    };\n    LineSegment.assetType = \"[asset LineSegment]\";\n    return LineSegment;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LineSegment;\n\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\"}],\"awayjs-display/lib/display/LoaderContainer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetLibraryBundle_1 = require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nvar Loader_1 = require(\"awayjs-core/lib/library/Loader\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar URLLoaderEvent_1 = require(\"awayjs-core/lib/events/URLLoaderEvent\");\nvar LoaderEvent_1 = require(\"awayjs-core/lib/events/LoaderEvent\");\nvar ParserEvent_1 = require(\"awayjs-core/lib/events/ParserEvent\");\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nvar LoaderContainer = (function (_super) {\n    __extends(LoaderContainer, _super);\n    /**\n     * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n     * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n     * as a child of the Loader instance. You can then add the Loader object to\n     * the display list(for instance, by using the <code>addChild()</code>\n     * method of a DisplayObjectContainer instance). The asset appears on the\n     * Stage as it loads.\n     *\n     * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n     * to a display object container on the display list. In this mode, the\n     * Loader instance might be used to load a SWF file that contains additional\n     * modules of an application. </p>\n     *\n     * <p>To detect when the SWF file is finished loading, you can use the events\n     * of the LoaderInfo object associated with the\n     * <code>contentLoaderInfo</code> property of the Loader object. At that\n     * point, the code in the module SWF file can be executed to initialize and\n     * start the module. In the offlist mode, a Loader instance might also be\n     * used to load a SWF file that contains components or media assets. Again,\n     * you can use the LoaderInfo object event notifications to detect when the\n     * components are finished loading. At that point, the application can start\n     * using the components and media assets in the library of the SWF file by\n     * instantiating the ActionScript 3.0 classes that represent those components\n     * and assets.</p>\n     *\n     * <p>To determine the status of a Loader object, monitor the following\n     * events that the LoaderInfo object associated with the\n     * <code>contentLoaderInfo</code> property of the Loader object:</p>\n     *\n     * <ul>\n     *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n     *   <li>The <code>ioError</code> or <code>securityError</code> event is\n     * dispatched if the file cannot be loaded or if an error occured during the\n     * load process. </li>\n     *   <li>The <code>progress</code> event fires continuously while the file is\n     * being loaded.</li>\n     *   <li>The <code>complete</code> event is dispatched when a file completes\n     * downloading, but before the loaded movie clip's methods and properties are\n     * available. </li>\n     *   <li>The <code>init</code> event is dispatched after the properties and\n     * methods of the loaded SWF file are accessible, so you can begin\n     * manipulating the loaded SWF file. This event is dispatched before the\n     * <code>complete</code> handler. In streaming SWF files, the\n     * <code>init</code> event can occur significantly earlier than the\n     * <code>complete</code> event. For most purposes, use the <code>init</code>\n     * handler.</li>\n     * </ul>\n     */\n    function LoaderContainer(useAssetLibrary, assetLibraryId) {\n        var _this = this;\n        if (useAssetLibrary === void 0) { useAssetLibrary = true; }\n        if (assetLibraryId === void 0) { assetLibraryId = null; }\n        _super.call(this);\n        this._useAssetLib = useAssetLibrary;\n        this._assetLibId = assetLibraryId;\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\n        this._onLoadCompleteDelegate = function (event) { return _this.onLoadComplete(event); };\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\n    }\n    Object.defineProperty(LoaderContainer.prototype, \"content\", {\n        /**\n         * Contains the root display object of the SWF file or image(JPG, PNG, or\n         * GIF) file that was loaded by using the <code>load()</code> or\n         * <code>loadBytes()</code> methods.\n         *\n         * @throws SecurityError The loaded SWF file or image file belongs to a\n         *                       security sandbox to which you do not have access.\n         *                       For a loaded SWF file, you can avoid this situation\n         *                       by having the file call the\n         *                       <code>Security.allowDomain()</code> method or by\n         *                       having the loading file specify a\n         *                       <code>loaderContext</code> parameter with its\n         *                       <code>securityDomain</code> property set to\n         *                       <code>SecurityDomain.currentDomain</code> when you\n         *                       call the <code>load()</code> or\n         *                       <code>loadBytes()</code> method.\n         */\n        get: function () {\n            return this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Cancels a <code>load()</code> method operation that is currently in\n     * progress for the Loader instance.\n     *\n     */\n    LoaderContainer.prototype.close = function () {\n        if (!this._loader)\n            return;\n        if (this._useAssetLib) {\n            var lib;\n            lib = AssetLibraryBundle_1.default.getInstance(this._assetLibId);\n            lib.disposeLoader(this._loader);\n        }\n        this._disposeLoader();\n    };\n    /**\n     * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n     * object that is a child of this Loader object. If you load an animated GIF\n     * file, only the first frame is displayed. As the Loader object can contain\n     * only a single child, issuing a subsequent <code>load()</code> request\n     * terminates the previous request, if still pending, and commences a new\n     * load.\n     *\n     * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n     * loaded image is 8,191 pixels in width or height, and the total number of\n     * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n     * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n     * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n     * and 2,880 pixels in width.</p>\n     *\n     * <p>A SWF file or image loaded into a Loader object inherits the position,\n     * rotation, and scale properties of the parent display objects of the Loader\n     * object. </p>\n     *\n     * <p>Use the <code>unload()</code> method to remove movies or images loaded\n     * with this method, or to cancel a load operation that is in progress.</p>\n     *\n     * <p>You can prevent a SWF file from using this method by setting the\n     * <code>allowNetworking</code> parameter of the the <code>object</code> and\n     * <code>embed</code> tags in the HTML page that contains the SWF\n     * content.</p>\n     *\n     * <p>When you use this method, consider the Flash Player security model,\n     * which is described in the Loader class description. </p>\n     *\n     * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n     * example \"multipart/form-data\") that contains an upload(indicated by a\n     * \"filename\" parameter in a \"content-disposition\" header within the POST\n     * body), the POST operation is subject to the security rules applied to\n     * uploads:</p>\n     *\n     * <ul>\n     *   <li>The POST operation must be performed in response to a user-initiated\n     * action, such as a mouse click or key press.</li>\n     *   <li>If the POST operation is cross-domain(the POST target is not on the\n     * same server as the SWF file that is sending the POST request), the target\n     * server must provide a URL policy file that permits cross-domain\n     * access.</li>\n     * </ul>\n     *\n     * <p>Also, for any multipart Content-Type, the syntax must be valid\n     * (according to the RFC2046 standard). If the syntax appears to be invalid,\n     * the POST operation is subject to the security rules applied to\n     * uploads.</p>\n     *\n     * <p>For more information related to security, see the Flash Player\n     * Developer Center Topic: <a\n     * href=\"http://www.adobe.com/go/devnet_security_en\"\n     * scope=\"external\">Security</a>.</p>\n     *\n     * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n     *                file to be loaded. A relative path must be relative to the\n     *                main SWF file. Absolute URLs must include the protocol\n     *                reference, such as http:// or file:///. Filenames cannot\n     *                include disk drive specifications.\n     * @param context A LoaderContext object, which has properties that define\n     *                the following:\n     *                <ul>\n     *                  <li>Whether or not to check for the existence of a policy\n     *                file upon loading the object</li>\n     *                  <li>The ApplicationDomain for the loaded object</li>\n     *                  <li>The SecurityDomain for the loaded object</li>\n     *                  <li>The ImageDecodingPolicy for the loaded image\n     *                object</li>\n     *                </ul>\n     *\n     *                <p>If the <code>context</code> parameter is not specified\n     *                or refers to a null object, the loaded content remains in\n     *                its own security domain.</p>\n     *\n     *                <p>For complete details, see the description of the\n     *                properties in the <a\n     *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n     *                class.</p>\n     * @param ns      An optional namespace string under which the file is to be\n     *                loaded, allowing the differentiation of two resources with\n     *                identical assets.\n     * @param parser  An optional parser object for translating the loaded data\n     *                into a usable resource. If not provided, Loader will\n     *                attempt to auto-detect the file type.\n     * @throws IOError               The <code>digest</code> property of the\n     *                               <code>request</code> object is not\n     *                               <code>null</code>. You should only set the\n     *                               <code>digest</code> property of a URLRequest\n     *                               object when calling the\n     *                               <code>URLLoader.load()</code> method when\n     *                               loading a SWZ file(an Adobe platform\n     *                               component).\n     * @throws IllegalOperationError If the <code>requestedContentParent</code>\n     *                               property of the <code>context</code>\n     *                               parameter is a <code>Loader</code>.\n     * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n     *                               parameter is set to non-null and has some\n     *                               values which are not Strings.\n     * @throws SecurityError         The value of\n     *                               <code>LoaderContext.securityDomain</code>\n     *                               must be either <code>null</code> or\n     *                               <code>SecurityDomain.currentDomain</code>.\n     *                               This reflects the fact that you can only\n     *                               place the loaded media in its natural\n     *                               security sandbox or your own(the latter\n     *                               requires a policy file).\n     * @throws SecurityError         Local SWF files may not set\n     *                               LoaderContext.securityDomain to anything\n     *                               other than <code>null</code>. It is not\n     *                               permitted to import non-local media into a\n     *                               local sandbox, or to place other local media\n     *                               in anything other than its natural sandbox.\n     * @throws SecurityError         You cannot connect to commonly reserved\n     *                               ports. For a complete list of blocked ports,\n     *                               see \"Restricting Networking APIs\" in the\n     *                               <i>ActionScript 3.0 Developer's Guide</i>.\n     * @throws SecurityError         If the <code>applicationDomain</code> or\n     *                               <code>securityDomain</code> properties of\n     *                               the <code>context</code> parameter are from\n     *                               a disallowed domain.\n     * @throws SecurityError         If a local SWF file is attempting to use the\n     *                               <code>securityDomain</code> property of the\n     *                               <code>context</code> parameter.\n     * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and it is not possible to\n     *                      add the loaded content as a child to the specified\n     *                      DisplayObjectContainer. This could happen if the\n     *                      loaded content is a\n     *                      <code>flash.display.AVM1Movie</code> or if the\n     *                      <code>addChild()</code> call to the\n     *                      requestedContentParent throws an error.\n     * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the file has completed loading. The\n     *                      <code>complete</code> event is always dispatched\n     *                      after the <code>init</code> event.\n     * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when a network request is made over HTTP and\n     *                      Flash Player can detect the HTTP status code.\n     * @event init          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the properties and methods of the loaded\n     *                      SWF file are accessible. The <code>init</code> event\n     *                      always precedes the <code>complete</code> event.\n     * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when an input or output error occurs that\n     *                      causes a load operation to fail.\n     * @event open          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the loading operation starts.\n     * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object as data is received while load operation\n     *                      progresses.\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if a SWF file in the local-with-filesystem\n     *                      sandbox attempts to load content in the\n     *                      local-with-networking sandbox, or vice versa.\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and the security sandbox\n     *                      of the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      does not have access to the loaded SWF.\n     * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when a loaded object is removed.\n     */\n    LoaderContainer.prototype.load = function (request, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._getLoader().load(request, context, ns, parser);\n    };\n    /**\n     * Loads from binary data stored in a ByteArray object.\n     *\n     * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n     * the \"init\" event before accessing the properties of a loaded object.</p>\n     *\n     * <p>When you use this method, consider the Flash Player security model,\n     * which is described in the Loader class description. </p>\n     *\n     * @param bytes   A ByteArray object. The contents of the ByteArray can be\n     *                any of the file formats supported by the Loader class: SWF,\n     *                GIF, JPEG, or PNG.\n     * @param context A LoaderContext object. Only the\n     *                <code>applicationDomain</code> property of the\n     *                LoaderContext object applies; the\n     *                <code>checkPolicyFile</code> and\n     *                <code>securityDomain</code> properties of the LoaderContext\n     *                object do not apply.\n     *\n     *                <p>If the <code>context</code> parameter is not specified\n     *                or refers to a null object, the content is loaded into the\n     *                current security domain -  a process referred to as \"import\n     *                loading\" in Flash Player security documentation.\n     *                Specifically, if the loading SWF file trusts the remote SWF\n     *                by incorporating the remote SWF into its code, then the\n     *                loading SWF can import it directly into its own security\n     *                domain.</p>\n     *\n     *                <p>For more information related to security, see the Flash\n     *                Player Developer Center Topic: <a\n     *                href=\"http://www.adobe.com/go/devnet_security_en\"\n     *                scope=\"external\">Security</a>.</p>\n     * @throws ArgumentError         If the <code>length</code> property of the\n     *                               ByteArray object is not greater than 0.\n     * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n     *                               <code>securityDomain</code> property of the\n     *                               <code>context</code> parameter are non-null.\n     * @throws IllegalOperationError If the <code>requestedContentParent</code>\n     *                               property of the <code>context</code>\n     *                               parameter is a <code>Loader</code>.\n     * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n     *                               parameter is set to non-null and has some\n     *                               values which are not Strings.\n     * @throws SecurityError         If the provided\n     *                               <code>applicationDomain</code> property of\n     *                               the <code>context</code> property is from a\n     *                               disallowed domain.\n     * @throws SecurityError         You cannot connect to commonly reserved\n     *                               ports. For a complete list of blocked ports,\n     *                               see \"Restricting Networking APIs\" in the\n     *                               <i>ActionScript 3.0 Developer's Guide</i>.\n     * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and it is not possible to\n     *                      add the loaded content as a child to the specified\n     *                      DisplayObjectContainer. This could happen if the\n     *                      loaded content is a\n     *                      <code>flash.display.AVM1Movie</code> or if the\n     *                      <code>addChild()</code> call to the\n     *                      requestedContentParent throws an error.\n     * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the operation is complete. The\n     *                      <code>complete</code> event is always dispatched\n     *                      after the <code>init</code> event.\n     * @event init          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the properties and methods of the loaded\n     *                      data are accessible. The <code>init</code> event\n     *                      always precedes the <code>complete</code> event.\n     * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the runtime cannot parse the data in the\n     *                      byte array.\n     * @event open          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the operation starts.\n     * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object as data is transfered in memory.\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and the security sandbox\n     *                      of the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      does not have access to the loaded SWF.\n     * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when a loaded object is removed.\n     */\n    LoaderContainer.prototype.loadData = function (data, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._getLoader().loadData(data, '', context, ns, parser);\n    };\n    LoaderContainer.prototype._getLoader = function () {\n        if (this._useAssetLib) {\n            var lib = AssetLibraryBundle_1.default.getInstance(this._assetLibId);\n            this._loader = lib.getLoader();\n        }\n        else {\n            this._loader = new Loader_1.default();\n        }\n        this._loader.addEventListener(LoaderEvent_1.default.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        this._loader.addEventListener(AssetEvent_1.default.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        this._loader.addEventListener(AssetEvent_1.default.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        // Error are handled separately (see documentation for addErrorHandler)\n        this._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n        this._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n        return this._loader;\n    };\n    LoaderContainer.prototype._disposeLoader = function () {\n        this._loader.removeEventListener(LoaderEvent_1.default.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        this._loader.removeEventListener(AssetEvent_1.default.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        this._loader.removeEventListener(AssetEvent_1.default.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        if (!this._useAssetLib)\n            this._loader.stop();\n        this._loader = null;\n    };\n    /**\n     * Removes a child of this Loader object that was loaded by using the\n     * <code>load()</code> method. The <code>property</code> of the associated\n     * LoaderInfo object is reset to <code>null</code>. The child is not\n     * necessarily destroyed because other objects might have references to it;\n     * however, it is no longer a child of the Loader object.\n     *\n     * <p>As a best practice, before you unload a child SWF file, you should\n     * explicitly close any streams in the child SWF file's objects, such as\n     * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n     * audio in the child SWF file might continue to play, even though the child\n     * SWF file was unloaded. To close streams in the child SWF file, add an\n     * event listener to the child that listens for the <code>unload</code>\n     * event. When the parent calls <code>Loader.unload()</code>, the\n     * <code>unload</code> event is dispatched to the child. The following code\n     * shows how you might do this:</p>\n     * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n     * myNetStream.close(); mySound.close(); myNetConnection.close();\n     * myLocalConnection.close(); }\n     * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n     * closeAllStreams);</pre>\n     *\n     */\n    LoaderContainer.prototype.unload = function () {\n        //TODO\n    };\n    /**\n     * Enables a specific parser.\n     * When no specific parser is set for a loading/parsing opperation,\n     * loader3d can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parserClass The parser class to enable.\n     * @see away.parsers.Parsers\n     */\n    LoaderContainer.enableParser = function (parserClass) {\n        Loader_1.default.enableParser(parserClass);\n    };\n    /**\n     * Enables a list of parsers.\n     * When no specific parser is set for a loading/parsing opperation,\n     * loader3d can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parserClasses A Vector of parser classes to enable.\n     * @see away.parsers.Parsers\n     */\n    LoaderContainer.enableParsers = function (parserClasses) {\n        Loader_1.default.enableParsers(parserClasses);\n    };\n    LoaderContainer.prototype.onAssetComplete = function (event) {\n        this.dispatchEvent(event);\n    };\n    /**\n     * Called when an error occurs during loading\n     */\n    LoaderContainer.prototype.onLoadError = function (event) {\n        if (this.hasEventListener(URLLoaderEvent_1.default.LOAD_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Called when a an error occurs during parsing\n     */\n    LoaderContainer.prototype.onParseError = function (event) {\n        if (this.hasEventListener(ParserEvent_1.default.PARSE_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    LoaderContainer.prototype.onTextureSizeError = function (event) {\n        this.dispatchEvent(event);\n    };\n    /**\n     * Called when the resource and all of its dependencies was retrieved.\n     */\n    LoaderContainer.prototype.onLoadComplete = function (event) {\n        this._content = event.content;\n        if (this._content)\n            this.addChild(this._content);\n        this.dispatchEvent(event);\n        this._disposeLoader();\n    };\n    return LoaderContainer;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LoaderContainer;\n\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/events/LoaderEvent\":undefined,\"awayjs-core/lib/events/ParserEvent\":undefined,\"awayjs-core/lib/events/URLLoaderEvent\":undefined,\"awayjs-core/lib/library/AssetLibraryBundle\":undefined,\"awayjs-core/lib/library/Loader\":undefined}],\"awayjs-display/lib/display/MovieClip\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar Sprite_1 = require(\"../display/Sprite\");\nvar TextField_1 = require(\"../display/TextField\");\nvar MouseEvent_1 = require(\"../events/MouseEvent\");\nvar Timeline_1 = require(\"../base/Timeline\");\nvar FrameScriptManager_1 = require(\"../managers/FrameScriptManager\");\nvar MovieClip = (function (_super) {\n    __extends(MovieClip, _super);\n    function MovieClip(timeline) {\n        var _this = this;\n        if (timeline === void 0) { timeline = null; }\n        _super.call(this);\n        this._isButton = false;\n        this._time = 0; // the current time inside the animation\n        this._currentFrameIndex = -1; // the current frame\n        this._isPlaying = true; // false if paused or stopped\n        this._isInit = true;\n        this._potentialInstances = [];\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n        /**\n         *\n         */\n        this.loop = true;\n        /**\n         * the current index of the current active frame\n         */\n        this.constructedKeyFrameIndex = -1;\n        this._enterFrame = new AssetEvent_1.default(AssetEvent_1.default.ENTER_FRAME, this);\n        this.inheritColorTransform = true;\n        this._onMouseOver = function (event) { return _this.currentFrameIndex = 1; };\n        this._onMouseOut = function (event) { return _this.currentFrameIndex = 0; };\n        this._onMouseDown = function (event) { return _this.currentFrameIndex = 2; };\n        this._onMouseUp = function (event) { return _this.currentFrameIndex = _this.currentFrameIndex == 0 ? 0 : 1; };\n        this._timeline = timeline || new Timeline_1.default();\n    }\n    Object.defineProperty(MovieClip.prototype, \"adapter\", {\n        /**\n         * adapter is used to provide MovieClip to scripts taken from different platforms\n         * setter typically managed by factory\n         */\n        get: function () {\n            return this._adapter;\n        },\n        set: function (value) {\n            this._adapter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MovieClip.prototype.dispose = function () {\n        this.disposeValues();\n        MovieClip._movieClips.push(this);\n    };\n    MovieClip.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._potentialInstances = [];\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    };\n    MovieClip.prototype.reset_textclones = function () {\n        if (this.timeline) {\n            var len = this._potentialInstances.length;\n            for (var i = 0; i < len; i++) {\n                if (this._potentialInstances[i] != null) {\n                    if (this._potentialInstances[i].isAsset(TextField_1.default))\n                        this._potentialInstances[i].text = this.timeline.getPotentialChildPrototype(i).text;\n                    else if (this._potentialInstances[i].isAsset(MovieClip))\n                        this._potentialInstances[i].reset_textclones();\n                }\n            }\n        }\n    };\n    Object.defineProperty(MovieClip.prototype, \"isInit\", {\n        get: function () {\n            return this._isInit;\n        },\n        set: function (value) {\n            this._isInit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MovieClip.prototype, \"timeline\", {\n        get: function () {\n            return this._timeline;\n        },\n        set: function (value) {\n            this._timeline = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MovieClip.prototype, \"numFrames\", {\n        get: function () {\n            return this._timeline.numFrames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MovieClip.prototype.jumpToLabel = function (label) {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    };\n    MovieClip.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n        if (this.adapter)\n            this.adapter.freeFromScript();\n        this.constructedKeyFrameIndex = -1;\n        for (var i = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n        this._skipAdvance = MovieClip._skipAdvance;\n        var numFrames = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n        else {\n            this._currentFrameIndex = -1;\n        }\n    };\n    MovieClip.prototype.resetSessionIDs = function () {\n        this._depth_sessionIDs = {};\n    };\n    Object.defineProperty(MovieClip.prototype, \"currentFrameIndex\", {\n        /*\n        * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n         */\n        get: function () {\n            return this._currentFrameIndex;\n        },\n        set: function (value) {\n            //if currentFrame is set greater than the available number of\n            //frames, the playhead is moved to the last frame in the timeline.\n            //But because the frame specified was not a keyframe, no scripts are\n            //executed, even if they exist on the last frame.\n            var skip_script = false;\n            var numFrames = this._timeline.keyframe_indices.length;\n            if (!numFrames)\n                return;\n            if (value < 0) {\n                value = 0;\n            }\n            else if (value >= numFrames) {\n                value = numFrames - 1;\n                skip_script = true;\n            }\n            if (this._currentFrameIndex == value)\n                return;\n            this._currentFrameIndex = value;\n            //changing current frame will ignore advance command for that\n            //update's advanceFrame function, unless advanceFrame has\n            //already been executed\n            this._skipAdvance = MovieClip._skipAdvance;\n            this._timeline.gotoFrame(this, value, skip_script);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MovieClip.prototype.addButtonListeners = function () {\n        this._isButton = true;\n        this.stop();\n        this.addEventListener(MouseEvent_1.default.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent_1.default.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent_1.default.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent_1.default.MOUSE_UP, this._onMouseUp);\n    };\n    MovieClip.prototype.removeButtonListeners = function () {\n        this.removeEventListener(MouseEvent_1.default.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent_1.default.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent_1.default.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent_1.default.MOUSE_UP, this._onMouseUp);\n    };\n    MovieClip.prototype.getChildAtSessionID = function (sessionID) {\n        return this._sessionID_childs[sessionID];\n    };\n    MovieClip.prototype.getSessionIDDepths = function () {\n        return this._depth_sessionIDs;\n    };\n    MovieClip.prototype.addChildAtDepth = function (child, depth, replace) {\n        if (replace === void 0) { replace = true; }\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n        child.reset(); // this takes care of transform and visibility\n        return _super.prototype.addChildAtDepth.call(this, child, depth, replace);\n    };\n    MovieClip.prototype._addTimelineChildAt = function (child, depth, sessionID) {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n        this._sessionID_childs[sessionID] = child;\n        return this.addChildAtDepth(child, depth);\n    };\n    MovieClip.prototype.removeChildAtInternal = function (index) {\n        var child = this._children[index];\n        if (child.adapter)\n            child.adapter.freeFromScript();\n        this.adapter.unregisterScriptObject(child);\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n        delete this._sessionID_childs[child._sessionID];\n        child._sessionID = -1;\n        return _super.prototype.removeChildAtInternal.call(this, index);\n    };\n    Object.defineProperty(MovieClip.prototype, \"assetType\", {\n        get: function () {\n            return MovieClip.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Starts playback of animation from current position\n     */\n    MovieClip.prototype.play = function () {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    };\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    MovieClip.prototype.update = function () {\n        MovieClip._skipAdvance = true;\n        this.advanceFrame();\n        MovieClip._skipAdvance = false;\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager_1.default.execute_queue();\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager_1.default.execute_queue();\n        // now we execute any intervals queued\n        FrameScriptManager_1.default.execute_intervals();\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager_1.default.execute_queue();\n        //execute any disposes as a result of framescripts\n        FrameScriptManager_1.default.execute_dispose();\n    };\n    MovieClip.prototype.getPotentialChildInstance = function (id) {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n        return this._potentialInstances[id];\n    };\n    /**\n     * Stop playback of animation and hold current position\n     */\n    MovieClip.prototype.stop = function () {\n        this._isPlaying = false;\n    };\n    MovieClip.prototype.clone = function () {\n        var newInstance = (MovieClip._movieClips.length) ? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    MovieClip.prototype.copyTo = function (newInstance) {\n        _super.prototype.copyTo.call(this, newInstance);\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    };\n    MovieClip.prototype.advanceFrame = function () {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop)\n                    this.currentFrameIndex = 0;\n                else\n                    this._isPlaying = false;\n            }\n            else {\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n        var len = this._children.length;\n        var child;\n        for (var i = 0; i < len; ++i) {\n            child = this._children[i];\n            if (child.isAsset(MovieClip))\n                child.advanceFrame();\n        }\n        this._skipAdvance = false;\n    };\n    // DEBUG CODE:\n    MovieClip.prototype.logHierarchy = function (depth) {\n        if (depth === void 0) { depth = 0; }\n        this.printHierarchyName(depth, this);\n        var len = this._children.length;\n        var child;\n        for (var i = 0; i < len; i++) {\n            child = this._children[i];\n            if (child.isAsset(MovieClip))\n                child.logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    };\n    MovieClip.prototype.printHierarchyName = function (depth, target) {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    };\n    MovieClip.prototype.clear = function () {\n        //clear out potential instances\n        var len = this._potentialInstances.length;\n        for (var i = 0; i < len; i++) {\n            var instance = this._potentialInstances[i];\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance && instance.name == \"\") {\n                FrameScriptManager_1.default.add_child_to_dispose(instance);\n                delete this._potentialInstances[i];\n            }\n        }\n        _super.prototype.clear.call(this);\n    };\n    MovieClip._movieClips = new Array();\n    MovieClip.assetType = \"[asset MovieClip]\";\n    return MovieClip;\n}(Sprite_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MovieClip;\n\n},{\"../base/Timeline\":\"awayjs-display/lib/base/Timeline\",\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../display/TextField\":\"awayjs-display/lib/display/TextField\",\"../events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"../managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-core/lib/events/AssetEvent\":undefined}],\"awayjs-display/lib/display/PointLight\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LightBase_1 = require(\"../display/LightBase\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar CubeMapShadowMapper_1 = require(\"../materials/shadowmappers/CubeMapShadowMapper\");\nvar PointLight = (function (_super) {\n    __extends(PointLight, _super);\n    function PointLight() {\n        _super.call(this);\n        this._pRadius = 90000;\n        this._pFallOff = 100000;\n        this._pIsEntity = true;\n        this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\n        //default bounds type\n        this._boundsType = BoundsType_1.default.SPHERE;\n    }\n    Object.defineProperty(PointLight.prototype, \"assetType\", {\n        get: function () {\n            return PointLight.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointLight.prototype.pCreateShadowMapper = function () {\n        return new CubeMapShadowMapper_1.default();\n    };\n    Object.defineProperty(PointLight.prototype, \"radius\", {\n        get: function () {\n            return this._pRadius;\n        },\n        set: function (value) {\n            this._pRadius = value;\n            if (this._pRadius < 0) {\n                this._pRadius = 0;\n            }\n            else if (this._pRadius > this._pFallOff) {\n                this._pFallOff = this._pRadius;\n                this._pInvalidateBounds();\n            }\n            this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointLight.prototype.iFallOffFactor = function () {\n        return this._pFallOffFactor;\n    };\n    Object.defineProperty(PointLight.prototype, \"fallOff\", {\n        get: function () {\n            return this._pFallOff;\n        },\n        set: function (value) {\n            this._pFallOff = value;\n            if (this._pFallOff < 0)\n                this._pFallOff = 0;\n            if (this._pFallOff < this._pRadius)\n                this._pRadius = this._pFallOff;\n            this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\n            this._pInvalidateBounds();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointLight.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        this._pSphereBounds.radius = this._pFallOff;\n    };\n    PointLight.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var m = new Matrix3D_1.default();\n        // todo: do not use lookAt on Light\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n        m.append(this._pParent.inverseSceneTransform);\n        this.lookAt(m.position);\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n        m.append(this.inverseSceneTransform);\n        var box = entity.getBox();\n        var v1 = m.deltaTransformVector(new Vector3D_1.default(box.left, box.bottom, box.front));\n        var v2 = m.deltaTransformVector(new Vector3D_1.default(box.right, box.top, box.back));\n        var d1 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;\n        var d2 = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;\n        var d = Math.sqrt(d1 > d2 ? d1 : d2);\n        var zMin;\n        var zMax;\n        var z = m.rawData[14];\n        zMin = z - d;\n        zMax = z + d;\n        raw[5] = raw[0] = zMin / d;\n        raw[10] = zMax / (zMax - zMin);\n        raw[11] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n        raw[14] = -zMin * raw[10];\n        if (!target)\n            target = new Matrix3D_1.default();\n        target.copyRawDataFrom(raw);\n        target.prepend(m);\n        return target;\n    };\n    PointLight.assetType = \"[light PointLight]\";\n    return PointLight;\n}(LightBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PointLight;\n\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"../materials/shadowmappers/CubeMapShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/Scene\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\nvar BasicPartition_1 = require(\"../partition/BasicPartition\");\nvar Scene = (function (_super) {\n    __extends(Scene, _super);\n    function Scene(partition) {\n        if (partition === void 0) { partition = null; }\n        _super.call(this);\n        this._expandedPartitions = new Array();\n        this._partitions = new Array();\n        this._iCollectionMark = 0;\n        this.partition = partition || new BasicPartition_1.default();\n        this._iIsRoot = true;\n        this._pScene = this;\n    }\n    Scene.prototype.traversePartitions = function (traverser) {\n        var i = 0;\n        var len = this._partitions.length;\n        while (i < len)\n            this._partitions[i++].traverse(traverser);\n    };\n    /**\n     * @internal\n     */\n    Scene.prototype._iRegisterPartition = function (partition) {\n        this._expandedPartitions.push(partition);\n        //ensure duplicates are not found in partitions array\n        if (this._partitions.indexOf(partition) == -1)\n            this._partitions.push(partition);\n    };\n    /**\n     * @internal\n     */\n    Scene.prototype._iUnregisterPartition = function (partition) {\n        this._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n        //if no more partition references found, remove from partitions array\n        if (this._expandedPartitions.indexOf(partition) == -1)\n            this._partitions.splice(this._partitions.indexOf(partition), 1);\n    };\n    return Scene;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Scene;\n\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../partition/BasicPartition\":\"awayjs-display/lib/partition/BasicPartition\"}],\"awayjs-display/lib/display/Shape\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar Graphics_1 = require(\"../graphics/Graphics\");\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Shape class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Shape object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Shape objects that contain the same graphics.\n * However, a Shape object supports user input events, while a Shape object\n * does not.</p>\n */\nvar Shape = (function (_super) {\n    __extends(Shape, _super);\n    /**\n     * Create a new Shape object.\n     *\n     * @param material    [optional]        The material with which to render the Shape.\n     */\n    function Shape(material) {\n        var _this = this;\n        if (material === void 0) { material = null; }\n        _super.call(this);\n        //temp point used in hit testing\n        this._tempPoint = new Point_1.default();\n        this._onGraphicsInvalidateDelegate = function (event) { return _this._onGraphicsInvalidate(event); };\n        this._graphics = new Graphics_1.default(); //unique graphics object for each Sprite\n        this._graphics.addEventListener(AssetEvent_1.default.INVALIDATE, this._onGraphicsInvalidateDelegate);\n        this.material = material;\n    }\n    Object.defineProperty(Shape.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Shape.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"graphics\", {\n        /**\n         * Specifies the Graphics object belonging to this Shape object, where\n         * drawing commands can occur.\n         */\n        get: function () {\n            if (this._iSourcePrefab)\n                this._iSourcePrefab._iValidate();\n            return this._graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"animator\", {\n        /**\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\n         */\n        get: function () {\n            return this._graphics.animator;\n        },\n        set: function (value) {\n            if (this._graphics.animator)\n                this._graphics.animator.removeOwner(this);\n            this._graphics.animator = value;\n            if (this._graphics.animator)\n                this._graphics.animator.addOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"material\", {\n        /**\n         * The material with which to render the Shape.\n         */\n        get: function () {\n            return this._graphics.material;\n        },\n        set: function (value) {\n            this._graphics.material = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._graphics.style;\n        },\n        set: function (value) {\n            this._graphics.style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Shape.prototype.bakeTransformations = function () {\n        this._graphics.applyTransformation(this.transform.matrix3D);\n        this.transform.clearMatrix3D();\n    };\n    /**\n     * @inheritDoc\n     */\n    Shape.prototype.dispose = function () {\n        this.disposeValues();\n        Shape._shapes.push(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    Shape.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._graphics.dispose();\n    };\n    /**\n     * Clones this Shape instance along with all it's children, while re-using the same\n     * material, graphics and animation set. The returned result will be a copy of this shape,\n     * containing copies of all of it's children.\n     *\n     * Properties that are re-used (i.e. not cloned) by the new copy include name,\n     * graphics, and material. Properties that are cloned or created anew for the copy\n     * include subShapees, children of the shape, and the animator.\n     *\n     * If you want to copy just the shape, reusing it's graphics and material while not\n     * cloning it's children, the simplest way is to create a new shape manually:\n     *\n     * <code>\n     * var clone : Shape = new Shape(original.graphics, original.material);\n     * </code>\n     */\n    Shape.prototype.clone = function () {\n        var newInstance = (Shape._shapes.length) ? Shape._shapes.pop() : new Shape();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    Shape.prototype.copyTo = function (shape) {\n        _super.prototype.copyTo.call(this, shape);\n        this._graphics.copyTo(shape.graphics);\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    Shape.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n    };\n    Shape.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        var box = this.getBox();\n        if (!this._center)\n            this._center = new Vector3D_1.default();\n        this._center.x = box.x + box.width / 2;\n        this._center.y = box.y + box.height / 2;\n        this._center.z = box.z + box.depth / 2;\n        this._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    Shape.prototype._onGraphicsInvalidate = function (event) {\n        if (this._pIsEntity != Boolean(this._graphics.count)) {\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iUnregisterEntity(this);\n            this._pIsEntity = Boolean(this._graphics.count);\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iRegisterEntity(this);\n        }\n        this._pInvalidateBounds();\n    };\n    /**\n     *\n     * @param renderer\n     *\n     * @internal\n     */\n    Shape.prototype._acceptTraverser = function (traverser) {\n        this.graphics.acceptTraverser(traverser);\n    };\n    Shape.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        if (this._graphics.count) {\n            this._tempPoint.setTo(x, y);\n            var local = this.globalToLocal(this._tempPoint, this._tempPoint);\n            var box;\n            //early out for box test\n            if (!(box = this.getBox()).contains(local.x, local.y, 0))\n                return false;\n            //early out for non-shape tests\n            if (!shapeFlag)\n                return true;\n            //ok do the graphics thing\n            if (this._graphics._hitTestPointInternal(local.x, local.y))\n                return true;\n        }\n        return false;\n    };\n    Shape.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this._graphics.clear();\n    };\n    Shape._shapes = new Array();\n    Shape.assetType = \"[asset Shape]\";\n    return Shape;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Shape;\n\n},{\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/Skybox\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\nvar SurfaceEvent_1 = require(\"../events/SurfaceEvent\");\nvar SingleCubeTexture_1 = require(\"../textures/SingleCubeTexture\");\nvar Style_1 = require(\"../base/Style\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nvar Skybox = (function (_super) {\n    __extends(Skybox, _super);\n    /**\n     * Create a new Skybox object.\n     *\n     * @param material\tThe material with which to render the Skybox.\n     */\n    function Skybox(image) {\n        var _this = this;\n        if (image === void 0) { image = null; }\n        _super.call(this);\n        this._textures = new Array();\n        this._pAlphaThreshold = 0;\n        this._pBlendMode = BlendMode_1.default.NORMAL;\n        this._curves = false;\n        this._imageRect = false;\n        this._style = new Style_1.default();\n        this._onTextureInvalidateDelegate = function (event) { return _this.onTextureInvalidate(event); };\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n        this._pIsEntity = true;\n        this._owners = new Array(this);\n        this._style.image = image;\n        this.texture = new SingleCubeTexture_1.default();\n        //default bounds type\n        this._boundsType = BoundsType_1.default.NULL;\n    }\n    Object.defineProperty(Skybox.prototype, \"alphaThreshold\", {\n        /**\n         * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n         * invisible or entirely opaque, often used with textures for foliage, etc.\n         * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n         */\n        get: function () {\n            return this._pAlphaThreshold;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            else if (value > 1)\n                value = 1;\n            if (this._pAlphaThreshold == value)\n                return;\n            this._pAlphaThreshold = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"curves\", {\n        /**\n         * Indicates whether skybox should use curves. Defaults to false.\n         */\n        get: function () {\n            return this._curves;\n        },\n        set: function (value) {\n            if (this._curves == value)\n                return;\n            this._curves = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"imageRect\", {\n        /**\n         * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n         */\n        get: function () {\n            return this._imageRect;\n        },\n        set: function (value) {\n            if (this._imageRect == value)\n                return;\n            this._imageRect = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"lightPicker\", {\n        /**\n         * The light picker used by the material to provide lights to the material if it supports lighting.\n         *\n         * @see LightPickerBase\n         * @see StaticLightPicker\n         */\n        get: function () {\n            return this._pLightPicker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"animationSet\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"blendMode\", {\n        /**\n         * The blend mode to use when drawing this renderable. The following blend modes are supported:\n         * <ul>\n         * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n         * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n         * <li>BlendMode.MULTIPLY</li>\n         * <li>BlendMode.ADD</li>\n         * <li>BlendMode.ALPHA</li>\n         * </ul>\n         */\n        get: function () {\n            return this._pBlendMode;\n        },\n        set: function (value) {\n            if (this._pBlendMode == value)\n                return;\n            this._pBlendMode = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"iOwners\", {\n        /**\n         * A list of the IRenderables that use this material\n         *\n         * @private\n         */\n        get: function () {\n            return this._owners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"animator\", {\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"texture\", {\n        /**\n        * The cube texture to use as the skybox.\n        */\n        get: function () {\n            return this._texture;\n        },\n        set: function (value) {\n            if (this._texture == value)\n                return;\n            if (this._texture)\n                this.removeTexture(this._texture);\n            this._texture = value;\n            if (this._texture)\n                this.addTexture(this._texture);\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Skybox.prototype.getNumTextures = function () {\n        return this._textures.length;\n    };\n    Skybox.prototype.getTextureAt = function (index) {\n        return this._textures[index];\n    };\n    Object.defineProperty(Skybox.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._style;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"assetType\", {\n        get: function () {\n            return Skybox.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n     *\n     * @private\n     */\n    Skybox.prototype.invalidatePasses = function () {\n        this.dispatchEvent(new SurfaceEvent_1.default(SurfaceEvent_1.default.INVALIDATE_PASSES, this));\n    };\n    Skybox.prototype.invalidateElements = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this));\n    };\n    Skybox.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_SURFACE, this));\n    };\n    Skybox.prototype.addTexture = function (texture) {\n        this._textures.push(texture);\n        texture.addEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    Skybox.prototype.removeTexture = function (texture) {\n        this._textures.splice(this._textures.indexOf(texture), 1);\n        texture.removeEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    Skybox.prototype.onTextureInvalidate = function (event) {\n        if (event === void 0) { event = null; }\n        this.invalidate();\n    };\n    Skybox.prototype._onInvalidateProperties = function (event) {\n        this.invalidatePasses();\n    };\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    Skybox.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return false;\n    };\n    Skybox.assetType = \"[asset Skybox]\";\n    return Skybox;\n}(DisplayObject_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Skybox;\n\n},{\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"../textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined}],\"awayjs-display/lib/display/Sprite\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Graphics_1 = require(\"../graphics/Graphics\");\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\n/**\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nvar Sprite = (function (_super) {\n    __extends(Sprite, _super);\n    /**\n     * Create a new Sprite object.\n     *\n     * @param material    [optional]        The material with which to render the Sprite.\n     */\n    function Sprite(material) {\n        var _this = this;\n        if (material === void 0) { material = null; }\n        _super.call(this);\n        //temp point used in hit testing\n        this._tempPoint = new Point_1.default();\n        this._onGraphicsInvalidateDelegate = function (event) { return _this._onGraphicsInvalidate(event); };\n        this._graphics = new Graphics_1.default(); //unique graphics object for each Sprite\n        this._graphics.addEventListener(AssetEvent_1.default.INVALIDATE, this._onGraphicsInvalidateDelegate);\n        this.material = material;\n    }\n    Object.defineProperty(Sprite.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Sprite.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"graphics\", {\n        /**\n         * Specifies the Graphics object belonging to this Sprite object, where\n         * drawing commands can occur.\n         */\n        get: function () {\n            if (this._iSourcePrefab)\n                this._iSourcePrefab._iValidate();\n            return this._graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"animator\", {\n        /**\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\n         */\n        get: function () {\n            return this._graphics.animator;\n        },\n        set: function (value) {\n            if (this._graphics.animator)\n                this._graphics.animator.removeOwner(this);\n            this._graphics.animator = value;\n            if (this._graphics.animator)\n                this._graphics.animator.addOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"material\", {\n        /**\n         * The material with which to render the Sprite.\n         */\n        get: function () {\n            return this._graphics.material;\n        },\n        set: function (value) {\n            this._graphics.material = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._graphics.style;\n        },\n        set: function (value) {\n            this._graphics.style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Sprite.prototype.bakeTransformations = function () {\n        this._graphics.applyTransformation(this.transform.matrix3D);\n        this.transform.clearMatrix3D();\n    };\n    /**\n     * @inheritDoc\n     */\n    Sprite.prototype.dispose = function () {\n        this.disposeValues();\n        Sprite._sprites.push(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    Sprite.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._graphics.dispose();\n    };\n    /**\n     * Clones this Sprite instance along with all it's children, while re-using the same\n     * material, graphics and animation set. The returned result will be a copy of this sprite,\n     * containing copies of all of it's children.\n     *\n     * Properties that are re-used (i.e. not cloned) by the new copy include name,\n     * graphics, and material. Properties that are cloned or created anew for the copy\n     * include subSpritees, children of the sprite, and the animator.\n     *\n     * If you want to copy just the sprite, reusing it's graphics and material while not\n     * cloning it's children, the simplest way is to create a new sprite manually:\n     *\n     * <code>\n     * var clone : Sprite = new Sprite(original.graphics, original.material);\n     * </code>\n     */\n    Sprite.prototype.clone = function () {\n        var newInstance = (Sprite._sprites.length) ? Sprite._sprites.pop() : new Sprite();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    Sprite.prototype.copyTo = function (sprite) {\n        _super.prototype.copyTo.call(this, sprite);\n        this._graphics.copyTo(sprite.graphics);\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    Sprite.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n    };\n    Sprite.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        var box = this.getBox();\n        if (!this._center)\n            this._center = new Vector3D_1.default();\n        this._center.x = box.x + box.width / 2;\n        this._center.y = box.y + box.height / 2;\n        this._center.z = box.z + box.depth / 2;\n        this._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    Sprite.prototype._onGraphicsInvalidate = function (event) {\n        if (this._pIsEntity != Boolean(this._graphics.count)) {\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iUnregisterEntity(this);\n            this._pIsEntity = Boolean(this._graphics.count);\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iRegisterEntity(this);\n        }\n        this._pInvalidateBounds();\n    };\n    /**\n     *\n     * @param renderer\n     *\n     * @internal\n     */\n    Sprite.prototype._acceptTraverser = function (traverser) {\n        this.graphics.acceptTraverser(traverser);\n    };\n    Sprite.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        if (this._graphics.count) {\n            this._tempPoint.setTo(x, y);\n            var local = this.globalToLocal(this._tempPoint, this._tempPoint);\n            var box;\n            //early out for box test\n            if (!(box = this.getBox()).contains(local.x, local.y, 0))\n                return false;\n            //early out for non-shape tests\n            if (!shapeFlag)\n                return true;\n            //ok do the graphics thing\n            if (this._graphics._hitTestPointInternal(local.x, local.y))\n                return true;\n        }\n        return _super.prototype._hitTestPointInternal.call(this, x, y, shapeFlag, masksFlag);\n    };\n    Sprite.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this._graphics.clear();\n    };\n    Sprite._sprites = new Array();\n    Sprite.assetType = \"[asset Sprite]\";\n    return Sprite;\n}(DisplayObjectContainer_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Sprite;\n\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/TextField\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nvar Matrix_1 = require(\"awayjs-core/lib/geom/Matrix\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar Style_1 = require(\"../base/Style\");\nvar TextFieldType_1 = require(\"../text/TextFieldType\");\nvar Sprite_1 = require(\"../display/Sprite\");\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n *\n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nvar TextField = (function (_super) {\n    __extends(TextField, _super);\n    /**\n     * Creates a new TextField instance. After you create the TextField instance,\n     * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n     * the parent DisplayObjectContainer object to add the TextField instance to\n     * the display list.\n     *\n     * <p>The default size for a text field is 100 x 100 pixels.</p>\n     */\n    function TextField() {\n        _super.call(this);\n        this._text = \"\";\n        this.type = TextFieldType_1.default.STATIC;\n    }\n    Object.defineProperty(TextField.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return TextField.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"bottomScrollV\", {\n        /**\n         * An integer(1-based index) that indicates the bottommost line that is\n         * currently visible in the specified text field. Think of the text field as\n         * a window onto a block of text. The <code>scrollV</code> property is the\n         * 1-based index of the topmost visible line in the window.\n         *\n         * <p>All the text between the lines indicated by <code>scrollV</code> and\n         * <code>bottomScrollV</code> is currently visible in the text field.</p>\n         */\n        get: function () {\n            return this._bottomScrollV;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"caretIndex\", {\n        /**\n         * The index of the insertion point(caret) position. If no insertion point\n         * is displayed, the value is the position the insertion point would be if\n         * you restored focus to the field(typically where the insertion point last\n         * was, or 0 if the field has not had focus).\n         *\n         * <p>Selection span indexes are zero-based(for example, the first position\n         * is 0, the second position is 1, and so on).</p>\n         */\n        get: function () {\n            return this._caretIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"length\", {\n        /**\n         * The number of characters in a text field. A character such as tab\n         * (<code>\\t</code>) counts as one character.\n         */\n        get: function () {\n            return this._length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * The maximum value of <code>scrollH</code>.\n     */\n    TextField.prototype.maxScrollH = function () {\n        return this._maxScrollH;\n    };\n    /**\n     * The maximum value of <code>scrollV</code>.\n     */\n    TextField.prototype.maxScrollV = function () {\n        return this._maxScrollV;\n    };\n    Object.defineProperty(TextField.prototype, \"numLines\", {\n        /**\n         * Defines the number of text lines in a multiline text field. If\n         * <code>wordWrap</code> property is set to <code>true</code>, the number of\n         * lines increases when text wraps.\n         */\n        get: function () {\n            return this._numLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"selectionBeginIndex\", {\n        /**\n         * The zero-based character index value of the first character in the current\n         * selection. For example, the first character is 0, the second character is\n         * 1, and so on. If no text is selected, this property is the value of\n         * <code>caretIndex</code>.\n         */\n        get: function () {\n            return this._selectionBeginIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"selectionEndIndex\", {\n        /**\n         * The zero-based character index value of the last character in the current\n         * selection. For example, the first character is 0, the second character is\n         * 1, and so on. If no text is selected, this property is the value of\n         * <code>caretIndex</code>.\n         */\n        get: function () {\n            return this._selectionEndIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"text\", {\n        /**\n         * A string that is the current text in the text field. Lines are separated\n         * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n         * property contains unformatted text in the text field, without HTML tags.\n         *\n         * <p>To get the text in HTML form, use the <code>htmlText</code>\n         * property.</p>\n         */\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            value = value.toString();\n            if (this._text == value)\n                return;\n            this._text = value;\n            this._textGraphicsDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textFormat\", {\n        get: function () {\n            return this._textFormat;\n        },\n        set: function (value) {\n            if (this._textFormat == value)\n                return;\n            this._textFormat = value;\n            this._textGraphicsDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"graphics\", {\n        /**\n         * The graphics used by the sprite that provides it with its shape.\n         */\n        get: function () {\n            if (this._textGraphicsDirty)\n                this.reConstruct();\n            return this._graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textColor\", {\n        get: function () {\n            return this._textColor;\n        },\n        set: function (value) {\n            this._textColor = value;\n            if (!this.transform.colorTransform)\n                this.transform.colorTransform = new ColorTransform_1.default();\n            this.transform.colorTransform.color = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.default.COLOR_TRANSFORM);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textInteractionMode\", {\n        /**\n         * The interaction mode property, Default value is\n         * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n         * that the text can be scrolled but not selected. One can switch to the\n         * selectable mode through the in-built context menu on the text field. On\n         * Desktop, the normal mode implies that the text is in scrollable as well as\n         * selection mode.\n         */\n        get: function () {\n            return this._textInteractionMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textWidth\", {\n        /**\n         * The width of the text in pixels.\n         */\n        get: function () {\n            return this._textWidth;\n        },\n        set: function (value) {\n            this._textWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textHeight\", {\n        /**\n         * The width of the text in pixels.\n         */\n        get: function () {\n            return this._textHeight;\n        },\n        set: function (value) {\n            this._textHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"isEntity\", {\n        /**\n         *\n         */\n        get: function () {\n            return true; //TODO do this better\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextField.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        if (this._textElements)\n            this._textElements.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TextField.prototype.dispose = function () {\n        this.disposeValues();\n        TextField._textFields.push(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    TextField.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._textFormat = null;\n        this._textGraphic = null;\n        if (this._textElements) {\n            this._textElements.dispose();\n            this._textElements = null;\n        }\n    };\n    /**\n     * Reconstructs the Graphics for this Text-field.\n     */\n    TextField.prototype.reConstruct = function () {\n        this._textGraphicsDirty = false;\n        if (this._textFormat == null)\n            return;\n        if (this._textGraphic) {\n            this._textGraphic.dispose();\n            this._textGraphic = null;\n            this._textElements.clear();\n            this._textElements.dispose();\n            this._textElements = null;\n        }\n        if (this._text == \"\")\n            return;\n        var numVertices = 0;\n        var elements;\n        var char_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n        var y_offset = 0;\n        var prev_char = null;\n        var j = 0;\n        var k = 0;\n        var whitespace_width = (this._textFormat.font_table.get_whitespace_width() * char_scale) + this._textFormat.letterSpacing;\n        var textlines = this.text.toString().split(\"\\\\n\");\n        var final_lines_chars = [];\n        var final_lines_char_scale = [];\n        var final_lines_width = [];\n        var final_lines_justify_bool = [];\n        var final_lines_justify = [];\n        var maxlineWidth = this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\n        for (var tl = 0; tl < textlines.length; tl++) {\n            final_lines_chars.push([]);\n            final_lines_char_scale.push([]);\n            final_lines_width.push(0);\n            final_lines_justify.push(0);\n            final_lines_justify_bool.push(false);\n            var words = textlines[tl].split(\" \");\n            for (var i = 0; i < words.length; i++) {\n                var word_width = 0;\n                var word_chars = [];\n                var word_chars_scale = [];\n                var c_cnt = 0;\n                for (var w = 0; w < words[i].length; w++) {\n                    char_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n                    var this_char = this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n                    if (this_char == null) {\n                        if (this._textFormat.fallback_font_table) {\n                            char_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n                            this_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n                        }\n                    }\n                    if (this_char != null) {\n                        elements = this_char.elements;\n                        if (elements != null) {\n                            numVertices += elements.numVertices;\n                            // find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n                            var kerning_value = 0;\n                            if (prev_char != null) {\n                                for (var k = 0; k < prev_char.kerningCharCodes.length; k++) {\n                                    if (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n                                        kerning_value = prev_char.kerningValues[k];\n                                        break;\n                                    }\n                                }\n                            }\n                            word_width += ((2 + this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n                        }\n                        else {\n                            // if no char-elements was found, we insert a \"space\"\n                            word_width += whitespace_width;\n                        }\n                    }\n                    else {\n                        // if no char-elements was found, we insert a \"space\"\n                        //x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n                        word_width += whitespace_width;\n                    }\n                    word_chars_scale[c_cnt] = char_scale;\n                    word_chars[c_cnt++] = this_char;\n                }\n                if (((final_lines_width[final_lines_width.length - 1] + word_width) <= maxlineWidth) || (final_lines_chars[final_lines_chars.length - 1].length == 0)) {\n                    // if line can hold this word without breaking the bounds, we can just add all chars\n                    for (var fw = 0; fw < word_chars_scale.length; fw++) {\n                        final_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n                    }\n                    final_lines_width[final_lines_width.length - 1] += word_width;\n                }\n                else {\n                    // word does not fit\n                    // todo respect autowrapping properties.\n                    // right now we just pretend everything has autowrapping and multiline\n                    if (final_lines_chars[final_lines_chars.length - 1][final_lines_chars[final_lines_chars.length - 1].length - 1] == null) {\n                        final_lines_chars[final_lines_chars.length - 1].pop();\n                        final_lines_char_scale[final_lines_char_scale.length - 1].pop();\n                        final_lines_width[final_lines_width.length - 1] -= whitespace_width;\n                        final_lines_justify[final_lines_justify.length - 1] -= 1;\n                    }\n                    final_lines_justify_bool[final_lines_justify_bool.length - 1] = true;\n                    final_lines_chars.push([]);\n                    final_lines_char_scale.push([]);\n                    final_lines_width.push(0);\n                    final_lines_justify.push(0);\n                    final_lines_justify_bool.push(false);\n                    for (var fw = 0; fw < word_chars_scale.length; fw++) {\n                        final_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n                    }\n                    final_lines_width[final_lines_width.length - 1] = word_width;\n                }\n                if (i < (words.length - 1)) {\n                    if ((final_lines_width[final_lines_width.length - 1]) <= maxlineWidth) {\n                        final_lines_chars[final_lines_chars.length - 1].push(null);\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n                        final_lines_width[final_lines_width.length - 1] += whitespace_width;\n                        final_lines_justify[final_lines_justify.length - 1] += 1;\n                    }\n                }\n            }\n        }\n        y_offset = 2 + (this._textFormat.font_table.ascent - this._textFormat.font_table.get_font_em_size()) * char_scale;\n        var vertices = new Float32Array(numVertices * 3);\n        for (var i = 0; i < final_lines_chars.length; i++) {\n            var x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent;\n            var justify_addion = 0;\n            if (this._textFormat.align == \"center\") {\n                x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent + (maxlineWidth - final_lines_width[i]) / 2;\n            }\n            else if (this._textFormat.align == \"justify\") {\n                if (final_lines_justify_bool[i]) {\n                    justify_addion = ((maxlineWidth) - final_lines_width[i]) / final_lines_justify[i];\n                }\n            }\n            else if (this._textFormat.align == \"right\") {\n                x_offset = (this._textWidth - final_lines_width[i]) - (2 + this._textFormat.rightMargin);\n            }\n            //console.log(\"this._textFormat.align=\"+this._textFormat.align);\n            //console.log(\"this._width=\"+this._width);\n            for (var t = 0; t < final_lines_chars[i].length; t++) {\n                var this_char = final_lines_chars[i][t];\n                char_scale = final_lines_char_scale[i][t];\n                if (this_char != null) {\n                    elements = this_char.elements;\n                    if (elements != null) {\n                        var buffer = new Float32Array(elements.concatenatedBuffer.buffer);\n                        for (var v = 0; v < elements.numVertices; v++) {\n                            vertices[j++] = buffer[v * 3] * char_scale + x_offset;\n                            vertices[j++] = buffer[v * 3 + 1] * char_scale + y_offset;\n                            vertices[j++] = buffer[v * 3 + 2];\n                        }\n                        // find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n                        var kerning_value = 0;\n                        if (prev_char != null) {\n                            for (var k = 0; k < prev_char.kerningCharCodes.length; k++) {\n                                if (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n                                    kerning_value = prev_char.kerningValues[k];\n                                    break;\n                                }\n                            }\n                        }\n                        x_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n                    }\n                    else {\n                        // if no char-elements was found, we insert a \"space\"\n                        x_offset += whitespace_width + justify_addion;\n                    }\n                }\n                else {\n                    x_offset += whitespace_width + justify_addion;\n                }\n            }\n            // hack for multiline textfield in icycle.\n            y_offset += (this._textFormat.font_table.ascent + this._textFormat.font_table.descent) * char_scale;\n            //y_offset+=(this._textFormat.font_table.get_font_em_size()-this._textFormat.font_table.descent)*char_scale;\n            y_offset += this._textFormat.leading;\n        }\n        var attributesView = new AttributesView_1.default(Float32Array, 3);\n        attributesView.set(vertices);\n        var vertexBuffer = attributesView.buffer;\n        attributesView.dispose();\n        this._textElements = new TriangleElements_1.default(vertexBuffer);\n        this._textElements.setPositions(new Float2Attributes_1.default(vertexBuffer));\n        this._textElements.setCustomAttributes(\"curves\", new Byte4Attributes_1.default(vertexBuffer, false));\n        this._textGraphic = this._graphics.addGraphic(this._textElements);\n        this.material = this._textFormat.material;\n        var sampler = new Sampler2D_1.default();\n        this.style = new Style_1.default();\n        this.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n        this.style.uvMatrix = new Matrix_1.default(0, 0, 0, 0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n        this.material.animateUVs = true;\n    };\n    /**\n     * Appends the string specified by the <code>newText</code> parameter to the\n     * end of the text of the text field. This method is more efficient than an\n     * addition assignment(<code>+=</code>) on a <code>text</code> property\n     * (such as <code>someTextField.text += moreText</code>), particularly for a\n     * text field that contains a significant amount of content.\n     *\n     * @param newText The string to append to the existing text.\n     */\n    TextField.prototype.appendText = function (newText) {\n        this._text += newText;\n    };\n    /**\n     * *tells the Textfield that a paragraph is defined completly.\n     * e.g. the textfield will start a new line for future added text.\n     */\n    TextField.prototype.closeParagraph = function () {\n        //TODO\n    };\n    /**\n     * Returns a rectangle that is the bounding box of the character.\n     *\n     * @param charIndex The zero-based index value for the character(for\n     *                  example, the first position is 0, the second position is\n     *                  1, and so on).\n     * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n     *         maximum values defining the bounding box of the character.\n     */\n    TextField.prototype.getCharBoundaries = function (charIndex) {\n        return this._charBoundaries;\n    };\n    /**\n     * Returns the zero-based index value of the character at the point specified\n     * by the <code>x</code> and <code>y</code> parameters.\n     *\n     * @param x The <i>x</i> coordinate of the character.\n     * @param y The <i>y</i> coordinate of the character.\n     * @return The zero-based index value of the character(for example, the\n     *         first position is 0, the second position is 1, and so on). Returns\n     *         -1 if the point is not over any character.\n     */\n    TextField.prototype.getCharIndexAtPoint = function (x, y) {\n        return this._charIndexAtPoint;\n    };\n    /**\n     * Given a character index, returns the index of the first character in the\n     * same paragraph.\n     *\n     * @param charIndex The zero-based index value of the character(for example,\n     *                  the first character is 0, the second character is 1, and\n     *                  so on).\n     * @return The zero-based index value of the first character in the same\n     *         paragraph.\n     * @throws RangeError The character index specified is out of range.\n     */\n    TextField.prototype.getFirstCharInParagraph = function (charIndex /*int*/) {\n        return this._firstCharInParagraph;\n    };\n    /**\n     * Returns a DisplayObject reference for the given <code>id</code>, for an\n     * image or SWF file that has been added to an HTML-formatted text field by\n     * using an <code><img></code> tag. The <code><img></code> tag is in the\n     * following format:\n     *\n     * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n     * 'instanceName' ></code></pre></p>\n     *\n     * @param id The <code>id</code> to match(in the <code>id</code> attribute\n     *           of the <code><img></code> tag).\n     * @return The display object corresponding to the image or SWF file with the\n     *         matching <code>id</code> attribute in the <code><img></code> tag\n     *         of the text field. For media loaded from an external source, this\n     *         object is a Loader object, and, once loaded, the media object is a\n     *         child of that Loader object. For media embedded in the SWF file,\n     *         it is the loaded object. If no <code><img></code> tag with the\n     *         matching <code>id</code> exists, the method returns\n     *         <code>null</code>.\n     */\n    TextField.prototype.getImageReference = function (id) {\n        return this._imageReference;\n    };\n    /**\n     * Returns the zero-based index value of the line at the point specified by\n     * the <code>x</code> and <code>y</code> parameters.\n     *\n     * @param x The <i>x</i> coordinate of the line.\n     * @param y The <i>y</i> coordinate of the line.\n     * @return The zero-based index value of the line(for example, the first\n     *         line is 0, the second line is 1, and so on). Returns -1 if the\n     *         point is not over any line.\n     */\n    TextField.prototype.getLineIndexAtPoint = function (x, y) {\n        return this._lineIndexAtPoint;\n    };\n    /**\n     * Returns the zero-based index value of the line containing the character\n     * specified by the <code>charIndex</code> parameter.\n     *\n     * @param charIndex The zero-based index value of the character(for example,\n     *                  the first character is 0, the second character is 1, and\n     *                  so on).\n     * @return The zero-based index value of the line.\n     * @throws RangeError The character index specified is out of range.\n     */\n    TextField.prototype.getLineIndexOfChar = function (charIndex /*int*/) {\n        return this._lineIndexOfChar;\n    };\n    /**\n     * Returns the number of characters in a specific text line.\n     *\n     * @param lineIndex The line number for which you want the length.\n     * @return The number of characters in the line.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineLength = function (lineIndex /*int*/) {\n        return this._lineLength;\n    };\n    /**\n     * Returns metrics information about a given text line.\n     *\n     * @param lineIndex The line number for which you want metrics information.\n     * @return A TextLineMetrics object.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineMetrics = function (lineIndex /*int*/) {\n        return this._lineMetrics;\n    };\n    /**\n     * Returns the character index of the first character in the line that the\n     * <code>lineIndex</code> parameter specifies.\n     *\n     * @param lineIndex The zero-based index value of the line(for example, the\n     *                  first line is 0, the second line is 1, and so on).\n     * @return The zero-based index value of the first character in the line.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineOffset = function (lineIndex /*int*/) {\n        return this._lineOffset;\n    };\n    /**\n     * Returns the text of the line specified by the <code>lineIndex</code>\n     * parameter.\n     *\n     * @param lineIndex The zero-based index value of the line(for example, the\n     *                  first line is 0, the second line is 1, and so on).\n     * @return The text string contained in the specified line.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineText = function (lineIndex /*int*/) {\n        return this._lineText;\n    };\n    /**\n     * Given a character index, returns the length of the paragraph containing\n     * the given character. The length is relative to the first character in the\n     * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n     * the character index passed in.\n     *\n     * @param charIndex The zero-based index value of the character(for example,\n     *                  the first character is 0, the second character is 1, and\n     *                  so on).\n     * @return Returns the number of characters in the paragraph.\n     * @throws RangeError The character index specified is out of range.\n     */\n    TextField.prototype.getParagraphLength = function (charIndex /*int*/) {\n        return this._paragraphLength;\n    };\n    /**\n     * Returns a TextFormat object that contains formatting information for the\n     * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n     * parameters specify. Only properties that are common to the entire text\n     * specified are set in the resulting TextFormat object. Any property that is\n     * <i>mixed</i>, meaning that it has different values at different points in\n     * the text, has a value of <code>null</code>.\n     *\n     * <p>If you do not specify values for these parameters, this method is\n     * applied to all the text in the text field. </p>\n     *\n     * <p>The following table describes three possible usages:</p>\n     *\n     * @return The TextFormat object that represents the formatting properties\n     *         for the specified text.\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n     *                    specified is out of range.\n     */\n    TextField.prototype.getTextFormat = function (beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = -1; }\n        if (endIndex === void 0) { endIndex = -1; }\n        return this._textFormat;\n    };\n    /**\n     * Replaces the current selection with the contents of the <code>value</code>\n     * parameter. The text is inserted at the position of the current selection,\n     * using the current default character format and default paragraph format.\n     * The text is not treated as HTML.\n     *\n     * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n     * delete text without disrupting the character and paragraph formatting of\n     * the rest of the text.</p>\n     *\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\n     * the text field.</p>\n     *\n     * @param value The string to replace the currently selected text.\n     * @throws Error This method cannot be used on a text field with a style\n     *               sheet.\n     */\n    TextField.prototype.replaceSelectedText = function (value) {\n    };\n    /**\n     * Replaces the range of characters that the <code>beginIndex</code> and\n     * <code>endIndex</code> parameters specify with the contents of the\n     * <code>newText</code> parameter. As designed, the text from\n     * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n     *\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\n     * the text field.</p>\n     *\n     * @param beginIndex The zero-based index value for the start position of the\n     *                   replacement range.\n     * @param endIndex   The zero-based index position of the first character\n     *                   after the desired text span.\n     * @param newText    The text to use to replace the specified range of\n     *                   characters.\n     * @throws Error This method cannot be used on a text field with a style\n     *               sheet.\n     */\n    TextField.prototype.replaceText = function (beginIndex /*int*/, endIndex /*int*/, newText) {\n    };\n    /**\n     * Sets as selected the text designated by the index values of the first and\n     * last characters, which are specified with the <code>beginIndex</code> and\n     * <code>endIndex</code> parameters. If the two parameter values are the\n     * same, this method sets the insertion point, as if you set the\n     * <code>caretIndex</code> property.\n     *\n     * @param beginIndex The zero-based index value of the first character in the\n     *                   selection(for example, the first character is 0, the\n     *                   second character is 1, and so on).\n     * @param endIndex   The zero-based index value of the last character in the\n     *                   selection.\n     */\n    TextField.prototype.setSelection = function (beginIndex /*int*/, endIndex /*int*/) {\n    };\n    /**\n     * Applies the text formatting that the <code>format</code> parameter\n     * specifies to the specified text in a text field. The value of\n     * <code>format</code> must be a TextFormat object that specifies the desired\n     * text formatting changes. Only the non-null properties of\n     * <code>format</code> are applied to the text field. Any property of\n     * <code>format</code> that is set to <code>null</code> is not applied. By\n     * default, all of the properties of a newly created TextFormat object are\n     * set to <code>null</code>.\n     *\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\n     * the text field.</p>\n     *\n     * <p>The <code>setTextFormat()</code> method changes the text formatting\n     * applied to a range of characters or to the entire body of text in a text\n     * field. To apply the properties of format to all text in the text field, do\n     * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n     * To apply the properties of the format to a range of text, specify values\n     * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n     * You can use the <code>length</code> property to determine the index\n     * values.</p>\n     *\n     * <p>The two types of formatting information in a TextFormat object are\n     * character level formatting and paragraph level formatting. Each character\n     * in a text field can have its own character formatting settings, such as\n     * font name, font size, bold, and italic.</p>\n     *\n     * <p>For paragraphs, the first character of the paragraph is examined for\n     * the paragraph formatting settings for the entire paragraph. Examples of\n     * paragraph formatting settings are left margin, right margin, and\n     * indentation.</p>\n     *\n     * <p>Any text inserted manually by the user, or replaced by the\n     * <code>replaceSelectedText()</code> method, receives the default text field\n     * formatting for new text, and not the formatting specified for the text\n     * insertion point. To set the default formatting for new text, use\n     * <code>defaultTextFormat</code>.</p>\n     *\n     * @param format A TextFormat object that contains character and paragraph\n     *               formatting information.\n     * @throws Error      This method cannot be used on a text field with a style\n     *                    sheet.\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n     *                    specified is out of range.\n     */\n    TextField.prototype.setTextFormat = function (format, beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = -1; }\n        if (endIndex === void 0) { endIndex = -1; }\n    };\n    /**\n     * Returns true if an embedded font is available with the specified\n     * <code>fontName</code> and <code>fontStyle</code> where\n     * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n     * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n     * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n     * embedded fonts are only used with the flash.text.engine classes. The two\n     * types are distinguished by the <code>fontType</code> property of the\n     * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n     * function.\n     *\n     * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n     * <code>embedFonts</code> is set to <code>true</code> and the only font\n     * available at run time with the specified name and style is of type\n     * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n     * embedded font were available with the specified name and style.</p>\n     *\n     * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n     * available with the same name and style, the <code>EMBEDDED</code> font is\n     * selected and text renders with the <code>EMBEDDED</code> font.</p>\n     *\n     * @param fontName  The name of the embedded font to check.\n     * @param fontStyle Specifies the font style to check. Use\n     *                  <code>flash.text.FontStyle</code>\n     * @return <code>true</code> if a compatible embedded font is available,\n     *         otherwise <code>false</code>.\n     * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n     *                       of <code>flash.text.FontStyle</code>.\n     */\n    TextField.isFontCompatible = function (fontName, fontStyle) {\n        return false;\n    };\n    TextField.prototype.clone = function () {\n        var newInstance = (TextField._textFields.length) ? TextField._textFields.pop() : new TextField();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    TextField.prototype.copyTo = function (newInstance) {\n        _super.prototype.copyTo.call(this, newInstance);\n        newInstance.textWidth = this._textWidth;\n        newInstance.textHeight = this._textHeight;\n        newInstance.textFormat = this._textFormat;\n        //newInstance.textColor = this._textColor;\n        newInstance.text = this._text;\n    };\n    TextField._textFields = new Array();\n    TextField.assetType = \"[asset TextField]\";\n    return TextField;\n}(Sprite_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextField;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../text/TextFieldType\":\"awayjs-display/lib/text/TextFieldType\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/geom/Matrix\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined}],\"awayjs-display/lib/display\":[function(require,module,exports){\n\"use strict\";\nvar Billboard_1 = require(\"./display/Billboard\");\nexports.Billboard = Billboard_1.default;\nvar Camera_1 = require(\"./display/Camera\");\nexports.Camera = Camera_1.default;\nvar DirectionalLight_1 = require(\"./display/DirectionalLight\");\nexports.DirectionalLight = DirectionalLight_1.default;\nvar DisplayObject_1 = require(\"./display/DisplayObject\");\nexports.DisplayObject = DisplayObject_1.default;\nvar DisplayObjectContainer_1 = require(\"./display/DisplayObjectContainer\");\nexports.DisplayObjectContainer = DisplayObjectContainer_1.default;\nvar LightBase_1 = require(\"./display/LightBase\");\nexports.LightBase = LightBase_1.default;\nvar LightProbe_1 = require(\"./display/LightProbe\");\nexports.LightProbe = LightProbe_1.default;\nvar LineSegment_1 = require(\"./display/LineSegment\");\nexports.LineSegment = LineSegment_1.default;\nvar LoaderContainer_1 = require(\"./display/LoaderContainer\");\nexports.LoaderContainer = LoaderContainer_1.default;\nvar MovieClip_1 = require(\"./display/MovieClip\");\nexports.MovieClip = MovieClip_1.default;\nvar PointLight_1 = require(\"./display/PointLight\");\nexports.PointLight = PointLight_1.default;\nvar Scene_1 = require(\"./display/Scene\");\nexports.Scene = Scene_1.default;\nvar Shape_1 = require(\"./display/Shape\");\nexports.Shape = Shape_1.default;\nvar Skybox_1 = require(\"./display/Skybox\");\nexports.Skybox = Skybox_1.default;\nvar Sprite_1 = require(\"./display/Sprite\");\nexports.Sprite = Sprite_1.default;\nvar TextField_1 = require(\"./display/TextField\");\nexports.TextField = TextField_1.default;\n\n},{\"./display/Billboard\":\"awayjs-display/lib/display/Billboard\",\"./display/Camera\":\"awayjs-display/lib/display/Camera\",\"./display/DirectionalLight\":\"awayjs-display/lib/display/DirectionalLight\",\"./display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"./display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"./display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"./display/LightProbe\":\"awayjs-display/lib/display/LightProbe\",\"./display/LineSegment\":\"awayjs-display/lib/display/LineSegment\",\"./display/LoaderContainer\":\"awayjs-display/lib/display/LoaderContainer\",\"./display/MovieClip\":\"awayjs-display/lib/display/MovieClip\",\"./display/PointLight\":\"awayjs-display/lib/display/PointLight\",\"./display/Scene\":\"awayjs-display/lib/display/Scene\",\"./display/Shape\":\"awayjs-display/lib/display/Shape\",\"./display/Skybox\":\"awayjs-display/lib/display/Skybox\",\"./display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"./display/TextField\":\"awayjs-display/lib/display/TextField\"}],\"awayjs-display/lib/draw/CapsStyle\":[function(require,module,exports){\n\"use strict\";\n/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nvar CapsStyle = (function () {\n    function CapsStyle() {\n    }\n    /**\n     * Used to specify round caps in the <code>caps</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    CapsStyle.ROUND = 1;\n    /**\n     * Used to specify no caps in the <code>caps</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    CapsStyle.NONE = 0;\n    /**\n     * Used to specify square caps in the <code>caps</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    CapsStyle.SQUARE = 2;\n    return CapsStyle;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CapsStyle;\n\n},{}],\"awayjs-display/lib/draw/GradientType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nvar GradientType = (function () {\n    function GradientType() {\n    }\n    /**\n     * Value used to specify a linear gradient fill.\n     */\n    GradientType.LINEAR = \"linear\";\n    /**\n     * Value used to specify a radial gradient fill.\n     */\n    GradientType.RADIAL = \"radial\";\n    return GradientType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GradientType;\n\n},{}],\"awayjs-display/lib/draw/GraphicsFactoryFills\":[function(require,module,exports){\n\"use strict\";\nvar GraphicsPathCommand_1 = require(\"../draw/GraphicsPathCommand\");\nvar DefaultMaterialManager_1 = require(\"../managers/DefaultMaterialManager\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar GraphicsFactoryHelper_1 = require(\"../draw/GraphicsFactoryHelper\");\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nvar GraphicsFactoryFills = (function () {\n    function GraphicsFactoryFills() {\n    }\n    GraphicsFactoryFills.draw_pathes = function (targetGraphic) {\n        var len = targetGraphic.queued_fill_pathes.length;\n        var cp = 0;\n        for (cp = 0; cp < len; cp++) {\n            var one_path = targetGraphic.queued_fill_pathes[cp];\n            //one_path.finalizeContour();\n            var contour_commands = one_path.commands;\n            var contour_data = one_path.data;\n            var commands;\n            var data;\n            var i = 0;\n            var k = 0;\n            var vert_cnt = 0;\n            var data_cnt = 0;\n            var draw_direction = 0;\n            var contours_vertices = [[]];\n            var final_vert_list = [];\n            var final_vert_cnt = 0;\n            var lastPoint = new Point_1.default();\n            var last_dir_vec = new Point_1.default();\n            var end_point = new Point_1.default();\n            for (k = 0; k < contour_commands.length; k++) {\n                contours_vertices.push([]);\n                vert_cnt = 0;\n                data_cnt = 0;\n                commands = contour_commands[k];\n                data = contour_data[k];\n                draw_direction = 0;\n                var new_dir = 0;\n                var new_dir_1 = 0;\n                var new_dir_2 = 0;\n                var dir_delta = 0;\n                var last_direction = 0;\n                var tmp_dir_point = new Point_1.default();\n                if ((data[0] != data[data.length - 2]) || (data[1] != data[data.length - 1])) {\n                    data[data.length] == data[0];\n                    data[data.length] == data[1];\n                }\n                lastPoint.x = data[0];\n                lastPoint.y = data[1];\n                if (commands[1] == GraphicsPathCommand_1.default.LINE_TO) {\n                    last_dir_vec.x = data[2] - lastPoint.x;\n                    last_dir_vec.y = data[3] - lastPoint.y;\n                }\n                else if (commands[1] == GraphicsPathCommand_1.default.CURVE_TO) {\n                    last_dir_vec.x = data[4] - lastPoint.x;\n                    last_dir_vec.y = data[5] - lastPoint.y;\n                }\n                data_cnt = 2;\n                last_dir_vec.normalize();\n                last_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts_1.default.RADIANS_TO_DEGREES;\n                for (i = 1; i < commands.length; i++) {\n                    end_point = new Point_1.default(data[data_cnt++], data[data_cnt++]);\n                    if (commands[i] == GraphicsPathCommand_1.default.MOVE_TO) {\n                        console.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n                    }\n                    else if (commands[i] == GraphicsPathCommand_1.default.CURVE_TO) {\n                        end_point = new Point_1.default(data[data_cnt++], data[data_cnt++]);\n                    }\n                    //get the directional vector and the direction for this segment\n                    tmp_dir_point.x = end_point.x - lastPoint.x;\n                    tmp_dir_point.y = end_point.y - lastPoint.y;\n                    tmp_dir_point.normalize();\n                    new_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.default.RADIANS_TO_DEGREES;\n                    // get the difference in angle to the last segment\n                    dir_delta = new_dir - last_direction;\n                    if (dir_delta > 180) {\n                        dir_delta -= 360;\n                    }\n                    if (dir_delta < -180) {\n                        dir_delta += 360;\n                    }\n                    draw_direction += dir_delta;\n                    last_direction = new_dir;\n                    lastPoint.x = end_point.x;\n                    lastPoint.y = end_point.y;\n                }\n                lastPoint.x = data[0];\n                lastPoint.y = data[1];\n                data_cnt = 2;\n                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n                //console.log(\"Draw directions complete: \"+draw_direction);\n                for (i = 1; i < commands.length; i++) {\n                    switch (commands[i]) {\n                        case GraphicsPathCommand_1.default.MOVE_TO:\n                            console.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n                            break;\n                        case GraphicsPathCommand_1.default.LINE_TO:\n                            lastPoint.x = data[data_cnt++];\n                            lastPoint.y = data[data_cnt++];\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n                            break;\n                        case GraphicsPathCommand_1.default.CURVE_TO:\n                            var control_x = data[data_cnt++];\n                            var control_y = data[data_cnt++];\n                            var end_x = data[data_cnt++];\n                            var end_y = data[data_cnt++];\n                            tmp_dir_point.x = control_x - lastPoint.x;\n                            tmp_dir_point.y = control_y - lastPoint.y;\n                            tmp_dir_point.normalize();\n                            new_dir_1 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.default.RADIANS_TO_DEGREES;\n                            tmp_dir_point.x = end_x - lastPoint.x;\n                            tmp_dir_point.y = end_y - lastPoint.y;\n                            tmp_dir_point.normalize();\n                            new_dir_2 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.default.RADIANS_TO_DEGREES;\n                            // get the difference in angle to the last segment\n                            var curve_direction = new_dir_2 - new_dir_1;\n                            if (curve_direction > 180) {\n                                curve_direction -= 360;\n                            }\n                            if (curve_direction < -180) {\n                                curve_direction += 360;\n                            }\n                            if ((curve_direction == 0) && (curve_direction == 180) && (curve_direction == -180)) {\n                                lastPoint.x = end_x;\n                                lastPoint.y = end_y;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n                                break;\n                            }\n                            var curve_attr_1 = -1;\n                            if (draw_direction < 0) {\n                                if (curve_direction > 0) {\n                                    //convex\n                                    //console.log(\"convex\");\n                                    curve_attr_1 = 1;\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n                                }\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n                            }\n                            else {\n                                if (curve_direction < 0) {\n                                    //convex\n                                    //console.log(\"convex\");\n                                    curve_attr_1 = 1;\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n                                }\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n                            }\n                            if (GraphicsFactoryHelper_1.default.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)) {\n                                final_vert_list[final_vert_cnt++] = end_x;\n                                final_vert_list[final_vert_cnt++] = end_y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = control_x;\n                                final_vert_list[final_vert_cnt++] = control_y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 0.5;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = lastPoint.x;\n                                final_vert_list[final_vert_cnt++] = lastPoint.y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                            }\n                            else {\n                                final_vert_list[final_vert_cnt++] = lastPoint.x;\n                                final_vert_list[final_vert_cnt++] = lastPoint.y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = control_x;\n                                final_vert_list[final_vert_cnt++] = control_y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 0.5;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = end_x;\n                                final_vert_list[final_vert_cnt++] = end_y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                            }\n                            lastPoint.x = end_x;\n                            lastPoint.y = end_y;\n                            break;\n                        case GraphicsPathCommand_1.default.CUBIC_CURVE:\n                            //todo\n                            break;\n                    }\n                }\n            }\n            var verts = [];\n            var all_verts = [];\n            var vertIndicess = [];\n            var elems = [];\n            for (k = 0; k < contours_vertices.length; k++) {\n                var vertices = contours_vertices[k];\n                //for (i = 0; i < vertices.length / 2; ++i)\n                //console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n                var verticesF32 = new Float32Array(vertices);\n                //var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n                //console.log(\"in vertices\", vertices);\n                //var tess = new TESS();\n                if (GraphicsFactoryHelper_1.default._tess_obj == null) {\n                    console.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n                    return;\n                }\n                GraphicsFactoryHelper_1.default._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n            }\n            GraphicsFactoryHelper_1.default._tess_obj.tesselate(0 /*TESS.WINDING_ODD*/, 0 /*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n            //console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n            verts = GraphicsFactoryHelper_1.default._tess_obj.getVertices();\n            elems = GraphicsFactoryHelper_1.default._tess_obj.getElements();\n            //console.log(\"out elements\", Graphics._tess_obj.getElements());\n            var numVerts = verts.length / 2;\n            var numElems = elems.length / 3;\n            for (i = 0; i < numVerts; ++i)\n                all_verts.push(new Point_1.default(verts[i * 2], verts[i * 2 + 1]));\n            for (i = 0; i < numElems; ++i) {\n                var p1 = elems[i * 3];\n                var p2 = elems[i * 3 + 1];\n                var p3 = elems[i * 3 + 2];\n                final_vert_list[final_vert_cnt++] = all_verts[p3].x;\n                final_vert_list[final_vert_cnt++] = all_verts[p3].y;\n                final_vert_list[final_vert_cnt++] = 1;\n                final_vert_list[final_vert_cnt++] = 2.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = 1.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = all_verts[p2].x;\n                final_vert_list[final_vert_cnt++] = all_verts[p2].y;\n                final_vert_list[final_vert_cnt++] = 1;\n                final_vert_list[final_vert_cnt++] = 2.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = 1.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = all_verts[p1].x;\n                final_vert_list[final_vert_cnt++] = all_verts[p1].y;\n                final_vert_list[final_vert_cnt++] = 1;\n                final_vert_list[final_vert_cnt++] = 2.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = 1.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n            }\n            //for (i = 0; i < final_vert_list.length/7; ++i)\n            //\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n            var attributesView = new AttributesView_1.default(Float32Array, 7);\n            attributesView.set(final_vert_list);\n            var attributesBuffer = attributesView.buffer;\n            attributesView.dispose();\n            var elements = new TriangleElements_1.default(attributesBuffer);\n            elements.setPositions(new Float2Attributes_1.default(attributesBuffer));\n            elements.setCustomAttributes(\"curves\", new Float3Attributes_1.default(attributesBuffer));\n            elements.setUVs(new Float2Attributes_1.default(attributesBuffer));\n            var material = DefaultMaterialManager_1.default.getDefaultMaterial();\n            material.bothSides = true;\n            material.useColorTransform = true;\n            material.curves = true;\n            var thisGraphic = targetGraphic.addGraphic(elements, material);\n        }\n        targetGraphic.queued_fill_pathes.length = 0;\n    };\n    return GraphicsFactoryFills;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsFactoryFills;\n\n},{\"../draw/GraphicsFactoryHelper\":\"awayjs-display/lib/draw/GraphicsFactoryHelper\",\"../draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsFactoryHelper\":[function(require,module,exports){\n\"use strict\";\nvar CapsStyle_1 = require(\"../draw/CapsStyle\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nvar GraphicsFactoryHelper = (function () {\n    function GraphicsFactoryHelper() {\n    }\n    GraphicsFactoryHelper.isClockWiseXY = function (point1x, point1y, point2x, point2y, point3x, point3y) {\n        var num = (point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x);\n        if (num < 0)\n            return false;\n        return true;\n    };\n    GraphicsFactoryHelper.getSign = function (ax, ay, cx, cy, bx, by) {\n        return (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n    };\n    GraphicsFactoryHelper.pointInTri = function (ax, ay, bx, by, cx, cy, xx, xy) {\n        var b1 = GraphicsFactoryHelper.getSign(ax, ay, xx, xy, bx, by) > 0;\n        var b2 = GraphicsFactoryHelper.getSign(bx, by, xx, xy, cx, cy) > 0;\n        var b3 = GraphicsFactoryHelper.getSign(cx, cy, xx, xy, ax, ay) > 0;\n        return ((b1 == b2) && (b2 == b3));\n    };\n    GraphicsFactoryHelper.getControlXForCurveX = function (a, c, b) {\n        return c;\n    };\n    GraphicsFactoryHelper.getControlYForCurveY = function (a, c, b) {\n        return c;\n    };\n    GraphicsFactoryHelper.drawPoint = function (startX, startY, vertices) {\n        GraphicsFactoryHelper.addTriangle(startX - 2, startY - 2, startX + 2, startY - 2, startX + 2, startY + 2, 0, vertices);\n        GraphicsFactoryHelper.addTriangle(startX - 2, startY - 2, startX - 2, startY + 2, startX + 2, startY + 2, 0, vertices);\n    };\n    GraphicsFactoryHelper.addTriangle = function (startX, startY, controlX, controlY, endX, endY, tri_type, vertices) {\n        var final_vert_cnt = vertices.length;\n        if (tri_type == 0) {\n            vertices[final_vert_cnt++] = startX;\n            vertices[final_vert_cnt++] = startY;\n            vertices[final_vert_cnt++] = 1;\n            vertices[final_vert_cnt++] = 2.0;\n            vertices[final_vert_cnt++] = 0.0;\n            vertices[final_vert_cnt++] = controlX;\n            vertices[final_vert_cnt++] = controlY;\n            vertices[final_vert_cnt++] = 1;\n            vertices[final_vert_cnt++] = 2.0;\n            vertices[final_vert_cnt++] = 0.0;\n            vertices[final_vert_cnt++] = endX;\n            vertices[final_vert_cnt++] = endY;\n            vertices[final_vert_cnt++] = 1;\n            vertices[final_vert_cnt++] = 2.0;\n            vertices[final_vert_cnt++] = 0.0;\n        }\n        else {\n            vertices[final_vert_cnt++] = startX;\n            vertices[final_vert_cnt++] = startY;\n            vertices[final_vert_cnt++] = tri_type;\n            vertices[final_vert_cnt++] = 1.0;\n            vertices[final_vert_cnt++] = 1.0;\n            vertices[final_vert_cnt++] = controlX;\n            vertices[final_vert_cnt++] = controlY;\n            vertices[final_vert_cnt++] = tri_type;\n            vertices[final_vert_cnt++] = 0.5;\n            vertices[final_vert_cnt++] = 0.0;\n            vertices[final_vert_cnt++] = endX;\n            vertices[final_vert_cnt++] = endY;\n            vertices[final_vert_cnt++] = tri_type;\n            vertices[final_vert_cnt++] = 0.0;\n            vertices[final_vert_cnt++] = 0.0;\n        }\n    };\n    GraphicsFactoryHelper.createCap = function (startX, startY, start_le, start_ri, dir_vec, capstyle, cap_position, thickness, vertices) {\n        if (capstyle == CapsStyle_1.default.ROUND) {\n            //console.log(\"add round cap\");\n            var tmp1_x = startX + (cap_position * (dir_vec.x * thickness));\n            var tmp1_y = startY + (cap_position * (dir_vec.y * thickness));\n            tmp1_x = tmp1_x * 2 - start_le.x / 2 - start_ri.x / 2;\n            tmp1_y = tmp1_y * 2 - start_le.y / 2 - start_ri.y / 2;\n            GraphicsFactoryHelper.addTriangle(start_le.x, start_le.y, tmp1_x, tmp1_y, start_ri.x, start_ri.y, -1, vertices);\n        }\n        else if (capstyle == CapsStyle_1.default.SQUARE) {\n            //console.log(\"add square cap\");\n            var tmp1_x = start_le.x + (cap_position * (dir_vec.x * thickness));\n            var tmp1_y = start_le.y + (cap_position * (dir_vec.y * thickness));\n            var tmp2_x = start_ri.x + (cap_position * (dir_vec.x * thickness));\n            var tmp2_y = start_ri.y + (cap_position * (dir_vec.y * thickness));\n            GraphicsFactoryHelper.addTriangle(tmp2_x, tmp2_y, tmp1_x, tmp1_y, start_le.x, start_le.y, 0, vertices);\n            GraphicsFactoryHelper.addTriangle(tmp2_x, tmp2_y, start_le.x, start_le.y, start_ri.x, start_ri.y, 0, vertices);\n        }\n    };\n    GraphicsFactoryHelper.getLineFormularData = function (a, b) {\n        var tmp_x = b.x - a.x;\n        var tmp_y = b.y - a.y;\n        var return_point = new Point_1.default();\n        if ((tmp_x != 0) && (tmp_y != 0))\n            return_point.x = tmp_y / tmp_x;\n        return_point.y = -(return_point.x * a.x - a.y);\n        return return_point;\n    };\n    GraphicsFactoryHelper.getQuadricBezierPosition = function (t, start, control, end) {\n        var xt = 1 - t;\n        return xt * xt * start + 2 * xt * t * control + t * t * end;\n    };\n    GraphicsFactoryHelper.subdivideCurve = function (startx, starty, cx, cy, endx, endy, startx2, starty2, cx2, cy2, endx2, endy2, array_out, array2_out) {\n        var angle_1 = Math.atan2(cy - starty, cx - startx) * MathConsts_1.default.RADIANS_TO_DEGREES;\n        var angle_2 = Math.atan2(endy - cy, endx - cx) * MathConsts_1.default.RADIANS_TO_DEGREES;\n        var angle_delta = angle_2 - angle_1;\n        //console.log(\"angle_delta \"+angle_delta);\n        if (angle_delta > 180) {\n            angle_delta -= 360;\n        }\n        if (angle_delta < -180) {\n            angle_delta += 360;\n        }\n        if (Math.abs(angle_delta) >= 150) {\n            array_out.push(startx, starty, cx, cy, endx, endy);\n            array2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n            return;\n        }\n        var b1 = false;\n        var b2 = false;\n        if (angle_delta < 0) {\n            // curve is curved to right side. right side is convex\n            b1 = GraphicsFactoryHelper.getSign(startx, starty, cx2, cy2, endx, endy) > 0;\n            b2 = GraphicsFactoryHelper.getSign(startx, starty, cx, cy, endx, endy) > 0;\n            b1 = (((starty - endy) * (cx - startx) + (endx - startx) * (cy - starty)) * ((starty - endy) * (cx2 - startx) + (endx - startx) * (cy2 - starty))) < 0;\n        }\n        else {\n            // curve is curved to left side. left side is convex\n            b1 = GraphicsFactoryHelper.getSign(startx2, starty2, cx2, cy2, endx2, endy2) > 0;\n            b2 = GraphicsFactoryHelper.getSign(startx2, starty2, cx, cy, endx2, endy2) > 0;\n            b1 = (((starty2 - endy) * (cx - startx2) + (endx2 - startx2) * (cy - starty2)) * ((starty2 - endy2) * (cx2 - startx2) + (endx2 - startx2) * (cy2 - starty2))) < 0;\n        }\n        if (b1) {\n            array_out.push(startx, starty, cx, cy, endx, endy);\n            array2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n            return;\n        }\n        // triangles overlap. we must subdivide:\n        var c1x = startx + (cx - startx) * 0.5; // new controlpoint 1.1\n        var c1y = starty + (cy - starty) * 0.5;\n        var c2x = cx + (endx - cx) * 0.5; // new controlpoint 1.2\n        var c2y = cy + (endy - cy) * 0.5;\n        var ax = c1x + (c2x - c1x) * 0.5; // new middlepoint 1\n        var ay = c1y + (c2y - c1y) * 0.5;\n        var c1x2 = startx2 + (cx2 - startx2) * 0.5; // new controlpoint 2.1\n        var c1y2 = starty2 + (cy2 - starty2) * 0.5;\n        var c2x2 = cx2 + (endx2 - cx2) * 0.5; // new controlpoint 2.2\n        var c2y2 = cy2 + (endy2 - cy2) * 0.5;\n        var ax2 = c1x2 + (c2x2 - c1x2) * 0.5; // new middlepoint 2\n        var ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n        GraphicsFactoryHelper.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n        GraphicsFactoryHelper.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n    };\n    return GraphicsFactoryHelper;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsFactoryHelper;\n\n},{\"../draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsFactoryStrokes\":[function(require,module,exports){\n\"use strict\";\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar JointStyle_1 = require(\"../draw/JointStyle\");\nvar GraphicsPathCommand_1 = require(\"../draw/GraphicsPathCommand\");\nvar DefaultMaterialManager_1 = require(\"../managers/DefaultMaterialManager\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar GraphicsFactoryHelper_1 = require(\"../draw/GraphicsFactoryHelper\");\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nvar GraphicsFactoryStrokes = (function () {\n    function GraphicsFactoryStrokes() {\n    }\n    GraphicsFactoryStrokes.draw_pathes = function (targetGraphic) {\n        var len = targetGraphic.queued_stroke_pathes.length;\n        var contour_commands;\n        var contour_data;\n        var strokeStyle;\n        var one_path;\n        var commands;\n        var data;\n        var i = 0;\n        var k = 0;\n        var vert_cnt = 0;\n        var data_cnt = 0;\n        var final_vert_list = [];\n        var final_vert_cnt = 0;\n        var lastPoint = new Point_1.default();\n        var start_point = new Point_1.default();\n        var end_point = new Point_1.default();\n        var start_left = new Point_1.default();\n        var start_right = new Point_1.default();\n        var ctr_left = new Point_1.default();\n        var ctr_right = new Point_1.default();\n        var ctr_left2 = new Point_1.default();\n        var ctr_right2 = new Point_1.default();\n        var end_left = new Point_1.default();\n        var end_right = new Point_1.default();\n        var tmp_point = new Point_1.default();\n        var tmp_point2 = new Point_1.default();\n        var tmp_point3 = new Point_1.default();\n        var closed = false;\n        var last_dir_vec = new Point_1.default();\n        var cp = 0;\n        for (cp = 0; cp < len; cp++) {\n            one_path = targetGraphic.queued_stroke_pathes[cp];\n            contour_commands = one_path.commands;\n            contour_data = one_path.data;\n            strokeStyle = one_path.stroke();\n            var tessVerts = [];\n            for (k = 0; k < contour_commands.length; k++) {\n                commands = contour_commands[k];\n                data = contour_data[k];\n                vert_cnt = 0;\n                data_cnt = 0;\n                var new_dir = 0;\n                var dir_delta = 0;\n                var last_direction = 0;\n                var tmp_dir_point = new Point_1.default();\n                closed = true;\n                if ((data[0] != data[data.length - 2]) || (data[1] != data[data.length - 1]))\n                    closed = false;\n                else {\n                    last_dir_vec.x = data[data.length - 2] - data[data.length - 4];\n                    last_dir_vec.y = data[data.length - 1] - data[data.length - 3];\n                    last_dir_vec.normalize();\n                    last_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts_1.default.RADIANS_TO_DEGREES;\n                }\n                data_cnt = 0;\n                lastPoint.x = data[data_cnt++];\n                lastPoint.y = data[data_cnt++];\n                var new_cmds = [];\n                var new_pnts = [];\n                var new_cmds_cnt = 0;\n                var new_pnts_cnt = 0;\n                var prev_normal = new Point_1.default();\n                var le_point = new Point_1.default();\n                var curve_end_point = new Point_1.default();\n                var ri_point = new Point_1.default();\n                var ctr_point = new Point_1.default();\n                prev_normal.x = -1 * last_dir_vec.y;\n                prev_normal.y = last_dir_vec.x;\n                for (i = 1; i < commands.length; i++) {\n                    if (commands[i] == GraphicsPathCommand_1.default.MOVE_TO) {\n                        console.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n                        continue;\n                    }\n                    //console.log(\"\");\n                    //console.log(\"segment \"+i+\"lastPoint x = \"+lastPoint.x+\" y = \"+lastPoint.y)\n                    end_point = new Point_1.default(data[data_cnt++], data[data_cnt++]);\n                    //console.log(\"segment \"+i+\"end_point x = \"+end_point.x+\" y = \"+end_point.y)\n                    if (commands[i] == GraphicsPathCommand_1.default.CURVE_TO) {\n                        curve_end_point = new Point_1.default(data[data_cnt++], data[data_cnt++]);\n                    }\n                    //get the directional vector and the direction for this segment\n                    tmp_dir_point.x = end_point.x - lastPoint.x;\n                    tmp_dir_point.y = end_point.y - lastPoint.y;\n                    tmp_dir_point.normalize();\n                    new_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.default.RADIANS_TO_DEGREES;\n                    // get the difference in angle to the last segment\n                    dir_delta = new_dir - last_direction;\n                    if (dir_delta > 180) {\n                        dir_delta -= 360;\n                    }\n                    if (dir_delta < -180) {\n                        dir_delta += 360;\n                    }\n                    last_direction = new_dir;\n                    //console.log(\"segment \"+i+\" direction: \"+dir_delta);\n                    // rotate direction around 90 degree\n                    tmp_point.x = -1 * tmp_dir_point.y;\n                    tmp_point.y = tmp_dir_point.x;\n                    ri_point = new Point_1.default(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n                    le_point = new Point_1.default(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n                    var add_segment = false;\n                    // check if this is the first segment, and the path is not closed\n                    // in this case, we can just set the points to the contour points\n                    if ((i == 1) && (!closed)) {\n                        //console.log(\"segment \"+i+\"Path is not closed, we can just add the first segment\")\n                        add_segment = true;\n                    }\n                    else {\n                        // we need to figure out if we need to add a joint or not\n                        if ((dir_delta == 0) || (dir_delta == 180)) {\n                            // check if this and the prev segment was a line. if yes, than they can be merged\n                            if ((i != 1) && (commands[i] == GraphicsPathCommand_1.default.LINE_TO) && (new_cmds[new_cmds.length - 1] == GraphicsPathCommand_1.default.LINE_TO)) {\n                                //console.log(\"straight line can be merged in prev straight line\");\n                                add_segment = false;\n                            }\n                            else {\n                                add_segment = true;\n                            }\n                        }\n                        if (dir_delta == 180) {\n                            console.log(\"path goes straight back (180�). DO we need to handle this edge case different ? !\");\n                        }\n                        else if (dir_delta != 0) {\n                            add_segment = true;\n                            var half_angle = (180 - (dir_delta));\n                            if (dir_delta < 0) {\n                                half_angle = (-180 - (dir_delta));\n                            }\n                            half_angle = half_angle * -0.5 * MathConsts_1.default.DEGREES_TO_RADIANS;\n                            var distance = strokeStyle.half_thickness / Math.sin(half_angle);\n                            tmp_point2.x = tmp_dir_point.x * Math.cos(half_angle) + tmp_dir_point.y * Math.sin(half_angle);\n                            tmp_point2.y = tmp_dir_point.y * Math.cos(half_angle) - tmp_dir_point.x * Math.sin(half_angle);\n                            tmp_point2.normalize();\n                            var merged_pnt_ri = new Point_1.default(lastPoint.x - (tmp_point2.x * distance), lastPoint.y - (tmp_point2.y * distance));\n                            var merged_pnt_le = new Point_1.default(lastPoint.x + (tmp_point2.x * distance), lastPoint.y + (tmp_point2.y * distance));\n                            if (dir_delta > 0) {\n                                ri_point = merged_pnt_ri;\n                                var contour_le = new Point_1.default(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n                                var contour_prev_le = new Point_1.default(lastPoint.x - (prev_normal.x * strokeStyle.half_thickness), lastPoint.y - (prev_normal.y * strokeStyle.half_thickness));\n                                le_point = contour_le;\n                            }\n                            else {\n                                le_point = merged_pnt_le;\n                                var contour_ri = new Point_1.default(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n                                var contour_prev_ri = new Point_1.default(lastPoint.x + (prev_normal.x * strokeStyle.half_thickness), lastPoint.y + (prev_normal.y * strokeStyle.half_thickness));\n                                ri_point = contour_ri;\n                            }\n                            var addJoints = true;\n                            if (strokeStyle.jointstyle == JointStyle_1.default.MITER) {\n                                var distance_miter = (Math.sqrt((distance * distance) - (strokeStyle.half_thickness * strokeStyle.half_thickness)) / strokeStyle.half_thickness);\n                                if (distance_miter <= strokeStyle.miter_limit) {\n                                    addJoints = false;\n                                    ri_point = merged_pnt_ri;\n                                    le_point = merged_pnt_le;\n                                }\n                                else {\n                                    if (dir_delta > 0) {\n                                        contour_le.x = contour_le.x - (tmp_dir_point.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        contour_le.y = contour_le.y - (tmp_dir_point.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        tmp_point3.x = prev_normal.y * -1;\n                                        tmp_point3.y = prev_normal.x;\n                                        contour_prev_le.x = contour_prev_le.x - (tmp_point3.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        contour_prev_le.y = contour_prev_le.y - (tmp_point3.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                    }\n                                    else {\n                                        contour_ri.x = contour_ri.x - (tmp_dir_point.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        contour_ri.y = contour_ri.y - (tmp_dir_point.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        tmp_point3.x = prev_normal.y * -1;\n                                        tmp_point3.y = prev_normal.x;\n                                        contour_prev_ri.x = contour_prev_ri.x - (tmp_point3.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        contour_prev_ri.y = contour_prev_ri.y - (tmp_point3.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                    }\n                                }\n                            }\n                            if (addJoints) {\n                                new_cmds[new_cmds_cnt++] = (strokeStyle.jointstyle != JointStyle_1.default.ROUND) ? GraphicsPathCommand_1.default.BUILD_JOINT : GraphicsPathCommand_1.default.BUILD_ROUND_JOINT;\n                                if (dir_delta > 0) {\n                                    new_pnts[new_pnts_cnt++] = merged_pnt_ri;\n                                    new_pnts[new_pnts_cnt++] = contour_prev_le;\n                                    new_pnts[new_pnts_cnt++] = contour_le;\n                                }\n                                else {\n                                    new_pnts[new_pnts_cnt++] = contour_prev_ri;\n                                    new_pnts[new_pnts_cnt++] = merged_pnt_le;\n                                    new_pnts[new_pnts_cnt++] = contour_ri;\n                                }\n                                if (strokeStyle.jointstyle == JointStyle_1.default.ROUND) {\n                                    new_pnts[new_pnts_cnt++] = new Point_1.default(lastPoint.x - (tmp_point2.x * Math.abs(distance)), lastPoint.y - (tmp_point2.y * Math.abs(distance)));\n                                    if (dir_delta > 0) {\n                                        new_pnts[new_pnts_cnt++] = contour_prev_le;\n                                        new_pnts[new_pnts_cnt++] = contour_le;\n                                    }\n                                    else {\n                                        new_pnts[new_pnts_cnt++] = contour_prev_ri;\n                                        new_pnts[new_pnts_cnt++] = contour_ri;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    prev_normal.x = tmp_point.x;\n                    prev_normal.y = tmp_point.y;\n                    if (add_segment) {\n                        if (commands[i] == GraphicsPathCommand_1.default.LINE_TO) {\n                            new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.default.LINE_TO;\n                            new_pnts[new_pnts_cnt++] = ri_point;\n                            new_pnts[new_pnts_cnt++] = le_point;\n                        }\n                        else if (commands[i] == GraphicsPathCommand_1.default.CURVE_TO) {\n                            tmp_dir_point.x = curve_end_point.x - end_point.x;\n                            tmp_dir_point.y = curve_end_point.y - end_point.y;\n                            tmp_dir_point.normalize();\n                            new_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.default.RADIANS_TO_DEGREES;\n                            dir_delta = new_dir - last_direction;\n                            last_direction = new_dir;\n                            tmp_point.x = -1 * tmp_dir_point.y;\n                            tmp_point.y = tmp_dir_point.x;\n                            if ((dir_delta != 0) && (dir_delta != 180)) {\n                                new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.default.CURVE_TO;\n                                new_pnts[new_pnts_cnt++] = ri_point;\n                                new_pnts[new_pnts_cnt++] = le_point;\n                                new_pnts[new_pnts_cnt++] = new Point_1.default(lastPoint.x, lastPoint.y);\n                                new_pnts[new_pnts_cnt++] = new Point_1.default(end_point.x, end_point.y);\n                                new_pnts[new_pnts_cnt++] = curve_end_point;\n                            }\n                            else {\n                                new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.default.LINE_TO;\n                                new_pnts[new_pnts_cnt++] = ri_point;\n                                new_pnts[new_pnts_cnt++] = le_point;\n                            }\n                            prev_normal.x = tmp_point.x;\n                            prev_normal.y = tmp_point.y;\n                            lastPoint = curve_end_point;\n                        }\n                    }\n                    if (commands[i] == GraphicsPathCommand_1.default.LINE_TO) {\n                        lastPoint = end_point;\n                    }\n                    if (i == commands.length - 1) {\n                        if (!closed) {\n                            new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.default.NO_OP;\n                            new_pnts[new_pnts_cnt++] = new Point_1.default(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n                            new_pnts[new_pnts_cnt++] = new Point_1.default(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n                        }\n                        else {\n                            new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.default.NO_OP;\n                            new_pnts[new_pnts_cnt++] = new_pnts[0];\n                            new_pnts[new_pnts_cnt++] = new_pnts[1];\n                        }\n                    }\n                }\n                // first we draw all the curves:\n                new_cmds_cnt = 0;\n                new_pnts_cnt = 0;\n                for (i = 0; i < new_cmds.length; i++) {\n                    if (new_cmds[i] == GraphicsPathCommand_1.default.LINE_TO) {\n                        new_pnts_cnt += 2;\n                    }\n                    else if (new_cmds[i] == GraphicsPathCommand_1.default.CURVE_TO) {\n                        start_right = new_pnts[new_pnts_cnt++];\n                        start_left = new_pnts[new_pnts_cnt++];\n                        start_point = new_pnts[new_pnts_cnt++];\n                        ctr_point = new_pnts[new_pnts_cnt++];\n                        end_point = new_pnts[new_pnts_cnt++];\n                        end_right = new_pnts[new_pnts_cnt];\n                        end_left = new_pnts[new_pnts_cnt + 1];\n                        // get the directional vector for the first part of the curve\n                        tmp_dir_point.x = ctr_point.x - start_point.x;\n                        tmp_dir_point.y = ctr_point.y - start_point.y;\n                        tmp_point3.x = ctr_point.x - start_point.x;\n                        tmp_point3.y = ctr_point.y - start_point.y;\n                        var length1 = tmp_point3.length;\n                        tmp_dir_point.normalize();\n                        // get the directional vector for the second part of the curve\n                        tmp_point2.x = end_point.x - ctr_point.x;\n                        tmp_point2.y = end_point.y - ctr_point.y;\n                        var length2 = tmp_point2.length;\n                        tmp_point2.normalize();\n                        var length_calc = 0.5 - ((length2 - length1) / length1) * 0.5;\n                        if (length1 > length2) {\n                            length_calc = 0.5 + ((length1 - length2) / length2) * 0.5;\n                        }\n                        // get angle to positive x-axis for both dir-vectors, than get the difference between those\n                        var angle_1 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.default.RADIANS_TO_DEGREES;\n                        var angle_2 = Math.atan2(tmp_point2.y, tmp_point2.x) * MathConsts_1.default.RADIANS_TO_DEGREES;\n                        dir_delta = angle_2 - angle_1;\n                        if (dir_delta > 180) {\n                            dir_delta -= 360;\n                        }\n                        if (dir_delta < -180) {\n                            dir_delta += 360;\n                        }\n                        if (dir_delta == 0) {\n                            console.log(\"This is not a curve, we can just draw it like a straight line\");\n                        }\n                        //console.log(\"segment : '\"+i+\"' direction:\"+dir_delta);\n                        var dirNumber = 1;\n                        if (dir_delta < 0) {\n                            dirNumber = -1;\n                        }\n                        var half_angle = dir_delta * 0.5 * MathConsts_1.default.DEGREES_TO_RADIANS;\n                        var lengthpos = Math.abs(length1 * Math.sin(half_angle));\n                        var distance = strokeStyle.half_thickness / Math.sin(half_angle);\n                        tmp_point3.x = tmp_point2.x * Math.cos(half_angle) + tmp_point2.y * Math.sin(half_angle);\n                        tmp_point3.y = tmp_point2.y * Math.cos(half_angle) - tmp_point2.x * Math.sin(half_angle);\n                        tmp_point3.normalize();\n                        var merged_pnt_ri = new Point_1.default(ctr_point.x - (tmp_point3.x * distance), ctr_point.y - (tmp_point3.y * distance));\n                        var merged_pnt_le = new Point_1.default(ctr_point.x + (tmp_point3.x * distance), ctr_point.y + (tmp_point3.y * distance));\n                        var curve_x = GraphicsFactoryHelper_1.default.getQuadricBezierPosition(0.5, start_point.x, ctr_point.x, end_point.x);\n                        var curve_y = GraphicsFactoryHelper_1.default.getQuadricBezierPosition(0.5, start_point.y, ctr_point.y, end_point.y);\n                        var curve_2x = GraphicsFactoryHelper_1.default.getQuadricBezierPosition(0.501, start_point.x, ctr_point.x, end_point.x);\n                        var curve_2y = GraphicsFactoryHelper_1.default.getQuadricBezierPosition(0.501, start_point.y, ctr_point.y, end_point.y);\n                        tmp_point3.x = -1 * (curve_y - curve_2y);\n                        tmp_point3.y = curve_x - curve_2x;\n                        tmp_point3.normalize();\n                        //GraphicsFactoryHelper.drawPoint(curve_x,curve_y, final_vert_list);\n                        // move the point on the curve to use correct thickness\n                        ctr_right.x = curve_x + (dirNumber * tmp_point3.x * strokeStyle.half_thickness);\n                        ctr_right.y = curve_y + (dirNumber * tmp_point3.y * strokeStyle.half_thickness);\n                        ctr_left.x = curve_x - (dirNumber * tmp_point3.x * strokeStyle.half_thickness);\n                        ctr_left.y = curve_y - (dirNumber * tmp_point3.y * strokeStyle.half_thickness);\n                        //GraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\n                        //GraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\n                        // calculate the actual controlpoints\n                        ctr_right.x = ctr_right.x * 2 - start_right.x / 2 - end_right.x / 2;\n                        ctr_right.y = ctr_right.y * 2 - start_right.y / 2 - end_right.y / 2;\n                        ctr_left.x = ctr_left.x * 2 - start_left.x / 2 - end_left.x / 2;\n                        ctr_left.y = ctr_left.y * 2 - start_left.y / 2 - end_left.y / 2;\n                        //ctr_right=merged_pnt_ri;\n                        //ctr_left=merged_pnt_le;\n                        /*\n                        // controlpoints version2:\n                        tmp_dir_point.x = start_left.x-start_right.x;\n                        tmp_dir_point.y = start_left.y-start_right.y;\n                        tmp_point2.x = end_left.x-end_right.x;\n                        tmp_point2.y = end_left.y-end_right.y;\n\n                        ctr_right.x = ctr_point.x-(tmp_dir_point.x/2);\n                        ctr_right.y = ctr_point.y-(tmp_dir_point.y/2);\n                        var new_end_ri:Point = new Point(end_point.x+(tmp_dir_point.x/2), end_point.y+(tmp_dir_point.y/2));\n\n                        ctr_left.x = ctr_point.x+(tmp_dir_point.x/2);\n                        ctr_left.y = ctr_point.y+(tmp_dir_point.y/2);\n                        var new_end_le:Point = new Point(end_point.x-(tmp_dir_point.x/2), end_point.y-(tmp_dir_point.y/2));\n                        */\n                        /*\n                                                GraphicsFactoryHelper.drawPoint(start_right.x, start_right.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(start_left.x, start_left.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(end_right.x, end_right.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(end_left.x, end_left.y , final_vert_list);\n                        */\n                        var subdivided = [];\n                        var subdivided2 = [];\n                        GraphicsFactoryHelper_1.default.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n                        if (dir_delta > 0) {\n                            for (var sc = 0; sc < subdivided.length / 6; sc++) {\n                                // right curved\n                                // concave curves:\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 1, final_vert_list);\n                                // fills\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 0, final_vert_list);\n                                // convex curves:\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], -1, final_vert_list);\n                            }\n                        }\n                        else {\n                            for (var sc = 0; sc < subdivided.length / 6; sc++) {\n                                // left curved\n                                // convex curves:\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], -1, final_vert_list);\n                                // fills\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 0, final_vert_list);\n                                // concave curves:\n                                GraphicsFactoryHelper_1.default.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 1, final_vert_list);\n                            }\n                        }\n                    }\n                    else if (new_cmds[i] >= GraphicsPathCommand_1.default.BUILD_JOINT) {\n                        new_pnts_cnt += 3;\n                        //GraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n                        if (new_cmds[i] == GraphicsPathCommand_1.default.BUILD_ROUND_JOINT) {\n                            end_left = new_pnts[new_pnts_cnt++]; // concave curves:\n                            start_right = new_pnts[new_pnts_cnt++];\n                            start_left = new_pnts[new_pnts_cnt++];\n                            //console.log(\"add round tri\");\n                            GraphicsFactoryHelper_1.default.addTriangle(start_right.x, start_right.y, end_left.x, end_left.y, start_left.x, start_left.y, -1, final_vert_list);\n                        }\n                    }\n                }\n                // now we draw all the normal triangles.\n                // we do it in 2 steps, to prevent curves cut anything out of underlying normal tris\n                new_cmds_cnt = 0;\n                new_pnts_cnt = 0;\n                for (i = 0; i < new_cmds.length; i++) {\n                    if (new_cmds[i] == GraphicsPathCommand_1.default.LINE_TO) {\n                        start_right = new_pnts[new_pnts_cnt++];\n                        start_left = new_pnts[new_pnts_cnt++];\n                        end_right = new_pnts[new_pnts_cnt];\n                        end_left = new_pnts[new_pnts_cnt + 1];\n                        GraphicsFactoryHelper_1.default.addTriangle(start_right.x, start_right.y, start_left.x, start_left.y, end_right.x, end_right.y, 0, final_vert_list);\n                        GraphicsFactoryHelper_1.default.addTriangle(start_left.x, start_left.y, end_left.x, end_left.y, end_right.x, end_right.y, 0, final_vert_list);\n                    }\n                    else if (new_cmds[i] == GraphicsPathCommand_1.default.CURVE_TO) {\n                        new_pnts_cnt += 5;\n                    }\n                    else if (new_cmds[i] >= GraphicsPathCommand_1.default.BUILD_JOINT) {\n                        end_right = new_pnts[new_pnts_cnt++];\n                        start_right = new_pnts[new_pnts_cnt++];\n                        start_left = new_pnts[new_pnts_cnt++];\n                        GraphicsFactoryHelper_1.default.addTriangle(start_right.x, start_right.y, start_left.x, start_left.y, end_right.x, end_right.y, 0, final_vert_list);\n                        if (new_cmds[i] == GraphicsPathCommand_1.default.BUILD_ROUND_JOINT) {\n                            new_pnts_cnt += 3;\n                        }\n                    }\n                }\n                if (!closed) {\n                    last_dir_vec.x = data[2] - data[0];\n                    last_dir_vec.y = data[3] - data[1];\n                    last_dir_vec.normalize();\n                    GraphicsFactoryHelper_1.default.createCap(data[0], data[1], new_pnts[0], new_pnts[1], last_dir_vec, strokeStyle.capstyle, -1, strokeStyle.half_thickness, final_vert_list);\n                    last_dir_vec.x = data[data.length - 2] - data[data.length - 4];\n                    last_dir_vec.y = data[data.length - 1] - data[data.length - 3];\n                    last_dir_vec.normalize();\n                    GraphicsFactoryHelper_1.default.createCap(data[data.length - 2], data[data.length - 1], new_pnts[new_pnts.length - 2], new_pnts[new_pnts.length - 1], last_dir_vec, strokeStyle.capstyle, 1, strokeStyle.half_thickness, final_vert_list);\n                }\n            }\n            //console.log(\"final_vert_cnt \"+(final_vert_cnt/5));\n            // todo: handle material / submesh settings, and check if a material / submesh already exists for this settings\n            var attributesView = new AttributesView_1.default(Float32Array, 5);\n            attributesView.set(final_vert_list);\n            var attributesBuffer = attributesView.buffer;\n            attributesView.dispose();\n            var elements = new TriangleElements_1.default(attributesBuffer);\n            elements.setPositions(new Float2Attributes_1.default(attributesBuffer));\n            elements.setCustomAttributes(\"curves\", new Float3Attributes_1.default(attributesBuffer));\n            //elements.setUVs(new Float2Attributes(attributesBuffer));\n            //curve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n            var material = DefaultMaterialManager_1.default.getDefaultMaterial();\n            material.bothSides = true;\n            material.useColorTransform = true;\n            material.curves = true;\n            targetGraphic.addGraphic(elements, material);\n        }\n        targetGraphic.queued_stroke_pathes.length = 0;\n    };\n    return GraphicsFactoryStrokes;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsFactoryStrokes;\n\n},{\"../draw/GraphicsFactoryHelper\":\"awayjs-display/lib/draw/GraphicsFactoryHelper\",\"../draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"../draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsFillStyle\":[function(require,module,exports){\n\"use strict\";\nvar GraphicsFillStyle = (function () {\n    function GraphicsFillStyle(color, alpha) {\n        if (color === void 0) { color = 0xffffff; }\n        if (alpha === void 0) { alpha = 1; }\n        this._color = color;\n        this._alpha = alpha;\n    }\n    Object.defineProperty(GraphicsFillStyle.prototype, \"data_type\", {\n        get: function () {\n            return GraphicsFillStyle.data_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicsFillStyle.data_type = \"[graphicsdata FillStyle]\";\n    return GraphicsFillStyle;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsFillStyle;\n\n},{}],\"awayjs-display/lib/draw/GraphicsPathCommand\":[function(require,module,exports){\n\"use strict\";\n/**\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nvar GraphicsPathCommand = (function () {\n    function GraphicsPathCommand() {\n    }\n    /**\n     * Represents the default \"do nothing\" command.\n     */\n    GraphicsPathCommand.NO_OP = 0;\n    /**\n     * Specifies a drawing command that moves the current drawing position\n     * to the x- and y-coordinates specified in the data vector.\n     */\n    GraphicsPathCommand.MOVE_TO = 1;\n    /**\n     * Specifies a drawing command that draws a line from the current drawing position\n     * to the x- and y-coordinates specified in the data vector.\n     */\n    GraphicsPathCommand.LINE_TO = 2;\n    /**\n     *  Specifies a drawing command that draws a curve from the current drawing position\n     *  to the x- and y-coordinates specified in the data vector, using a control point.\n     */\n    GraphicsPathCommand.CURVE_TO = 3;\n    /**\n     *  Specifies a drawing command that draws a curve from the current drawing position\n     *  to the x- and y-coordinates specified in the data vector, using a control point.\n     */\n    GraphicsPathCommand.BUILD_JOINT = 13;\n    GraphicsPathCommand.BUILD_ROUND_JOINT = 14;\n    /**\n     * Specifies a \"line to\" drawing command,\n     * but uses two sets of coordinates (four values) instead of one set.\n     */\n    GraphicsPathCommand.WIDE_LINE_TO = 4;\n    /**\n     *   Specifies a \"move to\" drawing command,\n     *   but uses two sets of coordinates (four values) instead of one set.\n     */\n    GraphicsPathCommand.WIDE_MOVE_TO = 5;\n    /**\n     * Specifies a drawing command that draws a curve from the current drawing position\n     * to the x- and y-coordinates specified in the data vector, using 2 control points.\n     */\n    GraphicsPathCommand.CUBIC_CURVE = 6;\n    return GraphicsPathCommand;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsPathCommand;\n\n},{}],\"awayjs-display/lib/draw/GraphicsPathWinding\":[function(require,module,exports){\n\"use strict\";\n/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nvar GraphicsPathWinding = (function () {\n    function GraphicsPathWinding() {\n    }\n    GraphicsPathWinding.EVEN_ODD = \"evenOdd\";\n    GraphicsPathWinding.NON_ZERO = \"nonZero\";\n    return GraphicsPathWinding;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsPathWinding;\n\n},{}],\"awayjs-display/lib/draw/GraphicsPath\":[function(require,module,exports){\n\"use strict\";\nvar GraphicsPathWinding_1 = require(\"../draw/GraphicsPathWinding\");\nvar GraphicsPathCommand_1 = require(\"../draw/GraphicsPathCommand\");\nvar GraphicsFillStyle_1 = require(\"../draw/GraphicsFillStyle\");\nvar GraphicsStrokeStyle_1 = require(\"../draw/GraphicsStrokeStyle\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nvar GraphicsPath = (function () {\n    function GraphicsPath(commands, data, winding_rule) {\n        if (commands === void 0) { commands = null; }\n        if (data === void 0) { data = null; }\n        if (winding_rule === void 0) { winding_rule = GraphicsPathWinding_1.default.EVEN_ODD; }\n        this._data = [];\n        this._commands = [];\n        this._style = null;\n        if (commands != null && data != null) {\n            this._data[0] = data;\n            this._commands[0] = commands;\n        }\n        else {\n            this._data[0] = [];\n            this._commands[0] = [];\n        }\n        this._startPoint = new Point_1.default();\n        this._cur_point = new Point_1.default();\n        this._winding_rule = winding_rule;\n        this._winding_directions = [];\n    }\n    Object.defineProperty(GraphicsPath.prototype, \"data_type\", {\n        get: function () {\n            return GraphicsPath.data_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsPath.prototype, \"style\", {\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicsPath.prototype.fill = function () {\n        if (this._style == null)\n            return null;\n        if (this._style.data_type == GraphicsFillStyle_1.default.data_type)\n            return this._style;\n        return null;\n    };\n    GraphicsPath.prototype.stroke = function () {\n        if (this._style == null)\n            return null;\n        if (this._style.data_type == GraphicsStrokeStyle_1.default.data_type)\n            return this._style;\n        return null;\n    };\n    Object.defineProperty(GraphicsPath.prototype, \"commands\", {\n        get: function () {\n            return this._commands;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsPath.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicsPath.prototype.curveTo = function (controlX, controlY, anchorX, anchorY) {\n        if (this._commands[this._commands.length - 1].length == 0) {\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.default.MOVE_TO);\n            this._data[this._data.length - 1].push(this._cur_point.x);\n            this._data[this._data.length - 1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.default.CURVE_TO);\n        /*\n         if(this.isFill){\n         this._tmp_point.x=anchorX-this._cur_point.x;\n         this._tmp_point.y=anchorY-this._cur_point.y;\n         this._tmp_point.normalize();\n\n         var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\n         testpoint.normalize();\n         var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n         if(degree_anchor>180)degree_anchor-=360;\n         //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n         this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n         this._tmp_point.x=controlX-this._cur_point.x;\n         this._tmp_point.y=controlY-this._cur_point.y;\n         this._tmp_point.normalize();\n         //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n         var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\n         if(degree_control>180)degree_control-=360;\n         //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n         console.log(\"degree_control \"+degree_control);\n         console.log(\"degree_anchor \"+degree_anchor);\n         console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\n         this._direction.x=testpoint.x;\n         this._direction.y=testpoint.y;\n         if((degree_control)<0)\n         this._data[this._data.length-1].push(1);\n         else\n         this._data[this._data.length-1].push(2);\n\n         }\n         else{\n         this._data[this._data.length-1].push(1);\n         }\n         */\n        this._data[this._data.length - 1].push(controlX);\n        this._data[this._data.length - 1].push(controlY);\n        this._data[this._data.length - 1].push(anchorX);\n        this._data[this._data.length - 1].push(anchorY);\n        this._cur_point.x = anchorX;\n        this._cur_point.y = anchorY;\n    };\n    GraphicsPath.prototype.lineTo = function (x, y) {\n        if (this._commands[this._commands.length - 1].length == 0) {\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.default.MOVE_TO);\n            this._data[this._data.length - 1].push(this._cur_point.x);\n            this._data[this._data.length - 1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.default.LINE_TO);\n        this._data[this._data.length - 1].push(x);\n        this._data[this._data.length - 1].push(y);\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    };\n    GraphicsPath.prototype.moveTo = function (x, y) {\n        // whenever a moveTo command apears, we start a new contour\n        if (this._commands[this._commands.length - 1].length > 0) {\n            this._commands.push([GraphicsPathCommand_1.default.MOVE_TO]);\n            this._data.push([x, y]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    };\n    GraphicsPath.prototype.wideLineTo = function (x, y) {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    };\n    GraphicsPath.prototype.wideMoveTo = function (x, y) {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    };\n    GraphicsPath.data_type = \"[graphicsdata path]\";\n    return GraphicsPath;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsPath;\n\n},{\"../draw/GraphicsFillStyle\":\"awayjs-display/lib/draw/GraphicsFillStyle\",\"../draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"../draw/GraphicsPathWinding\":\"awayjs-display/lib/draw/GraphicsPathWinding\",\"../draw/GraphicsStrokeStyle\":\"awayjs-display/lib/draw/GraphicsStrokeStyle\",\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsStrokeStyle\":[function(require,module,exports){\n\"use strict\";\nvar JointStyle_1 = require(\"../draw/JointStyle\");\nvar CapsStyle_1 = require(\"../draw/CapsStyle\");\nvar GraphicsStrokeStyle = (function () {\n    function GraphicsStrokeStyle(color, alpha, thickness, jointstyle, capstyle, miter_limit) {\n        if (color === void 0) { color = 0xffffff; }\n        if (alpha === void 0) { alpha = 1; }\n        if (thickness === void 0) { thickness = 10; }\n        if (jointstyle === void 0) { jointstyle = JointStyle_1.default.ROUND; }\n        if (capstyle === void 0) { capstyle = CapsStyle_1.default.SQUARE; }\n        if (miter_limit === void 0) { miter_limit = 10; }\n        this._color = color;\n        this._alpha = alpha;\n        this._thickness = thickness;\n        this._jointstyle = jointstyle;\n        this._capstyle = capstyle;\n        this._miter_limit = miter_limit;\n    }\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"data_type\", {\n        get: function () {\n            return GraphicsStrokeStyle.data_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._color = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"alpha\", {\n        get: function () {\n            return this._alpha;\n        },\n        set: function (value) {\n            this._alpha = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"half_thickness\", {\n        get: function () {\n            return this._thickness / 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"thickness\", {\n        get: function () {\n            return this._thickness;\n        },\n        set: function (value) {\n            this._thickness = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"jointstyle\", {\n        get: function () {\n            return this._jointstyle;\n        },\n        set: function (value) {\n            this._jointstyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"miter_limit\", {\n        get: function () {\n            return this._miter_limit;\n        },\n        set: function (value) {\n            this._miter_limit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"capstyle\", {\n        get: function () {\n            return this._capstyle;\n        },\n        set: function (value) {\n            this._capstyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicsStrokeStyle.data_type = \"[graphicsdata StrokeStyle]\";\n    return GraphicsStrokeStyle;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsStrokeStyle;\n\n},{\"../draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"../draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\"}],\"awayjs-display/lib/draw/IGraphicsData\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/draw/InterpolationMethod\":[function(require,module,exports){\n\"use strict\";\n/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nvar InterpolationMethod = (function () {\n    function InterpolationMethod() {\n    }\n    /**\n     * Specifies that the RGB interpolation method should be used. This means\n     * that the gradient is rendered with exponential sRGB(standard RGB) space.\n     * The sRGB space is a W3C-endorsed standard that defines a non-linear\n     * conversion between red, green, and blue component values and the actual\n     * intensity of the visible component color.\n     *\n     * <p>For example, consider a simple linear gradient between two colors(with\n     * the <code>spreadMethod</code> parameter set to\n     * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n     * affect the appearance as follows: </p>\n     */\n    InterpolationMethod.LINEAR_RGB = \"linearRGB\";\n    /**\n     * Specifies that the RGB interpolation method should be used. This means\n     * that the gradient is rendered with exponential sRGB(standard RGB) space.\n     * The sRGB space is a W3C-endorsed standard that defines a non-linear\n     * conversion between red, green, and blue component values and the actual\n     * intensity of the visible component color.\n     *\n     * <p>For example, consider a simple linear gradient between two colors(with\n     * the <code>spreadMethod</code> parameter set to\n     * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n     * affect the appearance as follows: </p>\n     */\n    InterpolationMethod.RGB = \"rgb\";\n    return InterpolationMethod;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = InterpolationMethod;\n\n},{}],\"awayjs-display/lib/draw/JointStyle\":[function(require,module,exports){\n\"use strict\";\n/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nvar JointStyle = (function () {\n    function JointStyle() {\n    }\n    /**\n     * Specifies beveled joints in the <code>joints</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    JointStyle.BEVEL = 2;\n    /**\n     * Specifies mitered joints in the <code>joints</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    JointStyle.MITER = 0;\n    /**\n     * Specifies round joints in the <code>joints</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    JointStyle.ROUND = 1;\n    return JointStyle;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = JointStyle;\n\n},{}],\"awayjs-display/lib/draw/LineScaleMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nvar LineScaleMode = (function () {\n    function LineScaleMode() {\n    }\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line scales\n     * <i>only</i> vertically. For example, consider the following circles, drawn\n     * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n     * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n     * scaled only vertically, and the circle on the right is scaled both\n     * vertically and horizontally.\n     */\n    LineScaleMode.HORIZONTAL = \"horizontal\";\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line never scales.\n     */\n    LineScaleMode.NONE = \"none\";\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line always scales\n     * when the object is scaled(the default).\n     */\n    LineScaleMode.NORMAL = \"normal\";\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line scales\n     * <i>only</i> horizontally. For example, consider the following circles,\n     * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n     * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n     * left is scaled only horizontally, and the circle on the right is scaled\n     * both vertically and horizontally.\n     */\n    LineScaleMode.VERTICAL = \"vertical\";\n    return LineScaleMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LineScaleMode;\n\n},{}],\"awayjs-display/lib/draw/PixelSnapping\":[function(require,module,exports){\n\"use strict\";\n/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nvar PixelSnapping = (function () {\n    function PixelSnapping() {\n    }\n    /**\n     * A constant value used in the <code>pixelSnapping</code> property of a\n     * Bitmap object to specify that the bitmap image is always snapped to the\n     * nearest pixel, independent of any transformation.\n     */\n    PixelSnapping.ALWAYS = \"always\";\n    /**\n     * A constant value used in the <code>pixelSnapping</code> property of a\n     * Bitmap object to specify that the bitmap image is snapped to the nearest\n     * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n     * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n     * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n     * setting allows the image to be drawn as fast as possible by using the\n     * vector renderer.\n     */\n    PixelSnapping.AUTO = \"auto\";\n    /**\n     * A constant value used in the <code>pixelSnapping</code> property of a\n     * Bitmap object to specify that no pixel snapping occurs.\n     */\n    PixelSnapping.NEVER = \"never\";\n    return PixelSnapping;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PixelSnapping;\n\n},{}],\"awayjs-display/lib/draw/SpreadMethod\":[function(require,module,exports){\n\"use strict\";\n/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nvar SpreadMethod = (function () {\n    function SpreadMethod() {\n    }\n    /**\n     * Specifies that the gradient use the <i>pad</i> spread method.\n     */\n    SpreadMethod.PAD = \"pad\";\n    /**\n     * Specifies that the gradient use the <i>reflect</i> spread method.\n     */\n    SpreadMethod.REFLECT = \"reflect\";\n    /**\n     * Specifies that the gradient use the <i>repeat</i> spread method.\n     */\n    SpreadMethod.REPEAT = \"repeat\";\n    return SpreadMethod;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SpreadMethod;\n\n},{}],\"awayjs-display/lib/draw/TriangleCulling\":[function(require,module,exports){\n\"use strict\";\n/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nvar TriangleCulling = (function () {\n    function TriangleCulling() {\n    }\n    /**\n     * Specifies culling of all triangles facing toward the current view point.\n     */\n    TriangleCulling.NEGATIVE = \"negative\";\n    /**\n     * Specifies no culling. All triangles in the path are rendered.\n     */\n    TriangleCulling.NONE = \"none\";\n    /**\n     * Specifies culling of all triangles facing away from the current view\n     * point. This is also known as backface culling.\n     */\n    TriangleCulling.POSITIVE = \"positive\";\n    return TriangleCulling;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TriangleCulling;\n\n},{}],\"awayjs-display/lib/draw\":[function(require,module,exports){\n\"use strict\";\nvar CapsStyle_1 = require(\"./draw/CapsStyle\");\nexports.CapsStyle = CapsStyle_1.default;\nvar GradientType_1 = require(\"./draw/GradientType\");\nexports.GradientType = GradientType_1.default;\nvar GraphicsFactoryFills_1 = require(\"./draw/GraphicsFactoryFills\");\nexports.GraphicsFactoryFills = GraphicsFactoryFills_1.default;\nvar GraphicsFactoryHelper_1 = require(\"./draw/GraphicsFactoryHelper\");\nexports.GraphicsFactoryHelper = GraphicsFactoryHelper_1.default;\nvar GraphicsFactoryStrokes_1 = require(\"./draw/GraphicsFactoryStrokes\");\nexports.GraphicsFactoryStrokes = GraphicsFactoryStrokes_1.default;\nvar GraphicsFillStyle_1 = require(\"./draw/GraphicsFillStyle\");\nexports.GraphicsFillStyle = GraphicsFillStyle_1.default;\nvar GraphicsStrokeStyle_1 = require(\"./draw/GraphicsStrokeStyle\");\nexports.GraphicsStrokeStyle = GraphicsStrokeStyle_1.default;\nvar GraphicsPath_1 = require(\"./draw/GraphicsPath\");\nexports.GraphicsPath = GraphicsPath_1.default;\nvar GraphicsPathCommand_1 = require(\"./draw/GraphicsPathCommand\");\nexports.GraphicsPathCommand = GraphicsPathCommand_1.default;\nvar GraphicsPathWinding_1 = require(\"./draw/GraphicsPathWinding\");\nexports.GraphicsPathWinding = GraphicsPathWinding_1.default;\nvar InterpolationMethod_1 = require(\"./draw/InterpolationMethod\");\nexports.InterpolationMethod = InterpolationMethod_1.default;\nvar JointStyle_1 = require(\"./draw/JointStyle\");\nexports.JointStyle = JointStyle_1.default;\nvar LineScaleMode_1 = require(\"./draw/LineScaleMode\");\nexports.LineScaleMode = LineScaleMode_1.default;\nvar PixelSnapping_1 = require(\"./draw/PixelSnapping\");\nexports.PixelSnapping = PixelSnapping_1.default;\nvar SpreadMethod_1 = require(\"./draw/SpreadMethod\");\nexports.SpreadMethod = SpreadMethod_1.default;\nvar TriangleCulling_1 = require(\"./draw/TriangleCulling\");\nexports.TriangleCulling = TriangleCulling_1.default;\n\n},{\"./draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"./draw/GradientType\":\"awayjs-display/lib/draw/GradientType\",\"./draw/GraphicsFactoryFills\":\"awayjs-display/lib/draw/GraphicsFactoryFills\",\"./draw/GraphicsFactoryHelper\":\"awayjs-display/lib/draw/GraphicsFactoryHelper\",\"./draw/GraphicsFactoryStrokes\":\"awayjs-display/lib/draw/GraphicsFactoryStrokes\",\"./draw/GraphicsFillStyle\":\"awayjs-display/lib/draw/GraphicsFillStyle\",\"./draw/GraphicsPath\":\"awayjs-display/lib/draw/GraphicsPath\",\"./draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"./draw/GraphicsPathWinding\":\"awayjs-display/lib/draw/GraphicsPathWinding\",\"./draw/GraphicsStrokeStyle\":\"awayjs-display/lib/draw/GraphicsStrokeStyle\",\"./draw/InterpolationMethod\":\"awayjs-display/lib/draw/InterpolationMethod\",\"./draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"./draw/LineScaleMode\":\"awayjs-display/lib/draw/LineScaleMode\",\"./draw/PixelSnapping\":\"awayjs-display/lib/draw/PixelSnapping\",\"./draw/SpreadMethod\":\"awayjs-display/lib/draw/SpreadMethod\",\"./draw/TriangleCulling\":\"awayjs-display/lib/draw/TriangleCulling\"}],\"awayjs-display/lib/errors/CastError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar CastError = (function (_super) {\n    __extends(CastError, _super);\n    function CastError(message) {\n        _super.call(this, message);\n    }\n    return CastError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CastError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined}],\"awayjs-display/lib/errors\":[function(require,module,exports){\n\"use strict\";\nvar CastError_1 = require(\"./errors/CastError\");\nexports.CastError = CastError_1.default;\n\n},{\"./errors/CastError\":\"awayjs-display/lib/errors/CastError\"}],\"awayjs-display/lib/events/CameraEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * @class away.events.CameraEvent\n */\nvar CameraEvent = (function (_super) {\n    __extends(CameraEvent, _super);\n    function CameraEvent(type, camera) {\n        _super.call(this, type);\n        this._camera = camera;\n    }\n    Object.defineProperty(CameraEvent.prototype, \"camera\", {\n        get: function () {\n            return this._camera;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    CameraEvent.prototype.clone = function () {\n        return new CameraEvent(this.type, this._camera);\n    };\n    CameraEvent.PROJECTION_CHANGED = \"projectionChanged\";\n    return CameraEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CameraEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/DisplayObjectEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar DisplayObjectEvent = (function (_super) {\n    __extends(DisplayObjectEvent, _super);\n    function DisplayObjectEvent(type, object) {\n        _super.call(this, type);\n        this._object = object;\n    }\n    Object.defineProperty(DisplayObjectEvent.prototype, \"object\", {\n        get: function () {\n            return this._object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    DisplayObjectEvent.prototype.clone = function () {\n        return new DisplayObjectEvent(this.type, this._object);\n    };\n    /**\n     *\n     */\n    DisplayObjectEvent.VISIBLITY_UPDATED = \"visiblityUpdated\";\n    /**\n     *\n     */\n    DisplayObjectEvent.SCENETRANSFORM_CHANGED = \"scenetransformChanged\";\n    /**\n     *\n     */\n    DisplayObjectEvent.SCENE_CHANGED = \"sceneChanged\";\n    /**\n     *\n     */\n    DisplayObjectEvent.PARTITION_CHANGED = \"partitionChanged\";\n    /**\n     *\n     */\n    DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS = \"invalidatePartitionBounds\";\n    return DisplayObjectEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DisplayObjectEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/ElementsEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nvar ElementsEvent = (function (_super) {\n    __extends(ElementsEvent, _super);\n    /**\n     * Create a new GraphicsEvent\n     * @param type The event type.\n     * @param attributesView An optional data type of the vertex data being updated.\n     */\n    function ElementsEvent(type, attributesView) {\n        _super.call(this, type);\n        this._attributesView = attributesView;\n    }\n    Object.defineProperty(ElementsEvent.prototype, \"attributesView\", {\n        /**\n         * The attributes view of the vertex data.\n         */\n        get: function () {\n            return this._attributesView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    ElementsEvent.prototype.clone = function () {\n        return new ElementsEvent(this.type, this._attributesView);\n    };\n    /**\n     * Dispatched when a Elements's index data has been updated.\n     */\n    ElementsEvent.INVALIDATE_INDICES = \"invalidateIndices\";\n    /**\n     * Dispatched when a Elements's index data has been disposed.\n     */\n    ElementsEvent.CLEAR_INDICES = \"clearIndices\";\n    /**\n     * Dispatched when a Elements's vertex data has been updated.\n     */\n    ElementsEvent.INVALIDATE_VERTICES = \"invalidateVertices\";\n    /**\n     * Dispatched when a Elements's vertex data has been disposed.\n     */\n    ElementsEvent.CLEAR_VERTICES = \"clearVertices\";\n    return ElementsEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/LightEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar LightEvent = (function (_super) {\n    __extends(LightEvent, _super);\n    function LightEvent(type) {\n        _super.call(this, type);\n    }\n    //@override\n    LightEvent.prototype.clone = function () {\n        return new LightEvent(this.type);\n    };\n    LightEvent.CASTS_SHADOW_CHANGE = \"castsShadowChange\";\n    return LightEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/MouseEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nvar MouseEvent = (function (_super) {\n    __extends(MouseEvent, _super);\n    /**\n     * Create a new MouseEvent object.\n     * @param type The type of the MouseEvent.\n     */\n    function MouseEvent(type) {\n        _super.call(this, type);\n        // Private.\n        this._iAllowedToPropagate = true;\n    }\n    Object.defineProperty(MouseEvent.prototype, \"bubbles\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            var doesBubble = this._iAllowedToPropagate;\n            this._iAllowedToPropagate = true;\n            // Don't bubble if propagation has been stopped.\n            return doesBubble;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    MouseEvent.prototype.stopPropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopPropagation();\n    };\n    /**\n     * @inheritDoc\n     */\n    MouseEvent.prototype.stopImmediatePropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopImmediatePropagation();\n    };\n    /**\n     * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n     */\n    MouseEvent.prototype.clone = function () {\n        var result = new MouseEvent(this.type);\n        /* TODO: Debug / test - look into isDefaultPrevented\n         if (isDefaultPrevented())\n         result.preventDefault();\n         */\n        result.screenX = this.screenX;\n        result.screenY = this.screenY;\n        result.view = this.view;\n        result.entity = this.entity;\n        result.renderable = this.renderable;\n        result.material = this.material;\n        result.uv = this.uv;\n        result.position = this.position;\n        result.normal = this.normal;\n        result.elementIndex = this.elementIndex;\n        result.delta = this.delta;\n        result.ctrlKey = this.ctrlKey;\n        result.shiftKey = this.shiftKey;\n        result._iParentEvent = this;\n        result._iAllowedToPropagate = this._iAllowedToPropagate;\n        return result;\n    };\n    Object.defineProperty(MouseEvent.prototype, \"scenePosition\", {\n        /**\n         * The position in scene space where the event took place\n         */\n        get: function () {\n            return this.entity.sceneTransform.transformVector(this.position);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseEvent.prototype, \"sceneNormal\", {\n        /**\n         * The normal in scene space where the event took place\n         */\n        get: function () {\n            var sceneNormal = this.entity.sceneTransform.deltaTransformVector(this.normal);\n            sceneNormal.normalize();\n            return sceneNormal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Defines the value of the type property of a mouseOver3d event object.\n     */\n    MouseEvent.MOUSE_OVER = \"mouseOver3d\";\n    /**\n     * Defines the value of the type property of a mouseOut3d event object.\n     */\n    MouseEvent.MOUSE_OUT = \"mouseOut3d\";\n    /**\n     * Defines the value of the type property of a mouseUp3d event object.\n     */\n    MouseEvent.MOUSE_UP = \"mouseUp3d\";\n    /**\n     * Defines the value of the type property of a mouseDown3d event object.\n     */\n    MouseEvent.MOUSE_DOWN = \"mouseDown3d\";\n    /**\n     * Defines the value of the type property of a mouseMove3d event object.\n     */\n    MouseEvent.MOUSE_MOVE = \"mouseMove3d\";\n    /**\n     * Defines the value of the type property of a rollOver3d event object.\n     */\n    //\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n    /**\n     * Defines the value of the type property of a rollOut3d event object.\n     */\n    //\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n    /**\n     * Defines the value of the type property of a click3d event object.\n     */\n    MouseEvent.CLICK = \"click3d\";\n    /**\n     * Defines the value of the type property of a doubleClick3d event object.\n     */\n    MouseEvent.DOUBLE_CLICK = \"doubleClick3d\";\n    /**\n     * Defines the value of the type property of a mouseWheel3d event object.\n     */\n    MouseEvent.MOUSE_WHEEL = \"mouseWheel3d\";\n    return MouseEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MouseEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/RenderableEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableEvent\n * @see away.core.base.Graphics\n */\nvar RenderableEvent = (function (_super) {\n    __extends(RenderableEvent, _super);\n    /**\n     * Create a new GraphicsEvent\n     * @param type The event type.\n     * @param dataType An optional data type of the vertex data being updated.\n     */\n    function RenderableEvent(type, renderable) {\n        _super.call(this, type);\n        this._renderable = renderable;\n    }\n    Object.defineProperty(RenderableEvent.prototype, \"renderable\", {\n        /**\n         * The renderobject owner of the renderable owner.\n         */\n        get: function () {\n            return this._renderable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    RenderableEvent.prototype.clone = function () {\n        return new RenderableEvent(this.type, this._renderable);\n    };\n    /**\n     * Dispatched when a Renderable owners's render object owner has been updated.\n     */\n    RenderableEvent.INVALIDATE_SURFACE = \"invalidateRenderable\";\n    /**\n     *\n     */\n    RenderableEvent.INVALIDATE_ELEMENTS = \"invalidateElements\";\n    return RenderableEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/RendererEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar RendererEvent = (function (_super) {\n    __extends(RendererEvent, _super);\n    function RendererEvent(type) {\n        _super.call(this, type);\n    }\n    RendererEvent.VIEWPORT_UPDATED = \"viewportUpdated\";\n    RendererEvent.SCISSOR_UPDATED = \"scissorUpdated\";\n    return RendererEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RendererEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/ResizeEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar ResizeEvent = (function (_super) {\n    __extends(ResizeEvent, _super);\n    function ResizeEvent(type, oldHeight, oldWidth) {\n        if (oldHeight === void 0) { oldHeight = NaN; }\n        if (oldWidth === void 0) { oldWidth = NaN; }\n        _super.call(this, type);\n        this._oldHeight = oldHeight;\n        this._oldWidth = oldWidth;\n    }\n    Object.defineProperty(ResizeEvent.prototype, \"oldHeight\", {\n        get: function () {\n            return this._oldHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResizeEvent.prototype, \"oldWidth\", {\n        get: function () {\n            return this._oldWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    ResizeEvent.prototype.clone = function () {\n        return new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n    };\n    ResizeEvent.RESIZE = \"resize\";\n    return ResizeEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ResizeEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/StyleEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar StyleEvent = (function (_super) {\n    __extends(StyleEvent, _super);\n    function StyleEvent(type, style) {\n        _super.call(this, type);\n        this._style = style;\n    }\n    Object.defineProperty(StyleEvent.prototype, \"style\", {\n        get: function () {\n            return this._style;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    StyleEvent.prototype.clone = function () {\n        return new StyleEvent(this.type, this._style);\n    };\n    /**\n     *\n     */\n    StyleEvent.INVALIDATE_PROPERTIES = \"invalidateProperties\";\n    return StyleEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/SurfaceEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar SurfaceEvent = (function (_super) {\n    __extends(SurfaceEvent, _super);\n    /**\n     * Create a new GraphicsEvent\n     * @param type The event type.\n     * @param dataType An optional data type of the vertex data being updated.\n     */\n    function SurfaceEvent(type, surface) {\n        _super.call(this, type);\n        this._surface = surface;\n    }\n    Object.defineProperty(SurfaceEvent.prototype, \"surface\", {\n        /**\n         * The surface of the renderable.\n         */\n        get: function () {\n            return this._surface;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    SurfaceEvent.prototype.clone = function () {\n        return new SurfaceEvent(this.type, this._surface);\n    };\n    SurfaceEvent.INVALIDATE_TEXTURE = \"invalidateTexture\";\n    SurfaceEvent.INVALIDATE_ANIMATION = \"invalidateAnimation\";\n    SurfaceEvent.INVALIDATE_PASSES = \"invalidatePasses\";\n    return SurfaceEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SurfaceEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/TouchEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar TouchEvent = (function (_super) {\n    __extends(TouchEvent, _super);\n    /**\n     * Create a new TouchEvent object.\n     * @param type The type of the TouchEvent.\n     */\n    function TouchEvent(type) {\n        _super.call(this, type);\n        // Private.\n        this._iAllowedToPropagate = true;\n    }\n    Object.defineProperty(TouchEvent.prototype, \"bubbles\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            var doesBubble = this._iAllowedToPropagate;\n            this._iAllowedToPropagate = true;\n            // Don't bubble if propagation has been stopped.\n            return doesBubble;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    TouchEvent.prototype.stopPropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopPropagation();\n    };\n    /**\n     * @inheritDoc\n     */\n    TouchEvent.prototype.stopImmediatePropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopImmediatePropagation();\n    };\n    /**\n     * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n     */\n    TouchEvent.prototype.clone = function () {\n        var result = new TouchEvent(this.type);\n        /* TODO: Debug / test - look into isDefaultPrevented\n         if (isDefaultPrevented())\n         result.preventDefault();\n         */\n        result.screenX = this.screenX;\n        result.screenY = this.screenY;\n        result.view = this.view;\n        result.entity = this.entity;\n        result.renderable = this.renderable;\n        result.material = this.material;\n        result.uv = this.uv;\n        result.position = this.position;\n        result.normal = this.normal;\n        result.elementIndex = this.elementIndex;\n        result.ctrlKey = this.ctrlKey;\n        result.shiftKey = this.shiftKey;\n        result._iParentEvent = this;\n        return result;\n    };\n    Object.defineProperty(TouchEvent.prototype, \"scenePosition\", {\n        /**\n         * The position in scene space where the event took place\n         */\n        get: function () {\n            return this.entity.sceneTransform.transformVector(this.position);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TouchEvent.prototype, \"sceneNormal\", {\n        /**\n         * The normal in scene space where the event took place\n         */\n        get: function () {\n            var sceneNormal = this.entity.sceneTransform.deltaTransformVector(this.normal);\n            sceneNormal.normalize();\n            return sceneNormal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    TouchEvent.TOUCH_END = \"touchEnd3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_BEGIN = \"touchBegin3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_MOVE = \"touchMove3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_OUT = \"touchOut3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_OVER = \"touchOver3d\";\n    return TouchEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TouchEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/TransformEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar TransformEvent = (function (_super) {\n    __extends(TransformEvent, _super);\n    function TransformEvent(type, transform) {\n        _super.call(this, type);\n        this._transform = transform;\n    }\n    Object.defineProperty(TransformEvent.prototype, \"transform\", {\n        get: function () {\n            return this._transform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    TransformEvent.prototype.clone = function () {\n        return new TransformEvent(this.type, this._transform);\n    };\n    /**\n     *\n     */\n    TransformEvent.INVALIDATE_MATRIX3D = \"invalidateMatrix3D\";\n    /**\n     *\n     */\n    TransformEvent.INVALIDATE_COLOR_TRANSFORM = \"invalidateColorTransform\";\n    return TransformEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TransformEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar CameraEvent_1 = require(\"./events/CameraEvent\");\nexports.CameraEvent = CameraEvent_1.default;\nvar DisplayObjectEvent_1 = require(\"./events/DisplayObjectEvent\");\nexports.DisplayObjectEvent = DisplayObjectEvent_1.default;\nvar ElementsEvent_1 = require(\"./events/ElementsEvent\");\nexports.ElementsEvent = ElementsEvent_1.default;\nvar LightEvent_1 = require(\"./events/LightEvent\");\nexports.LightEvent = LightEvent_1.default;\nvar MouseEvent_1 = require(\"./events/MouseEvent\");\nexports.MouseEvent = MouseEvent_1.default;\nvar RenderableEvent_1 = require(\"./events/RenderableEvent\");\nexports.RenderableEvent = RenderableEvent_1.default;\nvar RendererEvent_1 = require(\"./events/RendererEvent\");\nexports.RendererEvent = RendererEvent_1.default;\nvar ResizeEvent_1 = require(\"./events/ResizeEvent\");\nexports.ResizeEvent = ResizeEvent_1.default;\nvar StyleEvent_1 = require(\"./events/StyleEvent\");\nexports.StyleEvent = StyleEvent_1.default;\nvar SurfaceEvent_1 = require(\"./events/SurfaceEvent\");\nexports.SurfaceEvent = SurfaceEvent_1.default;\nvar TouchEvent_1 = require(\"./events/TouchEvent\");\nexports.TouchEvent = TouchEvent_1.default;\nvar TransformEvent_1 = require(\"./events/TransformEvent\");\nexports.TransformEvent = TransformEvent_1.default;\n\n},{\"./events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"./events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"./events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"./events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"./events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"./events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"./events/RendererEvent\":\"awayjs-display/lib/events/RendererEvent\",\"./events/ResizeEvent\":\"awayjs-display/lib/events/ResizeEvent\",\"./events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"./events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"./events/TouchEvent\":\"awayjs-display/lib/events/TouchEvent\",\"./events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\"}],\"awayjs-display/lib/factories/ITimelineSceneGraphFactory\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/factories\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/graphics/ElementsBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Short3Attributes_1 = require(\"awayjs-core/lib/attributes/Short3Attributes\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar ElementsEvent_1 = require(\"../events/ElementsEvent\");\n/**\n * @class away.base.TriangleElements\n */\nvar ElementsBase = (function (_super) {\n    __extends(ElementsBase, _super);\n    /**\n     *\n     */\n    function ElementsBase(concatenatedBuffer) {\n        if (concatenatedBuffer === void 0) { concatenatedBuffer = null; }\n        _super.call(this);\n        this._customAttributesNames = new Array();\n        this._customAttributes = new Object();\n        this._numElements = 0;\n        this._numVertices = 0;\n        this._verticesDirty = new Object();\n        this._invalidateVertices = new Object();\n        this._concatenatedBuffer = concatenatedBuffer;\n    }\n    Object.defineProperty(ElementsBase.prototype, \"concatenatedBuffer\", {\n        get: function () {\n            return this._concatenatedBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ElementsBase.prototype, \"indices\", {\n        /**\n         * The raw index data that define the faces.\n         */\n        get: function () {\n            return this._indices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ElementsBase.prototype.getCustomAtributesNames = function () {\n        return this._customAttributesNames;\n    };\n    /**\n     *\n     */\n    ElementsBase.prototype.getCustomAtributes = function (name) {\n        return this._customAttributes[name];\n    };\n    Object.defineProperty(ElementsBase.prototype, \"numElements\", {\n        /**\n         * The total amount of triangles in the TriangleElements.\n         */\n        get: function () {\n            return this._numElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ElementsBase.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ElementsBase.prototype.copyTo = function (elements) {\n        if (this.indices)\n            elements.setIndices(this.indices.clone());\n        for (var name in this._customAttributes)\n            elements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n    };\n    /**\n     *\n     */\n    ElementsBase.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._indices) {\n            this._indices.dispose();\n            this._indices = null;\n        }\n        for (var name in this._customAttributes) {\n            this._customAttributes[name].dispose();\n            delete this._customAttributes;\n        }\n    };\n    ElementsBase.prototype.setIndices = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values instanceof Short3Attributes_1.default) {\n            if (this._indices)\n                this.clearIndices();\n            this._indices = values;\n        }\n        else if (values) {\n            if (!this._indices)\n                this._indices = new Short3Attributes_1.default();\n            this._indices.set(values, offset);\n        }\n        else if (this._indices) {\n            this._indices.dispose();\n            this._indices = null;\n            this.clearIndices();\n        }\n        if (this._indices) {\n            this._numElements = this._indices.count;\n            this.invalidateIndicies();\n        }\n        else {\n            this._numElements = 0;\n        }\n    };\n    ElementsBase.prototype.setCustomAttributes = function (name, values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._customAttributes[name])\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._customAttributes[name]);\n            this._customAttributes[name] = values;\n        }\n        else if (values) {\n            if (!this._customAttributes[name])\n                this._customAttributes[name] = new Float3Attributes_1.default(this._concatenatedBuffer); //default custom atrributes is Float3\n            this._customAttributes[name].set(values, offset);\n        }\n        else if (this._customAttributes[name]) {\n            this.clearVertices(this._customAttributes[name]);\n            this._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n            delete this._customAttributes[name];\n            return;\n        }\n        this.invalidateVertices(this._customAttributes[name]);\n        this._verticesDirty[this._customAttributes[name].id] = false;\n        if (this._customAttributesNames.indexOf(name) == -1)\n            this._customAttributesNames.push(name);\n    };\n    /**\n     * Clones the current object\n     * @return An exact duplicate of the current object.\n     */\n    ElementsBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.applyTransformation = function (transform, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Scales the geometry.\n     * @param scale The amount by which to scale.\n     */\n    ElementsBase.prototype.scale = function (scale, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.scaleUV = function (scaleU, scaleV, count, offset) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.getBoxBounds = function (target, count, offset) {\n        if (target === void 0) { target = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.getSphereBounds = function (center, target, count, offset) {\n        if (target === void 0) { target = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.hitTestPoint = function (x, y, z, box, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.default();\n    };\n    ElementsBase.prototype.invalidateIndicies = function () {\n        if (!this._invalidateIndices)\n            this._invalidateIndices = new ElementsEvent_1.default(ElementsEvent_1.default.INVALIDATE_INDICES, this._indices);\n        this.dispatchEvent(this._invalidateIndices);\n    };\n    ElementsBase.prototype.clearIndices = function () {\n        this.dispatchEvent(new ElementsEvent_1.default(ElementsEvent_1.default.CLEAR_INDICES, this._indices));\n    };\n    ElementsBase.prototype.invalidateVertices = function (attributesView) {\n        if (!attributesView || this._verticesDirty[attributesView.id])\n            return;\n        this._verticesDirty[attributesView.id] = true;\n        if (!this._invalidateVertices[attributesView.id])\n            this._invalidateVertices[attributesView.id] = new ElementsEvent_1.default(ElementsEvent_1.default.INVALIDATE_VERTICES, attributesView);\n        this.dispatchEvent(this._invalidateVertices[attributesView.id]);\n    };\n    ElementsBase.prototype.clearVertices = function (attributesView) {\n        if (!attributesView)\n            return;\n        attributesView.dispose();\n        this.dispatchEvent(new ElementsEvent_1.default(ElementsEvent_1.default.CLEAR_VERTICES, attributesView));\n        this._verticesDirty[attributesView.id] = null;\n        this._invalidateVertices[attributesView.id] = null;\n    };\n    ElementsBase.prototype._iTestCollision = function (pickingCollider, material, pickingCollision, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.default();\n    };\n    return ElementsBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsBase;\n\n},{\"../events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/attributes/Short3Attributes\":undefined,\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/graphics/ElementsType\":[function(require,module,exports){\n\"use strict\";\nvar ElementsType = (function () {\n    function ElementsType() {\n    }\n    /**\n     *\n     */\n    ElementsType.TRIANGLE = \"triangle\";\n    /**\n     *\n     */\n    ElementsType.LINE = \"line\";\n    return ElementsType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsType;\n\n},{}],\"awayjs-display/lib/graphics/Graphics\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar Graphic_1 = require(\"../graphics/Graphic\");\nvar ElementsEvent_1 = require(\"../events/ElementsEvent\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\nvar GraphicsPath_1 = require(\"../draw/GraphicsPath\");\nvar GraphicsFactoryFills_1 = require(\"../draw/GraphicsFactoryFills\");\nvar GraphicsFactoryStrokes_1 = require(\"../draw/GraphicsFactoryStrokes\");\nvar PartialImplementationError_1 = require(\"awayjs-core/lib/errors/PartialImplementationError\");\nvar JointStyle_1 = require(\"../draw/JointStyle\");\nvar CapsStyle_1 = require(\"../draw/CapsStyle\");\nvar GraphicsStrokeStyle_1 = require(\"../draw/GraphicsStrokeStyle\");\nvar GraphicsFillStyle_1 = require(\"../draw/GraphicsFillStyle\");\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Sprite\n *\n * @class Graphics\n */\nvar Graphics = (function (_super) {\n    __extends(Graphics, _super);\n    /**\n     * Creates a new Graphics object.\n     */\n    function Graphics() {\n        var _this = this;\n        _super.call(this);\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        this._graphics = new Array();\n        this._current_position = new Point_1.default();\n        this._current_position = new Point_1.default();\n        this._queued_fill_pathes = [];\n        this._queued_stroke_pathes = [];\n        this._active_fill_path = null;\n        this._active_stroke_path = null;\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\n    }\n    Object.defineProperty(Graphics.prototype, \"assetType\", {\n        get: function () {\n            return Graphics.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"count\", {\n        get: function () {\n            return this._graphics.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"animator\", {\n        /**\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\n         */\n        get: function () {\n            return this._animator;\n        },\n        set: function (value) {\n            this._animator = value;\n            var len = this._graphics.length;\n            var graphic;\n            for (var i = 0; i < len; ++i) {\n                graphic = this._graphics[i];\n                // cause material to be unregistered and registered again to work with the new animation type (if possible)\n                if (graphic.material) {\n                    graphic.material.iRemoveOwner(graphic);\n                    graphic.material.iAddOwner(graphic);\n                }\n                //invalidate any existing graphic objects in case they need to pull new elements\n                graphic.invalidateElements();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._iInvalidateSurfaces();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"queued_stroke_pathes\", {\n        get: function () {\n            return this._queued_stroke_pathes;\n        },\n        set: function (value) {\n            this._queued_stroke_pathes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"queued_fill_pathes\", {\n        get: function () {\n            return this._queued_fill_pathes;\n        },\n        set: function (value) {\n            this._queued_fill_pathes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"material\", {\n        /**\n         * The material with which to render the Graphics.\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (value == this._material)\n                return;\n            var i;\n            var len = this._graphics.length;\n            var graphic;\n            if (this._material)\n                for (i = 0; i < len; i++)\n                    if (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n                        this._material.iRemoveOwner(graphic);\n            this._material = value;\n            if (this._material)\n                for (i = 0; i < len; i++)\n                    if (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n                        this._material.iAddOwner(graphic);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a GraphicBase wrapping a Elements.\n     *\n     * @param elements\n     */\n    Graphics.prototype.addGraphic = function (elements, material, style, count, offset) {\n        if (material === void 0) { material = null; }\n        if (style === void 0) { style = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        var graphic;\n        if (Graphic_1.default._available.length) {\n            graphic = Graphic_1.default._available.pop();\n            graphic._iIndex = this._graphics.length;\n            graphic.parent = this;\n            graphic.elements = elements;\n            graphic.material = material;\n            graphic.style = style;\n            graphic.count = count;\n            graphic.offset = offset;\n        }\n        else {\n            graphic = new Graphic_1.default(this._graphics.length, this, elements, material, style, count, offset);\n        }\n        this._graphics.push(graphic);\n        graphic.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        this.invalidate();\n        return graphic;\n    };\n    Graphics.prototype.removeGraphic = function (graphic) {\n        this._graphics.splice(this._graphics.indexOf(graphic), 1);\n        graphic.removeEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        graphic.elements = null;\n        graphic.material = null;\n        graphic.style = null;\n        graphic.clear();\n        this.invalidate();\n    };\n    Graphics.prototype.getGraphicAt = function (index) {\n        return this._graphics[index];\n    };\n    Graphics.prototype.applyTransformation = function (transform) {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].applyTransformation(transform);\n    };\n    Graphics.prototype.copyTo = function (graphics) {\n        graphics.material = this._material;\n        graphics.style = this.style;\n        graphics.particles = this.particles;\n        graphics.numParticles = this.numParticles;\n        var graphic;\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i) {\n            graphic = this._graphics[i];\n            graphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle(), graphic.count, graphic.offset);\n        }\n        if (this._animator)\n            graphics.animator = this._animator.clone();\n    };\n    Graphics.prototype.clone = function () {\n        var newInstance = new Graphics();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    /**\n     * Scales the geometry.\n     * @param scale The amount by which to scale.\n     */\n    Graphics.prototype.scale = function (scale) {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].scale(scale);\n    };\n    Graphics.prototype.clear = function () {\n        for (var i = this._graphics.length - 1; i >= 0; i--) {\n            this._graphics[i].clear();\n        }\n    };\n    /**\n     * Clears all resources used by the Graphics object, including SubGeometries.\n     */\n    Graphics.prototype.dispose = function () {\n        this.material = null;\n        for (var i = this._graphics.length - 1; i >= 0; i--)\n            this._graphics[i].dispose();\n        if (this._animator)\n            this._animator.dispose();\n    };\n    /**\n     * Scales the uv coordinates (tiling)\n     * @param scaleU The amount by which to scale on the u axis. Default is 1;\n     * @param scaleV The amount by which to scale on the v axis. Default is 1;\n     */\n    Graphics.prototype.scaleUV = function (scaleU, scaleV) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].scaleUV(scaleU, scaleV);\n    };\n    Graphics.prototype.getBoxBounds = function () {\n        if (this._boxBoundsInvalid) {\n            this._boxBoundsInvalid = false;\n            if (!this._boxBounds)\n                this._boxBounds = new Box_1.default();\n            if (this._graphics.length) {\n                this._boxBounds.setBoundIdentity();\n                var len = this._graphics.length;\n                for (var i = 0; i < len; i++)\n                    this._boxBounds = this._boxBounds.union(this._graphics[i].getBoxBounds(), this._boxBounds);\n            }\n            else {\n                this._boxBounds.setEmpty();\n            }\n        }\n        return this._boxBounds;\n    };\n    Graphics.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        var len = this._graphics.length;\n        for (var i = 0; i < len; i++)\n            target = this._graphics[i].getSphereBounds(center, target);\n        return target;\n    };\n    Graphics.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n    };\n    Graphics.prototype._iInvalidateSurfaces = function () {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].invalidateSurface();\n    };\n    Graphics.prototype.invalidateElements = function () {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].invalidateElements();\n    };\n    Graphics.prototype._hitTestPointInternal = function (x, y) {\n        //TODO: handle lines as well\n        var len = this._graphics.length;\n        for (var i = 0; i < len; i++)\n            if (this._graphics[i].hitTestPoint(x, y, 0))\n                return true;\n        return false;\n    };\n    Graphics.prototype.acceptTraverser = function (traverser) {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; i++)\n            traverser.applyRenderable(this._graphics[i]);\n    };\n    Graphics.prototype._onInvalidateProperties = function (event) {\n        this._iInvalidateSurfaces();\n    };\n    Graphics.prototype._onInvalidateVertices = function (event) {\n        if (event.attributesView != event.target.positions)\n            return;\n        this.invalidate();\n    };\n    Graphics.prototype.draw_fills = function () {\n        GraphicsFactoryFills_1.default.draw_pathes(this);\n    };\n    Graphics.prototype.draw_strokes = function () {\n        GraphicsFactoryStrokes_1.default.draw_pathes(this);\n    };\n    /**\n     * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n     * tiled to fill the area. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called. </p>\n     *\n     * @param bitmap A transparent or opaque bitmap image that contains the bits\n     *               to be displayed.\n     * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n     *               can use to define transformations on the bitmap. For\n     *               example, you can use the following matrix to rotate a bitmap\n     *               by 45 degrees(pi/4 radians):\n     * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n     *               pattern. If <code>false</code>, the bitmap image does not\n     *               repeat, and the edges of the bitmap are used for any fill\n     *               area that extends beyond the bitmap.\n     *\n     *               <p>For example, consider the following bitmap(a 20 x\n     *               20-pixel checkerboard pattern):</p>\n     *\n     *               <p>When <code>repeat</code> is set to <code>true</code>(as\n     *               in the following example), the bitmap fill repeats the\n     *               bitmap:</p>\n     *\n     *               <p>When <code>repeat</code> is set to <code>false</code>,\n     *               the bitmap fill uses the edge pixels for the fill area\n     *               outside the bitmap:</p>\n     * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n     *               by using a nearest-neighbor algorithm and look pixelated. If\n     *               <code>true</code>, upscaled bitmap images are rendered by\n     *               using a bilinear algorithm. Rendering by using the nearest\n     *               neighbor algorithm is faster.\n     */\n    Graphics.prototype.beginBitmapFill = function (bitmap, matrix, repeat, smooth) {\n        if (matrix === void 0) { matrix = null; }\n        if (repeat === void 0) { repeat = true; }\n        if (smooth === void 0) { smooth = false; }\n        this.draw_fills();\n        // start a new fill path\n        this._active_fill_path = new GraphicsPath_1.default();\n        // todo: create bitmap fill style\n        this._active_fill_path.style = new GraphicsFillStyle_1.default(0xffffff, 1);\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_fill_pathes.push(this._active_fill_path);\n    };\n    /**\n     * Specifies a simple one-color fill that subsequent calls to other Graphics\n     * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n     * when drawing. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called.</p>\n     *\n     * @param color The color of the fill(0xRRGGBB).\n     * @param alpha The alpha value of the fill(0.0 to 1.0).\n     */\n    Graphics.prototype.beginFill = function (color /*int*/, alpha) {\n        if (alpha === void 0) { alpha = 1; }\n        this.draw_fills();\n        // start a new fill path\n        this._active_fill_path = new GraphicsPath_1.default();\n        this._active_fill_path.style = new GraphicsFillStyle_1.default(color, alpha);\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_fill_pathes.push(this._active_fill_path);\n    };\n    /**\n     * Specifies a gradient fill used by subsequent calls to other Graphics\n     * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n     * the object. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called. </p>\n     *\n     * @param type                A value from the GradientType class that\n     *                            specifies which gradient type to use:\n     *                            <code>GradientType.LINEAR</code> or\n     *                            <code>GradientType.RADIAL</code>.\n     * @param colors              An array of RGB hexadecimal color values used\n     *                            in the gradient; for example, red is 0xFF0000,\n     *                            blue is 0x0000FF, and so on. You can specify\n     *                            up to 15 colors. For each color, specify a\n     *                            corresponding value in the alphas and ratios\n     *                            parameters.\n     * @param alphas              An array of alpha values for the corresponding\n     *                            colors in the colors array; valid values are 0\n     *                            to 1. If the value is less than 0, the default\n     *                            is 0. If the value is greater than 1, the\n     *                            default is 1.\n     * @param ratios              An array of color distribution ratios; valid\n     *                            values are 0-255. This value defines the\n     *                            percentage of the width where the color is\n     *                            sampled at 100%. The value 0 represents the\n     *                            left position in the gradient box, and 255\n     *                            represents the right position in the gradient\n     *                            box.\n     * @param matrix              A transformation matrix as defined by the\n     *                            flash.geom.Matrix class. The flash.geom.Matrix\n     *                            class includes a\n     *                            <code>createGradientBox()</code> method, which\n     *                            lets you conveniently set up the matrix for use\n     *                            with the <code>beginGradientFill()</code>\n     *                            method.\n     * @param spreadMethod        A value from the SpreadMethod class that\n     *                            specifies which spread method to use, either:\n     *                            <code>SpreadMethod.PAD</code>,\n     *                            <code>SpreadMethod.REFLECT</code>, or\n     *                            <code>SpreadMethod.REPEAT</code>.\n     *\n     *                            <p>For example, consider a simple linear\n     *                            gradient between two colors:</p>\n     *\n     *                            <p>This example uses\n     *                            <code>SpreadMethod.PAD</code> for the spread\n     *                            method, and the gradient fill looks like the\n     *                            following:</p>\n     *\n     *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n     *                            for the spread method, the gradient fill looks\n     *                            like the following:</p>\n     *\n     *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n     *                            for the spread method, the gradient fill looks\n     *                            like the following:</p>\n     * @param interpolationMethod A value from the InterpolationMethod class that\n     *                            specifies which value to use:\n     *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n     *                            <code>InterpolationMethod.RGB</code>\n     *\n     *                            <p>For example, consider a simple linear\n     *                            gradient between two colors(with the\n     *                            <code>spreadMethod</code> parameter set to\n     *                            <code>SpreadMethod.REFLECT</code>). The\n     *                            different interpolation methods affect the\n     *                            appearance as follows: </p>\n     * @param focalPointRatio     A number that controls the location of the\n     *                            focal point of the gradient. 0 means that the\n     *                            focal point is in the center. 1 means that the\n     *                            focal point is at one border of the gradient\n     *                            circle. -1 means that the focal point is at the\n     *                            other border of the gradient circle. A value\n     *                            less than -1 or greater than 1 is rounded to -1\n     *                            or 1. For example, the following example shows\n     *                            a <code>focalPointRatio</code> set to 0.75:\n     * @throws ArgumentError If the <code>type</code> parameter is not valid.\n     */\n    Graphics.prototype.beginGradientFill = function (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio) {\n        if (matrix === void 0) { matrix = null; }\n        if (spreadMethod === void 0) { spreadMethod = \"pad\"; }\n        if (interpolationMethod === void 0) { interpolationMethod = \"rgb\"; }\n        if (focalPointRatio === void 0) { focalPointRatio = 0; }\n        this.draw_fills();\n        // start a new fill path\n        this._active_fill_path = new GraphicsPath_1.default();\n        // todo: create gradient fill style\n        this._active_fill_path.style = new GraphicsFillStyle_1.default(colors[0], alphas[0]);\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_fill_pathes.push(this._active_fill_path);\n    };\n    /**\n     * Copies all of drawing commands from the source Graphics object into the\n     * calling Graphics object.\n     *\n     * @param sourceGraphics The Graphics object from which to copy the drawing\n     *                       commands.\n     */\n    Graphics.prototype.copyFrom = function (sourceGraphics) {\n        sourceGraphics.copyTo(this);\n    };\n    /**\n     * Draws a cubic Bezier curve from the current drawing position to the\n     * specified anchor point. Cubic Bezier curves consist of two anchor points\n     * and two control points. The curve interpolates the two anchor points and\n     * curves toward the two control points.\n     *\n     * The four points you use to draw a cubic Bezier curve with the\n     * <code>cubicCurveTo()</code> method are as follows:\n     *\n     * <ul>\n     *   <li>The current drawing position is the first anchor point. </li>\n     *   <li>The anchorX and anchorY parameters specify the second anchor point.\n     *   </li>\n     *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n     *   specify the first control point.</li>\n     *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n     *   specify the second control point.</li>\n     * </ul>\n     *\n     * If you call the <code>cubicCurveTo()</code> method before calling the\n     * <code>moveTo()</code> method, your curve starts at position (0, 0).\n     *\n     * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n     * the current drawing position to (<code>anchorX</code>,\n     * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n     * the current drawing position remains unchanged.\n     *\n     * If your movie clip contains content created with the Flash drawing tools,\n     * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n     * underneath that content.\n     *\n     * @param controlX1 Specifies the horizontal position of the first control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param controlY1 Specifies the vertical position of the first control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param controlX2 Specifies the horizontal position of the second control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param controlY2 Specifies the vertical position of the second control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param anchorX   Specifies the horizontal position of the anchor point\n     *                  relative to the registration point of the parent display\n     *                  object.\n     * @param anchorY   Specifies the vertical position of the anchor point\n     *                  relative to the registration point of the parent display\n     *                  object.\n     */\n    Graphics.prototype.cubicCurveTo = function (controlX1, controlY1, controlX2, controlY2, anchorX, anchorY) {\n        throw new PartialImplementationError_1.default(\"cubicCurveTo\");\n        /*\n         t = 0.5; // given example value\n         x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n         y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n         this.queued_command_types.push(Graphics.CMD_BEZIER);\n         this.queued_command_data.push(controlX1);\n         this.queued_command_data.push(controlY1);\n         this.queued_command_data.push(controlX2);\n         this.queued_command_data.push(controlY2);\n         this.queued_command_data.push(anchorX);\n         this.queued_command_data.push(anchorY);\n\n         // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n         this.draw_direction+=0;\n         */\n    };\n    /**\n     * Draws a curve using the current line style from the current drawing\n     * position to(anchorX, anchorY) and using the control point that\n     * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n     * drawing position is then set to(<code>anchorX</code>,\n     * <code>anchorY</code>). If the movie clip in which you are drawing contains\n     * content created with the Flash drawing tools, calls to the\n     * <code>curveTo()</code> method are drawn underneath this content. If you\n     * call the <code>curveTo()</code> method before any calls to the\n     * <code>moveTo()</code> method, the default of the current drawing position\n     * is(0, 0). If any of the parameters are missing, this method fails and the\n     * current drawing position is not changed.\n     *\n     * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n     * consist of two anchor points and one control point. The curve interpolates\n     * the two anchor points and curves toward the control point. </p>\n     *\n     * @param controlX A number that specifies the horizontal position of the\n     *                 control point relative to the registration point of the\n     *                 parent display object.\n     * @param controlY A number that specifies the vertical position of the\n     *                 control point relative to the registration point of the\n     *                 parent display object.\n     * @param anchorX  A number that specifies the horizontal position of the\n     *                 next anchor point relative to the registration point of\n     *                 the parent display object.\n     * @param anchorY  A number that specifies the vertical position of the next\n     *                 anchor point relative to the registration point of the\n     *                 parent display object.\n     */\n    Graphics.prototype.curveTo = function (controlX, controlY, anchorX, anchorY) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n        }\n        this._current_position.x = anchorX;\n        this._current_position.y = anchorY;\n    };\n    /**\n     * Draws a circle. Set the line style, fill, or both before you call the\n     * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n     * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n     * method.\n     *\n     * @param x      The <i>x</i> location of the center of the circle relative\n     *               to the registration point of the parent display object(in\n     *               pixels).\n     * @param y      The <i>y</i> location of the center of the circle relative\n     *               to the registration point of the parent display object(in\n     *               pixels).\n     * @param radius The radius of the circle(in pixels).\n     */\n    Graphics.prototype.drawCircle = function (x, y, radius) {\n        // todo: directly create triangles instead of draw commands ?\n        var radius2 = radius * 1.065;\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x - radius, y);\n            for (var i = 8; i >= 0; i--) {\n                var degree = (i) * (360 / 8) * Math.PI / 180;\n                var degree2 = degree + ((360 / 16) * Math.PI / 180);\n                this._active_fill_path.curveTo(x - (Math.cos(degree2) * radius2), y + (Math.sin(degree2) * radius2), x - (Math.cos(degree) * radius), y + (Math.sin(degree) * radius));\n            }\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y + radius);\n            var radius2 = radius * 0.93;\n            this._active_stroke_path.curveTo(x - (radius2), y + (radius2), x - radius, y);\n            this._active_stroke_path.curveTo(x - (radius2), y - (radius2), x, y - radius);\n            this._active_stroke_path.curveTo(x + (radius2), y - (radius2), x + radius, y);\n            this._active_stroke_path.curveTo(x + (radius2), y + (radius2), x, y + radius);\n        }\n    };\n    /**\n     * Draws an ellipse. Set the line style, fill, or both before you call the\n     * <code>drawEllipse()</code> method, by calling the\n     * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n     * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n     * <code>beginBitmapFill()</code> method.\n     *\n     * @param x      The <i>x</i> location of the top-left of the bounding-box of\n     *               the ellipse relative to the registration point of the parent\n     *               display object(in pixels).\n     * @param y      The <i>y</i> location of the top left of the bounding-box of\n     *               the ellipse relative to the registration point of the parent\n     *               display object(in pixels).\n     * @param width  The width of the ellipse(in pixels).\n     * @param height The height of the ellipse(in pixels).\n     */\n    Graphics.prototype.drawEllipse = function (x, y, width, height) {\n        width /= 2;\n        height /= 2;\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x, y + height);\n            this._active_fill_path.curveTo(x - (width), y + (height), x - width, y);\n            this._active_fill_path.curveTo(x - (width), y - (height), x, y - height);\n            this._active_fill_path.curveTo(x + (width), y - (height), x + width, y);\n            this._active_fill_path.curveTo(x + (width), y + (height), x, y + height);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y + height);\n            this._active_stroke_path.curveTo(x - (width), y + (height), x - width, y);\n            this._active_stroke_path.curveTo(x - (width), y - (height), x, y - height);\n            this._active_stroke_path.curveTo(x + (width), y - (height), x + width, y);\n            this._active_stroke_path.curveTo(x + (width), y + (height), x, y + height);\n        }\n    };\n    /**\n     * Submits a series of IGraphicsData instances for drawing. This method\n     * accepts a Vector containing objects including paths, fills, and strokes\n     * that implement the IGraphicsData interface. A Vector of IGraphicsData\n     * instances can refer to a part of a shape, or a complex fully defined set\n     * of data for rendering a complete shape.\n     *\n     * <p> Graphics paths can contain other graphics paths. If the\n     * <code>graphicsData</code> Vector includes a path, that path and all its\n     * sub-paths are rendered during this operation. </p>\n     *\n     */\n    Graphics.prototype.drawGraphicsData = function (graphicsData) {\n        //this.draw_fills();\n        /*\n         for (var i:number=0; i<graphicsData.length; i++){\n         //todo\n         if(graphicsData[i].dataType==\"beginFill\"){\n\n         }\n         else if(graphicsData[i].dataType==\"endFill\"){\n\n         }\n         else if(graphicsData[i].dataType==\"endFill\"){\n\n         }\n         else if(graphicsData[i].dataType==\"Path\"){\n\n         }\n\n         }\n         */\n    };\n    /**\n     * Submits a series of commands for drawing. The <code>drawPath()</code>\n     * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n     * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n     * single call. The <code>drawPath()</code> method parameters combine drawing\n     * commands with x- and y-coordinate value pairs and a drawing direction. The\n     * drawing commands are values from the GraphicsPathCommand class. The x- and\n     * y-coordinate value pairs are Numbers in an array where each pair defines a\n     * coordinate location. The drawing direction is a value from the\n     * GraphicsPathWinding class.\n     *\n     * <p> Generally, drawings render faster with <code>drawPath()</code> than\n     * with a series of individual <code>lineTo()</code> and\n     * <code>curveTo()</code> methods. </p>\n     *\n     * <p> The <code>drawPath()</code> method uses a uses a floating computation\n     * so rotation and scaling of shapes is more accurate and gives better\n     * results. However, curves submitted using the <code>drawPath()</code>\n     * method can have small sub-pixel alignment errors when used in conjunction\n     * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n     *\n     * <p> The <code>drawPath()</code> method also uses slightly different rules\n     * for filling and drawing lines. They are: </p>\n     *\n     * <ul>\n     *   <li>When a fill is applied to rendering a path:\n     * <ul>\n     *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n     * stroke rendering will still occur, consistent with the rules for strokes\n     * below.)</li>\n     *   <li>A sub-path that isn't closed(the end point is not equal to the\n     * begin point) is implicitly closed.</li>\n     * </ul>\n     * </li>\n     *   <li>When a stroke is applied to rendering a path:\n     * <ul>\n     *   <li>The sub-paths can be composed of any number of points.</li>\n     *   <li>The sub-path is never implicitly closed.</li>\n     * </ul>\n     * </li>\n     * </ul>\n     *\n     * @param winding Specifies the winding rule using a value defined in the\n     *                GraphicsPathWinding class.\n     */\n    Graphics.prototype.drawPath = function (commands, data, winding) {\n        //todo\n        /*\n         if(this._active_fill_path!=null){\n         this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n         }\n         if(this._active_stroke_path!=null){\n         this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n         }\n         this._current_position.x=anchorX;\n         this._current_position.y=anchorY;\n         */\n    };\n    /**\n     * Draws a rectangle. Set the line style, fill, or both before you call the\n     * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n     * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n     * method.\n     *\n     * @param x      A number indicating the horizontal position relative to the\n     *               registration point of the parent display object(in pixels).\n     * @param y      A number indicating the vertical position relative to the\n     *               registration point of the parent display object(in pixels).\n     * @param width  The width of the rectangle(in pixels).\n     * @param height The height of the rectangle(in pixels).\n     * @throws ArgumentError If the <code>width</code> or <code>height</code>\n     *                       parameters are not a number\n     *                      (<code>Number.NaN</code>).\n     */\n    Graphics.prototype.drawRect = function (x, y, width, height) {\n        //todo: directly create triangles instead of drawing commands ?\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x, y);\n            this._active_fill_path.lineTo(x + width, y);\n            this._active_fill_path.lineTo(x + width, y + height);\n            this._active_fill_path.lineTo(x, y + height);\n            this._active_fill_path.lineTo(x, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y);\n            this._active_stroke_path.lineTo(x + width, y);\n            this._active_stroke_path.lineTo(x + width, y + height);\n            this._active_stroke_path.lineTo(x, y + height);\n            this._active_stroke_path.lineTo(x, y);\n        }\n    };\n    /**\n     * Draws a rounded rectangle. Set the line style, fill, or both before you\n     * call the <code>drawRoundRect()</code> method, by calling the\n     * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n     * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n     * <code>beginBitmapFill()</code> method.\n     *\n     * @param x             A number indicating the horizontal position relative\n     *                      to the registration point of the parent display\n     *                      object(in pixels).\n     * @param y             A number indicating the vertical position relative to\n     *                      the registration point of the parent display object\n     *                     (in pixels).\n     * @param width         The width of the round rectangle(in pixels).\n     * @param height        The height of the round rectangle(in pixels).\n     * @param ellipseWidth  The width of the ellipse used to draw the rounded\n     *                      corners(in pixels).\n     * @param ellipseHeight The height of the ellipse used to draw the rounded\n     *                      corners(in pixels). Optional; if no value is\n     *                      specified, the default value matches that provided\n     *                      for the <code>ellipseWidth</code> parameter.\n     * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n     *                       <code>ellipseWidth</code> or\n     *                       <code>ellipseHeight</code> parameters are not a\n     *                       number(<code>Number.NaN</code>).\n     */\n    Graphics.prototype.drawRoundRect = function (x, y, width, height, ellipseWidth, ellipseHeight) {\n        if (ellipseHeight === void 0) { ellipseHeight = NaN; }\n        //todo: directly create triangles instead of drawing commands ?\n        if (!ellipseHeight) {\n            ellipseHeight = ellipseWidth;\n        }\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x + ellipseWidth, y);\n            this._active_fill_path.lineTo(x + width - ellipseWidth, y);\n            this._active_fill_path.curveTo(x + width, y, x + width, y + ellipseHeight);\n            this._active_fill_path.lineTo(x + width, y + height - ellipseHeight);\n            this._active_fill_path.curveTo(x + width, y + height, x + width - ellipseWidth, y + height);\n            this._active_fill_path.lineTo(x + ellipseWidth, y + height);\n            this._active_fill_path.curveTo(x, y + height, x, y + height - ellipseHeight);\n            this._active_fill_path.lineTo(x, y + ellipseHeight);\n            this._active_fill_path.curveTo(x, y, x + ellipseWidth, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x + ellipseWidth, y);\n            this._active_stroke_path.lineTo(x + width - ellipseWidth, y);\n            this._active_stroke_path.curveTo(x + width, y, x + width, y + ellipseHeight);\n            this._active_stroke_path.lineTo(x + width, y + height - ellipseHeight);\n            this._active_stroke_path.curveTo(x + width, y + height, x + width - ellipseWidth, y + height);\n            this._active_stroke_path.lineTo(x + ellipseWidth, y + height);\n            this._active_stroke_path.curveTo(x, y + height, x, y + height - ellipseHeight);\n            this._active_stroke_path.lineTo(x, y + ellipseHeight);\n            this._active_stroke_path.curveTo(x, y, x + ellipseWidth, y);\n        }\n    };\n    //public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n    /**\n     * Renders a set of triangles, typically to distort bitmaps and give them a\n     * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n     * either the current fill, or a bitmap fill, to the triangle faces using a\n     * set of(u,v) coordinates.\n     *\n     * <p> Any type of fill can be used, but if the fill has a transform matrix\n     * that transform matrix is ignored. </p>\n     *\n     * <p> A <code>uvtData</code> parameter improves texture mapping when a\n     * bitmap fill is used. </p>\n     *\n     * @param culling Specifies whether to render triangles that face in a\n     *                specified direction. This parameter prevents the rendering\n     *                of triangles that cannot be seen in the current view. This\n     *                parameter can be set to any value defined by the\n     *                TriangleCulling class.\n     */\n    Graphics.prototype.drawTriangles = function (vertices, indices, uvtData, culling) {\n        if (indices === void 0) { indices = null; }\n        if (uvtData === void 0) { uvtData = null; }\n        if (culling === void 0) { culling = null; }\n        if (this._active_fill_path != null) {\n        }\n        if (this._active_stroke_path != null) {\n        }\n    };\n    /**\n     * Applies a fill to the lines and curves that were added since the last call\n     * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n     * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n     * specified in the previous call to the <code>beginFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n     * method. If the current drawing position does not equal the previous\n     * position specified in a <code>moveTo()</code> method and a fill is\n     * defined, the path is closed with a line and then filled.\n     *\n     */\n    Graphics.prototype.endFill = function () {\n        this.draw_strokes();\n        this.draw_fills();\n        this._active_fill_path = null;\n        this._active_stroke_path = null;\n    };\n    /**\n     * Specifies a bitmap to use for the line stroke when drawing lines.\n     *\n     * <p>The bitmap line style is used for subsequent calls to Graphics methods\n     * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n     * method. The line style remains in effect until you call the\n     * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n     * the <code>lineBitmapStyle()</code> method again with different parameters.\n     * </p>\n     *\n     * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n     * drawing a path to specify different styles for different line segments\n     * within a path. </p>\n     *\n     * <p>Call the <code>lineStyle()</code> method before you call the\n     * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n     * value of the line style is <code>undefined</code>.</p>\n     *\n     * <p>Calls to the <code>clear()</code> method set the line style back to\n     * <code>undefined</code>. </p>\n     *\n     * @param bitmap The bitmap to use for the line stroke.\n     * @param matrix An optional transformation matrix as defined by the\n     *               flash.geom.Matrix class. The matrix can be used to scale or\n     *               otherwise manipulate the bitmap before applying it to the\n     *               line style.\n     * @param repeat Whether to repeat the bitmap in a tiled fashion.\n     * @param smooth Whether smoothing should be applied to the bitmap.\n     */\n    Graphics.prototype.lineBitmapStyle = function (bitmap, matrix, repeat, smooth) {\n        if (matrix === void 0) { matrix = null; }\n        if (repeat === void 0) { repeat = true; }\n        if (smooth === void 0) { smooth = false; }\n        // start a new stroke path\n        this._active_stroke_path = new GraphicsPath_1.default();\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_stroke_pathes.push(this._active_stroke_path);\n    };\n    /**\n     * Specifies a gradient to use for the stroke when drawing lines.\n     *\n     * <p>The gradient line style is used for subsequent calls to Graphics\n     * methods such as the <code>lineTo()</code> methods or the\n     * <code>drawCircle()</code> method. The line style remains in effect until\n     * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n     * methods, or the <code>lineGradientStyle()</code> method again with\n     * different parameters. </p>\n     *\n     * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n     * of drawing a path to specify different styles for different line segments\n     * within a path. </p>\n     *\n     * <p>Call the <code>lineStyle()</code> method before you call the\n     * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n     * value of the line style is <code>undefined</code>.</p>\n     *\n     * <p>Calls to the <code>clear()</code> method set the line style back to\n     * <code>undefined</code>. </p>\n     *\n     * @param type                A value from the GradientType class that\n     *                            specifies which gradient type to use, either\n     *                            GradientType.LINEAR or GradientType.RADIAL.\n     * @param colors              An array of RGB hexadecimal color values used\n     *                            in the gradient; for example, red is 0xFF0000,\n     *                            blue is 0x0000FF, and so on. You can specify\n     *                            up to 15 colors. For each color, specify a\n     *                            corresponding value in the alphas and ratios\n     *                            parameters.\n     * @param alphas              An array of alpha values for the corresponding\n     *                            colors in the colors array; valid values are 0\n     *                            to 1. If the value is less than 0, the default\n     *                            is 0. If the value is greater than 1, the\n     *                            default is 1.\n     * @param ratios              An array of color distribution ratios; valid\n     *                            values are 0-255. This value defines the\n     *                            percentage of the width where the color is\n     *                            sampled at 100%. The value 0 represents the\n     *                            left position in the gradient box, and 255\n     *                            represents the right position in the gradient\n     *                            box.\n     * @param matrix              A transformation matrix as defined by the\n     *                            flash.geom.Matrix class. The flash.geom.Matrix\n     *                            class includes a\n     *                            <code>createGradientBox()</code> method, which\n     *                            lets you conveniently set up the matrix for use\n     *                            with the <code>lineGradientStyle()</code>\n     *                            method.\n     * @param spreadMethod        A value from the SpreadMethod class that\n     *                            specifies which spread method to use:\n     * @param interpolationMethod A value from the InterpolationMethod class that\n     *                            specifies which value to use. For example,\n     *                            consider a simple linear gradient between two\n     *                            colors(with the <code>spreadMethod</code>\n     *                            parameter set to\n     *                            <code>SpreadMethod.REFLECT</code>). The\n     *                            different interpolation methods affect the\n     *                            appearance as follows:\n     * @param focalPointRatio     A number that controls the location of the\n     *                            focal point of the gradient. The value 0 means\n     *                            the focal point is in the center. The value 1\n     *                            means the focal point is at one border of the\n     *                            gradient circle. The value -1 means that the\n     *                            focal point is at the other border of the\n     *                            gradient circle. Values less than -1 or greater\n     *                            than 1 are rounded to -1 or 1. The following\n     *                            image shows a gradient with a\n     *                            <code>focalPointRatio</code> of -0.75:\n     */\n    Graphics.prototype.lineGradientStyle = function (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio) {\n        if (matrix === void 0) { matrix = null; }\n        if (spreadMethod === void 0) { spreadMethod = null; }\n        if (interpolationMethod === void 0) { interpolationMethod = null; }\n        if (focalPointRatio === void 0) { focalPointRatio = 0; }\n        // start a new stroke path\n        this._active_stroke_path = new GraphicsPath_1.default();\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_stroke_pathes.push(this._active_stroke_path);\n    };\n    /**\n     * Specifies a shader to use for the line stroke when drawing lines.\n     *\n     * <p>The shader line style is used for subsequent calls to Graphics methods\n     * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n     * method. The line style remains in effect until you call the\n     * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n     * the <code>lineBitmapStyle()</code> method again with different parameters.\n     * </p>\n     *\n     * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n     * drawing a path to specify different styles for different line segments\n     * within a path. </p>\n     *\n     * <p>Call the <code>lineStyle()</code> method before you call the\n     * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n     * value of the line style is <code>undefined</code>.</p>\n     *\n     * <p>Calls to the <code>clear()</code> method set the line style back to\n     * <code>undefined</code>. </p>\n     *\n     * @param shader The shader to use for the line stroke.\n     * @param matrix An optional transformation matrix as defined by the\n     *               flash.geom.Matrix class. The matrix can be used to scale or\n     *               otherwise manipulate the bitmap before applying it to the\n     *               line style.\n     */\n    //\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n    //\t\t{\n    //\n    //\t\t}\n    /**\n     * Specifies a line style used for subsequent calls to Graphics methods such\n     * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n     * method. The line style remains in effect until you call the\n     * <code>lineGradientStyle()</code> method, the\n     * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n     * method with different parameters.\n     *\n     * <p>You can call the <code>lineStyle()</code> method in the middle of\n     * drawing a path to specify different styles for different line segments\n     * within the path.</p>\n     *\n     * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n     * style back to <code>undefined</code>.</p>\n     *\n     * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n     * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n     *\n     * @param thickness    An integer that indicates the thickness of the line in\n     *                     points; valid values are 0-255. If a number is not\n     *                     specified, or if the parameter is undefined, a line is\n     *                     not drawn. If a value of less than 0 is passed, the\n     *                     default is 0. The value 0 indicates hairline\n     *                     thickness; the maximum thickness is 255. If a value\n     *                     greater than 255 is passed, the default is 255.\n     * @param color        A hexadecimal color value of the line; for example,\n     *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n     *                     value is not indicated, the default is 0x000000\n     *                    (black). Optional.\n     * @param alpha        A number that indicates the alpha value of the color\n     *                     of the line; valid values are 0 to 1. If a value is\n     *                     not indicated, the default is 1(solid). If the value\n     *                     is less than 0, the default is 0. If the value is\n     *                     greater than 1, the default is 1.\n     * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n     *                     specifies whether to hint strokes to full pixels. This\n     *                     affects both the position of anchors of a curve and\n     *                     the line stroke size itself. With\n     *                     <code>pixelHinting</code> set to <code>true</code>,\n     *                     line widths are adjusted to full pixel widths. With\n     *                     <code>pixelHinting</code> set to <code>false</code>,\n     *                     disjoints can appear for curves and straight lines.\n     *                     For example, the following illustrations show how\n     *                     Flash Player or Adobe AIR renders two rounded\n     *                     rectangles that are identical, except that the\n     *                     <code>pixelHinting</code> parameter used in the\n     *                     <code>lineStyle()</code> method is set differently\n     *                    (the images are scaled by 200%, to emphasize the\n     *                     difference):\n     *\n     *                     <p>If a value is not supplied, the line does not use\n     *                     pixel hinting.</p>\n     * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n     *                     LineScaleMode class that specifies which scale mode to\n     *                     use:\n     *                     <ul>\n     *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n     *                     scale the line thickness when the object is scaled\n     *                    (the default). </li>\n     *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n     *                     the line thickness. </li>\n     *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n     *                     scale the line thickness if the object is scaled\n     *                     vertically <i>only</i>. For example, consider the\n     *                     following circles, drawn with a one-pixel line, and\n     *                     each with the <code>scaleMode</code> parameter set to\n     *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n     *                     left is scaled vertically only, and the circle on the\n     *                     right is scaled both vertically and horizontally:\n     *                     </li>\n     *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n     *                     scale the line thickness if the object is scaled\n     *                     horizontally <i>only</i>. For example, consider the\n     *                     following circles, drawn with a one-pixel line, and\n     *                     each with the <code>scaleMode</code> parameter set to\n     *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n     *                     the left is scaled horizontally only, and the circle\n     *                     on the right is scaled both vertically and\n     *                     horizontally:   </li>\n     *                     </ul>\n     * @param caps        (Not supported in Flash Lite 4) A value from the\n     *                     CapsStyle class that specifies the type of caps at the\n     *                     end of lines. Valid values are:\n     *                     <code>CapsStyle.NONE</code>,\n     *                     <code>CapsStyle.ROUND</code>, and\n     *                     <code>CapsStyle.SQUARE</code>. If a value is not\n     *                     indicated, Flash uses round caps.\n     *\n     *                     <p>For example, the following illustrations show the\n     *                     different <code>capsStyle</code> settings. For each\n     *                     setting, the illustration shows a blue line with a\n     *                     thickness of 30(for which the <code>capsStyle</code>\n     *                     applies), and a superimposed black line with a\n     *                     thickness of 1(for which no <code>capsStyle</code>\n     *                     applies): </p>\n     * @param joints      (Not supported in Flash Lite 4) A value from the\n     *                     JointStyle class that specifies the type of joint\n     *                     appearance used at angles. Valid values are:\n     *                     <code>JointStyle.BEVEL</code>,\n     *                     <code>JointStyle.MITER</code>, and\n     *                     <code>JointStyle.ROUND</code>. If a value is not\n     *                     indicated, Flash uses round joints.\n     *\n     *                     <p>For example, the following illustrations show the\n     *                     different <code>joints</code> settings. For each\n     *                     setting, the illustration shows an angled blue line\n     *                     with a thickness of 30(for which the\n     *                     <code>jointStyle</code> applies), and a superimposed\n     *                     angled black line with a thickness of 1(for which no\n     *                     <code>jointStyle</code> applies): </p>\n     *\n     *                     <p><b>Note:</b> For <code>joints</code> set to\n     *                     <code>JointStyle.MITER</code>, you can use the\n     *                     <code>miterLimit</code> parameter to limit the length\n     *                     of the miter.</p>\n     * @param miterLimit  (Not supported in Flash Lite 4) A number that\n     *                     indicates the limit at which a miter is cut off. Valid\n     *                     values range from 1 to 255(and values outside that\n     *                     range are rounded to 1 or 255). This value is only\n     *                     used if the <code>jointStyle</code> is set to\n     *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n     *                     value represents the length that a miter can extend\n     *                     beyond the point at which the lines meet to form a\n     *                     joint. The value expresses a factor of the line\n     *                     <code>thickness</code>. For example, with a\n     *                     <code>miterLimit</code> factor of 2.5 and a\n     *                     <code>thickness</code> of 10 pixels, the miter is cut\n     *                     off at 25 pixels.\n     *\n     *                     <p>For example, consider the following angled lines,\n     *                     each drawn with a <code>thickness</code> of 20, but\n     *                     with <code>miterLimit</code> set to 1, 2, and 4.\n     *                     Superimposed are black reference lines showing the\n     *                     meeting points of the joints:</p>\n     *\n     *                     <p>Notice that a given <code>miterLimit</code> value\n     *                     has a specific maximum angle for which the miter is\n     *                     cut off. The following table lists some examples:</p>\n     */\n    Graphics.prototype.lineStyle = function (thickness, color, alpha, pixelHinting, scaleMode, capstyle, jointstyle, miterLimit) {\n        if (thickness === void 0) { thickness = 0; }\n        if (color === void 0) { color = 0; }\n        if (alpha === void 0) { alpha = 1; }\n        if (pixelHinting === void 0) { pixelHinting = false; }\n        if (scaleMode === void 0) { scaleMode = null; }\n        if (capstyle === void 0) { capstyle = CapsStyle_1.default.NONE; }\n        if (jointstyle === void 0) { jointstyle = JointStyle_1.default.MITER; }\n        if (miterLimit === void 0) { miterLimit = 100; }\n        // start a new stroke path\n        this._active_stroke_path = new GraphicsPath_1.default();\n        this._active_stroke_path.style = new GraphicsStrokeStyle_1.default(color, alpha, thickness, jointstyle, capstyle, miterLimit);\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_stroke_pathes.push(this._active_stroke_path);\n    };\n    /**\n     * Draws a line using the current line style from the current drawing\n     * position to(<code>x</code>, <code>y</code>); the current drawing position\n     * is then set to(<code>x</code>, <code>y</code>). If the display object in\n     * which you are drawing contains content that was created with the Flash\n     * drawing tools, calls to the <code>lineTo()</code> method are drawn\n     * underneath the content. If you call <code>lineTo()</code> before any calls\n     * to the <code>moveTo()</code> method, the default position for the current\n     * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n     * method fails and the current drawing position is not changed.\n     *\n     * @param x A number that indicates the horizontal position relative to the\n     *          registration point of the parent display object(in pixels).\n     * @param y A number that indicates the vertical position relative to the\n     *          registration point of the parent display object(in pixels).\n     */\n    Graphics.prototype.lineTo = function (x, y) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.lineTo(x, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.lineTo(x, y);\n        }\n        this._current_position.x = x;\n        this._current_position.y = y;\n    };\n    /**\n     * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n     * any of the parameters are missing, this method fails and the current\n     * drawing position is not changed.\n     *\n     * @param x A number that indicates the horizontal position relative to the\n     *          registration point of the parent display object(in pixels).\n     * @param y A number that indicates the vertical position relative to the\n     *          registration point of the parent display object(in pixels).\n     */\n    Graphics.prototype.moveTo = function (x, y) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y);\n        }\n        this._current_position.x = x;\n        this._current_position.y = y;\n    };\n    Graphics.assetType = \"[asset Graphics]\";\n    return Graphics;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Graphics;\n\n},{\"../draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"../draw/GraphicsFactoryFills\":\"awayjs-display/lib/draw/GraphicsFactoryFills\",\"../draw/GraphicsFactoryStrokes\":\"awayjs-display/lib/draw/GraphicsFactoryStrokes\",\"../draw/GraphicsFillStyle\":\"awayjs-display/lib/draw/GraphicsFillStyle\",\"../draw/GraphicsPath\":\"awayjs-display/lib/draw/GraphicsPath\",\"../draw/GraphicsStrokeStyle\":\"awayjs-display/lib/draw/GraphicsStrokeStyle\",\"../draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"../events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"awayjs-core/lib/errors/PartialImplementationError\":undefined,\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/graphics/Graphic\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Sprite\n *\n * @class away.base.Graphic\n */\nvar Graphic = (function (_super) {\n    __extends(Graphic, _super);\n    /**\n     * Creates a new Graphic object\n     */\n    function Graphic(index, parent, elements, material, style, count, offset) {\n        var _this = this;\n        if (material === void 0) { material = null; }\n        if (style === void 0) { style = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        _super.call(this);\n        this._iIndex = 0;\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\n        this._iIndex = index;\n        this.parent = parent;\n        this.elements = elements;\n        this.material = material;\n        this.style = style;\n        this.count = count;\n        this.offset = offset;\n    }\n    Object.defineProperty(Graphic.prototype, \"elements\", {\n        /**\n         * The Elements object which provides the geometry data for this Graphic.\n         */\n        get: function () {\n            return this._elements;\n        },\n        set: function (value) {\n            if (this._elements == value)\n                return;\n            this._elements = value;\n            this.invalidateElements();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Graphic.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"animator\", {\n        /**\n         *\n         */\n        get: function () {\n            return this.parent.animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"material\", {\n        //TODO test shader picking\n        //\t\tpublic get shaderPickingDetails():boolean\n        //\t\t{\n        //\n        //\t\t\treturn this.sourceEntity.shaderPickingDetails;\n        //\t\t}\n        /**\n         * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\n         */\n        get: function () {\n            return this._material || this.parent.material;\n        },\n        set: function (value) {\n            if (this.material)\n                this.material.iRemoveOwner(this);\n            this._material = value;\n            if (this.material)\n                this.material.iAddOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"style\", {\n        /**\n         * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n         */\n        get: function () {\n            return this._style || this.parent.style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this.invalidateSurface();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Graphic.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.parent.removeGraphic(this);\n        this.parent = null;\n        Graphic._available.push(this);\n    };\n    Graphic.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n    };\n    Graphic.prototype.invalidateElements = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this));\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n    };\n    Graphic.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.default(RenderableEvent_1.default.INVALIDATE_SURFACE, this));\n    };\n    Graphic.prototype._iGetExplicitMaterial = function () {\n        return this._material;\n    };\n    Graphic.prototype._iGetExplicitStyle = function () {\n        return this._style;\n    };\n    Graphic.prototype._onInvalidateProperties = function (event) {\n        this.invalidateSurface();\n    };\n    Graphic.prototype._onInvalidateVertices = function (event) {\n        if (event.attributesView != event.target.positions)\n            return;\n        this.invalidate();\n        this.dispatchEvent(event);\n    };\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @param findClosest\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    Graphic.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return this._elements._iTestCollision(pickingCollider, this.material, pickingCollision, this.count, this.offset);\n    };\n    Graphic.prototype.applyTransformation = function (transform) {\n        this._elements.applyTransformation(transform, this.count, this.offset);\n    };\n    Graphic.prototype.hitTestPoint = function (x, y, z) {\n        var box;\n        //early out for box test\n        if (!(box = this.getBoxBounds()).contains(x, y, z))\n            return false;\n        return this._elements.hitTestPoint(x, y, z, box, this.count, this.offset);\n    };\n    Graphic.prototype.scale = function (scale) {\n        this._elements.scale(scale, this.count, this.offset);\n    };\n    Graphic.prototype.scaleUV = function (scaleU, scaleV) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        this._elements.scaleUV(scaleU, scaleV, this.count, this.offset);\n    };\n    Graphic.prototype.getBoxBounds = function () {\n        if (this._boxBoundsInvalid) {\n            this._boxBoundsInvalid = false;\n            this._boxBounds = this._elements.getBoxBounds(this._boxBounds || (this._boxBounds = new Box_1.default()), this.count, this.offset);\n        }\n        return this._boxBounds;\n    };\n    Graphic.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        return this._elements.getSphereBounds(center, target, this.count, this.offset);\n    };\n    Graphic._available = new Array();\n    Graphic.assetType = \"[asset Graphic]\";\n    return Graphic;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Graphic;\n\n},{\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/graphics/HitTestCache\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.base.HitTestCache\n */\nvar HitTestCache = (function () {\n    function HitTestCache() {\n        /**\n         *\n         */\n        this.cells = new Array();\n        /**\n         *\n         */\n        this.lastCollisionIndex = -1;\n    }\n    return HitTestCache;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = HitTestCache;\n\n},{}],\"awayjs-display/lib/graphics/LineElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nvar Float1Attributes_1 = require(\"awayjs-core/lib/attributes/Float1Attributes\");\nvar ElementsBase_1 = require(\"../graphics/ElementsBase\");\nvar ElementsUtils_1 = require(\"../utils/ElementsUtils\");\n/**\n * @class LineElements\n */\nvar LineElements = (function (_super) {\n    __extends(LineElements, _super);\n    /**\n     *\n     */\n    function LineElements(concatenatedBuffer) {\n        if (concatenatedBuffer === void 0) { concatenatedBuffer = null; }\n        _super.call(this, concatenatedBuffer);\n        this._positions = new AttributesView_1.default(Float32Array, 6, concatenatedBuffer);\n    }\n    Object.defineProperty(LineElements.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return LineElements.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"positions\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._positions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"thickness\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._thickness;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"colors\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._colors)\n                this.setColors(this._colors);\n            return this._colors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LineElements.prototype.getBoxBounds = function (target) {\n        if (target === void 0) { target = null; }\n        //TODO bounding calculations for lines\n        return target;\n    };\n    LineElements.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        //TODO bounding calculations for lines\n        return target;\n    };\n    LineElements.prototype.setPositions = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._positions);\n            this._positions = values;\n        }\n        else if (values) {\n            var i = 0;\n            var j = 0;\n            var index = 0;\n            var positions = new Float32Array(values.length * 4);\n            var indices = new Uint16Array(values.length);\n            while (i < values.length) {\n                if (index / 6 & 1) {\n                    positions[index] = values[i + 3];\n                    positions[index + 1] = values[i + 4];\n                    positions[index + 2] = values[i + 5];\n                    positions[index + 3] = values[i];\n                    positions[index + 4] = values[i + 1];\n                    positions[index + 5] = values[i + 2];\n                }\n                else {\n                    positions[index] = values[i];\n                    positions[index + 1] = values[i + 1];\n                    positions[index + 2] = values[i + 2];\n                    positions[index + 3] = values[i + 3];\n                    positions[index + 4] = values[i + 4];\n                    positions[index + 5] = values[i + 5];\n                }\n                index += 6;\n                if (++j == 4) {\n                    var o = index / 6 - 4;\n                    indices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n                    j = 0;\n                    i += 6;\n                }\n            }\n            this._positions.set(positions, offset * 4);\n            this.setIndices(indices, offset);\n        }\n        else {\n            this.clearVertices(this._positions);\n            this._positions = new AttributesView_1.default(Float32Array, 6, this._concatenatedBuffer);\n        }\n        this._numVertices = this._positions.count;\n        this.invalidateVertices(this._positions);\n        this._verticesDirty[this._positions.id] = false;\n    };\n    LineElements.prototype.setThickness = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values instanceof Float1Attributes_1.default) {\n            this._thickness = values;\n        }\n        else if (values) {\n            if (!this._thickness)\n                this._thickness = new Float1Attributes_1.default(this._concatenatedBuffer);\n            var i = 0;\n            var j = 0;\n            var index = 0;\n            var thickness = new Float32Array(values.length * 4);\n            while (i < values.length) {\n                thickness[index] = (Math.floor(0.5 * index + 0.5) & 1) ? -values[i] : values[i];\n                if (++j == 4) {\n                    j = 0;\n                    i++;\n                }\n                index++;\n            }\n            this._thickness.set(thickness, offset * 4);\n        }\n        else if (this._thickness) {\n            this._thickness.dispose();\n            this._thickness = null;\n        }\n        this.invalidateVertices(this._thickness);\n        this._verticesDirty[this._thickness.id] = false;\n    };\n    LineElements.prototype.setColors = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values) {\n            if (values == this._colors)\n                return;\n            if (values instanceof Byte4Attributes_1.default) {\n                this.clearVertices(this._colors);\n                this._colors = values;\n            }\n            else {\n                if (!this._colors)\n                    this._colors = new Byte4Attributes_1.default(this._concatenatedBuffer);\n                var i = 0;\n                var j = 0;\n                var index = 0;\n                var colors = new Uint8Array(values.length * 4);\n                while (i < values.length) {\n                    if (index / 4 & 1) {\n                        colors[index] = values[i + 4];\n                        colors[index + 1] = values[i + 5];\n                        colors[index + 2] = values[i + 6];\n                        colors[index + 3] = values[i + 7];\n                    }\n                    else {\n                        colors[index] = values[i];\n                        colors[index + 1] = values[i + 1];\n                        colors[index + 2] = values[i + 2];\n                        colors[index + 3] = values[i + 3];\n                    }\n                    if (++j == 4) {\n                        j = 0;\n                        i += 8;\n                    }\n                    index += 4;\n                }\n                this._colors.set(colors, offset * 4);\n            }\n        }\n        else {\n            //auto-derive colors\n            this._colors = ElementsUtils_1.default.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n        }\n        this.invalidateVertices(this._colors);\n        this._verticesDirty[this._colors.id] = false;\n    };\n    /**\n     *\n     */\n    LineElements.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._positions.dispose();\n        this._positions = null;\n        this._thickness.dispose();\n        this._thickness = null;\n        this._colors.dispose();\n        this._colors = null;\n    };\n    /**\n     * Clones the current object\n     * @return An exact duplicate of the current object.\n     */\n    LineElements.prototype.clone = function () {\n        var clone = new LineElements(this._concatenatedBuffer ? this._concatenatedBuffer.clone() : null);\n        clone.setIndices(this.indices.clone());\n        clone.setPositions(this._positions.clone());\n        clone.setThickness(this._thickness.clone());\n        clone.setColors(this._colors.clone());\n        return clone;\n    };\n    LineElements.prototype._iTestCollision = function (pickingCollider, material, pickingCollision, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return pickingCollider.testLineCollision(this, material, pickingCollision, count || this._numVertices, offset);\n    };\n    LineElements.assetType = \"[asset LineElements]\";\n    return LineElements;\n}(ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LineElements;\n\n},{\"../graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"../utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float1Attributes\":undefined}],\"awayjs-display/lib/graphics/TriangleElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar ElementsBase_1 = require(\"../graphics/ElementsBase\");\nvar ElementsUtils_1 = require(\"../utils/ElementsUtils\");\n/**\n * @class away.base.TriangleElements\n */\nvar TriangleElements = (function (_super) {\n    __extends(TriangleElements, _super);\n    function TriangleElements() {\n        _super.apply(this, arguments);\n        this._faceNormalsDirty = true;\n        this._faceTangentsDirty = true;\n        this._autoDeriveNormals = true;\n        this._autoDeriveTangents = true;\n        //used for hittesting geometry\n        this.hitTestCache = new Object();\n    }\n    Object.defineProperty(TriangleElements.prototype, \"assetType\", {\n        get: function () {\n            return TriangleElements.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"useCondensedIndices\", {\n        /**\n         * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n         * by condensing the number of joint index values required per sprite. Only applicable to\n         * skeleton animations that utilise more than one sprite object. Defaults to false.\n         */\n        get: function () {\n            return this._useCondensedIndices;\n        },\n        set: function (value) {\n            if (this._useCondensedIndices == value)\n                return;\n            this._useCondensedIndices = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"jointsPerVertex\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._jointsPerVertex;\n        },\n        set: function (value) {\n            if (this._jointsPerVertex == value)\n                return;\n            this._jointsPerVertex = value;\n            if (this._jointIndices)\n                this._jointIndices.dimensions = this._jointsPerVertex;\n            if (this._jointWeights)\n                this._jointWeights.dimensions = this._jointsPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"autoDeriveNormals\", {\n        /**\n         * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n         * explicitly.\n         */\n        get: function () {\n            return this._autoDeriveNormals;\n        },\n        set: function (value) {\n            if (this._autoDeriveNormals == value)\n                return;\n            this._autoDeriveNormals = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"autoDeriveTangents\", {\n        /**\n         * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n         * explicitly.\n         */\n        get: function () {\n            return this._autoDeriveTangents;\n        },\n        set: function (value) {\n            if (this._autoDeriveTangents == value)\n                return;\n            this._autoDeriveTangents = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"positions\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._positions)\n                this.setPositions(new Float3Attributes_1.default(this._concatenatedBuffer));\n            return this._positions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"normals\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._normals || this._verticesDirty[this._normals.id])\n                this.setNormals(this._normals);\n            return this._normals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"tangents\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._tangents || this._verticesDirty[this._tangents.id])\n                this.setTangents(this._tangents);\n            return this._tangents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"faceNormals\", {\n        /**\n         * The raw data of the face normals, in the same order as the faces are listed in the index list.\n         */\n        get: function () {\n            if (this._faceNormalsDirty)\n                this.updateFaceNormals();\n            return this._faceNormals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"faceTangents\", {\n        /**\n         * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n         */\n        get: function () {\n            if (this._faceTangentsDirty)\n                this.updateFaceTangents();\n            return this._faceTangents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"uvs\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._uvs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"jointIndices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._jointIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"jointWeights\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._jointWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"condensedIndexLookUp\", {\n        get: function () {\n            return this._condensedIndexLookUp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TriangleElements.prototype.getBoxBounds = function (target, count, offset) {\n        if (target === void 0) { target = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return ElementsUtils_1.default.getTriangleGraphicsBoxBounds(this.positions, target, count || this._numVertices, offset);\n    };\n    TriangleElements.prototype.getSphereBounds = function (center, target, count, offset) {\n        if (target === void 0) { target = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return ElementsUtils_1.default.getTriangleGraphicsSphereBounds(this.positions, center, target, count || this._numVertices, offset);\n    };\n    TriangleElements.prototype.hitTestPoint = function (x, y, z, box, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return ElementsUtils_1.default.hitTestTriangleElements(x, y, 0, box, this, count || this._numVertices, offset);\n    };\n    TriangleElements.prototype.setPositions = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._positions)\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._positions);\n            this._positions = values;\n        }\n        else if (values) {\n            if (!this._positions)\n                this._positions = new Float3Attributes_1.default(this._concatenatedBuffer);\n            this._positions.set(values, offset);\n        }\n        else {\n            this.clearVertices(this._positions);\n            this._positions = new Float3Attributes_1.default(this._concatenatedBuffer); //positions cannot be null\n        }\n        this._numVertices = this._positions.count;\n        if (this._autoDeriveNormals)\n            this.invalidateVertices(this._normals);\n        if (this._autoDeriveTangents)\n            this.invalidateVertices(this._tangents);\n        this.invalidateVertices(this._positions);\n        this._verticesDirty[this._positions.id] = false;\n    };\n    TriangleElements.prototype.setNormals = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (!this._autoDeriveNormals) {\n            if (values == this._normals)\n                return;\n            if (values instanceof Float3Attributes_1.default) {\n                this.clearVertices(this._normals);\n                this._normals = values;\n            }\n            else if (values) {\n                if (!this._normals)\n                    this._normals = new Float3Attributes_1.default(this._concatenatedBuffer);\n                this._normals.set(values, offset);\n            }\n            else if (this._normals) {\n                this.clearVertices(this._normals);\n                this._normals = null;\n                return;\n            }\n        }\n        else {\n            this._normals = ElementsUtils_1.default.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n        }\n        this.invalidateVertices(this._normals);\n        this._verticesDirty[this._normals.id] = false;\n    };\n    TriangleElements.prototype.setTangents = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (!this._autoDeriveTangents) {\n            if (values == this._tangents)\n                return;\n            if (values instanceof Float3Attributes_1.default) {\n                this.clearVertices(this._tangents);\n                this._tangents = values;\n            }\n            else if (values) {\n                if (!this._tangents)\n                    this._tangents = new Float3Attributes_1.default(this._concatenatedBuffer);\n                this._tangents.set(values, offset);\n            }\n            else if (this._tangents) {\n                this.clearVertices(this._tangents);\n                this._tangents = null;\n                return;\n            }\n        }\n        else {\n            this._tangents = ElementsUtils_1.default.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n        }\n        this.invalidateVertices(this._tangents);\n        this._verticesDirty[this._tangents.id] = false;\n    };\n    TriangleElements.prototype.setUVs = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._uvs)\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._uvs);\n            this._uvs = values;\n        }\n        else if (values) {\n            if (!this._uvs)\n                this._uvs = new Float2Attributes_1.default(this._concatenatedBuffer);\n            this._uvs.set(values, offset);\n        }\n        else if (this._uvs) {\n            this.clearVertices(this._uvs);\n            this._uvs = null;\n            return;\n        }\n        this.invalidateVertices(this._uvs);\n        this._verticesDirty[this._uvs.id] = false;\n    };\n    TriangleElements.prototype.setJointIndices = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._jointIndices)\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._jointIndices);\n            this._jointIndices = values;\n        }\n        else if (values) {\n            if (!this._jointIndices)\n                this._jointIndices = new AttributesView_1.default(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n            if (this._useCondensedIndices) {\n                var i = 0;\n                var oldIndex;\n                var newIndex = 0;\n                var dic = new Object();\n                this._condensedIndexLookUp = new Array();\n                while (i < values.length) {\n                    oldIndex = values[i];\n                    // if we encounter a new index, assign it a new condensed index\n                    if (dic[oldIndex] == undefined) {\n                        dic[oldIndex] = newIndex;\n                        this._condensedIndexLookUp[newIndex++] = oldIndex;\n                    }\n                    //reset value to dictionary lookup\n                    values[i++] = dic[oldIndex];\n                }\n            }\n            this._jointIndices.set(values, offset);\n        }\n        else if (this._jointIndices) {\n            this.clearVertices(this._jointIndices);\n            this._jointIndices = null;\n            return;\n        }\n        this.invalidateVertices(this._jointIndices);\n        this._verticesDirty[this._jointIndices.id] = false;\n    };\n    TriangleElements.prototype.setJointWeights = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._jointWeights)\n            return;\n        if (values instanceof AttributesView_1.default) {\n            this.clearVertices(this._jointWeights);\n            this._jointWeights = values;\n        }\n        else if (values) {\n            if (!this._jointWeights)\n                this._jointWeights = new AttributesView_1.default(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n            this._jointWeights.set(values, offset);\n        }\n        else if (this._jointWeights) {\n            this.clearVertices(this._jointWeights);\n            this._jointWeights = null;\n            return;\n        }\n        this.invalidateVertices(this._jointWeights);\n        this._verticesDirty[this._jointWeights.id] = false;\n    };\n    /**\n     *\n     */\n    TriangleElements.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._positions) {\n            this._positions.dispose();\n            this._positions = null;\n        }\n        if (this._normals) {\n            this._normals.dispose();\n            this._normals = null;\n        }\n        if (this._tangents) {\n            this._tangents.dispose();\n            this._tangents = null;\n        }\n        if (this._uvs) {\n            this._uvs.dispose();\n            this._uvs = null;\n        }\n        if (this._jointIndices) {\n            this._jointIndices.dispose();\n            this._jointIndices = null;\n        }\n        if (this._jointWeights) {\n            this._jointWeights.dispose();\n            this._jointWeights = null;\n        }\n        if (this._faceNormals) {\n            this._faceNormals.dispose();\n            this._faceNormals = null;\n        }\n        if (this._faceTangents) {\n            this._faceTangents.dispose();\n            this._faceTangents = null;\n        }\n    };\n    TriangleElements.prototype.setIndices = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.setIndices.call(this, values, offset);\n        this._faceNormalsDirty = true;\n        this._faceTangentsDirty = true;\n        if (this._autoDeriveNormals)\n            this.invalidateVertices(this._normals);\n        if (this._autoDeriveTangents)\n            this.invalidateVertices(this._tangents);\n    };\n    TriangleElements.prototype.copyTo = function (elements) {\n        _super.prototype.copyTo.call(this, elements);\n        //temp disable auto derives\n        var autoDeriveNormals = this._autoDeriveNormals;\n        var autoDeriveTangents = this._autoDeriveTangents;\n        elements.autoDeriveNormals = this._autoDeriveNormals = false;\n        elements.autoDeriveTangents = this._autoDeriveTangents = false;\n        elements.setPositions(this.positions.clone());\n        if (this.normals)\n            elements.setNormals(this.normals.clone());\n        if (this.tangents)\n            elements.setTangents(this.tangents.clone());\n        if (this.uvs)\n            elements.setUVs(this.uvs.clone());\n        elements.jointsPerVertex = this._jointsPerVertex;\n        if (this.jointIndices)\n            elements.setJointIndices(this.jointIndices.clone());\n        if (this.jointWeights)\n            elements.setJointWeights(this.jointWeights.clone());\n        //return auto derives to cloned values\n        elements.autoDeriveNormals = this._autoDeriveNormals = autoDeriveNormals;\n        elements.autoDeriveTangents = this._autoDeriveTangents = autoDeriveTangents;\n    };\n    /**\n     * Clones the current object\n     * @return An exact duplicate of the current object.\n     */\n    TriangleElements.prototype.clone = function () {\n        var clone = new TriangleElements(this._concatenatedBuffer ? this._concatenatedBuffer.clone() : null);\n        this.copyTo(clone);\n        return clone;\n    };\n    TriangleElements.prototype.scaleUV = function (scaleU, scaleV, count, offset) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        if (this.uvs)\n            ElementsUtils_1.default.scaleUVs(scaleU, scaleV, this.uvs, count || this._numVertices, offset);\n    };\n    /**\n     * Scales the geometry.\n     * @param scale The amount by which to scale.\n     */\n    TriangleElements.prototype.scale = function (scale, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        ElementsUtils_1.default.scale(scale, this.positions, count || this._numVertices, offset);\n    };\n    TriangleElements.prototype.applyTransformation = function (transform, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        ElementsUtils_1.default.applyTransformation(transform, this.positions, this.normals, this.tangents, count || this._numVertices, offset);\n    };\n    /**\n     * Updates the tangents for each face.\n     */\n    TriangleElements.prototype.updateFaceTangents = function () {\n        this._faceTangents = ElementsUtils_1.default.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n        this._faceTangentsDirty = false;\n    };\n    /**\n     * Updates the normals for each face.\n     */\n    TriangleElements.prototype.updateFaceNormals = function () {\n        this._faceNormals = ElementsUtils_1.default.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n        this._faceNormalsDirty = false;\n    };\n    TriangleElements.prototype._iTestCollision = function (pickingCollider, material, pickingCollision, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return pickingCollider.testTriangleCollision(this, material, pickingCollision, count || this._numVertices, offset);\n    };\n    TriangleElements.assetType = \"[asset TriangleElements]\";\n    return TriangleElements;\n}(ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TriangleElements;\n\n},{\"../graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"../utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined}],\"awayjs-display/lib/graphics\":[function(require,module,exports){\n\"use strict\";\nvar ElementsBase_1 = require(\"./graphics/ElementsBase\");\nexports.ElementsBase = ElementsBase_1.default;\nvar ElementsType_1 = require(\"./graphics/ElementsType\");\nexports.ElementsType = ElementsType_1.default;\nvar Graphic_1 = require(\"./graphics/Graphic\");\nexports.Graphic = Graphic_1.default;\nvar Graphics_1 = require(\"./graphics/Graphics\");\nexports.Graphics = Graphics_1.default;\nvar LineElements_1 = require(\"./graphics/LineElements\");\nexports.LineElements = LineElements_1.default;\nvar TriangleElements_1 = require(\"./graphics/TriangleElements\");\nexports.TriangleElements = TriangleElements_1.default;\n\n},{\"./graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"./graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"./graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"./graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"./graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"./graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\"}],\"awayjs-display/lib/managers/DefaultMaterialManager\":[function(require,module,exports){\n\"use strict\";\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar BitmapImageCube_1 = require(\"awayjs-core/lib/image/BitmapImageCube\");\nvar LineElements_1 = require(\"../graphics/LineElements\");\nvar Skybox_1 = require(\"../display/Skybox\");\nvar BasicMaterial_1 = require(\"../materials/BasicMaterial\");\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\nvar SingleCubeTexture_1 = require(\"../textures/SingleCubeTexture\");\nvar Graphic_1 = require(\"../graphics/Graphic\");\nvar DefaultMaterialManager = (function () {\n    function DefaultMaterialManager() {\n    }\n    DefaultMaterialManager.getDefaultMaterial = function (renderable) {\n        if (renderable === void 0) { renderable = null; }\n        if (renderable != null && renderable.isAsset(Graphic_1.default) && renderable.elements.isAsset(LineElements_1.default)) {\n            if (!DefaultMaterialManager._defaultColorMaterial)\n                DefaultMaterialManager.createDefaultColorMaterial();\n            return DefaultMaterialManager._defaultColorMaterial;\n        }\n        if (renderable != null && renderable.isAsset(Skybox_1.default)) {\n            if (!DefaultMaterialManager._defaultCubeTextureMaterial)\n                DefaultMaterialManager.createDefaultCubeTextureMaterial();\n            return DefaultMaterialManager._defaultCubeTextureMaterial;\n        }\n        if (!DefaultMaterialManager._defaultTextureMaterial)\n            DefaultMaterialManager.createDefaultTextureMaterial();\n        return DefaultMaterialManager._defaultTextureMaterial;\n    };\n    DefaultMaterialManager.getDefaultTexture = function (renderable) {\n        if (renderable === void 0) { renderable = null; }\n        if (renderable != null && renderable.isAsset(Skybox_1.default)) {\n            if (!DefaultMaterialManager._defaultCubeTexture)\n                DefaultMaterialManager.createDefaultCubeTexture();\n            return DefaultMaterialManager._defaultCubeTexture;\n        }\n        if (!DefaultMaterialManager._defaultTexture)\n            DefaultMaterialManager.createDefaultTexture();\n        return DefaultMaterialManager._defaultTexture;\n    };\n    DefaultMaterialManager.getDefaultImage2D = function () {\n        if (!DefaultMaterialManager._defaultBitmapImage2D)\n            DefaultMaterialManager.createDefaultImage2D();\n        return DefaultMaterialManager._defaultBitmapImage2D;\n    };\n    DefaultMaterialManager.getDefaultImageCube = function () {\n        if (!DefaultMaterialManager._defaultBitmapImageCube)\n            DefaultMaterialManager.createDefaultImageCube();\n        return DefaultMaterialManager._defaultBitmapImageCube;\n    };\n    DefaultMaterialManager.getDefaultSampler = function () {\n        if (!DefaultMaterialManager._defaultSampler2D)\n            DefaultMaterialManager.createDefaultSampler2D();\n        return DefaultMaterialManager._defaultSampler2D;\n    };\n    DefaultMaterialManager.createDefaultTexture = function () {\n        DefaultMaterialManager._defaultTexture = new Single2DTexture_1.default();\n        DefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n    };\n    DefaultMaterialManager.createDefaultCubeTexture = function () {\n        DefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture_1.default();\n        DefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n    };\n    DefaultMaterialManager.createDefaultImageCube = function () {\n        if (!DefaultMaterialManager._defaultBitmapImage2D)\n            DefaultMaterialManager.createDefaultImage2D();\n        var b = new BitmapImageCube_1.default(DefaultMaterialManager._defaultBitmapImage2D.width);\n        for (var i = 0; i < 6; i++)\n            b.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n        DefaultMaterialManager._defaultBitmapImageCube = b;\n    };\n    DefaultMaterialManager.createDefaultImage2D = function () {\n        var b = new BitmapImage2D_1.default(8, 8, false, 0x000000);\n        //create chekerboard\n        var i, j;\n        for (i = 0; i < 8; i++)\n            for (j = 0; j < 8; j++)\n                if ((j & 1) ^ (i & 1))\n                    b.setPixel(i, j, 0XFFFFFF);\n        DefaultMaterialManager._defaultBitmapImage2D = b;\n    };\n    DefaultMaterialManager.createDefaultTextureMaterial = function () {\n        if (!DefaultMaterialManager._defaultTexture)\n            DefaultMaterialManager.createDefaultTexture();\n        DefaultMaterialManager._defaultTextureMaterial = new BasicMaterial_1.default();\n        DefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n        DefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n    };\n    DefaultMaterialManager.createDefaultCubeTextureMaterial = function () {\n        if (!DefaultMaterialManager._defaultCubeTexture)\n            DefaultMaterialManager.createDefaultCubeTexture();\n        DefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial_1.default();\n        DefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n        DefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n    };\n    DefaultMaterialManager.createDefaultColorMaterial = function () {\n        DefaultMaterialManager._defaultColorMaterial = new BasicMaterial_1.default(0xFFFFFF);\n        DefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n    };\n    DefaultMaterialManager.createDefaultSampler2D = function () {\n        DefaultMaterialManager._defaultSampler2D = new Sampler2D_1.default();\n    };\n    return DefaultMaterialManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DefaultMaterialManager;\n\n},{\"../display/Skybox\":\"awayjs-display/lib/display/Skybox\",\"../graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"../graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"../materials/BasicMaterial\":\"awayjs-display/lib/materials/BasicMaterial\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"../textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-core/lib/image/BitmapImageCube\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined}],\"awayjs-display/lib/managers/FrameScriptManager\":[function(require,module,exports){\n\"use strict\";\nvar FrameScriptManager = (function () {\n    function FrameScriptManager() {\n    }\n    FrameScriptManager.setInterval = function (func) {\n        this._intervalID++;\n        this._active_intervals[this._intervalID] = func;\n        return this._intervalID;\n    };\n    FrameScriptManager.clearInterval = function (id) {\n        delete this._active_intervals[id];\n    };\n    FrameScriptManager.execute_intervals = function () {\n        for (var key in this._active_intervals) {\n            this._active_intervals[key].call();\n        }\n    };\n    FrameScriptManager.add_child_to_dispose = function (child) {\n        this._queued_dispose.push(child);\n    };\n    FrameScriptManager.add_script_to_queue = function (mc, script) {\n        // whenever we queue scripts of new objects, we first inject the lists of pass2\n        var i = this._queued_mcs_pass2.length;\n        while (i--) {\n            this._queued_mcs.push(this._queued_mcs_pass2[i]);\n            this._queued_scripts.push(this._queued_scripts_pass2[i]);\n        }\n        this._queued_mcs_pass2.length = 0;\n        this._queued_scripts_pass2.length = 0;\n        this._queued_mcs.push(mc);\n        this._queued_scripts.push(script);\n    };\n    FrameScriptManager.add_script_to_queue_pass2 = function (mc, script) {\n        this._queued_mcs_pass2.push(mc);\n        this._queued_scripts_pass2.push(script);\n    };\n    FrameScriptManager.execute_queue = function () {\n        if (this._queued_mcs.length == 0 && this._queued_mcs_pass2.length == 0)\n            return;\n        var i = this._queued_mcs_pass2.length;\n        while (i--) {\n            this._queued_mcs.push(this._queued_mcs_pass2[i]);\n            this._queued_scripts.push(this._queued_scripts_pass2[i]);\n        }\n        this._queued_mcs_pass2.length = 0;\n        this._queued_scripts_pass2.length = 0;\n        var mc;\n        for (i = 0; i < this._queued_mcs.length; i++) {\n            // during the loop we might add more scripts to the queue\n            mc = this._queued_mcs[i];\n            if (mc.scene != null) {\n                var caller = mc.adapter ? mc.adapter : mc;\n                //\ttry {\n                this._queued_scripts[i].call(caller);\n            }\n        }\n        // all scripts executed. clear all\n        this._queued_mcs.length = 0;\n        this._queued_scripts.length = 0;\n    };\n    FrameScriptManager.execute_dispose = function () {\n        var len = this._queued_dispose.length;\n        for (var i = 0; i < len; i++)\n            this._queued_dispose[i].dispose();\n        this._queued_dispose.length = 0;\n    };\n    // FrameScript debugging:\n    // the first line of a FrameScript should be a comment that represents the functions unique name\n    // the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n    // this object can be set as \"frameScriptDebug\" in order to enable debug mode\n    FrameScriptManager.frameScriptDebug = undefined;\n    //queue of objects for disposal\n    FrameScriptManager._queued_dispose = new Array();\n    // queues pass1 of scripts.\n    FrameScriptManager._queued_mcs = [];\n    FrameScriptManager._queued_scripts = [];\n    // queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n    FrameScriptManager._queued_mcs_pass2 = [];\n    FrameScriptManager._queued_scripts_pass2 = [];\n    FrameScriptManager._active_intervals = new Object(); // maps id to function\n    FrameScriptManager._intervalID = 0;\n    return FrameScriptManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FrameScriptManager;\n\n},{}],\"awayjs-display/lib/managers/MouseManager\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar TouchPoint_1 = require(\"../base/TouchPoint\");\nvar MouseEvent_1 = require(\"../events/MouseEvent\");\nvar FrameScriptManager_1 = require(\"../managers/FrameScriptManager\");\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nvar MouseManager = (function () {\n    /**\n     * Creates a new <code>MouseManager</code> object.\n     */\n    function MouseManager() {\n        var _this = this;\n        this._viewLookup = new Array();\n        this._nullVector = new Vector3D_1.default();\n        this._queuedEvents = new Array();\n        this._mouseUp = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_UP);\n        this._mouseClick = new MouseEvent_1.default(MouseEvent_1.default.CLICK);\n        this._mouseOut = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_OUT);\n        this._mouseDown = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_DOWN);\n        this._mouseMove = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_MOVE);\n        this._mouseOver = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_OVER);\n        this._mouseWheel = new MouseEvent_1.default(MouseEvent_1.default.MOUSE_WHEEL);\n        this._mouseDoubleClick = new MouseEvent_1.default(MouseEvent_1.default.DOUBLE_CLICK);\n        this.onClickDelegate = function (event) { return _this.onClick(event); };\n        this.onDoubleClickDelegate = function (event) { return _this.onDoubleClick(event); };\n        this.onMouseDownDelegate = function (event) { return _this.onMouseDown(event); };\n        this.onMouseMoveDelegate = function (event) { return _this.onMouseMove(event); };\n        this.onMouseUpDelegate = function (event) { return _this.onMouseUp(event); };\n        this.onMouseWheelDelegate = function (event) { return _this.onMouseWheel(event); };\n        this.onMouseOverDelegate = function (event) { return _this.onMouseOver(event); };\n        this.onMouseOutDelegate = function (event) { return _this.onMouseOut(event); };\n    }\n    MouseManager.getInstance = function () {\n        if (this._instance)\n            return this._instance;\n        return (this._instance = new MouseManager());\n    };\n    MouseManager.prototype.fireMouseEvents = function (forceMouseMove) {\n        // If colliding object has changed, queue over/out events.\n        if (this._iCollision != this._previousCollidingObject) {\n            if (this._previousCollidingObject)\n                this.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n            if (this._iCollision)\n                this.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n        }\n        // Fire mouse move events here if forceMouseMove is on.\n        if (forceMouseMove && this._iCollision)\n            this.queueDispatch(this._mouseMove, this._mouseMoveEvent);\n        var event;\n        var dispatcher;\n        // Dispatch all queued events.\n        var len = this._queuedEvents.length;\n        for (var i = 0; i < len; ++i) {\n            event = this._queuedEvents[i];\n            dispatcher = event.entity;\n            // bubble event up the heirarchy until the top level parent is reached\n            while (dispatcher) {\n                if (dispatcher._iIsMouseEnabled())\n                    dispatcher.dispatchEvent(event);\n                dispatcher = dispatcher.parent;\n            }\n            // not totally sure, but i think just calling it is easier and cheaper than any options for that\n            // if nothing is queued, the function will return directly anyway\n            FrameScriptManager_1.default.execute_queue();\n        }\n        this._queuedEvents.length = 0;\n        this._previousCollidingObject = this._iCollision;\n        this._iUpdateDirty = false;\n    };\n    //\t\tpublic addViewLayer(view:View)\n    //\t\t{\n    //\t\t\tvar stg:Stage = view.stage;\n    //\n    //\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n    //\t\t\tif (!view.stageGL.mouse3DManager)\n    //\t\t\t\tview.stageGL.mouse3DManager = this;\n    //\n    //\t\t\tif (!hasKey(view))\n    //\t\t\t\t_view3Ds[view] = 0;\n    //\n    //\t\t\t_childDepth = 0;\n    //\t\t\ttraverseDisplayObjects(stg);\n    //\t\t\t_viewCount = _childDepth;\n    //\t\t}\n    MouseManager.prototype.registerView = function (view) {\n        if (view && view.htmlElement) {\n            view.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n            view.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n            view.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n            view.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n            view.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n            view.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n            view.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n            view.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n            view.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n            view.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n            view.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n            this._viewLookup.push(view);\n        }\n    };\n    MouseManager.prototype.unregisterView = function (view) {\n        if (view && view.htmlElement) {\n            view.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n            view.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n            view.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n            view.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n            view.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n            view.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n            view.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n            view.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n            view.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n            view.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n            view.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n            this._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n        }\n    };\n    // ---------------------------------------------------------------------\n    // Private.\n    // ---------------------------------------------------------------------\n    MouseManager.prototype.queueDispatch = function (event, sourceEvent, collision) {\n        if (collision === void 0) { collision = null; }\n        // 2D properties.\n        if (sourceEvent) {\n            event.ctrlKey = sourceEvent.ctrlKey;\n            event.altKey = sourceEvent.altKey;\n            event.shiftKey = sourceEvent.shiftKey;\n            event.screenX = (sourceEvent.clientX != null) ? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n            event.screenY = (sourceEvent.clientY != null) ? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n        }\n        if (collision == null)\n            collision = this._iCollision;\n        // 3D properties.\n        if (collision) {\n            // Object.\n            event.entity = collision.entity;\n            event.renderable = collision.renderable;\n            // UV.\n            event.uv = collision.uv;\n            // Position.\n            event.position = collision.position ? collision.position.clone() : null;\n            // Normal.\n            event.normal = collision.normal ? collision.normal.clone() : null;\n            // Face index.\n            event.elementIndex = collision.elementIndex;\n        }\n        else {\n            // Set all to null.\n            event.uv = null;\n            event.entity = null;\n            event.position = this._nullVector;\n            event.normal = this._nullVector;\n            event.elementIndex = 0;\n        }\n        // Store event to be dispatched later.\n        this._queuedEvents.push(event);\n    };\n    // ---------------------------------------------------------------------\n    // Listeners.\n    // ---------------------------------------------------------------------\n    MouseManager.prototype.onMouseMove = function (event) {\n        event.preventDefault();\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n    };\n    MouseManager.prototype.onMouseOut = function (event) {\n        this._iActiveDiv = null;\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseOut, event);\n    };\n    MouseManager.prototype.onMouseOver = function (event) {\n        this._iActiveDiv = event.target;\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseOver, event);\n    };\n    MouseManager.prototype.onClick = function (event) {\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseClick, event);\n    };\n    MouseManager.prototype.onDoubleClick = function (event) {\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseDoubleClick, event);\n    };\n    MouseManager.prototype.onMouseDown = function (event) {\n        event.preventDefault();\n        this._iActiveDiv = event.target;\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseDown, event);\n    };\n    MouseManager.prototype.onMouseUp = function (event) {\n        event.preventDefault();\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseUp, event);\n    };\n    MouseManager.prototype.onMouseWheel = function (event) {\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseWheel, event);\n    };\n    MouseManager.prototype.updateColliders = function (event) {\n        var view;\n        var bounds;\n        var mouseX = (event.clientX != null) ? event.clientX : event.changedTouches[0].clientX;\n        var mouseY = (event.clientY != null) ? event.clientY : event.changedTouches[0].clientY;\n        var len = this._viewLookup.length;\n        for (var i = 0; i < len; i++) {\n            view = this._viewLookup[i];\n            view._pTouchPoints.length = 0;\n            bounds = view.htmlElement.getBoundingClientRect();\n            if (event.touches) {\n                var touch;\n                var len = event.touches.length;\n                for (var i = 0; i < len; i++) {\n                    touch = event.touches[i];\n                    view._pTouchPoints.push(new TouchPoint_1.default(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n                }\n            }\n            if (this._iUpdateDirty)\n                continue;\n            if (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n                view._pMouseX = null;\n                view._pMouseY = null;\n            }\n            else {\n                view._pMouseX = mouseX + bounds.left;\n                view._pMouseY = mouseY + bounds.top;\n                view.updateCollider();\n                if (view.layeredView && this._iCollision)\n                    break;\n            }\n        }\n        this._iUpdateDirty = true;\n    };\n    return MouseManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MouseManager;\n\n},{\"../base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"../events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"../managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/managers/TouchManager\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar TouchEvent_1 = require(\"../events/TouchEvent\");\nvar TouchManager = (function () {\n    function TouchManager() {\n        var _this = this;\n        this._updateDirty = true;\n        this._nullVector = new Vector3D_1.default();\n        this._queuedEvents = new Array();\n        this._touchOut = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_OUT);\n        this._touchBegin = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_BEGIN);\n        this._touchMove = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_MOVE);\n        this._touchEnd = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_END);\n        this._touchOver = new TouchEvent_1.default(TouchEvent_1.default.TOUCH_OVER);\n        this._touchPoints = new Array();\n        this._touchPointFromId = new Object();\n        TouchManager._iCollisionFromTouchId = new Object();\n        TouchManager._previousCollidingObjectFromTouchId = new Object();\n        this.onTouchBeginDelegate = function (event) { return _this.onTouchBegin(event); };\n        this.onTouchMoveDelegate = function (event) { return _this.onTouchMove(event); };\n        this.onTouchEndDelegate = function (event) { return _this.onTouchEnd(event); };\n    }\n    TouchManager.getInstance = function () {\n        if (this._instance)\n            return this._instance;\n        return (this._instance = new TouchManager());\n    };\n    // ---------------------------------------------------------------------\n    // Interface.\n    // ---------------------------------------------------------------------\n    TouchManager.prototype.updateCollider = function (forceTouchMove) {\n        //if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n        //\tfor (var i:number; i < this._numTouchPoints; ++i) {\n        //\t\tthis._touchPoint = this._touchPoints[ i ];\n        //\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n        //\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\n        //\t}\n        //}\n    };\n    TouchManager.prototype.fireTouchEvents = function (forceTouchMove) {\n        var i;\n        for (i = 0; i < this._numTouchPoints; ++i) {\n            this._touchPoint = this._touchPoints[i];\n            // If colliding object has changed, queue over/out events.\n            this._iCollision = TouchManager._iCollisionFromTouchId[this._touchPoint.id];\n            this._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[this._touchPoint.id];\n            if (this._iCollision != this._previousCollidingObject) {\n                if (this._previousCollidingObject)\n                    this.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n                if (this._iCollision)\n                    this.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\n            }\n            // Fire Touch move events here if forceTouchMove is on.\n            if (forceTouchMove && this._iCollision)\n                this.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\n        }\n        var event;\n        var dispatcher;\n        // Dispatch all queued events.\n        var len = this._queuedEvents.length;\n        for (i = 0; i < len; ++i) {\n            // Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n            event = this._queuedEvents[i];\n            dispatcher = event.entity;\n            while (dispatcher && !dispatcher._iIsMouseEnabled())\n                dispatcher = dispatcher.parent;\n            if (dispatcher)\n                dispatcher.dispatchEvent(event);\n        }\n        this._queuedEvents.length = 0;\n        this._updateDirty = false;\n        for (i = 0; i < this._numTouchPoints; ++i) {\n            this._touchPoint = this._touchPoints[i];\n            TouchManager._previousCollidingObjectFromTouchId[this._touchPoint.id] = TouchManager._iCollisionFromTouchId[this._touchPoint.id];\n        }\n    };\n    TouchManager.prototype.registerView = function (view) {\n        view.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n        view.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n        view.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n    };\n    TouchManager.prototype.unregisterView = function (view) {\n        view.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n        view.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n        view.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n    };\n    // ---------------------------------------------------------------------\n    // Private.\n    // ---------------------------------------------------------------------\n    TouchManager.prototype.queueDispatch = function (event, sourceEvent, collider, touch) {\n        // 2D properties.\n        event.ctrlKey = sourceEvent.ctrlKey;\n        event.altKey = sourceEvent.altKey;\n        event.shiftKey = sourceEvent.shiftKey;\n        event.screenX = touch.x;\n        event.screenY = touch.y;\n        event.touchPointID = touch.id;\n        // 3D properties.\n        if (collider) {\n            // Object.\n            event.entity = collider.entity;\n            event.renderable = collider.renderable;\n            // UV.\n            event.uv = collider.uv;\n            // Position.\n            event.position = collider.position ? collider.position.clone() : null;\n            // Normal.\n            event.normal = collider.normal ? collider.normal.clone() : null;\n            // ElementsIndex.\n            event.elementIndex = collider.elementIndex;\n        }\n        else {\n            // Set all to null.\n            event.uv = null;\n            event.entity = null;\n            event.position = this._nullVector;\n            event.normal = this._nullVector;\n            event.elementIndex = 0;\n        }\n        // Store event to be dispatched later.\n        this._queuedEvents.push(event);\n    };\n    // ---------------------------------------------------------------------\n    // Event handlers.\n    // ---------------------------------------------------------------------\n    TouchManager.prototype.onTouchBegin = function (event) {\n        var touch = new TouchPoint();\n        //touch.id = event.touchPointID;\n        //touch.x = event.stageX;\n        //touch.y = event.stageY;\n        this._numTouchPoints++;\n        this._touchPoints.push(touch);\n        this._touchPointFromId[touch.id] = touch;\n        //this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n        this._iCollision = TouchManager._iCollisionFromTouchId[touch.id];\n        if (this._iCollision)\n            this.queueDispatch(this._touchBegin, event, this._iCollision, touch);\n        this._updateDirty = true;\n    };\n    TouchManager.prototype.onTouchMove = function (event) {\n        //var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n        //\n        //if (!touch) return;\n        //\n        ////touch.x = event.stageX;\n        ////touch.y = event.stageY;\n        //\n        //this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n        //\n        //if (this._iCollision)\n        //\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\n        //\n        //this._updateDirty = true;\n    };\n    TouchManager.prototype.onTouchEnd = function (event) {\n        //var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n        //\n        //if (!touch) return;\n        //\n        //this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n        //if (this._iCollision)\n        //\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\n        //\n        //this._touchPointFromId[ touch.id ] = null;\n        //this._numTouchPoints--;\n        //this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n        //\n        //this._updateDirty = true;\n    };\n    return TouchManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TouchManager;\nvar TouchPoint = (function () {\n    function TouchPoint() {\n    }\n    return TouchPoint;\n}());\n\n},{\"../events/TouchEvent\":\"awayjs-display/lib/events/TouchEvent\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar DefaultMaterialManager_1 = require(\"./managers/DefaultMaterialManager\");\nexports.DefaultMaterialManager = DefaultMaterialManager_1.default;\nvar FrameScriptManager_1 = require(\"./managers/FrameScriptManager\");\nexports.FrameScriptManager = FrameScriptManager_1.default;\nvar MouseManager_1 = require(\"./managers/MouseManager\");\nexports.MouseManager = MouseManager_1.default;\nvar TouchManager_1 = require(\"./managers/TouchManager\");\nexports.TouchManager = TouchManager_1.default;\n\n},{\"./managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"./managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"./managers/MouseManager\":\"awayjs-display/lib/managers/MouseManager\",\"./managers/TouchManager\":\"awayjs-display/lib/managers/TouchManager\"}],\"awayjs-display/lib/materials/BasicMaterial\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar MaterialBase_1 = require(\"../materials/MaterialBase\");\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar BasicMaterial = (function (_super) {\n    __extends(BasicMaterial, _super);\n    function BasicMaterial(imageColor, alpha) {\n        if (imageColor === void 0) { imageColor = null; }\n        if (alpha === void 0) { alpha = 1; }\n        _super.call(this, imageColor, alpha);\n        this._preserveAlpha = false;\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D_1.default)\n            this.texture = new Single2DTexture_1.default();\n    }\n    Object.defineProperty(BasicMaterial.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return BasicMaterial.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BasicMaterial.prototype, \"preserveAlpha\", {\n        /**\n         * Indicates whether alpha should be preserved - defaults to false\n         */\n        get: function () {\n            return this._preserveAlpha;\n        },\n        set: function (value) {\n            if (this._preserveAlpha == value)\n                return;\n            this._preserveAlpha = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BasicMaterial.prototype, \"texture\", {\n        /**\n         * The texture object to use for the albedo colour.\n         */\n        get: function () {\n            return this._texture;\n        },\n        set: function (value) {\n            if (this._texture == value)\n                return;\n            if (this._texture)\n                this.removeTexture(this._texture);\n            this._texture = value;\n            if (this._texture)\n                this.addTexture(this._texture);\n            this.invalidateTexture();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BasicMaterial.assetType = \"[materials BasicMaterial]\";\n    return BasicMaterial;\n}(MaterialBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicMaterial;\n\n},{\"../materials/MaterialBase\":\"awayjs-display/lib/materials/MaterialBase\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/image/Image2D\":undefined}],\"awayjs-display/lib/materials/LightSources\":[function(require,module,exports){\n\"use strict\";\n/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nvar LightSources = (function () {\n    function LightSources() {\n    }\n    /**\n     * Defines normal lights are to be used as the source for the lighting\n     * component.\n     */\n    LightSources.LIGHTS = 0x01;\n    /**\n     * Defines that global lighting probes are to be used as the source for the\n     * lighting component.\n     */\n    LightSources.PROBES = 0x02;\n    /**\n     * Defines that both normal and global lighting probes  are to be used as the\n     * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n     */\n    LightSources.ALL = 0x03;\n    return LightSources;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightSources;\n\n},{}],\"awayjs-display/lib/materials/MaterialBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ImageBase_1 = require(\"awayjs-core/lib/image/ImageBase\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar SurfaceEvent_1 = require(\"../events/SurfaceEvent\");\nvar Style_1 = require(\"../base/Style\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nvar MaterialBase = (function (_super) {\n    __extends(MaterialBase, _super);\n    function MaterialBase(imageColor, alpha) {\n        var _this = this;\n        if (imageColor === void 0) { imageColor = null; }\n        if (alpha === void 0) { alpha = 1; }\n        _super.call(this);\n        this._textures = new Array();\n        this._pUseColorTransform = false;\n        this._alphaBlending = false;\n        this._alpha = 1;\n        this._pAlphaThreshold = 0;\n        this._pAnimateUVs = false;\n        this._enableLightFallOff = true;\n        this._specularLightSources = 0x01;\n        this._diffuseLightSources = 0x03;\n        this._style = new Style_1.default();\n        this._iBaseScreenPassIndex = 0;\n        this._bothSides = false; // update\n        /**\n         * A list of material owners, renderables or custom Entities.\n         */\n        this._owners = new Array();\n        this._pBlendMode = BlendMode_1.default.NORMAL;\n        this._imageRect = false;\n        this._curves = false;\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n        if (imageColor instanceof ImageBase_1.default)\n            this._style.image = imageColor;\n        else if (imageColor)\n            this._style.color = Number(imageColor);\n        this.alpha = alpha;\n        this._onLightChangeDelegate = function (event) { return _this.onLightsChange(event); };\n        this._onTextureInvalidateDelegate = function (event) { return _this.onTextureInvalidate(event); };\n        this.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n    }\n    Object.defineProperty(MaterialBase.prototype, \"alpha\", {\n        /**\n         * The alpha of the surface.\n         */\n        get: function () {\n            return this._alpha;\n        },\n        set: function (value) {\n            if (value > 1)\n                value = 1;\n            else if (value < 0)\n                value = 0;\n            if (this._alpha == value)\n                return;\n            this._alpha = value;\n            if (this._colorTransform == null)\n                this._colorTransform = new ColorTransform_1.default();\n            this._colorTransform.alphaMultiplier = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"colorTransform\", {\n        /**\n         * The ColorTransform object to transform the colour of the material with. Defaults to null.\n         */\n        get: function () {\n            return this._colorTransform;\n        },\n        set: function (value) {\n            this._colorTransform = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"alphaBlending\", {\n        /**\n         * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n         * example when using textures of foliage, consider using alphaThreshold instead.\n         */\n        get: function () {\n            return this._alphaBlending;\n        },\n        set: function (value) {\n            if (this._alphaBlending == value)\n                return;\n            this._alphaBlending = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"animationSet\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"lightPicker\", {\n        /**\n         * The light picker used by the material to provide lights to the material if it supports lighting.\n         *\n         * @see LightPickerBase\n         * @see StaticLightPicker\n         */\n        get: function () {\n            return this._pLightPicker;\n        },\n        set: function (value) {\n            if (this._pLightPicker == value)\n                return;\n            if (this._pLightPicker)\n                this._pLightPicker.removeEventListener(AssetEvent_1.default.INVALIDATE, this._onLightChangeDelegate);\n            this._pLightPicker = value;\n            if (this._pLightPicker)\n                this._pLightPicker.addEventListener(AssetEvent_1.default.INVALIDATE, this._onLightChangeDelegate);\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"curves\", {\n        /**\n         * Indicates whether material should use curves. Defaults to false.\n         */\n        get: function () {\n            return this._curves;\n        },\n        set: function (value) {\n            if (this._curves == value)\n                return;\n            this._curves = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"imageRect\", {\n        /**\n         * Indicates whether or not any used textures should use an atlas. Defaults to false.\n         */\n        get: function () {\n            return this._imageRect;\n        },\n        set: function (value) {\n            if (this._imageRect == value)\n                return;\n            this._imageRect = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"style\", {\n        /**\n         * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.default.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"animateUVs\", {\n        /**\n         * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n         */\n        get: function () {\n            return this._pAnimateUVs;\n        },\n        set: function (value) {\n            if (this._pAnimateUVs == value)\n                return;\n            this._pAnimateUVs = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"useColorTransform\", {\n        /**\n         * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n         */\n        get: function () {\n            return this._pUseColorTransform;\n        },\n        set: function (value) {\n            if (this._pUseColorTransform == value)\n                return;\n            this._pUseColorTransform = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"enableLightFallOff\", {\n        /**\n         * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n         * compatibility for constrained mode.\n         */\n        get: function () {\n            return this._enableLightFallOff;\n        },\n        set: function (value) {\n            if (this._enableLightFallOff == value)\n                return;\n            this._enableLightFallOff = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"diffuseLightSources\", {\n        /**\n         * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n         * and/or light probes for diffuse reflections.\n         *\n         * @see away3d.materials.LightSources\n         */\n        get: function () {\n            return this._diffuseLightSources;\n        },\n        set: function (value) {\n            if (this._diffuseLightSources == value)\n                return;\n            this._diffuseLightSources = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"specularLightSources\", {\n        /**\n         * Define which light source types to use for specular reflections. This allows choosing between regular lights\n         * and/or light probes for specular reflections.\n         *\n         * @see away3d.materials.LightSources\n         */\n        get: function () {\n            return this._specularLightSources;\n        },\n        set: function (value) {\n            if (this._specularLightSources == value)\n                return;\n            this._specularLightSources = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"bothSides\", {\n        /**\n         * Defines whether or not the material should cull triangles facing away from the camera.\n         */\n        get: function () {\n            return this._bothSides;\n        },\n        set: function (value) {\n            if (this._bothSides = value)\n                return;\n            this._bothSides = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"blendMode\", {\n        /**\n         * The blend mode to use when drawing this renderable. The following blend modes are supported:\n         * <ul>\n         * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n         * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n         * <li>BlendMode.MULTIPLY</li>\n         * <li>BlendMode.ADD</li>\n         * <li>BlendMode.ALPHA</li>\n         * </ul>\n         */\n        get: function () {\n            return this._pBlendMode;\n        },\n        set: function (value) {\n            if (this._pBlendMode == value)\n                return;\n            this._pBlendMode = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"alphaPremultiplied\", {\n        /**\n         * Indicates whether visible textures (or other pixels) used by this material have\n         * already been premultiplied. Toggle this if you are seeing black halos around your\n         * blended alpha edges.\n         */\n        get: function () {\n            return this._alphaPremultiplied;\n        },\n        set: function (value) {\n            if (this._alphaPremultiplied == value)\n                return;\n            this._alphaPremultiplied = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"alphaThreshold\", {\n        /**\n         * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n         * invisible or entirely opaque, often used with textures for foliage, etc.\n         * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n         */\n        get: function () {\n            return this._pAlphaThreshold;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            else if (value > 1)\n                value = 1;\n            if (this._pAlphaThreshold == value)\n                return;\n            this._pAlphaThreshold = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //\n    // MATERIAL MANAGEMENT\n    //\n    /**\n     * Mark an IRenderable as owner of this material.\n     * Assures we're not using the same material across renderables with different animations, since the\n     * Programs depend on animation. This method needs to be called when a material is assigned.\n     *\n     * @param owner The IRenderable that had this material assigned\n     *\n     * @internal\n     */\n    MaterialBase.prototype.iAddOwner = function (owner) {\n        this._owners.push(owner);\n        var animationSet;\n        var animator = owner.animator;\n        if (animator)\n            animationSet = animator.animationSet;\n        if (owner.animator) {\n            if (this._animationSet && animationSet != this._animationSet) {\n                throw new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n            }\n            else {\n                if (this._animationSet != animationSet) {\n                    this._animationSet = animationSet;\n                    this.invalidateAnimation();\n                }\n            }\n        }\n        owner.invalidateSurface();\n    };\n    /**\n     * Removes an IRenderable as owner.\n     * @param owner\n     *\n     * @internal\n     */\n    MaterialBase.prototype.iRemoveOwner = function (owner) {\n        this._owners.splice(this._owners.indexOf(owner), 1);\n        if (this._owners.length == 0) {\n            this._animationSet = null;\n            this.invalidateAnimation();\n        }\n        owner.invalidateSurface();\n    };\n    Object.defineProperty(MaterialBase.prototype, \"iOwners\", {\n        /**\n         * A list of the IRenderables that use this material\n         *\n         * @private\n         */\n        get: function () {\n            return this._owners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MaterialBase.prototype.getNumTextures = function () {\n        return this._textures.length;\n    };\n    MaterialBase.prototype.getTextureAt = function (index) {\n        return this._textures[index];\n    };\n    /**\n     * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n     *\n     * @private\n     */\n    MaterialBase.prototype.invalidatePasses = function () {\n        this.dispatchEvent(new SurfaceEvent_1.default(SurfaceEvent_1.default.INVALIDATE_PASSES, this));\n    };\n    MaterialBase.prototype.invalidateAnimation = function () {\n        this.dispatchEvent(new SurfaceEvent_1.default(SurfaceEvent_1.default.INVALIDATE_ANIMATION, this));\n    };\n    MaterialBase.prototype.invalidateSurfaces = function () {\n        var len = this._owners.length;\n        for (var i = 0; i < len; i++)\n            this._owners[i].invalidateSurface();\n    };\n    /**\n     * Called when the light picker's configuration changed.\n     */\n    MaterialBase.prototype.onLightsChange = function (event) {\n        this.invalidate();\n    };\n    MaterialBase.prototype.invalidateTexture = function () {\n        this.dispatchEvent(new SurfaceEvent_1.default(SurfaceEvent_1.default.INVALIDATE_TEXTURE, this));\n    };\n    MaterialBase.prototype.addTextureAt = function (texture, index) {\n        var i = this._textures.indexOf(texture);\n        if (i == index)\n            return;\n        else if (i != -1)\n            this._textures.splice(i, 1);\n        this._textures.splice(index, 0, texture);\n        texture.addEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    MaterialBase.prototype.addTexture = function (texture) {\n        if (this._textures.indexOf(texture) != -1)\n            return;\n        this._textures.push(texture);\n        texture.addEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    MaterialBase.prototype.removeTexture = function (texture) {\n        this._textures.splice(this._textures.indexOf(texture), 1);\n        texture.removeEventListener(AssetEvent_1.default.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    MaterialBase.prototype.onTextureInvalidate = function (event) {\n        if (event === void 0) { event = null; }\n        this.invalidatePasses();\n        //invalidate renderables for number of images getter (in case it has changed)\n        this.invalidateSurfaces();\n    };\n    MaterialBase.prototype._onInvalidateProperties = function (event) {\n        this.invalidatePasses();\n    };\n    return MaterialBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MaterialBase;\n\n},{\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-core/lib/image/ImageBase\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials/lightpickers/LightPickerBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nvar LightPickerBase = (function (_super) {\n    __extends(LightPickerBase, _super);\n    /**\n     * Creates a new LightPickerBase object.\n     */\n    function LightPickerBase() {\n        _super.call(this);\n        this._pNumPointLights = 0;\n        this._pNumDirectionalLights = 0;\n        this._pNumCastingPointLights = 0;\n        this._pNumCastingDirectionalLights = 0;\n        this._pNumLightProbes = 0;\n    }\n    /**\n     * Disposes resources used by the light picker.\n     */\n    LightPickerBase.prototype.dispose = function () {\n    };\n    Object.defineProperty(LightPickerBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return LightPickerBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numDirectionalLights\", {\n        /**\n         * The maximum amount of directional lights that will be provided.\n         */\n        get: function () {\n            return this._pNumDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numPointLights\", {\n        /**\n         * The maximum amount of point lights that will be provided.\n         */\n        get: function () {\n            return this._pNumPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numCastingDirectionalLights\", {\n        /**\n         * The maximum amount of directional lights that cast shadows.\n         */\n        get: function () {\n            return this._pNumCastingDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numCastingPointLights\", {\n        /**\n         * The amount of point lights that cast shadows.\n         */\n        get: function () {\n            return this._pNumCastingPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numLightProbes\", {\n        /**\n         * The maximum amount of light probes that will be provided.\n         */\n        get: function () {\n            return this._pNumLightProbes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"pointLights\", {\n        /**\n         * The collected point lights to be used for shading.\n         */\n        get: function () {\n            return this._pPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"directionalLights\", {\n        /**\n         * The collected directional lights to be used for shading.\n         */\n        get: function () {\n            return this._pDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"castingPointLights\", {\n        /**\n         * The collected point lights that cast shadows to be used for shading.\n         */\n        get: function () {\n            return this._pCastingPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"castingDirectionalLights\", {\n        /**\n         * The collected directional lights that cast shadows to be used for shading.\n         */\n        get: function () {\n            return this._pCastingDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"lightProbes\", {\n        /**\n         * The collected light probes to be used for shading.\n         */\n        get: function () {\n            return this._pLightProbes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"lightProbeWeights\", {\n        /**\n         * The weights for each light probe, defining their influence on the object.\n         */\n        get: function () {\n            return this._pLightProbeWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"allPickedLights\", {\n        /**\n         * A collection of all the collected lights.\n         */\n        get: function () {\n            return this._pAllPickedLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n     */\n    LightPickerBase.prototype.collectLights = function (entity) {\n        this.updateProbeWeights(entity);\n    };\n    /**\n     * Updates the weights for the light probes, based on the renderable's position relative to them.\n     * @param renderable The renderble for which to calculate the light probes' influence.\n     */\n    LightPickerBase.prototype.updateProbeWeights = function (entity) {\n        // todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n        var objectPos = entity.scenePosition;\n        var lightPos;\n        var rx = objectPos.x, ry = objectPos.y, rz = objectPos.z;\n        var dx, dy, dz;\n        var w, total = 0;\n        var i;\n        // calculates weights for probes\n        for (i = 0; i < this._pNumLightProbes; ++i) {\n            lightPos = this._pLightProbes[i].scenePosition;\n            dx = rx - lightPos.x;\n            dy = ry - lightPos.y;\n            dz = rz - lightPos.z;\n            // weight is inversely proportional to square of distance\n            w = dx * dx + dy * dy + dz * dz;\n            // just... huge if at the same spot\n            w = w > .00001 ? 1 / w : 50000000;\n            this._pLightProbeWeights[i] = w;\n            total += w;\n        }\n        // normalize\n        total = 1 / total;\n        for (i = 0; i < this._pNumLightProbes; ++i)\n            this._pLightProbeWeights[i] *= total;\n    };\n    LightPickerBase.assetType = \"[asset LightPicker]\";\n    return LightPickerBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightPickerBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar DirectionalLight_1 = require(\"../../display/DirectionalLight\");\nvar LightProbe_1 = require(\"../../display/LightProbe\");\nvar PointLight_1 = require(\"../../display/PointLight\");\nvar LightEvent_1 = require(\"../../events/LightEvent\");\nvar LightPickerBase_1 = require(\"../../materials/lightpickers/LightPickerBase\");\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nvar StaticLightPicker = (function (_super) {\n    __extends(StaticLightPicker, _super);\n    /**\n     * Creates a new StaticLightPicker object.\n     * @param lights The lights to be used for shading.\n     */\n    function StaticLightPicker(lights) {\n        var _this = this;\n        _super.call(this);\n        this._onCastShadowChangeDelegate = function (event) { return _this.onCastShadowChange(event); };\n        this.lights = lights;\n    }\n    Object.defineProperty(StaticLightPicker.prototype, \"lights\", {\n        /**\n         * The lights used for shading.\n         */\n        get: function () {\n            return this._lights;\n        },\n        set: function (value) {\n            var numPointLights = 0;\n            var numDirectionalLights = 0;\n            var numCastingPointLights = 0;\n            var numCastingDirectionalLights = 0;\n            var numLightProbes = 0;\n            var light;\n            if (this._lights)\n                this.clearListeners();\n            this._lights = value;\n            this._pAllPickedLights = value;\n            this._pPointLights = new Array();\n            this._pCastingPointLights = new Array();\n            this._pDirectionalLights = new Array();\n            this._pCastingDirectionalLights = new Array();\n            this._pLightProbes = new Array();\n            var len = value.length;\n            for (var i = 0; i < len; ++i) {\n                light = value[i];\n                light.addEventListener(LightEvent_1.default.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n                if (light instanceof PointLight_1.default) {\n                    if (light.shadowsEnabled)\n                        this._pCastingPointLights[numCastingPointLights++] = light;\n                    else\n                        this._pPointLights[numPointLights++] = light;\n                }\n                else if (light instanceof DirectionalLight_1.default) {\n                    if (light.shadowsEnabled)\n                        this._pCastingDirectionalLights[numCastingDirectionalLights++] = light;\n                    else\n                        this._pDirectionalLights[numDirectionalLights++] = light;\n                }\n                else if (light instanceof LightProbe_1.default) {\n                    this._pLightProbes[numLightProbes++] = light;\n                }\n            }\n            if (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n                return;\n            this._pNumDirectionalLights = numDirectionalLights;\n            this._pNumCastingDirectionalLights = numCastingDirectionalLights;\n            this._pNumPointLights = numPointLights;\n            this._pNumCastingPointLights = numCastingPointLights;\n            this._pNumLightProbes = numLightProbes;\n            // MUST HAVE MULTIPLE OF 4 ELEMENTS!\n            this._pLightProbeWeights = new Array(Math.ceil(numLightProbes / 4) * 4);\n            // notify material lights have changed\n            this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.INVALIDATE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Remove configuration change listeners on the lights.\n     */\n    StaticLightPicker.prototype.clearListeners = function () {\n        var len = this._lights.length;\n        for (var i = 0; i < len; ++i)\n            this._lights[i].removeEventListener(LightEvent_1.default.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n    };\n    /**\n     * Notifies the material of a configuration change.\n     */\n    StaticLightPicker.prototype.onCastShadowChange = function (event) {\n        // TODO: Assign to special caster collections, just append it to the lights in SinglePass\n        // But keep seperated in multipass\n        var light = event.target;\n        if (light instanceof PointLight_1.default)\n            this.updatePointCasting(light);\n        else if (light instanceof DirectionalLight_1.default)\n            this.updateDirectionalCasting(light);\n        this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.INVALIDATE, this));\n    };\n    /**\n     * Called when a directional light's shadow casting configuration changes.\n     */\n    StaticLightPicker.prototype.updateDirectionalCasting = function (light) {\n        var dl = light;\n        if (light.shadowsEnabled) {\n            --this._pNumDirectionalLights;\n            ++this._pNumCastingDirectionalLights;\n            this._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n            this._pCastingDirectionalLights.push(light);\n        }\n        else {\n            ++this._pNumDirectionalLights;\n            --this._pNumCastingDirectionalLights;\n            this._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n            this._pDirectionalLights.push(light);\n        }\n    };\n    /**\n     * Called when a point light's shadow casting configuration changes.\n     */\n    StaticLightPicker.prototype.updatePointCasting = function (light) {\n        var pl = light;\n        if (light.shadowsEnabled) {\n            --this._pNumPointLights;\n            ++this._pNumCastingPointLights;\n            this._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n            this._pCastingPointLights.push(light);\n        }\n        else {\n            ++this._pNumPointLights;\n            --this._pNumCastingPointLights;\n            this._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n            this._pPointLights.push(light);\n        }\n    };\n    return StaticLightPicker;\n}(LightPickerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StaticLightPicker;\n\n},{\"../../display/DirectionalLight\":\"awayjs-display/lib/display/DirectionalLight\",\"../../display/LightProbe\":\"awayjs-display/lib/display/LightProbe\",\"../../display/PointLight\":\"awayjs-display/lib/display/PointLight\",\"../../events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"../../materials/lightpickers/LightPickerBase\":\"awayjs-display/lib/materials/lightpickers/LightPickerBase\",\"awayjs-core/lib/events/AssetEvent\":undefined}],\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar FreeMatrixProjection_1 = require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nvar Camera_1 = require(\"../../display/Camera\");\nvar DirectionalShadowMapper_1 = require(\"../../materials/shadowmappers/DirectionalShadowMapper\");\nvar CascadeShadowMapper = (function (_super) {\n    __extends(CascadeShadowMapper, _super);\n    function CascadeShadowMapper(numCascades) {\n        if (numCascades === void 0) { numCascades = 3; }\n        _super.call(this);\n        this._pScissorRectsInvalid = true;\n        if (numCascades < 1 || numCascades > 4)\n            throw new Error(\"numCascades must be an integer between 1 and 4\");\n        this._numCascades = numCascades;\n        this.init();\n    }\n    CascadeShadowMapper.prototype.getSplitRatio = function (index /*uint*/) {\n        return this._splitRatios[index];\n    };\n    CascadeShadowMapper.prototype.setSplitRatio = function (index /*uint*/, value) {\n        if (value < 0)\n            value = 0;\n        else if (value > 1)\n            value = 1;\n        if (index >= this._numCascades)\n            throw new Error(\"index must be smaller than the number of cascades!\");\n        this._splitRatios[index] = value;\n    };\n    CascadeShadowMapper.prototype.getDepthProjections = function (partition /*uint*/) {\n        return this._depthCameras[partition].viewProjection;\n    };\n    CascadeShadowMapper.prototype.init = function () {\n        this._splitRatios = new Array(this._numCascades);\n        this._nearPlaneDistances = new Array(this._numCascades);\n        var s = 1;\n        for (var i = this._numCascades - 1; i >= 0; --i) {\n            this._splitRatios[i] = s;\n            s *= .4;\n        }\n        this._texOffsetsX = Array(-1, 1, -1, 1);\n        this._texOffsetsY = Array(1, 1, -1, -1);\n        this._pScissorRects = new Array(4);\n        this._depthLenses = new Array();\n        this._depthCameras = new Array();\n        for (i = 0; i < this._numCascades; ++i) {\n            this._depthLenses[i] = new FreeMatrixProjection_1.default();\n            this._depthCameras[i] = new Camera_1.default(this._depthLenses[i]);\n        }\n    };\n    CascadeShadowMapper.prototype._pSetDepthMapSize = function (value /*uint*/) {\n        _super.prototype._pSetDepthMapSize.call(this, value);\n        this.invalidateScissorRects();\n    };\n    CascadeShadowMapper.prototype.invalidateScissorRects = function () {\n        this._pScissorRectsInvalid = true;\n    };\n    Object.defineProperty(CascadeShadowMapper.prototype, \"numCascades\", {\n        get: function () {\n            return this._numCascades;\n        },\n        set: function (value /*int*/) {\n            if (value == this._numCascades)\n                return;\n            if (value < 1 || value > 4)\n                throw new Error(\"numCascades must be an integer between 1 and 4\");\n            this._numCascades = value;\n            this.invalidateScissorRects();\n            this.init();\n            this.dispatchEvent(new AssetEvent_1.default(AssetEvent_1.default.INVALIDATE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CascadeShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        if (this._pScissorRectsInvalid)\n            this.updateScissorRects();\n        renderer.cullPlanes = this._pCullPlanes;\n        renderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n    };\n    CascadeShadowMapper.prototype.updateScissorRects = function () {\n        var half = this._pDepthMapSize * .5;\n        this._pScissorRects[0] = new Rectangle_1.default(0, 0, half, half);\n        this._pScissorRects[1] = new Rectangle_1.default(half, 0, half, half);\n        this._pScissorRects[2] = new Rectangle_1.default(0, half, half, half);\n        this._pScissorRects[3] = new Rectangle_1.default(half, half, half, half);\n        this._pScissorRectsInvalid = false;\n    };\n    CascadeShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        var matrix;\n        var projection = camera.projection;\n        var projectionNear = projection.near;\n        var projectionRange = projection.far - projectionNear;\n        this.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n        this._pMatrix.appendScale(.96, .96, 1);\n        this._pOverallDepthProjection.matrix = this._pMatrix;\n        this.pUpdateCullPlanes(camera);\n        for (var i = 0; i < this._numCascades; ++i) {\n            matrix = this._depthLenses[i].matrix;\n            this._nearPlaneDistances[i] = projectionNear + this._splitRatios[i] * projectionRange;\n            this._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n            this.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n            this._depthLenses[i].matrix = matrix;\n        }\n    };\n    CascadeShadowMapper.prototype.updateProjectionPartition = function (matrix, splitRatio, texOffsetX, texOffsetY) {\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var xN, yN, zN;\n        var xF, yF, zF;\n        var minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, minZ;\n        var maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY, maxZ = Number.NEGATIVE_INFINITY;\n        var i = 0;\n        while (i < 12) {\n            xN = this._pLocalFrustum[i];\n            yN = this._pLocalFrustum[i + 1];\n            zN = this._pLocalFrustum[i + 2];\n            xF = xN + (this._pLocalFrustum[i + 12] - xN) * splitRatio;\n            yF = yN + (this._pLocalFrustum[i + 13] - yN) * splitRatio;\n            zF = zN + (this._pLocalFrustum[i + 14] - zN) * splitRatio;\n            if (xN < minX)\n                minX = xN;\n            if (xN > maxX)\n                maxX = xN;\n            if (yN < minY)\n                minY = yN;\n            if (yN > maxY)\n                maxY = yN;\n            if (zN > maxZ)\n                maxZ = zN;\n            if (xF < minX)\n                minX = xF;\n            if (xF > maxX)\n                maxX = xF;\n            if (yF < minY)\n                minY = yF;\n            if (yF > maxY)\n                maxY = yF;\n            if (zF > maxZ)\n                maxZ = zF;\n            i += 3;\n        }\n        minZ = 1;\n        var w = (maxX - minX);\n        var h = (maxY - minY);\n        var d = 1 / (maxZ - minZ);\n        if (minX < 0)\n            minX -= this._pSnap; // because int() rounds up for < 0\n        if (minY < 0)\n            minY -= this._pSnap;\n        minX = Math.floor(minX / this._pSnap) * this._pSnap;\n        minY = Math.floor(minY / this._pSnap) * this._pSnap;\n        var snap2 = 2 * this._pSnap;\n        w = Math.floor(w / snap2 + 1) * snap2;\n        h = Math.floor(h / snap2 + 1) * snap2;\n        maxX = minX + w;\n        maxY = minY + h;\n        w = 1 / w;\n        h = 1 / h;\n        raw[0] = 2 * w;\n        raw[5] = 2 * h;\n        raw[10] = d;\n        raw[12] = -(maxX + minX) * w;\n        raw[13] = -(maxY + minY) * h;\n        raw[14] = -minZ * d;\n        raw[15] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        matrix.copyRawDataFrom(raw);\n        matrix.appendScale(.96, .96, 1);\n        matrix.appendTranslation(texOffsetX, texOffsetY, 0);\n        matrix.appendScale(.5, .5, 1);\n    };\n    Object.defineProperty(CascadeShadowMapper.prototype, \"_iNearPlaneDistances\", {\n        get: function () {\n            return this._nearPlaneDistances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CascadeShadowMapper;\n}(DirectionalShadowMapper_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CascadeShadowMapper;\n\n},{\"../../display/Camera\":\"awayjs-display/lib/display/Camera\",\"../../materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/projections/FreeMatrixProjection\":undefined}],\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ImageCube_1 = require(\"awayjs-core/lib/image/ImageCube\");\nvar Camera_1 = require(\"../../display/Camera\");\nvar ShadowMapperBase_1 = require(\"../../materials/shadowmappers/ShadowMapperBase\");\nvar SingleCubeTexture_1 = require(\"../../textures/SingleCubeTexture\");\nvar CubeMapShadowMapper = (function (_super) {\n    __extends(CubeMapShadowMapper, _super);\n    function CubeMapShadowMapper() {\n        _super.call(this);\n        this._pDepthMapSize = 512;\n        this._needsRender = new Array();\n        this.initCameras();\n    }\n    CubeMapShadowMapper.prototype.initCameras = function () {\n        this._depthCameras = new Array();\n        this._projections = new Array();\n        // posX, negX, posY, negY, posZ, negZ\n        this.addCamera(0, 90, 0);\n        this.addCamera(0, -90, 0);\n        this.addCamera(-90, 0, 0);\n        this.addCamera(90, 0, 0);\n        this.addCamera(0, 0, 0);\n        this.addCamera(0, 180, 0);\n    };\n    CubeMapShadowMapper.prototype.addCamera = function (rotationX, rotationY, rotationZ) {\n        var cam = new Camera_1.default();\n        cam.rotationX = rotationX;\n        cam.rotationY = rotationY;\n        cam.rotationZ = rotationZ;\n        cam.projection.near = .01;\n        var projection = cam.projection;\n        projection.fieldOfView = 90;\n        this._projections.push(projection);\n        cam.projection._iAspectRatio = 1;\n        this._depthCameras.push(cam);\n    };\n    //@override\n    CubeMapShadowMapper.prototype.pCreateDepthTexture = function () {\n        return new SingleCubeTexture_1.default(new ImageCube_1.default(this._pDepthMapSize));\n    };\n    //@override\n    CubeMapShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        var light = (this._pLight);\n        var maxDistance = light._pFallOff;\n        var pos = this._pLight.scenePosition;\n        // todo: faces outside frustum which are pointing away from camera need not be rendered!\n        for (var i = 0; i < 6; ++i) {\n            this._projections[i].far = maxDistance;\n            this._depthCameras[i].transform.moveTo(pos.x, pos.y, pos.z);\n            this._needsRender[i] = true;\n        }\n    };\n    //@override\n    CubeMapShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        for (var i = 0; i < 6; ++i)\n            if (this._needsRender[i])\n                renderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i);\n    };\n    return CubeMapShadowMapper;\n}(ShadowMapperBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CubeMapShadowMapper;\n\n},{\"../../display/Camera\":\"awayjs-display/lib/display/Camera\",\"../../materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\",\"../../textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-core/lib/image/ImageCube\":undefined}],\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar FreeMatrixProjection_1 = require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nvar Camera_1 = require(\"../../display/Camera\");\nvar ShadowMapperBase_1 = require(\"../../materials/shadowmappers/ShadowMapperBase\");\nvar Single2DTexture_1 = require(\"../../textures/Single2DTexture\");\nvar DirectionalShadowMapper = (function (_super) {\n    __extends(DirectionalShadowMapper, _super);\n    function DirectionalShadowMapper() {\n        _super.call(this);\n        this._pLightOffset = 10000;\n        this._pSnap = 64;\n        this._pCullPlanes = [];\n        this._pOverallDepthProjection = new FreeMatrixProjection_1.default();\n        this._pOverallDepthCamera = new Camera_1.default(this._pOverallDepthProjection);\n        this._pLocalFrustum = [];\n        this._pMatrix = new Matrix3D_1.default();\n    }\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"snap\", {\n        get: function () {\n            return this._pSnap;\n        },\n        set: function (value) {\n            this._pSnap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"lightOffset\", {\n        get: function () {\n            return this._pLightOffset;\n        },\n        set: function (value) {\n            this._pLightOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"iDepthProjection\", {\n        //@arcane\n        get: function () {\n            return this._pOverallDepthCamera.viewProjection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"depth\", {\n        //@arcane\n        get: function () {\n            return this._pMaxZ - this._pMinZ;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DirectionalShadowMapper.prototype.iSetDepthMap = function (depthMap) {\n        if (this._depthMap == depthMap)\n            return;\n        _super.prototype.iSetDepthMap.call(this, depthMap);\n        if (this._depthMap) {\n            this._explicitDepthMap = true;\n            this._pDepthMapSize = depthMap.image2D.rect.width;\n        }\n        else {\n            this._explicitDepthMap = false;\n        }\n    };\n    DirectionalShadowMapper.prototype.pCreateDepthTexture = function () {\n        return new Single2DTexture_1.default(new Image2D_1.default(this._pDepthMapSize, this._pDepthMapSize));\n    };\n    //@override\n    DirectionalShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        renderer.cullPlanes = this._pCullPlanes;\n        renderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\n    };\n    //@protected\n    DirectionalShadowMapper.prototype.pUpdateCullPlanes = function (camera) {\n        var lightFrustumPlanes = this._pOverallDepthCamera.frustumPlanes;\n        var viewFrustumPlanes = camera.frustumPlanes;\n        this._pCullPlanes.length = 4;\n        this._pCullPlanes[0] = lightFrustumPlanes[0];\n        this._pCullPlanes[1] = lightFrustumPlanes[1];\n        this._pCullPlanes[2] = lightFrustumPlanes[2];\n        this._pCullPlanes[3] = lightFrustumPlanes[3];\n        var light = this._pLight;\n        var dir = light.sceneDirection;\n        var dirX = dir.x;\n        var dirY = dir.y;\n        var dirZ = dir.z;\n        var j = 4;\n        for (var i = 0; i < 6; ++i) {\n            var plane = viewFrustumPlanes[i];\n            if (plane.a * dirX + plane.b * dirY + plane.c * dirZ < 0)\n                this._pCullPlanes[j++] = plane;\n        }\n    };\n    //@override\n    DirectionalShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        this.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n        this._pOverallDepthProjection.matrix = this._pMatrix;\n        this.pUpdateCullPlanes(camera);\n    };\n    DirectionalShadowMapper.prototype.pUpdateProjectionFromFrustumCorners = function (camera, corners, matrix) {\n        var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n        var dir;\n        var x, y, z;\n        var minX, minY;\n        var maxX, maxY;\n        var i;\n        var light = this._pLight;\n        dir = light.sceneDirection;\n        this._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n        x = Math.floor((camera.x - dir.x * this._pLightOffset) / this._pSnap) * this._pSnap;\n        y = Math.floor((camera.y - dir.y * this._pLightOffset) / this._pSnap) * this._pSnap;\n        z = Math.floor((camera.z - dir.z * this._pLightOffset) / this._pSnap) * this._pSnap;\n        this._pOverallDepthCamera.x = x;\n        this._pOverallDepthCamera.y = y;\n        this._pOverallDepthCamera.z = z;\n        this._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n        this._pMatrix.prepend(camera.sceneTransform);\n        this._pMatrix.transformVectors(corners, this._pLocalFrustum);\n        minX = maxX = this._pLocalFrustum[0];\n        minY = maxY = this._pLocalFrustum[1];\n        this._pMaxZ = this._pLocalFrustum[2];\n        i = 3;\n        while (i < 24) {\n            x = this._pLocalFrustum[i];\n            y = this._pLocalFrustum[i + 1];\n            z = this._pLocalFrustum[i + 2];\n            if (x < minX)\n                minX = x;\n            if (x > maxX)\n                maxX = x;\n            if (y < minY)\n                minY = y;\n            if (y > maxY)\n                maxY = y;\n            if (z > this._pMaxZ)\n                this._pMaxZ = z;\n            i += 3;\n        }\n        this._pMinZ = 1;\n        var w = maxX - minX;\n        var h = maxY - minY;\n        var d = 1 / (this._pMaxZ - this._pMinZ);\n        if (minX < 0)\n            minX -= this._pSnap; // because int() rounds up for < 0\n        if (minY < 0)\n            minY -= this._pSnap;\n        minX = Math.floor(minX / this._pSnap) * this._pSnap;\n        minY = Math.floor(minY / this._pSnap) * this._pSnap;\n        var snap2 = 2 * this._pSnap;\n        w = Math.floor(w / snap2 + 2) * snap2;\n        h = Math.floor(h / snap2 + 2) * snap2;\n        maxX = minX + w;\n        maxY = minY + h;\n        w = 1 / w;\n        h = 1 / h;\n        raw[0] = 2 * w;\n        raw[5] = 2 * h;\n        raw[10] = d;\n        raw[12] = -(maxX + minX) * w;\n        raw[13] = -(maxY + minY) * h;\n        raw[14] = -this._pMinZ * d;\n        raw[15] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        matrix.copyRawDataFrom(raw);\n    };\n    return DirectionalShadowMapper;\n}(ShadowMapperBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DirectionalShadowMapper;\n\n},{\"../../display/Camera\":\"awayjs-display/lib/display/Camera\",\"../../materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\",\"../../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-core/lib/projections/FreeMatrixProjection\":undefined}],\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DirectionalShadowMapper_1 = require(\"../../materials/shadowmappers/DirectionalShadowMapper\");\nvar NearDirectionalShadowMapper = (function (_super) {\n    __extends(NearDirectionalShadowMapper, _super);\n    function NearDirectionalShadowMapper(coverageRatio) {\n        if (coverageRatio === void 0) { coverageRatio = .5; }\n        _super.call(this);\n        this.coverageRatio = coverageRatio;\n    }\n    Object.defineProperty(NearDirectionalShadowMapper.prototype, \"coverageRatio\", {\n        /**\n         * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n         */\n        get: function () {\n            return this._coverageRatio;\n        },\n        set: function (value) {\n            if (value > 1)\n                value = 1;\n            else if (value < 0)\n                value = 0;\n            this._coverageRatio = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NearDirectionalShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        var corners = camera.projection.frustumCorners;\n        for (var i = 0; i < 12; ++i) {\n            var v = corners[i];\n            this._pLocalFrustum[i] = v;\n            this._pLocalFrustum[i + 12] = v + (corners[i + 12] - v) * this._coverageRatio;\n        }\n        this.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\n        this._pOverallDepthProjection.matrix = this._pMatrix;\n    };\n    return NearDirectionalShadowMapper;\n}(DirectionalShadowMapper_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = NearDirectionalShadowMapper;\n\n},{\"../../materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\"}],\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar ShadowMapperBase = (function (_super) {\n    __extends(ShadowMapperBase, _super);\n    function ShadowMapperBase() {\n        _super.apply(this, arguments);\n        this._pDepthMapSize = 2048;\n        this._autoUpdateShadows = true;\n    }\n    Object.defineProperty(ShadowMapperBase.prototype, \"autoUpdateShadows\", {\n        get: function () {\n            return this._autoUpdateShadows;\n        },\n        set: function (value) {\n            this._autoUpdateShadows = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadowMapperBase.prototype.updateShadows = function () {\n        this._iShadowsInvalid = true;\n    };\n    ShadowMapperBase.prototype.iSetDepthMap = function (depthMap) {\n        if (this._depthMap && !this._explicitDepthMap)\n            this._depthMap.dispose();\n        this._depthMap = depthMap;\n    };\n    Object.defineProperty(ShadowMapperBase.prototype, \"light\", {\n        get: function () {\n            return this._pLight;\n        },\n        set: function (value) {\n            this._pLight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShadowMapperBase.prototype, \"depthMap\", {\n        get: function () {\n            if (!this._depthMap)\n                this._depthMap = this.pCreateDepthTexture();\n            return this._depthMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShadowMapperBase.prototype, \"depthMapSize\", {\n        get: function () {\n            return this._pDepthMapSize;\n        },\n        set: function (value) {\n            if (value == this._pDepthMapSize)\n                return;\n            this._pSetDepthMapSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadowMapperBase.prototype.dispose = function () {\n        if (this._depthMap && !this._explicitDepthMap)\n            this._depthMap.dispose();\n        this._depthMap = null;\n    };\n    ShadowMapperBase.prototype.pCreateDepthTexture = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    ShadowMapperBase.prototype.iRenderDepthMap = function (camera, scene, renderer) {\n        this._iShadowsInvalid = false;\n        this.pUpdateDepthProjection(camera);\n        if (!this._depthMap)\n            this._depthMap = this.pCreateDepthTexture();\n        this.pDrawDepthMap(scene, this._depthMap, renderer);\n    };\n    ShadowMapperBase.prototype.pUpdateDepthProjection = function (camera) {\n        throw new AbstractMethodError_1.default();\n    };\n    ShadowMapperBase.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        throw new AbstractMethodError_1.default();\n    };\n    ShadowMapperBase.prototype._pSetDepthMapSize = function (value) {\n        this._pDepthMapSize = value;\n        if (this._explicitDepthMap) {\n            throw Error(\"Cannot set depth map size for the current renderer.\");\n        }\n        else if (this._depthMap) {\n            this._depthMap.dispose();\n            this._depthMap = null;\n        }\n    };\n    return ShadowMapperBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShadowMapperBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials\":[function(require,module,exports){\n\"use strict\";\nvar LightPickerBase_1 = require(\"./materials/lightpickers/LightPickerBase\");\nexports.LightPickerBase = LightPickerBase_1.default;\nvar StaticLightPicker_1 = require(\"./materials/lightpickers/StaticLightPicker\");\nexports.StaticLightPicker = StaticLightPicker_1.default;\nvar CascadeShadowMapper_1 = require(\"./materials/shadowmappers/CascadeShadowMapper\");\nexports.CascadeShadowMapper = CascadeShadowMapper_1.default;\nvar CubeMapShadowMapper_1 = require(\"./materials/shadowmappers/CubeMapShadowMapper\");\nexports.CubeMapShadowMapper = CubeMapShadowMapper_1.default;\nvar DirectionalShadowMapper_1 = require(\"./materials/shadowmappers/DirectionalShadowMapper\");\nexports.DirectionalShadowMapper = DirectionalShadowMapper_1.default;\nvar NearDirectionalShadowMapper_1 = require(\"./materials/shadowmappers/NearDirectionalShadowMapper\");\nexports.NearDirectionalShadowMapper = NearDirectionalShadowMapper_1.default;\nvar ShadowMapperBase_1 = require(\"./materials/shadowmappers/ShadowMapperBase\");\nexports.ShadowMapperBase = ShadowMapperBase_1.default;\nvar BasicMaterial_1 = require(\"./materials/BasicMaterial\");\nexports.BasicMaterial = BasicMaterial_1.default;\nvar LightSources_1 = require(\"./materials/LightSources\");\nexports.LightSources = LightSources_1.default;\nvar MaterialBase_1 = require(\"./materials/MaterialBase\");\nexports.MaterialBase = MaterialBase_1.default;\n\n},{\"./materials/BasicMaterial\":\"awayjs-display/lib/materials/BasicMaterial\",\"./materials/LightSources\":\"awayjs-display/lib/materials/LightSources\",\"./materials/MaterialBase\":\"awayjs-display/lib/materials/MaterialBase\",\"./materials/lightpickers/LightPickerBase\":\"awayjs-display/lib/materials/lightpickers/LightPickerBase\",\"./materials/lightpickers/StaticLightPicker\":\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\",\"./materials/shadowmappers/CascadeShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\",\"./materials/shadowmappers/CubeMapShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\",\"./materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"./materials/shadowmappers/NearDirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\",\"./materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\"}],\"awayjs-display/lib/partition/BasicPartition\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar NodeBase_1 = require(\"../partition/NodeBase\");\nvar PartitionBase_1 = require(\"../partition/PartitionBase\");\n/**\n * @class away.partition.Partition\n */\nvar BasicPartition = (function (_super) {\n    __extends(BasicPartition, _super);\n    function BasicPartition() {\n        _super.call(this);\n        this._rootNode = new NodeBase_1.default();\n    }\n    return BasicPartition;\n}(PartitionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicPartition;\n\n},{\"../partition/NodeBase\":\"awayjs-display/lib/partition/NodeBase\",\"../partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\"}],\"awayjs-display/lib/partition/CameraNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * @class away.partition.CameraNode\n */\nvar CameraNode = (function (_super) {\n    __extends(CameraNode, _super);\n    function CameraNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    CameraNode.prototype.acceptTraverser = function (traverser) {\n        // todo: dead end for now, if it has a debug sprite, then sure accept that\n    };\n    return CameraNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CameraNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/DirectionalLightNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * @class away.partition.DirectionalLightNode\n */\nvar DirectionalLightNode = (function (_super) {\n    __extends(DirectionalLightNode, _super);\n    function DirectionalLightNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    DirectionalLightNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyDirectionalLight(this._displayObject);\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    DirectionalLightNode.prototype.isCastingShadow = function () {\n        return false;\n    };\n    return DirectionalLightNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DirectionalLightNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/DisplayObjectNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar AxisAlignedBoundingBox_1 = require(\"../bounds/AxisAlignedBoundingBox\");\nvar BoundingSphere_1 = require(\"../bounds/BoundingSphere\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar NullBounds_1 = require(\"../bounds/NullBounds\");\nvar DisplayObjectEvent_1 = require(\"../events/DisplayObjectEvent\");\n/**\n * @class away.partition.EntityNode\n */\nvar DisplayObjectNode = (function (_super) {\n    __extends(DisplayObjectNode, _super);\n    function DisplayObjectNode(displayObject, pool) {\n        var _this = this;\n        _super.call(this, displayObject, pool);\n        this.numEntities = 0;\n        this.isSceneGraphNode = false;\n        this._boundsDirty = true;\n        this._onInvalidatePartitionBoundsDelegate = function (event) { return _this._onInvalidatePartitionBounds(event); };\n        this._displayObject = displayObject;\n        this._displayObject.addEventListener(DisplayObjectEvent_1.default.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n        this._boundsType = this._displayObject.boundsType;\n    }\n    Object.defineProperty(DisplayObjectNode.prototype, \"debugVisible\", {\n        get: function () {\n            return this._displayObject.debugVisible;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObjectNode.prototype, \"bounds\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            if (this._boundsDirty)\n                this._updateBounds();\n            return this._bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @returns {boolean}\n     */\n    DisplayObjectNode.prototype.isCastingShadow = function () {\n        return this._displayObject.castsShadows;\n    };\n    DisplayObjectNode.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._displayObject.removeEventListener(DisplayObjectEvent_1.default.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n        this._displayObject = null;\n        if (this._bounds)\n            this._bounds.dispose();\n        this._bounds = null;\n    };\n    DisplayObjectNode.prototype.onInvalidate = function (event) {\n        _super.prototype.onInvalidate.call(this, event);\n        if (this._boundsType != this._displayObject.boundsType) {\n            this._boundsType = this._displayObject.boundsType;\n            this._boundsDirty = true;\n        }\n    };\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     */\n    DisplayObjectNode.prototype.isInFrustum = function (planes, numPlanes) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    DisplayObjectNode.prototype.isIntersectingRay = function (rayPosition, rayDirection) {\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    DisplayObjectNode.prototype.isRenderable = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    DisplayObjectNode.prototype.acceptTraverser = function (traverser) {\n        // do nothing here\n    };\n    DisplayObjectNode.prototype._onInvalidatePartitionBounds = function (event) {\n        // do nothing here\n    };\n    DisplayObjectNode.prototype._updateBounds = function () {\n        if (this._bounds)\n            this._bounds.dispose();\n        if (this._boundsType == BoundsType_1.default.AXIS_ALIGNED_BOX)\n            this._bounds = new AxisAlignedBoundingBox_1.default(this._displayObject);\n        else if (this._boundsType == BoundsType_1.default.SPHERE)\n            this._bounds = new BoundingSphere_1.default(this._displayObject);\n        else if (this._boundsType == BoundsType_1.default.NULL)\n            this._bounds = new NullBounds_1.default();\n        this._boundsDirty = false;\n    };\n    return DisplayObjectNode;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DisplayObjectNode;\n\n},{\"../bounds/AxisAlignedBoundingBox\":\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\",\"../bounds/BoundingSphere\":\"awayjs-display/lib/bounds/BoundingSphere\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\",\"../events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"awayjs-core/lib/library/AbstractionBase\":undefined}],\"awayjs-display/lib/partition/EntityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar DisplayObjectNode_1 = require(\"../partition/DisplayObjectNode\");\n/**\n * @class away.partition.EntityNode\n */\nvar EntityNode = (function (_super) {\n    __extends(EntityNode, _super);\n    function EntityNode(displayObject, partition) {\n        _super.call(this, displayObject, partition);\n        this.numEntities = 1;\n        this._maskPosition = new Vector3D_1.default();\n        this._partition = partition;\n    }\n    EntityNode.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._partition = null;\n    };\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     */\n    EntityNode.prototype.isInFrustum = function (planes, numPlanes) {\n        if (!this._displayObject._iIsVisible())\n            return false;\n        return true; // todo: hack for 2d. attention. might break stuff in 3d.\n        //return this._bounds.isInFrustum(planes, numPlanes);\n    };\n    /**\n     * @inheritDoc\n     */\n    EntityNode.prototype.isIntersectingRay = function (globalRayPosition, globalRayDirection) {\n        if (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\n            return false;\n        var pickingCollision = this._displayObject._iPickingCollision;\n        pickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\n        pickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\n        if (!pickingCollision.normal)\n            pickingCollision.normal = new Vector3D_1.default();\n        var rayEntryDistance = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\n        if (rayEntryDistance < 0)\n            return false;\n        pickingCollision.rayEntryDistance = rayEntryDistance;\n        pickingCollision.globalRayPosition = globalRayPosition;\n        pickingCollision.globalRayDirection = globalRayDirection;\n        pickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    EntityNode.prototype.isRenderable = function () {\n        return this._displayObject._iAssignedColorTransform()._isRenderable();\n    };\n    /**\n     * @inheritDoc\n     */\n    EntityNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyEntity(this._displayObject);\n    };\n    EntityNode.prototype._onInvalidatePartitionBounds = function (event) {\n        this.bounds.invalidate();\n        this._partition.iMarkForUpdate(this);\n    };\n    EntityNode.prototype.isIntersectingMasks = function (globalRayPosition, globalRayDirection, masks) {\n        //horrible hack for 2d masks\n        if (masks != null) {\n            this._maskPosition.x = globalRayPosition.x + globalRayDirection.x * 1000;\n            this._maskPosition.y = globalRayPosition.y + globalRayDirection.y * 1000;\n            var numLayers = masks.length;\n            var children;\n            var numChildren;\n            var layerHit;\n            for (var i = 0; i < numLayers; i++) {\n                children = masks[i];\n                numChildren = children.length;\n                layerHit = false;\n                for (var j = 0; j < numChildren; j++) {\n                    if (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\n                        layerHit = true;\n                        break;\n                    }\n                }\n                if (!layerHit)\n                    return false;\n            }\n        }\n        return true;\n    };\n    return EntityNode;\n}(DisplayObjectNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = EntityNode;\n\n},{\"../partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/partition/IContainerNode\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/IDisplayObjectNode\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/IEntityNodeClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/INode\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/LightProbeNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * @class away.partition.LightProbeNode\n */\nvar LightProbeNode = (function (_super) {\n    __extends(LightProbeNode, _super);\n    function LightProbeNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    LightProbeNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyLightProbe(this._displayObject);\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    LightProbeNode.prototype.isCastingShadow = function () {\n        return false;\n    };\n    return LightProbeNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightProbeNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/NodeBase\":[function(require,module,exports){\n\"use strict\";\nvar NullBounds_1 = require(\"../bounds/NullBounds\");\n/**\n * @class away.partition.NodeBase\n */\nvar NodeBase = (function () {\n    /**\n     *\n     */\n    function NodeBase() {\n        this._bounds = new NullBounds_1.default();\n        this._pChildNodes = new Array();\n        this._pNumChildNodes = 0;\n        this.numEntities = 0;\n    }\n    Object.defineProperty(NodeBase.prototype, \"debugVisible\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NodeBase.prototype, \"bounds\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            return this._bounds; //TODO\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     * @internal\n     */\n    NodeBase.prototype.isInFrustum = function (planes, numPlanes) {\n        return true;\n    };\n    /**\n     *\n     * @param rayPosition\n     * @param rayDirection\n     * @returns {boolean}\n     */\n    NodeBase.prototype.isIntersectingRay = function (rayPosition, rayDirection) {\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    NodeBase.prototype.isRenderable = function () {\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    NodeBase.prototype.isCastingShadow = function () {\n        return true;\n    };\n    NodeBase.prototype.dispose = function () {\n        this.parent = null;\n        this._pChildNodes = null;\n    };\n    /**\n     *\n     * @param traverser\n     */\n    NodeBase.prototype.acceptTraverser = function (traverser) {\n        if (this.numEntities == 0)\n            return;\n        if (traverser.enterNode(this)) {\n            for (var i = 0; i < this._pNumChildNodes; i++)\n                this._pChildNodes[i].acceptTraverser(traverser);\n        }\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    NodeBase.prototype.iAddNode = function (node) {\n        node.parent = this;\n        this.numEntities += node.numEntities;\n        this._pChildNodes[this._pNumChildNodes++] = node;\n        var numEntities = node.numEntities;\n        node = this;\n        do {\n            node.numEntities += numEntities;\n        } while ((node = node.parent) != null);\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    NodeBase.prototype.iRemoveNode = function (node) {\n        var index = this._pChildNodes.indexOf(node);\n        this._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n        this._pChildNodes.pop();\n        var numEntities = node.numEntities;\n        node = this;\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = node.parent) != null);\n    };\n    return NodeBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = NodeBase;\n\n},{\"../bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\"}],\"awayjs-display/lib/partition/PartitionBase\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.partition.Partition\n */\nvar PartitionBase = (function () {\n    function PartitionBase() {\n        this._abstractionPool = new Object();\n        this._updatesMade = false;\n    }\n    PartitionBase.prototype.getAbstraction = function (displayObject) {\n        return (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new PartitionBase._abstractionClassPool[displayObject.assetType](displayObject, this)));\n    };\n    /**\n     *\n     * @param image\n     */\n    PartitionBase.prototype.clearAbstraction = function (displayObject) {\n        this._abstractionPool[displayObject.id] = null;\n    };\n    PartitionBase.prototype.traverse = function (traverser) {\n        if (this._updatesMade)\n            this.updateEntities();\n        if (this._rootNode) {\n            this._rootNode.acceptTraverser(traverser);\n        }\n    };\n    PartitionBase.prototype.iMarkForUpdate = function (node) {\n        var t = this._updateQueue;\n        while (t) {\n            if (node == t)\n                return;\n            t = t._iUpdateQueueNext;\n        }\n        node._iUpdateQueueNext = this._updateQueue;\n        this._updateQueue = node;\n        this._updatesMade = true;\n    };\n    PartitionBase.prototype.iRemoveEntity = function (node) {\n        var t;\n        if (node.parent) {\n            node.parent.iRemoveNode(node);\n            node.parent = null;\n        }\n        if (node == this._updateQueue) {\n            this._updateQueue = node._iUpdateQueueNext;\n        }\n        else {\n            t = this._updateQueue;\n            while (t && t._iUpdateQueueNext != node)\n                t = t._iUpdateQueueNext;\n            if (t)\n                t._iUpdateQueueNext = node._iUpdateQueueNext;\n        }\n        node._iUpdateQueueNext = null;\n        if (!this._updateQueue)\n            this._updatesMade = false;\n    };\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    PartitionBase.prototype.findParentForNode = function (node) {\n        return this._rootNode;\n    };\n    PartitionBase.prototype.updateEntities = function () {\n        var node = this._updateQueue;\n        while (node) {\n            //required for controllers with autoUpdate set to true and queued events\n            node._displayObject._iInternalUpdate();\n            node = node._iUpdateQueueNext;\n        }\n        //reset head\n        node = this._updateQueue;\n        var targetNode;\n        var t;\n        this._updateQueue = null;\n        this._updatesMade = false;\n        do {\n            targetNode = this.findParentForNode(node);\n            if (node.parent != targetNode) {\n                if (node.parent)\n                    node.parent.iRemoveNode(node);\n                targetNode.iAddNode(node);\n            }\n            t = node._iUpdateQueueNext;\n            node._iUpdateQueueNext = null;\n        } while ((node = t) != null);\n    };\n    /**\n     * @internal\n     */\n    PartitionBase.prototype._iRegisterEntity = function (displayObject) {\n        if (displayObject.isEntity)\n            this.iMarkForUpdate(this.getAbstraction(displayObject));\n    };\n    /**\n     * @internal\n     */\n    PartitionBase.prototype._iUnregisterEntity = function (displayObject) {\n        if (displayObject.isEntity)\n            this.iRemoveEntity(this.getAbstraction(displayObject));\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    PartitionBase.registerAbstraction = function (entityNodeClass, assetClass) {\n        PartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n    };\n    PartitionBase._abstractionClassPool = new Object();\n    return PartitionBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PartitionBase;\n\n},{}],\"awayjs-display/lib/partition/PointLightNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * @class away.partition.PointLightNode\n */\nvar PointLightNode = (function (_super) {\n    __extends(PointLightNode, _super);\n    function PointLightNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    PointLightNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyPointLight(this._displayObject);\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    PointLightNode.prototype.isCastingShadow = function () {\n        return false;\n    };\n    return PointLightNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PointLightNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/SceneGraphNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DisplayObjectNode_1 = require(\"../partition/DisplayObjectNode\");\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nvar SceneGraphNode = (function (_super) {\n    __extends(SceneGraphNode, _super);\n    function SceneGraphNode() {\n        _super.apply(this, arguments);\n        this.isSceneGraphNode = true;\n        this._pChildNodes = new Array();\n        this._childDepths = new Array();\n        this._childMasks = new Array();\n    }\n    /**\n     *\n     * @param traverser\n     */\n    SceneGraphNode.prototype.acceptTraverser = function (traverser) {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n        var i;\n        for (i = this._pChildNodes.length - 1; i >= 0; i--)\n            this._pChildNodes[i].acceptTraverser(traverser);\n        for (i = this._childMasks.length - 1; i >= 0; i--)\n            this._childMasks[i].acceptTraverser(traverser);\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    SceneGraphNode.prototype.iAddNode = function (node) {\n        node.parent = this;\n        if (node._displayObject.maskMode) {\n            this._childMasks.push(node);\n        }\n        else {\n            var depth = node._displayObject._depthID;\n            var len = this._childDepths.length;\n            var index = len;\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n            index++;\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            }\n            else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n        }\n        var numEntities = node.isSceneGraphNode ? node.numEntities : 1;\n        node = this;\n        do {\n            node.numEntities += numEntities;\n        } while ((node = node.parent) != null);\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    SceneGraphNode.prototype.iRemoveNode = function (node) {\n        if (node._displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n        }\n        else {\n            var index = this._pChildNodes.indexOf(node);\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n        }\n        var numEntities = node.numEntities;\n        node = this;\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = node.parent) != null);\n    };\n    return SceneGraphNode;\n}(DisplayObjectNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SceneGraphNode;\n\n},{\"../partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\"}],\"awayjs-display/lib/partition/SceneGraphPartition\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SceneGraphNode_1 = require(\"../partition/SceneGraphNode\");\nvar PartitionBase_1 = require(\"../partition/PartitionBase\");\n/**\n * @class away.partition.Partition\n */\nvar SceneGraphPartition = (function (_super) {\n    __extends(SceneGraphPartition, _super);\n    function SceneGraphPartition() {\n        _super.call(this);\n        this._sceneGraphNodePool = new SceneGraphNodePool();\n    }\n    SceneGraphPartition.prototype.traverse = function (traverser) {\n        _super.prototype.traverse.call(this, traverser);\n    };\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    SceneGraphPartition.prototype.findParentForNode = function (node) {\n        if (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\n            this._rootNode = node;\n            return null;\n        }\n        if (!node.isSceneGraphNode && node._displayObject.isContainer)\n            return this._sceneGraphNodePool.getAbstraction(node._displayObject);\n        return this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n    };\n    /**\n     * @internal\n     */\n    SceneGraphPartition.prototype._iRegisterEntity = function (displayObject) {\n        _super.prototype._iRegisterEntity.call(this, displayObject);\n        if (displayObject.isContainer)\n            this.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(displayObject));\n    };\n    /**\n     * @internal\n     */\n    SceneGraphPartition.prototype._iUnregisterEntity = function (displayObject) {\n        _super.prototype._iUnregisterEntity.call(this, displayObject);\n        if (displayObject.isContainer)\n            this.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(displayObject));\n    };\n    return SceneGraphPartition;\n}(PartitionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SceneGraphPartition;\n/**\n * @class away.pool.SceneGraphNodePool\n */\nvar SceneGraphNodePool = (function () {\n    function SceneGraphNodePool() {\n        this._abstractionPool = new Object();\n    }\n    /**\n     * //TODO\n     *\n     * @param entity\n     * @returns EntityNode\n     */\n    SceneGraphNodePool.prototype.getAbstraction = function (displayObjectContainer) {\n        return (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode_1.default(displayObjectContainer, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param entity\n     */\n    SceneGraphNodePool.prototype.clearAbstraction = function (displayObjectContainer) {\n        delete this._abstractionPool[displayObjectContainer.id];\n    };\n    return SceneGraphNodePool;\n}());\n\n},{\"../partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\",\"../partition/SceneGraphNode\":\"awayjs-display/lib/partition/SceneGraphNode\"}],\"awayjs-display/lib/partition/SkyboxNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nvar SkyboxNode = (function (_super) {\n    __extends(SkyboxNode, _super);\n    function SkyboxNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    SkyboxNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applySkybox(this._displayObject);\n    };\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     */\n    SkyboxNode.prototype.isInFrustum = function (planes, numPlanes) {\n        if (!this._displayObject._iIsVisible)\n            return false;\n        //a skybox is always in view unless its visibility is set to false\n        return true;\n    };\n    return SkyboxNode;\n}(EntityNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkyboxNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition\":[function(require,module,exports){\n\"use strict\";\nvar BasicPartition_1 = require(\"./partition/BasicPartition\");\nexports.BasicPartition = BasicPartition_1.default;\nvar CameraNode_1 = require(\"./partition/CameraNode\");\nexports.CameraNode = CameraNode_1.default;\nvar DirectionalLightNode_1 = require(\"./partition/DirectionalLightNode\");\nexports.DirectionalLightNode = DirectionalLightNode_1.default;\nvar DisplayObjectNode_1 = require(\"./partition/DisplayObjectNode\");\nexports.DisplayObjectNode = DisplayObjectNode_1.default;\nvar EntityNode_1 = require(\"./partition/EntityNode\");\nexports.EntityNode = EntityNode_1.default;\nvar LightProbeNode_1 = require(\"./partition/LightProbeNode\");\nexports.LightProbeNode = LightProbeNode_1.default;\nvar NodeBase_1 = require(\"./partition/NodeBase\");\nexports.NodeBase = NodeBase_1.default;\nvar PartitionBase_1 = require(\"./partition/PartitionBase\");\nexports.PartitionBase = PartitionBase_1.default;\nvar PointLightNode_1 = require(\"./partition/PointLightNode\");\nexports.PointLightNode = PointLightNode_1.default;\nvar SceneGraphNode_1 = require(\"./partition/SceneGraphNode\");\nexports.SceneGraphNode = SceneGraphNode_1.default;\nvar SceneGraphPartition_1 = require(\"./partition/SceneGraphPartition\");\nexports.SceneGraphPartition = SceneGraphPartition_1.default;\nvar SkyboxNode_1 = require(\"./partition/SkyboxNode\");\nexports.SkyboxNode = SkyboxNode_1.default;\n\n},{\"./partition/BasicPartition\":\"awayjs-display/lib/partition/BasicPartition\",\"./partition/CameraNode\":\"awayjs-display/lib/partition/CameraNode\",\"./partition/DirectionalLightNode\":\"awayjs-display/lib/partition/DirectionalLightNode\",\"./partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\",\"./partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\",\"./partition/LightProbeNode\":\"awayjs-display/lib/partition/LightProbeNode\",\"./partition/NodeBase\":\"awayjs-display/lib/partition/NodeBase\",\"./partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\",\"./partition/PointLightNode\":\"awayjs-display/lib/partition/PointLightNode\",\"./partition/SceneGraphNode\":\"awayjs-display/lib/partition/SceneGraphNode\",\"./partition/SceneGraphPartition\":\"awayjs-display/lib/partition/SceneGraphPartition\",\"./partition/SkyboxNode\":\"awayjs-display/lib/partition/SkyboxNode\"}],\"awayjs-display/lib/pick/IPicker\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/pick/IPickingCollider\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/pick/JSPickingCollider\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nvar JSPickingCollider = (function () {\n    /**\n     * Creates a new <code>JSPickingCollider</code> object.\n     *\n     * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n     */\n    function JSPickingCollider(findClosestCollision) {\n        if (findClosestCollision === void 0) { findClosestCollision = false; }\n        this._findClosestCollision = findClosestCollision;\n    }\n    /**\n     * Tests a <code>Billboard</code> object for a collision with the picking ray.\n     *\n     * @param billboard The billboard instance to be tested.\n     * @param pickingCollision The collision object used to store the collision results\n     * @param findClosest\n     */\n    JSPickingCollider.prototype.testBillboardCollision = function (billboard, material, pickingCollision) {\n        pickingCollision.renderable = null;\n        //if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\n        //\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\n        //\n        //\tpickingCollision.renderable = billboard;\n        //\n        //\treturn true;\n        //}\n        return false;\n    };\n    /**\n     * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n     *\n     * @param triangleElements\n     * @param material\n     * @param pickingCollision\n     * @returns {boolean}\n     */\n    JSPickingCollider.prototype.testTriangleCollision = function (triangleElements, material, pickingCollision, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var rayPosition = pickingCollision.rayPosition;\n        var rayDirection = pickingCollision.rayDirection;\n        var t;\n        var i0, i1, i2;\n        var rx, ry, rz;\n        var nx, ny, nz;\n        var cx, cy, cz;\n        var coeff, u, v, w;\n        var p0x, p0y, p0z;\n        var p1x, p1y, p1z;\n        var p2x, p2y, p2z;\n        var s0x, s0y, s0z;\n        var s1x, s1y, s1z;\n        var nl, nDotV, D, disToPlane;\n        var Q1Q2, Q1Q1, Q2Q2, RQ1, RQ2;\n        var collisionTriangleIndex = -1;\n        var bothSides = material.bothSides;\n        var positions = triangleElements.positions.get(count, offset);\n        var posDim = triangleElements.positions.dimensions;\n        var indices;\n        if (triangleElements.indices) {\n            indices = triangleElements.indices.get(triangleElements.numElements);\n            count = indices.length;\n        }\n        for (var index = 0; index < count; index += 3) {\n            // evaluate triangle indices\n            if (indices) {\n                i0 = indices[index] * posDim;\n                i1 = indices[index + 1] * posDim;\n                i2 = indices[index + 2] * posDim;\n            }\n            else {\n                i0 = index * posDim;\n                i1 = (index + 1) * posDim;\n                i2 = (index + 2) * posDim;\n            }\n            // evaluate triangle positions\n            p0x = positions[i0];\n            p1x = positions[i1];\n            p2x = positions[i2];\n            s0x = p1x - p0x; // s0 = p1 - p0\n            s1x = p2x - p0x; // s1 = p2 - p0\n            p0y = positions[i0 + 1];\n            p1y = positions[i1 + 1];\n            p2y = positions[i2 + 1];\n            s0y = p1y - p0y;\n            s1y = p2y - p0y;\n            if (posDim == 3) {\n                p0z = positions[i0 + 2];\n                p1z = positions[i1 + 2];\n                p2z = positions[i2 + 2];\n                s0z = p1z - p0z;\n                s1z = p2z - p0z;\n                // evaluate sides and triangle normal\n                nx = s0y * s1z - s0z * s1y; // n = s0 x s1\n                ny = s0z * s1x - s0x * s1z;\n                nz = s0x * s1y - s0y * s1x;\n                nl = 1 / Math.sqrt(nx * nx + ny * ny + nz * nz); // normalize n\n                nx *= nl;\n                ny *= nl;\n                nz *= nl;\n            }\n            else {\n                nx = 0;\n                ny = 0;\n                nz = 1;\n            }\n            // -- plane intersection test --\n            nDotV = nx * rayDirection.x + ny * +rayDirection.y + nz * rayDirection.z; // rayDirection . normal\n            if ((!bothSides && nDotV < 0.0) || (bothSides && nDotV != 0.0)) {\n                // find collision t\n                D = -(nx * p0x + ny * p0y + nz * p0z);\n                disToPlane = -(nx * rayPosition.x + ny * rayPosition.y + nz * rayPosition.z + D);\n                t = disToPlane / nDotV;\n                // find collision point\n                cx = rayPosition.x + t * rayDirection.x;\n                cy = rayPosition.y + t * rayDirection.y;\n                cz = rayPosition.z + t * rayDirection.z;\n                // collision point inside triangle? ( using barycentric coordinates )\n                Q1Q2 = s0x * s1x + s0y * s1y + s0z * s1z;\n                Q1Q1 = s0x * s0x + s0y * s0y + s0z * s0z;\n                Q2Q2 = s1x * s1x + s1y * s1y + s1z * s1z;\n                rx = cx - p0x;\n                ry = cy - p0y;\n                rz = cz - p0z;\n                RQ1 = rx * s0x + ry * s0y + rz * s0z;\n                RQ2 = rx * s1x + ry * s1y + rz * s1z;\n                coeff = 1 / (Q1Q1 * Q2Q2 - Q1Q2 * Q1Q2);\n                v = coeff * (Q2Q2 * RQ1 - Q1Q2 * RQ2);\n                w = coeff * (-Q1Q2 * RQ1 + Q1Q1 * RQ2);\n                if (v < 0)\n                    continue;\n                if (w < 0)\n                    continue;\n                u = 1 - v - w;\n                if (!(u < 0) && t > 0 && t < pickingCollision.rayEntryDistance) {\n                    collisionTriangleIndex = index / 3;\n                    pickingCollision.rayEntryDistance = t;\n                    pickingCollision.position = new Vector3D_1.default(cx, cy, cz);\n                    pickingCollision.normal = new Vector3D_1.default(nx, ny, nz);\n                    if (triangleElements.uvs) {\n                        var uvs = triangleElements.uvs.get(triangleElements.numVertices);\n                        var uvDim = triangleElements.uvs.dimensions;\n                        var uIndex = indices[index] * uvDim;\n                        var uv0 = new Vector3D_1.default(uvs[uIndex], uvs[uIndex + 1]);\n                        uIndex = indices[index + 1] * uvDim;\n                        var uv1 = new Vector3D_1.default(uvs[uIndex], uvs[uIndex + 1]);\n                        uIndex = indices[index + 2] * uvDim;\n                        var uv2 = new Vector3D_1.default(uvs[uIndex], uvs[uIndex + 1]);\n                        pickingCollision.uv = new Point_1.default(u * uv0.x + v * uv1.x + w * uv2.x, u * uv0.y + v * uv1.y + w * uv2.y);\n                    }\n                    pickingCollision.elementIndex = collisionTriangleIndex;\n                    // if not looking for best hit, first found will do...\n                    if (!this._findClosestCollision)\n                        return true;\n                }\n            }\n        }\n        if (collisionTriangleIndex >= 0)\n            return true;\n        return false;\n    };\n    //\n    ///**\n    // * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n    // *\n    // * @param triangleElements\n    // * @param material\n    // * @param pickingCollision\n    // * @returns {boolean}\n    // */\n    //public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\n    //{\n    //\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\n    //\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\n    //\n    //\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n    //\t//this will only work while all points lie on the x/y plane\n    //\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n    //\n    //\tvar result:Vector3D = new Vector3D();\n    //\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n    //\tresult.x = rayPosition.x - ( plane.x*distance);\n    //\tresult.y = rayPosition.y - ( plane.y*distance);\n    //\tresult.z = rayPosition.z - ( plane.z*distance);\n    //\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n    //\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n    //\trayDirection.scaleBy(t);\n    //\tvar p:Vector3D = rayPosition.add(rayDirection);\n    //\n    //\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n    //\tvar collisionCurveIndex:number = -1;\n    //\tvar bothSides:boolean = material.bothSides;\n    //\n    //\n    //\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n    //\tvar posDim:number = curveElements.positions.dimensions;\n    //\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n    //\tvar curveDim:number = curveElements.curves.dimensions;\n    //\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n    //\tvar uvDim:number = curveElements.uvs.dimensions;\n    //\tvar numIndices:number = indices.length;\n    //\n    //\n    //\tfor(var index:number = 0; index < numIndices; index+=3)\n    //\t{\n    //\t\tvar id0:number = indices[index];\n    //\t\tvar id1:number = indices[index + 1] * posDim;\n    //\t\tvar id2:number = indices[index + 2] * posDim;\n    //\n    //\t\tvar ax:number = positions[id0 * posDim];\n    //\t\tvar ay:number = positions[id0 * posDim + 1];\n    //\t\tvar bx:number = positions[id1];\n    //\t\tvar by:number = positions[id1 + 1];\n    //\t\tvar cx:number = positions[id2];\n    //\t\tvar cy:number = positions[id2 + 1];\n    //\n    //\t\tvar curvex:number = curves[id0 * curveDim];\n    //\t\tvar az:number = positions[id0 * posDim + 2];\n    //\n    //\t\t//console.log(ax, ay, bx, by, cx, cy);\n    //\n    //\t\t//from a to p\n    //\t\tvar dx:number = ax - p.x;\n    //\t\tvar dy:number = ay - p.y;\n    //\n    //\t\t//edge normal (a-b)\n    //\t\tvar nx:number = by - ay;\n    //\t\tvar ny:number = -(bx - ax);\n    //\n    //\t\t//console.log(ax,ay,bx,by,cx,cy);\n    //\n    //\t\tvar dot:number = (dx * nx) + (dy * ny);\n    //\t\t//console.log(\"dot a\",dot);\n    //\t\tif (dot > 0)\n    //\t\t\tcontinue;\n    //\n    //\t\tdx = bx - p.x;\n    //\t\tdy = by - p.y;\n    //\t\tnx = cy - by;\n    //\t\tny = -(cx - bx);\n    //\n    //\t\tdot = (dx * nx) + (dy * ny);\n    //\t\t//console.log(\"dot b\",dot);\n    //\t\tif (dot > 0)\n    //\t\t\tcontinue;\n    //\n    //\t\tdx = cx - p.x;\n    //\t\tdy = cy - p.y;\n    //\t\tnx = ay - cy;\n    //\t\tny = -(ax - cx);\n    //\n    //\t\tdot = (dx * nx) + (dy * ny);\n    //\t\t//console.log(\"dot c\",dot);\n    //\t\tif (dot > 0)\n    //\t\t\tcontinue;\n    //\n    //\t\t//check if not solid\n    //\t\tif (curvex != 2) {\n    //\n    //\t\t\tvar v0x:number = bx - ax;\n    //\t\t\tvar v0y:number = by - ay;\n    //\t\t\tvar v1x:number = cx - ax;\n    //\t\t\tvar v1y:number = cy - ay;\n    //\t\t\tvar v2x:number = p.x - ax;\n    //\t\t\tvar v2y:number = p.y - ay;\n    //\n    //\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n    //\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n    //\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n    //\t\t\tvar u:number = 1 - v - w;\n    //\n    //\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n    //\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n    //\n    //\t\t\tvar d:number = uu * uu - vv;\n    //\n    //\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n    //\t\t\t\tcontinue;\n    //\t\t}\n    //\t\t//TODO optimize away this pointless check as the distance is always the same\n    //\t\t//also this stuff should only be calculated right before the return and not for each hit\n    //\t\tif (distance < shortestCollisionDistance) {\n    //\t\t\tshortestCollisionDistance = distance;\n    //\t\t\tcollisionCurveIndex = index/3;\n    //\t\t\tpickingCollision.rayEntryDistance = distance;\n    //\t\t\tpickingCollision.localPosition = p;\n    //\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\n    //\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n    //\t\t\tpickingCollision.index = index;\n    //\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\n    //\n    //\t\t\t// if not looking for best hit, first found will do...\n    //\t\t\tif (!this._findClosestCollision)\n    //\t\t\t\treturn true;\n    //\t\t}\n    //\t}\n    //\n    //\tif (collisionCurveIndex >= 0)\n    //\t\treturn true;\n    //\n    //\treturn false;\n    //}\n    /**\n     * Tests a <code>LineElements</code> object for a collision with the picking ray.\n     *\n     * @param triangleElements\n     * @param material\n     * @param pickingCollision\n     * @returns {boolean}\n     */\n    JSPickingCollider.prototype.testLineCollision = function (lineElements, material, pickingCollision, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return false;\n    };\n    return JSPickingCollider;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = JSPickingCollider;\n\n},{\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/pick/PickingCollision\":[function(require,module,exports){\n\"use strict\";\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollision\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollision\n */\nvar PickingCollision = (function () {\n    /**\n     * Creates a new <code>PickingCollision</code> object.\n     *\n     * @param entity The entity to which this collision object belongs.\n     */\n    function PickingCollision(entity) {\n        this.entity = entity;\n    }\n    return PickingCollision;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PickingCollision;\n\n},{}],\"awayjs-display/lib/pick/RaycastPicker\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nvar RaycastPicker = (function () {\n    /**\n     * Creates a new <code>RaycastPicker</code> object.\n     *\n     * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n     * or simply returns the first collision encountered. Defaults to false.\n     */\n    function RaycastPicker(findClosestCollision) {\n        if (findClosestCollision === void 0) { findClosestCollision = false; }\n        this._entities = new Array();\n        /**\n         * @inheritDoc\n         */\n        this.onlyMouseEnabled = true;\n        this._findClosestCollision = findClosestCollision;\n    }\n    /**\n     * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n     *\n     * @param node The Partition3DNode object to frustum-test.\n     */\n    RaycastPicker.prototype.enterNode = function (node) {\n        return node.isIntersectingRay(this._rayPosition, this._rayDirection);\n    };\n    /**\n     * @inheritDoc\n     */\n    RaycastPicker.prototype.getViewCollision = function (x, y, view) {\n        this._x = x;\n        this._y = y;\n        this._view = view;\n        //update ray\n        var rayPosition = view.unproject(x, y, 0);\n        var rayDirection = view.unproject(x, y, 1).subtract(rayPosition);\n        return this.getSceneCollision(rayPosition, rayDirection, view.scene);\n    };\n    /**\n     * @inheritDoc\n     */\n    RaycastPicker.prototype.getSceneCollision = function (rayPosition, rayDirection, scene) {\n        this._rayPosition = rayPosition;\n        this._rayDirection = rayDirection;\n        // collect entities to test\n        scene.traversePartitions(this);\n        //early out if no collisions detected\n        if (!this._entities.length)\n            return null;\n        var collision = this.getPickingCollision();\n        //discard entities\n        this._entities.length = 0;\n        return collision;\n    };\n    //\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\n    //\t\t{\n    //\t\t\tthis._numRenderables = 0;\n    //\n    //\t\t\tvar renderable:IEntity;\n    //\t\t\tvar l:number = entities.length;\n    //\n    //\t\t\tfor (var c:number = 0; c < l; c++) {\n    //\t\t\t\trenderable = entities[c];\n    //\n    //\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n    //\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n    //\t\t\t}\n    //\n    //\t\t\treturn this.getPickingCollision(this._raycastCollector);\n    //\t\t}\n    RaycastPicker.prototype.setIgnoreList = function (entities) {\n        this._ignoredEntities = entities;\n    };\n    RaycastPicker.prototype.isIgnored = function (entity) {\n        if (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\n            return true;\n        if (this._ignoredEntities) {\n            var len = this._ignoredEntities.length;\n            for (var i = 0; i < len; i++)\n                if (this._ignoredEntities[i] == entity)\n                    return true;\n        }\n        return false;\n    };\n    RaycastPicker.prototype.sortOnNearT = function (entity1, entity2) {\n        return entity1._iPickingCollision.rayEntryDistance > entity2._iPickingCollision.rayEntryDistance ? 1 : -1;\n    };\n    RaycastPicker.prototype.getPickingCollision = function () {\n        // Sort entities from closest to furthest to reduce tests.\n        this._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n        // ---------------------------------------------------------------------\n        // Evaluate triangle collisions when needed.\n        // Replaces collision data provided by bounds collider with more precise data.\n        // ---------------------------------------------------------------------\n        this._bestCollision = null;\n        var entity;\n        var len = this._entities.length;\n        for (var i = 0; i < len; i++) {\n            entity = this._entities[i];\n            this._testCollision = entity._iPickingCollision;\n            if (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\n                this._testCollider = entity.pickingCollider;\n                if (this._testCollider) {\n                    this._testCollision.rayEntryDistance = Number.MAX_VALUE;\n                    entity._acceptTraverser(this);\n                    // If a collision exists, update the collision data and stop all checks.\n                    if (this._bestCollision && !this._findClosestCollision)\n                        break;\n                }\n                else if (!this._testCollision.rayOriginIsInsideBounds) {\n                    // A bounds collision with no picking collider stops all checks.\n                    // Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n                    // to enable the detection of a corresponsding triangle collision.\n                    // Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n                    // if it has been established that there is NO triangle collider to test\n                    this._bestCollision = this._testCollision;\n                    break;\n                }\n            }\n        }\n        if (this._bestCollision)\n            this.updatePosition(this._bestCollision);\n        return this._bestCollision;\n    };\n    RaycastPicker.prototype.updatePosition = function (pickingCollision) {\n        var collisionPos = pickingCollision.position || (pickingCollision.position = new Vector3D_1.default());\n        var rayDir = pickingCollision.rayDirection;\n        var rayPos = pickingCollision.rayPosition;\n        var t = pickingCollision.rayEntryDistance;\n        collisionPos.x = rayPos.x + t * rayDir.x;\n        collisionPos.y = rayPos.y + t * rayDir.y;\n        collisionPos.z = rayPos.z + t * rayDir.z;\n    };\n    RaycastPicker.prototype.dispose = function () {\n        //TODO\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyEntity = function (entity) {\n        if (!this.isIgnored(entity))\n            this._entities.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyRenderable = function (renderable) {\n        if (renderable._iTestCollision(this._testCollision, this._testCollider))\n            this._bestCollision = this._testCollision;\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyDirectionalLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyLightProbe = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyPointLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applySkybox = function (entity) {\n        //don't do anything here\n    };\n    return RaycastPicker;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RaycastPicker;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/pick\":[function(require,module,exports){\n\"use strict\";\nvar JSPickingCollider_1 = require(\"./pick/JSPickingCollider\");\nexports.JSPickingCollider = JSPickingCollider_1.default;\nvar PickingCollision_1 = require(\"./pick/PickingCollision\");\nexports.PickingCollision = PickingCollision_1.default;\nvar RaycastPicker_1 = require(\"./pick/RaycastPicker\");\nexports.RaycastPicker = RaycastPicker_1.default;\n\n},{\"./pick/JSPickingCollider\":\"awayjs-display/lib/pick/JSPickingCollider\",\"./pick/PickingCollision\":\"awayjs-display/lib/pick/PickingCollision\",\"./pick/RaycastPicker\":\"awayjs-display/lib/pick/RaycastPicker\"}],\"awayjs-display/lib/prefabs/PrefabBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nvar PrefabBase = (function (_super) {\n    __extends(PrefabBase, _super);\n    //\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n    /**\n     * Creates a new PrefabBase object.\n     */\n    function PrefabBase() {\n        _super.call(this);\n        this._pObjects = new Array();\n    }\n    /**\n     * Returns a display object generated from this prefab\n     */\n    PrefabBase.prototype.getNewObject = function () {\n        var object = this._pCreateObject();\n        this._pObjects.push(object);\n        return object;\n    };\n    //\t\tpublic getNewBatchObject():BatchObject\n    //\t\t{\n    //\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n    //\n    //\t\t\tthis._pBatchObjects.push(object);\n    //\n    //\t\t\treturn object;\n    //\t\t}\n    PrefabBase.prototype._pCreateObject = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    PrefabBase.prototype._iValidate = function () {\n        // To be overridden when necessary\n    };\n    return PrefabBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrefabBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A Capsule primitive sprite.\n */\nvar PrimitiveCapsulePrefab = (function (_super) {\n    __extends(PrimitiveCapsulePrefab, _super);\n    /**\n     * Creates a new Capsule object.\n     * @param radius The radius of the capsule.\n     * @param height The height of the capsule.\n     * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n     * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n     * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveCapsulePrefab(material, elementsType, radius, height, segmentsW, segmentsH, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 15; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._numVertices = 0;\n        this._radius = radius;\n        this._height = height;\n        this._segmentsW = segmentsW;\n        this._segmentsH = (segmentsH % 2 == 0) ? segmentsH + 1 : segmentsH;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"radius\", {\n        /**\n         * The radius of the capsule.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"height\", {\n        /**\n         * The height of the capsule.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"segmentsW\", {\n        /**\n         * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"segmentsH\", {\n        /**\n         * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = (value % 2 == 0) ? value + 1 : value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCapsulePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i;\n        var j;\n        var triIndex = 0;\n        var index = 0;\n        var startIndex;\n        var comp1, comp2, t1, t2;\n        var numIndices = 0;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // evaluate target number of vertices, triangles and indices\n            this._numVertices = (this._segmentsH + 1) * (this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n            numIndices = (this._segmentsH - 1) * this._segmentsW * 6; // each level has segmentH quads, each of 2 triangles\n            // need to initialize raw arrays or can be reused?\n            if (this._numVertices == triangleGraphics.numVertices) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(this._numVertices);\n                normals = triangleGraphics.normals.get(this._numVertices);\n                tangents = triangleGraphics.tangents.get(this._numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(this._numVertices * 3);\n                normals = new Float32Array(this._numVertices * 3);\n                tangents = new Float32Array(this._numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            for (j = 0; j <= this._segmentsH; ++j) {\n                var horangle = Math.PI * j / this._segmentsH;\n                var z = -this._radius * Math.cos(horangle);\n                var ringradius = this._radius * Math.sin(horangle);\n                startIndex = index;\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\n                    var x = ringradius * Math.cos(verangle);\n                    var offset = j > this._segmentsH / 2 ? this._height / 2 : -this._height / 2;\n                    var y = ringradius * Math.sin(verangle);\n                    var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\n                    var tanLen = Math.sqrt(y * y + x * x);\n                    if (this._yUp) {\n                        t1 = 0;\n                        t2 = tanLen > .007 ? x / tanLen : 0;\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        t1 = tanLen > .007 ? x / tanLen : 0;\n                        t2 = 0;\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._segmentsW) {\n                        positions[index] = positions[startIndex];\n                        positions[index + 1] = positions[startIndex + 1];\n                        positions[index + 2] = positions[startIndex + 2];\n                        normals[index] = (normals[startIndex] + (x * normLen)) * .5;\n                        normals[index + 1] = (normals[startIndex + 1] + (comp1 * normLen)) * .5;\n                        normals[index + 2] = (normals[startIndex + 2] + (comp2 * normLen)) * .5;\n                        tangents[index] = (tangents[startIndex] + (tanLen > .007 ? -y / tanLen : 1)) * .5;\n                        tangents[index + 1] = (tangents[startIndex + 1] + t1) * .5;\n                        tangents[index + 2] = (tangents[startIndex + 2] + t2) * .5;\n                    }\n                    else {\n                        // vertex\n                        positions[index] = x;\n                        positions[index + 1] = (this._yUp) ? comp1 - offset : comp1;\n                        positions[index + 2] = (this._yUp) ? comp2 : comp2 + offset;\n                        // normal\n                        normals[index] = x * normLen;\n                        normals[index + 1] = comp1 * normLen;\n                        normals[index + 2] = comp2 * normLen;\n                        // tangent\n                        tangents[index] = tanLen > .007 ? -y / tanLen : 1;\n                        tangents[index + 1] = t1;\n                        tangents[index + 2] = t2;\n                    }\n                    if (i > 0 && j > 0) {\n                        var a = (this._segmentsW + 1) * j + i;\n                        var b = (this._segmentsW + 1) * j + i - 1;\n                        var c = (this._segmentsW + 1) * (j - 1) + i - 1;\n                        var d = (this._segmentsW + 1) * (j - 1) + i;\n                        if (j == this._segmentsH) {\n                            positions[index] = positions[startIndex];\n                            positions[index + 1] = positions[startIndex + 1];\n                            positions[index + 2] = positions[startIndex + 2];\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = c;\n                            indices[triIndex++] = d;\n                        }\n                        else if (j == 1) {\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = b;\n                            indices[triIndex++] = c;\n                        }\n                        else {\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = b;\n                            indices[triIndex++] = c;\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = c;\n                            indices[triIndex++] = d;\n                        }\n                    }\n                    index += 3;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCapsulePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j;\n        var uvs;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // need to initialize raw array or can be reused?\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(this._numVertices);\n            }\n            else {\n                uvs = new Float32Array(this._numVertices * 2);\n            }\n            // current uv component index\n            var index = 0;\n            // surface\n            for (j = 0; j <= this._segmentsH; ++j) {\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    // revolution vertex\n                    uvs[index++] = (i / this._segmentsW) * this._scaleU;\n                    uvs[index++] = (j / this._segmentsH) * this._scaleV;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveCapsulePrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveCapsulePrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveConePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PrimitiveCylinderPrefab_1 = require(\"../prefabs/PrimitiveCylinderPrefab\");\n/**\n * A UV Cone primitive sprite.\n */\nvar PrimitiveConePrefab = (function (_super) {\n    __extends(PrimitiveConePrefab, _super);\n    /**\n     * Creates a new Cone object.\n     * @param radius The radius of the bottom end of the cone\n     * @param height The height of the cone\n     * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n     * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n     * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveConePrefab(material, elementsType, radius, height, segmentsW, segmentsH, closed, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (closed === void 0) { closed = true; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n    }\n    Object.defineProperty(PrimitiveConePrefab.prototype, \"radius\", {\n        /**\n         * The radius of the bottom end of the cone.\n         */\n        get: function () {\n            return this._pBottomRadius;\n        },\n        set: function (value) {\n            this._pBottomRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PrimitiveConePrefab;\n}(PrimitiveCylinderPrefab_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveConePrefab;\n\n},{\"../prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\"}],\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A Cube primitive prefab.\n */\nvar PrimitiveCubePrefab = (function (_super) {\n    __extends(PrimitiveCubePrefab, _super);\n    /**\n     * Creates a new Cube object.\n     * @param width The size of the cube along its X-axis.\n     * @param height The size of the cube along its Y-axis.\n     * @param depth The size of the cube along its Z-axis.\n     * @param segmentsW The number of segments that make up the cube along the X-axis.\n     * @param segmentsH The number of segments that make up the cube along the Y-axis.\n     * @param segmentsD The number of segments that make up the cube along the Z-axis.\n     * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n     */\n    function PrimitiveCubePrefab(material, elementsType, width, height, depth, segmentsW, segmentsH, segmentsD, tile6) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (width === void 0) { width = 100; }\n        if (height === void 0) { height = 100; }\n        if (depth === void 0) { depth = 100; }\n        if (segmentsW === void 0) { segmentsW = 1; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (segmentsD === void 0) { segmentsD = 1; }\n        if (tile6 === void 0) { tile6 = true; }\n        _super.call(this, material, elementsType);\n        this._width = width;\n        this._height = height;\n        this._depth = depth;\n        this._segmentsW = segmentsW;\n        this._segmentsH = segmentsH;\n        this._segmentsD = segmentsD;\n        this._tile6 = tile6;\n    }\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"width\", {\n        /**\n         * The size of the cube along its X-axis.\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"height\", {\n        /**\n         * The size of the cube along its Y-axis.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"depth\", {\n        /**\n         * The size of the cube along its Z-axis.\n         */\n        get: function () {\n            return this._depth;\n        },\n        set: function (value) {\n            this._depth = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"tile6\", {\n        /**\n         * The type of uv mapping to use. When false, the entire image is mapped on each face.\n         * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n         * Reading the tiles from left to right, top to bottom they represent the faces of the\n         * cube in the following order: bottom, top, back, left, front, right. This creates\n         * several shared edges (between the top, front, left and right faces) which simplifies\n         * texture painting.\n         */\n        get: function () {\n            return this._tile6;\n        },\n        set: function (value) {\n            this._tile6 = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsW\", {\n        /**\n         * The number of segments that make up the cube along the X-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsH\", {\n        /**\n         * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsD\", {\n        /**\n         * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsD;\n        },\n        set: function (value) {\n            this._segmentsD = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCubePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var tl, tr, bl, br;\n        var i, j, inc = 0;\n        var vidx, fidx; // indices\n        var hw, hh, hd; // halves\n        var dw, dh, dd; // deltas\n        var outer_pos;\n        // half cube dimensions\n        hw = this._width / 2;\n        hh = this._height / 2;\n        hd = this._depth / 2;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            var numVertices = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2;\n            var numIndices = ((this._segmentsW * this._segmentsH + this._segmentsW * this._segmentsD + this._segmentsH * this._segmentsD) * 12);\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(numVertices);\n                normals = triangleGraphics.normals.get(numVertices);\n                tangents = triangleGraphics.tangents.get(numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(numVertices * 3);\n                normals = new Float32Array(numVertices * 3);\n                tangents = new Float32Array(numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            // Segment dimensions\n            dw = this._width / this._segmentsW;\n            dh = this._height / this._segmentsH;\n            dd = this._depth / this._segmentsD;\n            for (i = 0; i <= this._segmentsW; i++) {\n                outer_pos = -hw + i * dw;\n                for (j = 0; j <= this._segmentsH; j++) {\n                    // front\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = -hd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = -1;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    // back\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = hd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = 1;\n                    tangents[vidx] = -1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i && j) {\n                        tl = 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1));\n                        tr = 2 * (i * (this._segmentsH + 1) + (j - 1));\n                        bl = tl + 2;\n                        br = tr + 2;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = bl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tr;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = br + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tl + 1;\n                    }\n                }\n            }\n            inc += 2 * (this._segmentsW + 1) * (this._segmentsH + 1);\n            for (i = 0; i <= this._segmentsW; i++) {\n                outer_pos = -hw + i * dw;\n                for (j = 0; j <= this._segmentsD; j++) {\n                    // top\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = hh;\n                    positions[vidx + 2] = -hd + j * dd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = 1;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    // bottom\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = -hh;\n                    positions[vidx + 2] = -hd + j * dd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = -1;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i && j) {\n                        tl = inc + 2 * ((i - 1) * (this._segmentsD + 1) + (j - 1));\n                        tr = inc + 2 * (i * (this._segmentsD + 1) + (j - 1));\n                        bl = tl + 2;\n                        br = tr + 2;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = bl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tr;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = br + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tl + 1;\n                    }\n                }\n            }\n            inc += 2 * (this._segmentsW + 1) * (this._segmentsD + 1);\n            for (i = 0; i <= this._segmentsD; i++) {\n                outer_pos = hd - i * dd;\n                for (j = 0; j <= this._segmentsH; j++) {\n                    // left\n                    positions[vidx] = -hw;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = outer_pos;\n                    normals[vidx] = -1;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 0;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = -1;\n                    vidx += 3;\n                    // right\n                    positions[vidx] = hw;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = outer_pos;\n                    normals[vidx] = 1;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 0;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 1;\n                    vidx += 3;\n                    if (i && j) {\n                        tl = inc + 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1));\n                        tr = inc + 2 * (i * (this._segmentsH + 1) + (j - 1));\n                        bl = tl + 2;\n                        br = tr + 2;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = bl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tr;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = br + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tl + 1;\n                    }\n                }\n            }\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n            var lineGraphics = target;\n            var numSegments = this._segmentsH * 4 + this._segmentsW * 4 + this._segmentsD * 4;\n            var thickness;\n            positions = new Float32Array(numSegments * 6);\n            thickness = new Float32Array(numSegments);\n            vidx = 0;\n            fidx = 0;\n            //front/back face\n            for (i = 0; i < this._segmentsH; ++i) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = -hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = -hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            for (i = 0; i < this._segmentsW; ++i) {\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = -hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd;\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            //left/right face\n            for (i = 0; i < this._segmentsH; ++i) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = -hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = -hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            for (i = 0; i < this._segmentsD; ++i) {\n                positions[vidx++] = hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = -hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                positions[vidx++] = -hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                thickness[fidx++] = 1;\n            }\n            //top/bottom face\n            for (i = 0; i < this._segmentsD; ++i) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                positions[vidx++] = hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                thickness[fidx++] = 1;\n                positions[vidx++] = -hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                thickness[fidx++] = 1;\n            }\n            for (i = 0; i < this._segmentsW; ++i) {\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = -hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCubePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j, index;\n        var uvs;\n        var u_tile_dim, v_tile_dim;\n        var u_tile_step, v_tile_step;\n        var tl0u, tl0v;\n        var tl1u, tl1v;\n        var du, dv;\n        var numVertices;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            numVertices = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2;\n            var triangleGraphics = target;\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n                uvs = triangleGraphics.uvs.get(numVertices);\n            }\n            else {\n                uvs = new Float32Array(numVertices * 2);\n            }\n            if (this._tile6) {\n                u_tile_dim = u_tile_step = 1 / 3;\n                v_tile_dim = v_tile_step = 1 / 2;\n            }\n            else {\n                u_tile_dim = v_tile_dim = 1;\n                u_tile_step = v_tile_step = 0;\n            }\n            // Create planes two and two, the same way that they were\n            // constructed in the buildGraphics() function. First calculate\n            // the top-left UV coordinate for both planes, and then loop\n            // over the points, calculating the UVs from these numbers.\n            // When tile6 is true, the layout is as follows:\n            //       .-----.-----.-----. (1,1)\n            //       | Bot |  T  | Bak |\n            //       |-----+-----+-----|\n            //       |  L  |  F  |  R  |\n            // (0,0)'-----'-----'-----'\n            index = 0;\n            // FRONT / BACK\n            tl0u = 1 * u_tile_step;\n            tl0v = 1 * v_tile_step;\n            tl1u = 2 * u_tile_step;\n            tl1v = 0 * v_tile_step;\n            du = u_tile_dim / this._segmentsW;\n            dv = v_tile_dim / this._segmentsH;\n            for (i = 0; i <= this._segmentsW; i++) {\n                for (j = 0; j <= this._segmentsH; j++) {\n                    uvs[index++] = (tl0u + i * du) * this._scaleU;\n                    uvs[index++] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\n                    uvs[index++] = (tl1u + (u_tile_dim - i * du)) * this._scaleU;\n                    uvs[index++] = (tl1v + (v_tile_dim - j * dv)) * this._scaleV;\n                }\n            }\n            // TOP / BOTTOM\n            tl0u = 1 * u_tile_step;\n            tl0v = 0 * v_tile_step;\n            tl1u = 0 * u_tile_step;\n            tl1v = 0 * v_tile_step;\n            du = u_tile_dim / this._segmentsW;\n            dv = v_tile_dim / this._segmentsD;\n            for (i = 0; i <= this._segmentsW; i++) {\n                for (j = 0; j <= this._segmentsD; j++) {\n                    uvs[index++] = (tl0u + i * du) * this._scaleU;\n                    uvs[index++] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\n                    uvs[index++] = (tl1u + i * du) * this._scaleU;\n                    uvs[index++] = (tl1v + j * dv) * this._scaleV;\n                }\n            }\n            // LEFT / RIGHT\n            tl0u = 0 * u_tile_step;\n            tl0v = 1 * v_tile_step;\n            tl1u = 2 * u_tile_step;\n            tl1v = 1 * v_tile_step;\n            du = u_tile_dim / this._segmentsD;\n            dv = v_tile_dim / this._segmentsH;\n            for (i = 0; i <= this._segmentsD; i++) {\n                for (j = 0; j <= this._segmentsH; j++) {\n                    uvs[index++] = (tl0u + i * du) * this._scaleU;\n                    uvs[index++] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\n                    uvs[index++] = (tl1u + (u_tile_dim - i * du)) * this._scaleU;\n                    uvs[index++] = (tl1v + (v_tile_dim - j * dv)) * this._scaleV;\n                }\n            }\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveCubePrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveCubePrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A Cylinder primitive sprite.\n */\nvar PrimitiveCylinderPrefab = (function (_super) {\n    __extends(PrimitiveCylinderPrefab, _super);\n    /**\n     * Creates a new Cylinder object.\n     * @param topRadius The radius of the top end of the cylinder.\n     * @param bottomRadius The radius of the bottom end of the cylinder\n     * @param height The radius of the bottom end of the cylinder\n     * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n     * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n     * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n     * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n     * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveCylinderPrefab(material, elementsType, topRadius, bottomRadius, height, segmentsW, segmentsH, topClosed, bottomClosed, surfaceClosed, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (topRadius === void 0) { topRadius = 50; }\n        if (bottomRadius === void 0) { bottomRadius = 50; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (topClosed === void 0) { topClosed = true; }\n        if (bottomClosed === void 0) { bottomClosed = true; }\n        if (surfaceClosed === void 0) { surfaceClosed = true; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._numVertices = 0;\n        this._topRadius = topRadius;\n        this._pBottomRadius = bottomRadius;\n        this._height = height;\n        this._pSegmentsW = segmentsW;\n        this._pSegmentsH = segmentsH;\n        this._topClosed = topClosed;\n        this._bottomClosed = bottomClosed;\n        this._surfaceClosed = surfaceClosed;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"topRadius\", {\n        /**\n         * The radius of the top end of the cylinder.\n         */\n        get: function () {\n            return this._topRadius;\n        },\n        set: function (value) {\n            this._topRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"bottomRadius\", {\n        /**\n         * The radius of the bottom end of the cylinder.\n         */\n        get: function () {\n            return this._pBottomRadius;\n        },\n        set: function (value) {\n            this._pBottomRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"height\", {\n        /**\n         * The radius of the top end of the cylinder.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"segmentsW\", {\n        /**\n         * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n         */\n        get: function () {\n            return this._pSegmentsW;\n        },\n        set: function (value) {\n            this.setSegmentsW(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PrimitiveCylinderPrefab.prototype.setSegmentsW = function (value) {\n        this._pSegmentsW = value;\n        this._pInvalidatePrimitive();\n        this._pInvalidateUVs();\n    };\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"segmentsH\", {\n        /**\n         * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n         */\n        get: function () {\n            return this._pSegmentsH;\n        },\n        set: function (value) {\n            this.setSegmentsH(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PrimitiveCylinderPrefab.prototype.setSegmentsH = function (value) {\n        this._pSegmentsH = value;\n        this._pInvalidatePrimitive();\n        this._pInvalidateUVs();\n    };\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"topClosed\", {\n        /**\n         * Defines whether the top end of the cylinder is closed (true) or open.\n         */\n        get: function () {\n            return this._topClosed;\n        },\n        set: function (value) {\n            this._topClosed = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"bottomClosed\", {\n        /**\n         * Defines whether the bottom end of the cylinder is closed (true) or open.\n         */\n        get: function () {\n            return this._bottomClosed;\n        },\n        set: function (value) {\n            this._bottomClosed = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCylinderPrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i;\n        var j;\n        var x;\n        var y;\n        var z;\n        var vidx;\n        var fidx;\n        var radius;\n        var revolutionAngle;\n        var dr;\n        var latNormElev;\n        var latNormBase;\n        var numIndices = 0;\n        var comp1;\n        var comp2;\n        var startIndex = 0;\n        var nextVertexIndex = 0;\n        var centerVertexIndex = 0;\n        var t1;\n        var t2;\n        // reset utility variables\n        this._numVertices = 0;\n        // evaluate revolution steps\n        var revolutionAngleDelta = 2 * Math.PI / this._pSegmentsW;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // evaluate target number of vertices, triangles and indices\n            if (this._surfaceClosed) {\n                this._numVertices += (this._pSegmentsH + 1) * (this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n                numIndices += this._pSegmentsH * this._pSegmentsW * 6; // each level has segmentW quads, each of 2 triangles\n            }\n            if (this._topClosed) {\n                this._numVertices += 2 * (this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n                numIndices += this._pSegmentsW * 3; // one triangle for each segment\n            }\n            if (this._bottomClosed) {\n                this._numVertices += 2 * (this._pSegmentsW + 1);\n                numIndices += this._pSegmentsW * 3;\n            }\n            // need to initialize raw arrays or can be reused?\n            if (this._numVertices == triangleGraphics.numVertices) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(this._numVertices);\n                normals = triangleGraphics.normals.get(this._numVertices);\n                tangents = triangleGraphics.tangents.get(this._numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(this._numVertices * 3);\n                normals = new Float32Array(this._numVertices * 3);\n                tangents = new Float32Array(this._numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            // top\n            if (this._topClosed && this._topRadius > 0) {\n                z = -0.5 * this._height;\n                // central vertex\n                if (this._yUp) {\n                    t1 = 1;\n                    t2 = 0;\n                    comp1 = -z;\n                    comp2 = 0;\n                }\n                else {\n                    t1 = 0;\n                    t2 = -1;\n                    comp1 = 0;\n                    comp2 = z;\n                }\n                positions[vidx] = 0;\n                positions[vidx + 1] = comp1;\n                positions[vidx + 2] = comp2;\n                normals[vidx] = 0;\n                normals[vidx + 1] = t1;\n                normals[vidx + 2] = t2;\n                tangents[vidx] = 1;\n                tangents[vidx + 1] = 0;\n                tangents[vidx + 2] = 0;\n                vidx += 3;\n                nextVertexIndex += 1;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    // revolution vertex\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = this._topRadius * Math.cos(revolutionAngle);\n                    y = this._topRadius * Math.sin(revolutionAngle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._pSegmentsW) {\n                        positions[vidx] = positions[startIndex + 3];\n                        positions[vidx + 1] = positions[startIndex + 4];\n                        positions[vidx + 2] = positions[startIndex + 5];\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                    }\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = t1;\n                    normals[vidx + 2] = t2;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i > 0) {\n                        // add triangle\n                        indices[fidx++] = nextVertexIndex - 1;\n                        indices[fidx++] = centerVertexIndex;\n                        indices[fidx++] = nextVertexIndex;\n                    }\n                    nextVertexIndex += 1;\n                }\n            }\n            // bottom\n            if (this._bottomClosed && this._pBottomRadius > 0) {\n                z = 0.5 * this._height;\n                startIndex = nextVertexIndex * 3;\n                centerVertexIndex = nextVertexIndex;\n                // central vertex\n                if (this._yUp) {\n                    t1 = -1;\n                    t2 = 0;\n                    comp1 = -z;\n                    comp2 = 0;\n                }\n                else {\n                    t1 = 0;\n                    t2 = 1;\n                    comp1 = 0;\n                    comp2 = z;\n                }\n                if (i > 0) {\n                    positions[vidx] = 0;\n                    positions[vidx + 1] = comp1;\n                    positions[vidx + 2] = comp2;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = t1;\n                    normals[vidx + 2] = t2;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                }\n                nextVertexIndex += 1;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    // revolution vertex\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = this._pBottomRadius * Math.cos(revolutionAngle);\n                    y = this._pBottomRadius * Math.sin(revolutionAngle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._pSegmentsW) {\n                        positions[vidx] = positions[startIndex + 3];\n                        positions[vidx + 1] = positions[startIndex + 4];\n                        positions[vidx + 2] = positions[startIndex + 5];\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                    }\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = t1;\n                    normals[vidx + 2] = t2;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i > 0) {\n                        // add triangle\n                        indices[fidx++] = nextVertexIndex - 1;\n                        indices[fidx++] = nextVertexIndex;\n                        indices[fidx++] = centerVertexIndex;\n                    }\n                    nextVertexIndex += 1;\n                }\n            }\n            // The normals on the lateral surface all have the same incline, i.e.\n            // the \"elevation\" component (Y or Z depending on yUp) is constant.\n            // Same principle goes for the \"base\" of these vectors, which will be\n            // calculated such that a vector [base,elev] will be a unit vector.\n            dr = (this._pBottomRadius - this._topRadius);\n            latNormElev = dr / this._height;\n            latNormBase = (latNormElev == 0) ? 1 : this._height / dr;\n            // lateral surface\n            if (this._surfaceClosed) {\n                var a;\n                var b;\n                var c;\n                var d;\n                var na0, na1, naComp1, naComp2;\n                for (j = 0; j <= this._pSegmentsH; ++j) {\n                    radius = this._topRadius - ((j / this._pSegmentsH) * (this._topRadius - this._pBottomRadius));\n                    z = -(this._height / 2) + (j / this._pSegmentsH * this._height);\n                    startIndex = nextVertexIndex * 3;\n                    for (i = 0; i <= this._pSegmentsW; ++i) {\n                        // revolution vertex\n                        revolutionAngle = i * revolutionAngleDelta;\n                        x = radius * Math.cos(revolutionAngle);\n                        y = radius * Math.sin(revolutionAngle);\n                        na0 = latNormBase * Math.cos(revolutionAngle);\n                        na1 = latNormBase * Math.sin(revolutionAngle);\n                        if (this._yUp) {\n                            t1 = 0;\n                            t2 = -na0;\n                            comp1 = -z;\n                            comp2 = y;\n                            naComp1 = latNormElev;\n                            naComp2 = na1;\n                        }\n                        else {\n                            t1 = -na0;\n                            t2 = 0;\n                            comp1 = y;\n                            comp2 = z;\n                            naComp1 = na1;\n                            naComp2 = latNormElev;\n                        }\n                        if (i == this._pSegmentsW) {\n                            positions[vidx] = positions[startIndex];\n                            positions[vidx + 1] = positions[startIndex + 1];\n                            positions[vidx + 2] = positions[startIndex + 2];\n                            normals[vidx] = na0;\n                            normals[vidx + 1] = latNormElev;\n                            normals[vidx + 2] = na1;\n                            tangents[vidx] = na1;\n                            tangents[vidx + 1] = t1;\n                            tangents[vidx + 2] = t2;\n                        }\n                        else {\n                            positions[vidx] = x;\n                            positions[vidx + 1] = comp1;\n                            positions[vidx + 2] = comp2;\n                            normals[vidx] = na0;\n                            normals[vidx + 1] = naComp1;\n                            normals[vidx + 2] = naComp2;\n                            tangents[vidx] = -na1;\n                            tangents[vidx + 1] = t1;\n                            tangents[vidx + 2] = t2;\n                        }\n                        vidx += 3;\n                        // close triangle\n                        if (i > 0 && j > 0) {\n                            a = nextVertexIndex; // current\n                            b = nextVertexIndex - 1; // previous\n                            c = b - this._pSegmentsW - 1; // previous of last level\n                            d = a - this._pSegmentsW - 1; // current of last level\n                            indices[fidx++] = a;\n                            indices[fidx++] = b;\n                            indices[fidx++] = c;\n                            indices[fidx++] = a;\n                            indices[fidx++] = c;\n                            indices[fidx++] = d;\n                        }\n                        nextVertexIndex++;\n                    }\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n            var lineGraphics = target;\n            var numSegments = this._pSegmentsH * this._pSegmentsW * 2 + this._pSegmentsW;\n            positions = new Float32Array(numSegments * 6);\n            var thickness = new Float32Array(numSegments);\n            vidx = 0;\n            fidx = 0;\n            var _radius = 50;\n            for (j = 0; j <= this._pSegmentsH; ++j) {\n                radius = this._topRadius - ((j / this._pSegmentsH) * (this._topRadius - this._pBottomRadius));\n                z = -(this._height / 2) + (j / this._pSegmentsH * this._height);\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    // revolution vertex\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = radius * Math.cos(revolutionAngle);\n                    y = radius * Math.sin(revolutionAngle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i > 0) {\n                        //horizonal lines\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                        thickness[fidx++] = 1;\n                        //vertical lines\n                        if (j > 0) {\n                            var addx = (j == 1) ? 3 - (6 * (this._pSegmentsW - i) + 12 * i) : 3 - this._pSegmentsW * 12;\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx++] = x;\n                            positions[vidx++] = comp1;\n                            positions[vidx++] = comp2;\n                            thickness[fidx++] = 1;\n                        }\n                    }\n                    //horizonal lines\n                    if (i < this._pSegmentsW) {\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                    }\n                }\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCylinderPrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i;\n        var j;\n        var x;\n        var y;\n        var revolutionAngle;\n        var uvs;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // need to initialize raw array or can be reused?\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(this._numVertices);\n            }\n            else {\n                uvs = new Float32Array(this._numVertices * 2);\n            }\n            // evaluate revolution steps\n            var revolutionAngleDelta = 2 * Math.PI / this._pSegmentsW;\n            // current uv component index\n            var index = 0;\n            // top\n            if (this._topClosed) {\n                uvs[index++] = 0.5 * this._scaleU; // central vertex\n                uvs[index++] = 0.5 * this._scaleV;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = 0.5 + 0.5 * -Math.cos(revolutionAngle);\n                    y = 0.5 + 0.5 * Math.sin(revolutionAngle);\n                    uvs[index++] = x * this._scaleU; // revolution vertex\n                    uvs[index++] = y * this._scaleV;\n                }\n            }\n            // bottom\n            if (this._bottomClosed) {\n                uvs[index++] = 0.5 * this._scaleU; // central vertex\n                uvs[index++] = 0.5 * this._scaleV;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = 0.5 + 0.5 * Math.cos(revolutionAngle);\n                    y = 0.5 + 0.5 * Math.sin(revolutionAngle);\n                    uvs[index++] = x * this._scaleU; // revolution vertex\n                    uvs[index++] = y * this._scaleV;\n                }\n            }\n            // lateral surface\n            if (this._surfaceClosed) {\n                for (j = 0; j <= this._pSegmentsH; ++j) {\n                    for (i = 0; i <= this._pSegmentsW; ++i) {\n                        // revolution vertex\n                        uvs[index++] = (i / this._pSegmentsW) * this._scaleU;\n                        uvs[index++] = (j / this._pSegmentsH) * this._scaleV;\n                    }\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveCylinderPrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveCylinderPrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A Plane primitive sprite.\n */\nvar PrimitivePlanePrefab = (function (_super) {\n    __extends(PrimitivePlanePrefab, _super);\n    /**\n     * Creates a new Plane object.\n     * @param width The width of the plane.\n     * @param height The height of the plane.\n     * @param segmentsW The number of segments that make up the plane along the X-axis.\n     * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n     * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n     * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n     */\n    function PrimitivePlanePrefab(material, elementsType, width, height, segmentsW, segmentsH, yUp, doubleSided) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (width === void 0) { width = 100; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 1; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (yUp === void 0) { yUp = true; }\n        if (doubleSided === void 0) { doubleSided = false; }\n        _super.call(this, material, elementsType);\n        this._segmentsW = segmentsW;\n        this._segmentsH = segmentsH;\n        this._yUp = yUp;\n        this._width = width;\n        this._height = height;\n        this._doubleSided = doubleSided;\n    }\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"segmentsW\", {\n        /**\n         * The number of segments that make up the plane along the X-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"segmentsH\", {\n        /**\n         * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n         * false, respectively. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"yUp\", {\n        /**\n         *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"doubleSided\", {\n        /**\n         * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n         */\n        get: function () {\n            return this._doubleSided;\n        },\n        set: function (value) {\n            this._doubleSided = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"width\", {\n        /**\n         * The width of the plane.\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"height\", {\n        /**\n         * The height of the plane.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitivePlanePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var x, y;\n        var numIndices;\n        var base;\n        var tw = this._segmentsW + 1;\n        var vidx, fidx; // indices\n        var xi;\n        var yi;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            var numVertices = (this._segmentsH + 1) * tw;\n            var positions;\n            var normals;\n            var tangents;\n            if (this._doubleSided)\n                numVertices *= 2;\n            numIndices = this._segmentsH * this._segmentsW * 6;\n            if (this._doubleSided)\n                numIndices *= 2;\n            if (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                this._pInvalidateUVs();\n            }\n            if (numVertices == triangleGraphics.numVertices) {\n                positions = triangleGraphics.positions.get(numVertices);\n                normals = triangleGraphics.normals.get(numVertices);\n                tangents = triangleGraphics.tangents.get(numVertices);\n            }\n            else {\n                positions = new Float32Array(numVertices * 3);\n                normals = new Float32Array(numVertices * 3);\n                tangents = new Float32Array(numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            fidx = 0;\n            vidx = 0;\n            for (yi = 0; yi <= this._segmentsH; ++yi) {\n                for (xi = 0; xi <= this._segmentsW; ++xi) {\n                    x = (xi / this._segmentsW - .5) * this._width;\n                    y = (yi / this._segmentsH - .5) * this._height;\n                    positions[vidx] = x;\n                    if (this._yUp) {\n                        positions[vidx + 1] = 0;\n                        positions[vidx + 2] = y;\n                    }\n                    else {\n                        positions[vidx + 1] = y;\n                        positions[vidx + 2] = 0;\n                    }\n                    normals[vidx] = 0;\n                    if (this._yUp) {\n                        normals[vidx + 1] = 1;\n                        normals[vidx + 2] = 0;\n                    }\n                    else {\n                        normals[vidx + 1] = 0;\n                        normals[vidx + 2] = -1;\n                    }\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    // add vertex with same position, but with inverted normal & tangent\n                    if (this._doubleSided) {\n                        for (var i = vidx; i < vidx + 3; ++i) {\n                            positions[i] = positions[i - 3];\n                            normals[i] = -normals[i - 3];\n                            tangents[i] = -tangents[i - 3];\n                        }\n                        vidx += 3;\n                    }\n                    if (xi != this._segmentsW && yi != this._segmentsH) {\n                        base = xi + yi * tw;\n                        var mult = this._doubleSided ? 2 : 1;\n                        indices[fidx++] = base * mult;\n                        indices[fidx++] = (base + tw) * mult;\n                        indices[fidx++] = (base + tw + 1) * mult;\n                        indices[fidx++] = base * mult;\n                        indices[fidx++] = (base + tw + 1) * mult;\n                        indices[fidx++] = (base + 1) * mult;\n                        if (this._doubleSided) {\n                            indices[fidx++] = (base + tw + 1) * mult + 1;\n                            indices[fidx++] = (base + tw) * mult + 1;\n                            indices[fidx++] = base * mult + 1;\n                            indices[fidx++] = (base + 1) * mult + 1;\n                            indices[fidx++] = (base + tw + 1) * mult + 1;\n                            indices[fidx++] = base * mult + 1;\n                        }\n                    }\n                }\n            }\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n            var lineGraphics = target;\n            var numSegments = (this._segmentsH + 1) + tw;\n            var positions;\n            var thickness;\n            var hw = this._width / 2;\n            var hh = this._height / 2;\n            positions = new Float32Array(numSegments * 6);\n            thickness = new Float32Array(numSegments);\n            fidx = 0;\n            vidx = 0;\n            for (yi = 0; yi <= this._segmentsH; ++yi) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = yi * this._height - hh;\n                positions[vidx++] = hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = yi * this._height - hh;\n                thickness[fidx++] = 1;\n            }\n            for (xi = 0; xi <= this._segmentsW; ++xi) {\n                positions[vidx++] = xi * this._width - hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = -hh;\n                positions[vidx++] = xi * this._width - hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = hh;\n                thickness[fidx++] = 1;\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitivePlanePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var uvs;\n        var numVertices;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n            if (this._doubleSided)\n                numVertices *= 2;\n            var triangleGraphics = target;\n            if (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(numVertices);\n            }\n            else {\n                uvs = new Float32Array(numVertices * 2);\n                this._pInvalidatePrimitive();\n            }\n            var index = 0;\n            for (var yi = 0; yi <= this._segmentsH; ++yi) {\n                for (var xi = 0; xi <= this._segmentsW; ++xi) {\n                    uvs[index] = (xi / this._segmentsW) * this._scaleU;\n                    uvs[index + 1] = (1 - yi / this._segmentsH) * this._scaleV;\n                    index += 2;\n                    if (this._doubleSided) {\n                        uvs[index] = (xi / this._segmentsW) * this._scaleU;\n                        uvs[index + 1] = (1 - yi / this._segmentsH) * this._scaleV;\n                        index += 2;\n                    }\n                }\n            }\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitivePlanePrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitivePlanePrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PrimitiveCylinderPrefab_1 = require(\"../prefabs/PrimitiveCylinderPrefab\");\n/**\n * A UV RegularPolygon primitive sprite.\n */\nvar PrimitivePolygonPrefab = (function (_super) {\n    __extends(PrimitivePolygonPrefab, _super);\n    /**\n     * Creates a new RegularPolygon disc object.\n     * @param radius The radius of the regular polygon\n     * @param sides Defines the number of sides of the regular polygon.\n     * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitivePolygonPrefab(material, elementsType, radius, sides, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 100; }\n        if (sides === void 0) { sides = 16; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n    }\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"radius\", {\n        /**\n         * The radius of the regular polygon.\n         */\n        get: function () {\n            return this._pBottomRadius;\n        },\n        set: function (value) {\n            this._pBottomRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"sides\", {\n        /**\n         * The number of sides of the regular polygon.\n         */\n        get: function () {\n            return this._pSegmentsW;\n        },\n        set: function (value) {\n            this.setSegmentsW(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"subdivisions\", {\n        /**\n         * The number of subdivisions from the edge to the center of the regular polygon.\n         */\n        get: function () {\n            return this._pSegmentsH;\n        },\n        set: function (value) {\n            this.setSegmentsH(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PrimitivePolygonPrefab;\n}(PrimitiveCylinderPrefab_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitivePolygonPrefab;\n\n},{\"../prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\"}],\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\nvar LineElements_1 = require(\"../graphics/LineElements\");\nvar Sprite_1 = require(\"../display/Sprite\");\nvar PrefabBase_1 = require(\"../prefabs/PrefabBase\");\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nvar PrimitivePrefabBase = (function (_super) {\n    __extends(PrimitivePrefabBase, _super);\n    /**\n     * Creates a new PrimitivePrefabBase object.\n     *\n     * @param material The material with which to render the object\n     */\n    function PrimitivePrefabBase(material, elementsType) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        _super.call(this);\n        this._primitiveDirty = true;\n        this._uvDirty = true;\n        this._scaleU = 1;\n        this._scaleV = 1;\n        this._material = material;\n        this._elementsType = elementsType;\n        if (this._elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleElements = new TriangleElements_1.default(new AttributesBuffer_1.default());\n            triangleElements.autoDeriveNormals = false;\n            triangleElements.autoDeriveTangents = false;\n            this._elements = triangleElements;\n        }\n        else if (this._elementsType == ElementsType_1.default.LINE) {\n            this._elements = new LineElements_1.default(new AttributesBuffer_1.default());\n        }\n    }\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return PrimitivePrefabBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"elementsType\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._elementsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"material\", {\n        /**\n         * The material with which to render the primitive.\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (value == this._material)\n                return;\n            this._material = value;\n            var len = this._pObjects.length;\n            for (var i = 0; i < len; i++)\n                this._pObjects[i].material = this._material;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"scaleU\", {\n        get: function () {\n            return this._scaleU;\n        },\n        set: function (value) {\n            if (this._scaleU = value)\n                return;\n            this._scaleU = value;\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"scaleV\", {\n        get: function () {\n            return this._scaleV;\n        },\n        set: function (value) {\n            if (this._scaleV = value)\n                return;\n            this._scaleV = value;\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n     * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n     */\n    PrimitivePrefabBase.prototype._pBuildGraphics = function (target, elementsType) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n     * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n     */\n    PrimitivePrefabBase.prototype._pBuildUVs = function (target, elementsType) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Invalidates the primitive, causing it to be updated when requested.\n     */\n    PrimitivePrefabBase.prototype._pInvalidatePrimitive = function () {\n        this._primitiveDirty = true;\n    };\n    /**\n     * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n     */\n    PrimitivePrefabBase.prototype._pInvalidateUVs = function () {\n        this._uvDirty = true;\n    };\n    /**\n     * Updates the geometry when invalid.\n     */\n    PrimitivePrefabBase.prototype.updateGraphics = function () {\n        this._pBuildGraphics(this._elements, this._elementsType);\n        this._primitiveDirty = false;\n    };\n    /**\n     * Updates the uv coordinates when invalid.\n     */\n    PrimitivePrefabBase.prototype.updateUVs = function () {\n        this._pBuildUVs(this._elements, this._elementsType);\n        this._uvDirty = false;\n    };\n    PrimitivePrefabBase.prototype._iValidate = function () {\n        if (this._primitiveDirty)\n            this.updateGraphics();\n        if (this._uvDirty)\n            this.updateUVs();\n    };\n    PrimitivePrefabBase.prototype._pCreateObject = function () {\n        var sprite = new Sprite_1.default(this._material);\n        sprite.graphics.addGraphic(this._elements);\n        sprite._iSourcePrefab = this;\n        return sprite;\n    };\n    PrimitivePrefabBase.assetType = \"[asset PrimitivePrefab]\";\n    return PrimitivePrefabBase;\n}(PrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitivePrefabBase;\n\n},{\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../prefabs/PrefabBase\":\"awayjs-display/lib/prefabs/PrefabBase\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A UV Sphere primitive sprite.\n */\nvar PrimitiveSpherePrefab = (function (_super) {\n    __extends(PrimitiveSpherePrefab, _super);\n    /**\n     * Creates a new Sphere object.\n     *\n     * @param radius The radius of the sphere.\n     * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n     * @param segmentsH Defines the number of vertical segments that make up the sphere.\n     * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveSpherePrefab(material, elementsType, radius, segmentsW, segmentsH, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 12; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._radius = radius;\n        this._segmentsW = segmentsW;\n        this._segmentsH = segmentsH;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"radius\", {\n        /**\n         * The radius of the sphere.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"segmentsW\", {\n        /**\n         * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"segmentsH\", {\n        /**\n         * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveSpherePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i;\n        var j;\n        var vidx, fidx; // indices\n        var comp1;\n        var comp2;\n        var numVertices;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(numVertices);\n                normals = triangleGraphics.normals.get(numVertices);\n                tangents = triangleGraphics.tangents.get(numVertices);\n            }\n            else {\n                indices = new Uint16Array((this._segmentsH - 1) * this._segmentsW * 6);\n                positions = new Float32Array(numVertices * 3);\n                normals = new Float32Array(numVertices * 3);\n                tangents = new Float32Array(numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            var startIndex;\n            var t1;\n            var t2;\n            for (j = 0; j <= this._segmentsH; ++j) {\n                startIndex = vidx;\n                var horangle = Math.PI * j / this._segmentsH;\n                var z = -this._radius * Math.cos(horangle);\n                var ringradius = this._radius * Math.sin(horangle);\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\n                    var x = ringradius * Math.cos(verangle);\n                    var y = ringradius * Math.sin(verangle);\n                    var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\n                    var tanLen = Math.sqrt(y * y + x * x);\n                    if (this._yUp) {\n                        t1 = 0;\n                        t2 = tanLen > .007 ? x / tanLen : 0;\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        t1 = tanLen > .007 ? x / tanLen : 0;\n                        t2 = 0;\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._segmentsW) {\n                        positions[vidx] = positions[startIndex];\n                        positions[vidx + 1] = positions[startIndex + 1];\n                        positions[vidx + 2] = positions[startIndex + 2];\n                        normals[vidx] = normals[startIndex] + (x * normLen) * .5;\n                        normals[vidx + 1] = normals[startIndex + 1] + (comp1 * normLen) * .5;\n                        normals[vidx + 2] = normals[startIndex + 2] + (comp2 * normLen) * .5;\n                        tangents[vidx] = tanLen > .007 ? -y / tanLen : 1;\n                        tangents[vidx + 1] = t1;\n                        tangents[vidx + 2] = t2;\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                        normals[vidx] = x * normLen;\n                        normals[vidx + 1] = comp1 * normLen;\n                        normals[vidx + 2] = comp2 * normLen;\n                        tangents[vidx] = tanLen > .007 ? -y / tanLen : 1;\n                        tangents[vidx + 1] = t1;\n                        tangents[vidx + 2] = t2;\n                    }\n                    if (i > 0 && j > 0) {\n                        var a = (this._segmentsW + 1) * j + i;\n                        var b = (this._segmentsW + 1) * j + i - 1;\n                        var c = (this._segmentsW + 1) * (j - 1) + i - 1;\n                        var d = (this._segmentsW + 1) * (j - 1) + i;\n                        if (j == this._segmentsH) {\n                            positions[vidx] = positions[startIndex];\n                            positions[vidx + 1] = positions[startIndex + 1];\n                            positions[vidx + 2] = positions[startIndex + 2];\n                            indices[fidx++] = a;\n                            indices[fidx++] = c;\n                            indices[fidx++] = d;\n                        }\n                        else if (j == 1) {\n                            indices[fidx++] = a;\n                            indices[fidx++] = b;\n                            indices[fidx++] = c;\n                        }\n                        else {\n                            indices[fidx++] = a;\n                            indices[fidx++] = b;\n                            indices[fidx++] = c;\n                            indices[fidx++] = a;\n                            indices[fidx++] = c;\n                            indices[fidx++] = d;\n                        }\n                    }\n                    vidx += 3;\n                }\n            }\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n            var lineGraphics = target;\n            var numSegments = this._segmentsH * this._segmentsW * 2 + this._segmentsW;\n            var positions = new Float32Array(numSegments * 6);\n            var thickness = new Float32Array(numSegments);\n            vidx = 0;\n            fidx = 0;\n            for (j = 0; j <= this._segmentsH; ++j) {\n                var horangle = Math.PI * j / this._segmentsH;\n                var z = -this._radius * Math.cos(horangle);\n                var ringradius = this._radius * Math.sin(horangle);\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\n                    var x = ringradius * Math.cos(verangle);\n                    var y = ringradius * Math.sin(verangle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i > 0) {\n                        //horizonal lines\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                        thickness[fidx++] = 1;\n                        //vertical lines\n                        if (j > 0) {\n                            var addx = (j == 1) ? 3 - (6 * (this._segmentsW - i) + 12 * i) : 3 - this._segmentsW * 12;\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx++] = x;\n                            positions[vidx++] = comp1;\n                            positions[vidx++] = comp2;\n                            thickness[fidx++] = 1;\n                        }\n                    }\n                    //horizonal lines\n                    if (i < this._segmentsW) {\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                    }\n                }\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveSpherePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j;\n        var numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n        var uvs;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n            var triangleGraphics = target;\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n                uvs = triangleGraphics.uvs.get(numVertices);\n            }\n            else {\n                uvs = new Float32Array(numVertices * 2);\n            }\n            var index = 0;\n            for (j = 0; j <= this._segmentsH; ++j) {\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    uvs[index++] = (i / this._segmentsW) * this._scaleU;\n                    uvs[index++] = (j / this._segmentsH) * this._scaleV;\n                }\n            }\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveSpherePrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveSpherePrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A UV Cylinder primitive sprite.\n */\nvar PrimitiveTorusPrefab = (function (_super) {\n    __extends(PrimitiveTorusPrefab, _super);\n    /**\n     * Creates a new <code>Torus</code> object.\n     * @param radius The radius of the torus.\n     * @param tuebRadius The radius of the inner tube of the torus.\n     * @param segmentsR Defines the number of horizontal segments that make up the torus.\n     * @param segmentsT Defines the number of vertical segments that make up the torus.\n     * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveTorusPrefab(material, elementsType, radius, tubeRadius, segmentsR, segmentsT, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (tubeRadius === void 0) { tubeRadius = 50; }\n        if (segmentsR === void 0) { segmentsR = 16; }\n        if (segmentsT === void 0) { segmentsT = 8; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._numVertices = 0;\n        this._radius = radius;\n        this._tubeRadius = tubeRadius;\n        this._segmentsR = segmentsR;\n        this._segmentsT = segmentsT;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"radius\", {\n        /**\n         * The radius of the torus.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"tubeRadius\", {\n        /**\n         * The radius of the inner tube of the torus.\n         */\n        get: function () {\n            return this._tubeRadius;\n        },\n        set: function (value) {\n            this._tubeRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"segmentsR\", {\n        /**\n         * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n         */\n        get: function () {\n            return this._segmentsR;\n        },\n        set: function (value) {\n            this._segmentsR = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"segmentsT\", {\n        /**\n         * Defines the number of vertical segments that make up the torus. Defaults to 8.\n         */\n        get: function () {\n            return this._segmentsT;\n        },\n        set: function (value) {\n            this._segmentsT = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveTorusPrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i, j;\n        var x, y, z, nx, ny, nz, revolutionAngleR, revolutionAngleT;\n        var vidx;\n        var fidx;\n        var numIndices = 0;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // evaluate target number of vertices, triangles and indices\n            this._numVertices = (this._segmentsT + 1) * (this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n            numIndices = this._segmentsT * this._segmentsR * 6; // each level has segmentR quads, each of 2 triangles\n            // need to initialize raw arrays or can be reused?\n            if (this._numVertices == triangleGraphics.numVertices) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(this._numVertices);\n                normals = triangleGraphics.normals.get(this._numVertices);\n                tangents = triangleGraphics.tangents.get(this._numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(this._numVertices * 3);\n                normals = new Float32Array(this._numVertices * 3);\n                tangents = new Float32Array(this._numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            // evaluate revolution steps\n            var revolutionAngleDeltaR = 2 * Math.PI / this._segmentsR;\n            var revolutionAngleDeltaT = 2 * Math.PI / this._segmentsT;\n            var comp1, comp2;\n            var t1, t2, n1, n2;\n            var startIndex = 0;\n            var nextVertexIndex = 0;\n            // surface\n            var a, b, c, d, length;\n            for (j = 0; j <= this._segmentsT; ++j) {\n                startIndex = nextVertexIndex * 3;\n                for (i = 0; i <= this._segmentsR; ++i) {\n                    // revolution vertex\n                    revolutionAngleR = i * revolutionAngleDeltaR;\n                    revolutionAngleT = j * revolutionAngleDeltaT;\n                    length = Math.cos(revolutionAngleT);\n                    nx = length * Math.cos(revolutionAngleR);\n                    ny = length * Math.sin(revolutionAngleR);\n                    nz = Math.sin(revolutionAngleT);\n                    x = this._radius * Math.cos(revolutionAngleR) + this._tubeRadius * nx;\n                    y = this._radius * Math.sin(revolutionAngleR) + this._tubeRadius * ny;\n                    z = (j == this._segmentsT) ? 0 : this._tubeRadius * nz;\n                    if (this._yUp) {\n                        n1 = -nz;\n                        n2 = ny;\n                        t1 = 0;\n                        t2 = (length ? nx / length : x / this._radius);\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        n1 = ny;\n                        n2 = nz;\n                        t1 = (length ? nx / length : x / this._radius);\n                        t2 = 0;\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._segmentsR) {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = positions[startIndex + 1];\n                        positions[vidx + 2] = positions[startIndex + 2];\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                    }\n                    normals[vidx] = nx;\n                    normals[vidx + 1] = n1;\n                    normals[vidx + 2] = n2;\n                    tangents[vidx] = -(length ? ny / length : y / this._radius);\n                    tangents[vidx + 1] = t1;\n                    tangents[vidx + 2] = t2;\n                    vidx += 3;\n                    // close triangle\n                    if (i > 0 && j > 0) {\n                        a = nextVertexIndex; // current\n                        b = nextVertexIndex - 1; // previous\n                        c = b - this._segmentsR - 1; // previous of last level\n                        d = a - this._segmentsR - 1; // current of last level\n                        indices[fidx++] = a;\n                        indices[fidx++] = b;\n                        indices[fidx++] = c;\n                        indices[fidx++] = a;\n                        indices[fidx++] = c;\n                        indices[fidx++] = d;\n                    }\n                    nextVertexIndex++;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveTorusPrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j;\n        var uvs;\n        if (elementsType == ElementsType_1.default.TRIANGLE) {\n            var triangleGraphics = target;\n            // need to initialize raw array or can be reused?\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(this._numVertices);\n            }\n            else {\n                uvs = new Float32Array(this._numVertices * 2);\n            }\n            // current uv component index\n            var index = 0;\n            // surface\n            for (j = 0; j <= this._segmentsT; ++j) {\n                for (i = 0; i <= this._segmentsR; ++i) {\n                    // revolution vertex\n                    uvs[index++] = (i / this._segmentsR) * this._scaleU;\n                    uvs[index++] = (j / this._segmentsT) * this._scaleV;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.default.LINE) {\n        }\n    };\n    return PrimitiveTorusPrefab;\n}(PrimitivePrefabBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PrimitiveTorusPrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs\":[function(require,module,exports){\n\"use strict\";\nvar PrefabBase_1 = require(\"./prefabs/PrefabBase\");\nexports.PrefabBase = PrefabBase_1.default;\nvar PrimitiveCapsulePrefab_1 = require(\"./prefabs/PrimitiveCapsulePrefab\");\nexports.PrimitiveCapsulePrefab = PrimitiveCapsulePrefab_1.default;\nvar PrimitiveConePrefab_1 = require(\"./prefabs/PrimitiveConePrefab\");\nexports.PrimitiveConePrefab = PrimitiveConePrefab_1.default;\nvar PrimitiveCubePrefab_1 = require(\"./prefabs/PrimitiveCubePrefab\");\nexports.PrimitiveCubePrefab = PrimitiveCubePrefab_1.default;\nvar PrimitiveCylinderPrefab_1 = require(\"./prefabs/PrimitiveCylinderPrefab\");\nexports.PrimitiveCylinderPrefab = PrimitiveCylinderPrefab_1.default;\nvar PrimitivePlanePrefab_1 = require(\"./prefabs/PrimitivePlanePrefab\");\nexports.PrimitivePlanePrefab = PrimitivePlanePrefab_1.default;\nvar PrimitivePolygonPrefab_1 = require(\"./prefabs/PrimitivePolygonPrefab\");\nexports.PrimitivePolygonPrefab = PrimitivePolygonPrefab_1.default;\nvar PrimitivePrefabBase_1 = require(\"./prefabs/PrimitivePrefabBase\");\nexports.PrimitivePrefabBase = PrimitivePrefabBase_1.default;\nvar PrimitiveSpherePrefab_1 = require(\"./prefabs/PrimitiveSpherePrefab\");\nexports.PrimitiveSpherePrefab = PrimitiveSpherePrefab_1.default;\nvar PrimitiveTorusPrefab_1 = require(\"./prefabs/PrimitiveTorusPrefab\");\nexports.PrimitiveTorusPrefab = PrimitiveTorusPrefab_1.default;\n\n},{\"./prefabs/PrefabBase\":\"awayjs-display/lib/prefabs/PrefabBase\",\"./prefabs/PrimitiveCapsulePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\",\"./prefabs/PrimitiveConePrefab\":\"awayjs-display/lib/prefabs/PrimitiveConePrefab\",\"./prefabs/PrimitiveCubePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\",\"./prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\",\"./prefabs/PrimitivePlanePrefab\":\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\",\"./prefabs/PrimitivePolygonPrefab\":\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\",\"./prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\",\"./prefabs/PrimitiveSpherePrefab\":\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\",\"./prefabs/PrimitiveTorusPrefab\":\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\"}],\"awayjs-display/lib/text/AntiAliasType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nvar AntiAliasType = (function () {\n    function AntiAliasType() {\n    }\n    /**\n     * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n     * allows font faces to be rendered at very high quality at small sizes. It\n     * is best used with applications that have a lot of small text. Advanced\n     * anti-aliasing is not recommended for very large fonts(larger than 48\n     * points). This constant is used for the <code>antiAliasType</code> property\n     * in the TextField class. Use the syntax\n     * <code>AntiAliasType.ADVANCED</code>.\n     */\n    AntiAliasType.ADVANCED = \"advanced\";\n    /**\n     * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n     * earlier. This setting is recommended for applications that do not have a\n     * lot of text. This constant is used for the <code>antiAliasType</code>\n     * property in the TextField class. Use the syntax\n     * <code>AntiAliasType.NORMAL</code>.\n     */\n    AntiAliasType.NORMAL = \"normal\";\n    return AntiAliasType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AntiAliasType;\n\n},{}],\"awayjs-display/lib/text/Font\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar TesselatedFontTable_1 = require(\"../text/TesselatedFontTable\");\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nvar Font = (function (_super) {\n    __extends(Font, _super);\n    //TODO test shader picking\n    //\t\tpublic get shaderPickingDetails():boolean\n    //\t\t{\n    //\n    //\t\t\treturn this.sourceEntity.shaderPickingDetails;\n    //\t\t}\n    /**\n     * Creates a new TesselatedFont object\n     */\n    function Font() {\n        _super.call(this);\n        this._font_styles = new Array();\n    }\n    Object.defineProperty(Font.prototype, \"font_styles\", {\n        get: function () {\n            return this._font_styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Font.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Font.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Font.prototype.dispose = function () {\n    };\n    /**\n     *Get a font-table for a specific name, or create one if it does not exists.\n     */\n    Font.prototype.get_font_table = function (style_name) {\n        var len = this._font_styles.length;\n        for (var i = 0; i < len; ++i) {\n            if (this._font_styles[i].name == style_name)\n                return this._font_styles[i];\n        }\n        var font_style = new TesselatedFontTable_1.default();\n        font_style.name = style_name;\n        this._font_styles.push(font_style);\n        return font_style;\n    };\n    Font.assetType = \"[asset Font]\";\n    return Font;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Font;\n\n},{\"../text/TesselatedFontTable\":\"awayjs-display/lib/text/TesselatedFontTable\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/GridFitType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nvar GridFitType = (function () {\n    function GridFitType() {\n    }\n    /**\n     * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n     * not forced to the pixel grid. This constant is used in setting the\n     * <code>gridFitType</code> property of the TextField class. This is often a\n     * good setting for animation or for large font sizes. Use the syntax\n     * <code>GridFitType.NONE</code>.\n     */\n    GridFitType.NONE = \"none\";\n    /**\n     * Fits strong horizontal and vertical lines to the pixel grid. This constant\n     * is used in setting the <code>gridFitType</code> property of the TextField\n     * class. This setting only works for left-justified text fields and acts\n     * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n     * setting generally provides the best readability for left-aligned text. Use\n     * the syntax <code>GridFitType.PIXEL</code>.\n     */\n    GridFitType.PIXEL = \"pixel\";\n    /**\n     * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n     * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n     * is often a good setting for right-aligned or center-aligned dynamic text,\n     * and it is sometimes a useful tradeoff for animation vs. text quality. This\n     * constant is used in setting the <code>gridFitType</code> property of the\n     * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n     */\n    GridFitType.SUBPIXEL = \"subpixel\";\n    return GridFitType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GridFitType;\n\n},{}],\"awayjs-display/lib/text/TesselatedFontChar\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nvar TesselatedFontChar = (function () {\n    function TesselatedFontChar(elements) {\n        /**\n         * the char_codes that this geom has kerning set for\n         */\n        this.kerningCharCodes = new Array();\n        /**\n         * the kerning values per char_code\n         */\n        this.kerningValues = new Array();\n        this.elements = elements;\n    }\n    return TesselatedFontChar;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TesselatedFontChar;\n\n},{}],\"awayjs-display/lib/text/TesselatedFontTable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar TesselatedFontChar_1 = require(\"../text/TesselatedFontChar\");\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nvar TesselatedFontTable = (function (_super) {\n    __extends(TesselatedFontTable, _super);\n    //TODO test shader picking\n    //\t\tpublic get shaderPickingDetails():boolean\n    //\t\t{\n    //\n    //\t\t\treturn this.sourceEntity.shaderPickingDetails;\n    //\t\t}\n    /**\n     * Creates a new TesselatedFont object\n     */\n    function TesselatedFontTable() {\n        _super.call(this);\n        this._font_chars = new Array();\n        this._font_chars_dic = new Object();\n        this._ascent = 0;\n        this._descent = 0;\n    }\n    /**\n     *\n     */\n    TesselatedFontTable.prototype.dispose = function () {\n    };\n    Object.defineProperty(TesselatedFontTable.prototype, \"ascent\", {\n        get: function () {\n            return this._ascent;\n        },\n        set: function (value) {\n            this._ascent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TesselatedFontTable.prototype, \"descent\", {\n        get: function () {\n            return this._descent;\n        },\n        set: function (value) {\n            this._descent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TesselatedFontTable.prototype, \"offset_x\", {\n        get: function () {\n            return this._offset_x;\n        },\n        set: function (value) {\n            this._offset_x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TesselatedFontTable.prototype, \"offset_y\", {\n        get: function () {\n            return this._offset_y;\n        },\n        set: function (value) {\n            this._offset_y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TesselatedFontTable.prototype.get_font_chars = function () {\n        return this._font_chars;\n    };\n    TesselatedFontTable.prototype.get_font_em_size = function () {\n        return this._font_em_size;\n    };\n    TesselatedFontTable.prototype.set_whitespace_width = function (value) {\n        this._whitespace_width = value;\n    };\n    TesselatedFontTable.prototype.get_whitespace_width = function () {\n        return this._whitespace_width;\n    };\n    TesselatedFontTable.prototype.set_font_em_size = function (font_em_size) {\n        this._font_em_size = font_em_size;\n    };\n    /**\n     *\n     */\n    TesselatedFontTable.prototype.getChar = function (name) {\n        return this._font_chars_dic[name];\n    };\n    /**\n     *\n     */\n    TesselatedFontTable.prototype.setChar = function (name, elements, char_width) {\n        var tesselated_font_char = new TesselatedFontChar_1.default(elements);\n        tesselated_font_char.char_width = char_width;\n        elements.name = name;\n        this._font_chars.push(tesselated_font_char);\n        this._font_chars_dic[name] = tesselated_font_char;\n    };\n    return TesselatedFontTable;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TesselatedFontTable;\n\n},{\"../text/TesselatedFontChar\":\"awayjs-display/lib/text/TesselatedFontChar\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/TextFieldAutoSize\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nvar TextFieldAutoSize = (function () {\n    function TextFieldAutoSize() {\n    }\n    /**\n     * Specifies that the text is to be treated as center-justified text. Any\n     * resizing of a single line of a text field is equally distributed to both\n     * the right and left sides.\n     */\n    TextFieldAutoSize.CENTER = \"center\";\n    /**\n     * Specifies that the text is to be treated as left-justified text, meaning\n     * that the left side of the text field remains fixed and any resizing of a\n     * single line is on the right side.\n     */\n    TextFieldAutoSize.LEFT = \"left\";\n    /**\n     * Specifies that no resizing is to occur.\n     */\n    TextFieldAutoSize.NONE = \"none\";\n    /**\n     * Specifies that the text is to be treated as right-justified text, meaning\n     * that the right side of the text field remains fixed and any resizing of a\n     * single line is on the left side.\n     */\n    TextFieldAutoSize.RIGHT = \"right\";\n    return TextFieldAutoSize;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextFieldAutoSize;\n\n},{}],\"awayjs-display/lib/text/TextFieldType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nvar TextFieldType = (function () {\n    function TextFieldType() {\n    }\n    /**\n     * Used to specify a <code>dynamic</code> TextField.\n     */\n    TextFieldType.DYNAMIC = \"dynamic\";\n    /**\n     * Used to specify an <code>input</code> TextField.\n     */\n    TextFieldType.INPUT = \"input\";\n    /**\n     * Used to specify an <code>static</code> TextField.\n     */\n    TextFieldType.STATIC = \"input\";\n    return TextFieldType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextFieldType;\n\n},{}],\"awayjs-display/lib/text/TextFormatAlign\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nvar TextFormatAlign = (function () {\n    function TextFormatAlign() {\n        /**\n         * Constant; centers the text in the text field. Use the syntax\n         * <code>TextFormatAlign.CENTER</code>.\n         */\n        this.CENTER = \"center\";\n        /**\n         * Constant; justifies text within the text field. Use the syntax\n         * <code>TextFormatAlign.JUSTIFY</code>.\n         */\n        this.JUSTIFY = \"justify\";\n        /**\n         * Constant; aligns text to the left within the text field. Use the syntax\n         * <code>TextFormatAlign.LEFT</code>.\n         */\n        this.LEFT = \"left\";\n        /**\n         * Constant; aligns text to the right within the text field. Use the syntax\n         * <code>TextFormatAlign.RIGHT</code>.\n         */\n        this.RIGHT = \"right\";\n    }\n    return TextFormatAlign;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextFormatAlign;\n\n},{}],\"awayjs-display/lib/text/TextFormat\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nvar TextFormat = (function (_super) {\n    __extends(TextFormat, _super);\n    /**\n     * Creates a TextFormat object with the specified properties. You can then\n     * change the properties of the TextFormat object to change the formatting of\n     * text fields.\n     *\n     * <p>Any parameter may be set to <code>null</code> to indicate that it is\n     * not defined. All of the parameters are optional; any omitted parameters\n     * are treated as <code>null</code>.</p>\n     *\n     * @param font        The name of a font for text as a string.\n     * @param size        An integer that indicates the size in pixels.\n     * @param color       The color of text using this text format. A number\n     *                    containing three 8-bit RGB components; for example,\n     *                    0xFF0000 is red, and 0x00FF00 is green.\n     * @param bold        A Boolean value that indicates whether the text is\n     *                    boldface.\n     * @param italic      A Boolean value that indicates whether the text is\n     *                    italicized.\n     * @param underline   A Boolean value that indicates whether the text is\n     *                    underlined.\n     * @param url         The URL to which the text in this text format\n     *                    hyperlinks. If <code>url</code> is an empty string, the\n     *                    text does not have a hyperlink.\n     * @param target      The target window where the hyperlink is displayed. If\n     *                    the target window is an empty string, the text is\n     *                    displayed in the default target window\n     *                    <code>_self</code>. If the <code>url</code> parameter\n     *                    is set to an empty string or to the value\n     *                    <code>null</code>, you can get or set this property,\n     *                    but the property will have no effect.\n     * @param align       The alignment of the paragraph, as a TextFormatAlign\n     *                    value.\n     * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n     * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n     * @param indent      An integer that indicates the indentation from the left\n     *                    margin to the first character in the paragraph.\n     * @param leading     A number that indicates the amount of leading vertical\n     *                    space between lines.\n     */\n    function TextFormat(font, size, color, bold, italic, underline, url, link_target, align, leftMargin, rightMargin, indent, leading) {\n        if (font === void 0) { font = \"Times New Roman\"; }\n        if (size === void 0) { size = 12; }\n        if (color === void 0) { color = 0x000000; }\n        if (bold === void 0) { bold = false; }\n        if (italic === void 0) { italic = false; }\n        if (underline === void 0) { underline = false; }\n        if (url === void 0) { url = \"\"; }\n        if (link_target === void 0) { link_target = \"\"; }\n        if (align === void 0) { align = \"left\"; }\n        if (leftMargin === void 0) { leftMargin = 0; }\n        if (rightMargin === void 0) { rightMargin = 0; }\n        if (indent === void 0) { indent = 0; }\n        if (leading === void 0) { leading = 0; }\n        _super.call(this);\n        /**\n         * Specifies custom tab stops as an array of non-negative integers. Each tab\n         * stop is specified in pixels. If custom tab stops are not specified\n         * (<code>null</code>), the default tab stop is 4(average character width).\n         */\n        //todo: not used with in tesselated-font-table yet\n        this.tabStops = new Array();\n        this.font_name = font;\n        this.size = size;\n        this.bold = bold;\n        this.italic = italic;\n        this.underline = underline;\n        this.url = url;\n        this.link_target = link_target;\n        this.align = align;\n        this.leftMargin = leftMargin;\n        this.rightMargin = rightMargin;\n        this.indent = indent;\n        this.leading = leading;\n    }\n    Object.defineProperty(TextFormat.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return TextFormat.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextFormat.assetType = \"[asset TextFormat]\";\n    return TextFormat;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextFormat;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/TextInteractionMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nvar TextInteractionMode = (function () {\n    function TextInteractionMode() {\n    }\n    /**\n     * The text field's default interaction mode is NORMAL and it varies across\n     * platform. On Desktop, the normal mode implies that the text field is in\n     * scrollable + selection mode. On Mobile platforms like Android, normal mode\n     * implies that the text field can only be scrolled but the text can not be\n     * selected.\n     */\n    TextInteractionMode.NORMAL = \"normal\";\n    /**\n     * On mobile platforms like Android, the text field starts in normal mode\n     * (which implies scroll and non-selectable mode). The user can switch to\n     * selection mode through the in-built context menu of the text field object.\n     */\n    TextInteractionMode.SELECTION = \"selection\";\n    return TextInteractionMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextInteractionMode;\n\n},{}],\"awayjs-display/lib/text/TextLineMetrics\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the\n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nvar TextLineMetrics = (function () {\n    /**\n     * Creates a TextLineMetrics object. The TextLineMetrics object contains\n     * information about the text metrics of a line of text in a text field.\n     * Objects of this class are returned by the\n     * away.entities.TextField.getLineMetrics() method.\n     *\n     * @param x           The left position of the first character in pixels.\n     * @param width       The width of the text of the selected lines (not\n     *                    necessarily the complete text) in pixels.\n     * @param height      The height of the text of the selected lines (not\n     *                    necessarily the complete text) in pixels.\n     * @param ascent      The length from the baseline to the top of the line\n     *                    height in pixels.\n     * @param descent     The length from the baseline to the bottom depth of\n     *                    the line in pixels.\n     * @param leading     The measurement of the vertical distance between the\n     *                    lines of text.\n     */\n    function TextLineMetrics(x, width, height, ascent, descent, leading) {\n        if (x === void 0) { x = NaN; }\n        if (width === void 0) { width = NaN; }\n        if (height === void 0) { height = NaN; }\n        if (ascent === void 0) { ascent = NaN; }\n        if (descent === void 0) { descent = NaN; }\n        if (leading === void 0) { leading = NaN; }\n    }\n    return TextLineMetrics;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextLineMetrics;\n\n},{}],\"awayjs-display/lib/text\":[function(require,module,exports){\n\"use strict\";\nvar AntiAliasType_1 = require(\"./text/AntiAliasType\");\nexports.AntiAliasType = AntiAliasType_1.default;\nvar Font_1 = require(\"./text/Font\");\nexports.Font = Font_1.default;\nvar GridFitType_1 = require(\"./text/GridFitType\");\nexports.GridFitType = GridFitType_1.default;\nvar TesselatedFontChar_1 = require(\"./text/TesselatedFontChar\");\nexports.TesselatedFontChar = TesselatedFontChar_1.default;\nvar TesselatedFontTable_1 = require(\"./text/TesselatedFontTable\");\nexports.TesselatedFontTable = TesselatedFontTable_1.default;\nvar TextFieldAutoSize_1 = require(\"./text/TextFieldAutoSize\");\nexports.TextFieldAutoSize = TextFieldAutoSize_1.default;\nvar TextFieldType_1 = require(\"./text/TextFieldType\");\nexports.TextFieldType = TextFieldType_1.default;\nvar TextFormat_1 = require(\"./text/TextFormat\");\nexports.TextFormat = TextFormat_1.default;\nvar TextFormatAlign_1 = require(\"./text/TextFormatAlign\");\nexports.TextFormatAlign = TextFormatAlign_1.default;\nvar TextInteractionMode_1 = require(\"./text/TextInteractionMode\");\nexports.TextInteractionMode = TextInteractionMode_1.default;\nvar TextLineMetrics_1 = require(\"./text/TextLineMetrics\");\nexports.TextLineMetrics = TextLineMetrics_1.default;\n\n},{\"./text/AntiAliasType\":\"awayjs-display/lib/text/AntiAliasType\",\"./text/Font\":\"awayjs-display/lib/text/Font\",\"./text/GridFitType\":\"awayjs-display/lib/text/GridFitType\",\"./text/TesselatedFontChar\":\"awayjs-display/lib/text/TesselatedFontChar\",\"./text/TesselatedFontTable\":\"awayjs-display/lib/text/TesselatedFontTable\",\"./text/TextFieldAutoSize\":\"awayjs-display/lib/text/TextFieldAutoSize\",\"./text/TextFieldType\":\"awayjs-display/lib/text/TextFieldType\",\"./text/TextFormat\":\"awayjs-display/lib/text/TextFormat\",\"./text/TextFormatAlign\":\"awayjs-display/lib/text/TextFormatAlign\",\"./text/TextInteractionMode\":\"awayjs-display/lib/text/TextInteractionMode\",\"./text/TextLineMetrics\":\"awayjs-display/lib/text/TextLineMetrics\"}],\"awayjs-display/lib/textures/MappingMode\":[function(require,module,exports){\n\"use strict\";\n/**\n\n\n */\nvar MappingMode = (function () {\n    function MappingMode() {\n    }\n    /**\n     *\n     */\n    MappingMode.NORMAL = \"normal\";\n    /**\n     *\n     */\n    MappingMode.LINEAR_GRADIENT = \"linearGradient\";\n    /**\n     *\n     */\n    MappingMode.RADIAL_GRADIENT = \"radialGradient\";\n    return MappingMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MappingMode;\n\n},{}],\"awayjs-display/lib/textures/Single2DTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar MappingMode_1 = require(\"../textures/MappingMode\");\nvar TextureBase_1 = require(\"../textures/TextureBase\");\nvar Single2DTexture = (function (_super) {\n    __extends(Single2DTexture, _super);\n    function Single2DTexture(image2D) {\n        if (image2D === void 0) { image2D = null; }\n        _super.call(this);\n        this.setNumImages(1);\n        this.image2D = image2D;\n        this._mappingMode = MappingMode_1.default.NORMAL;\n    }\n    Object.defineProperty(Single2DTexture.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Single2DTexture.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Single2DTexture.prototype, \"mappingMode\", {\n        get: function () {\n            return this._mappingMode;\n        },\n        set: function (value) {\n            if (this._mappingMode == value)\n                return;\n            this._mappingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Single2DTexture.prototype, \"sampler2D\", {\n        /**\n         *\n         * @returns {Image2D}\n         */\n        get: function () {\n            return this._samplers[0];\n        },\n        set: function (value) {\n            if (this._samplers[0] == value)\n                return;\n            this.setSamplerAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Single2DTexture.prototype, \"image2D\", {\n        /**\n         *\n         * @returns {Image2D}\n         */\n        get: function () {\n            return this._images[0];\n        },\n        set: function (value) {\n            if (this._images[0] == value)\n                return;\n            if (!ImageUtils_1.default.isImage2DValid(value))\n                throw new ErrorBase_1.default(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n            this.setImageAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Single2DTexture.assetType = \"[texture Single2DTexture]\";\n    return Single2DTexture;\n}(TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Single2DTexture;\n\n},{\"../textures/MappingMode\":\"awayjs-display/lib/textures/MappingMode\",\"../textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\",\"awayjs-core/lib/errors/ErrorBase\":undefined,\"awayjs-core/lib/utils/ImageUtils\":undefined}],\"awayjs-display/lib/textures/SingleCubeTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TextureBase_1 = require(\"../textures/TextureBase\");\nvar SingleCubeTexture = (function (_super) {\n    __extends(SingleCubeTexture, _super);\n    function SingleCubeTexture(imageCube) {\n        if (imageCube === void 0) { imageCube = null; }\n        _super.call(this);\n        this.setNumImages(1);\n        this.imageCube = imageCube;\n    }\n    Object.defineProperty(SingleCubeTexture.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return SingleCubeTexture.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SingleCubeTexture.prototype, \"samplerCube\", {\n        /**\n         *\n         * @returns {Image2D}\n         */\n        get: function () {\n            return this._samplers[0];\n        },\n        set: function (value) {\n            if (this._samplers[0] == value)\n                return;\n            this.setSamplerAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SingleCubeTexture.prototype, \"imageCube\", {\n        /**\n         *\n         * @returns {ImageCube}\n         */\n        get: function () {\n            return this._images[0];\n        },\n        set: function (value) {\n            if (this._images[0] == value)\n                return;\n            this.setImageAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SingleCubeTexture.assetType = \"[texture SingleCubeTexture]\";\n    return SingleCubeTexture;\n}(TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SingleCubeTexture;\n\n},{\"../textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\"}],\"awayjs-display/lib/textures/TextureBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n *\n */\nvar TextureBase = (function (_super) {\n    __extends(TextureBase, _super);\n    /**\n     *\n     */\n    function TextureBase() {\n        _super.call(this);\n        this._numImages = 0;\n        this._images = new Array();\n        this._samplers = new Array();\n    }\n    TextureBase.prototype.getNumImages = function () {\n        return this._numImages;\n    };\n    TextureBase.prototype.setNumImages = function (value) {\n        if (this._numImages == value)\n            return;\n        this._numImages = value;\n        this._images.length = value;\n        this._samplers.length = value;\n        this.invalidate();\n    };\n    TextureBase.prototype.getImageAt = function (index) {\n        return this._images[index];\n    };\n    TextureBase.prototype.setImageAt = function (image, index) {\n        this._images[index] = image;\n        this.invalidate();\n    };\n    TextureBase.prototype.getSamplerAt = function (index) {\n        return this._samplers[index];\n    };\n    TextureBase.prototype.setSamplerAt = function (sampler, index) {\n        this._samplers[index] = sampler;\n        this.invalidate();\n    };\n    return TextureBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextureBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/textures\":[function(require,module,exports){\n\"use strict\";\nvar MappingMode_1 = require(\"./textures/MappingMode\");\nexports.MappingMode = MappingMode_1.default;\nvar Single2DTexture_1 = require(\"./textures/Single2DTexture\");\nexports.Single2DTexture = Single2DTexture_1.default;\nvar SingleCubeTexture_1 = require(\"./textures/SingleCubeTexture\");\nexports.SingleCubeTexture = SingleCubeTexture_1.default;\nvar TextureBase_1 = require(\"./textures/TextureBase\");\nexports.TextureBase = TextureBase_1.default;\n\n},{\"./textures/MappingMode\":\"awayjs-display/lib/textures/MappingMode\",\"./textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"./textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"./textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\"}],\"awayjs-display/lib/utils/Cast\":[function(require,module,exports){\n\"use strict\";\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\nvar CastError_1 = require(\"../errors/CastError\");\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\n/**\n * Helper class for casting assets to usable objects\n */\nvar Cast = (function () {\n    function Cast() {\n    }\n    Cast.string = function (data) {\n        if (typeof (data) == 'function')\n            data = new data;\n        if (typeof (data) == 'string')\n            return data;\n        return data;\n    };\n    Cast.byteArray = function (data) {\n        if (typeof (data) == 'function')\n            data = new data;\n        if (data instanceof ByteArray_1.default)\n            return data;\n        return data;\n    };\n    //        public static xml(data:any):XML\n    //        {\n    //            if (typeof(data) == 'function')\n    //                data = new data;\n    //\n    //            if (data is XML)\n    //                return data;\n    //\n    //            return XML(data);\n    //        }\n    Cast.isHex = function (str) {\n        var length = str.length;\n        for (var i = 0; i < length; ++i) {\n            if (this._hexChars.indexOf(str.charAt(i)) == -1)\n                return false;\n        }\n        return true;\n    };\n    Cast.tryColor = function (data) {\n        if (typeof (data) == 'number' /*uint*/)\n            return Math.floor(data);\n        if (typeof (data) == 'string') {\n            if (data == \"random\")\n                return Math.floor(Math.random() * 0x1000000);\n            if (this._colorNames == null) {\n                this._colorNames = new Object();\n                this._colorNames[\"steelblue\"] = 0x4682B4;\n                this._colorNames[\"royalblue\"] = 0x041690;\n                this._colorNames[\"cornflowerblue\"] = 0x6495ED;\n                this._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n                this._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n                this._colorNames[\"slateblue\"] = 0x6A5ACD;\n                this._colorNames[\"darkslateblue\"] = 0x483D8B;\n                this._colorNames[\"midnightblue\"] = 0x191970;\n                this._colorNames[\"navy\"] = 0x000080;\n                this._colorNames[\"darkblue\"] = 0x00008B;\n                this._colorNames[\"mediumblue\"] = 0x0000CD;\n                this._colorNames[\"blue\"] = 0x0000FF;\n                this._colorNames[\"dodgerblue\"] = 0x1E90FF;\n                this._colorNames[\"deepskyblue\"] = 0x00BFFF;\n                this._colorNames[\"lightskyblue\"] = 0x87CEFA;\n                this._colorNames[\"skyblue\"] = 0x87CEEB;\n                this._colorNames[\"lightblue\"] = 0xADD8E6;\n                this._colorNames[\"powderblue\"] = 0xB0E0E6;\n                this._colorNames[\"azure\"] = 0xF0FFFF;\n                this._colorNames[\"lightcyan\"] = 0xE0FFFF;\n                this._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n                this._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n                this._colorNames[\"lightseagreen\"] = 0x20B2AA;\n                this._colorNames[\"darkcyan\"] = 0x008B8B;\n                this._colorNames[\"teal\"] = 0x008080;\n                this._colorNames[\"cadetblue\"] = 0x5F9EA0;\n                this._colorNames[\"darkturquoise\"] = 0x00CED1;\n                this._colorNames[\"aqua\"] = 0x00FFFF;\n                this._colorNames[\"cyan\"] = 0x00FFFF;\n                this._colorNames[\"turquoise\"] = 0x40E0D0;\n                this._colorNames[\"aquamarine\"] = 0x7FFFD4;\n                this._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n                this._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n                this._colorNames[\"mediumseagreen\"] = 0x3CB371;\n                this._colorNames[\"seagreen\"] = 0x2E8B57;\n                this._colorNames[\"darkgreen\"] = 0x006400;\n                this._colorNames[\"green\"] = 0x008000;\n                this._colorNames[\"forestgreen\"] = 0x228B22;\n                this._colorNames[\"limegreen\"] = 0x32CD32;\n                this._colorNames[\"lime\"] = 0x00FF00;\n                this._colorNames[\"chartreuse\"] = 0x7FFF00;\n                this._colorNames[\"lawngreen\"] = 0x7CFC00;\n                this._colorNames[\"greenyellow\"] = 0xADFF2F;\n                this._colorNames[\"yellowgreen\"] = 0x9ACD32;\n                this._colorNames[\"palegreen\"] = 0x98FB98;\n                this._colorNames[\"lightgreen\"] = 0x90EE90;\n                this._colorNames[\"springgreen\"] = 0x00FF7F;\n                this._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n                this._colorNames[\"darkolivegreen\"] = 0x556B2F;\n                this._colorNames[\"olivedrab\"] = 0x6B8E23;\n                this._colorNames[\"olive\"] = 0x808000;\n                this._colorNames[\"darkkhaki\"] = 0xBDB76B;\n                this._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n                this._colorNames[\"goldenrod\"] = 0xDAA520;\n                this._colorNames[\"gold\"] = 0xFFD700;\n                this._colorNames[\"yellow\"] = 0xFFFF00;\n                this._colorNames[\"khaki\"] = 0xF0E68C;\n                this._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n                this._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n                this._colorNames[\"moccasin\"] = 0xFFE4B5;\n                this._colorNames[\"wheat\"] = 0xF5DEB3;\n                this._colorNames[\"navajowhite\"] = 0xFFDEAD;\n                this._colorNames[\"burlywood\"] = 0xDEB887;\n                this._colorNames[\"tan\"] = 0xD2B48C;\n                this._colorNames[\"rosybrown\"] = 0xBC8F8F;\n                this._colorNames[\"sienna\"] = 0xA0522D;\n                this._colorNames[\"saddlebrown\"] = 0x8B4513;\n                this._colorNames[\"chocolate\"] = 0xD2691E;\n                this._colorNames[\"peru\"] = 0xCD853F;\n                this._colorNames[\"sandybrown\"] = 0xF4A460;\n                this._colorNames[\"darkred\"] = 0x8B0000;\n                this._colorNames[\"maroon\"] = 0x800000;\n                this._colorNames[\"brown\"] = 0xA52A2A;\n                this._colorNames[\"firebrick\"] = 0xB22222;\n                this._colorNames[\"indianred\"] = 0xCD5C5C;\n                this._colorNames[\"lightcoral\"] = 0xF08080;\n                this._colorNames[\"salmon\"] = 0xFA8072;\n                this._colorNames[\"darksalmon\"] = 0xE9967A;\n                this._colorNames[\"lightsalmon\"] = 0xFFA07A;\n                this._colorNames[\"coral\"] = 0xFF7F50;\n                this._colorNames[\"tomato\"] = 0xFF6347;\n                this._colorNames[\"darkorange\"] = 0xFF8C00;\n                this._colorNames[\"orange\"] = 0xFFA500;\n                this._colorNames[\"orangered\"] = 0xFF4500;\n                this._colorNames[\"crimson\"] = 0xDC143C;\n                this._colorNames[\"red\"] = 0xFF0000;\n                this._colorNames[\"deeppink\"] = 0xFF1493;\n                this._colorNames[\"fuchsia\"] = 0xFF00FF;\n                this._colorNames[\"magenta\"] = 0xFF00FF;\n                this._colorNames[\"hotpink\"] = 0xFF69B4;\n                this._colorNames[\"lightpink\"] = 0xFFB6C1;\n                this._colorNames[\"pink\"] = 0xFFC0CB;\n                this._colorNames[\"palevioletred\"] = 0xDB7093;\n                this._colorNames[\"mediumvioletred\"] = 0xC71585;\n                this._colorNames[\"purple\"] = 0x800080;\n                this._colorNames[\"darkmagenta\"] = 0x8B008B;\n                this._colorNames[\"mediumpurple\"] = 0x9370DB;\n                this._colorNames[\"blueviolet\"] = 0x8A2BE2;\n                this._colorNames[\"indigo\"] = 0x4B0082;\n                this._colorNames[\"darkviolet\"] = 0x9400D3;\n                this._colorNames[\"darkorchid\"] = 0x9932CC;\n                this._colorNames[\"mediumorchid\"] = 0xBA55D3;\n                this._colorNames[\"orchid\"] = 0xDA70D6;\n                this._colorNames[\"violet\"] = 0xEE82EE;\n                this._colorNames[\"plum\"] = 0xDDA0DD;\n                this._colorNames[\"thistle\"] = 0xD8BFD8;\n                this._colorNames[\"lavender\"] = 0xE6E6FA;\n                this._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n                this._colorNames[\"aliceblue\"] = 0xF0F8FF;\n                this._colorNames[\"mintcream\"] = 0xF5FFFA;\n                this._colorNames[\"honeydew\"] = 0xF0FFF0;\n                this._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n                this._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n                this._colorNames[\"cornsilk\"] = 0xFFF8DC;\n                this._colorNames[\"lightyellow\"] = 0xFFFFE0;\n                this._colorNames[\"ivory\"] = 0xFFFFF0;\n                this._colorNames[\"floralwhite\"] = 0xFFFAF0;\n                this._colorNames[\"linen\"] = 0xFAF0E6;\n                this._colorNames[\"oldlace\"] = 0xFDF5E6;\n                this._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n                this._colorNames[\"bisque\"] = 0xFFE4C4;\n                this._colorNames[\"peachpuff\"] = 0xFFDAB9;\n                this._colorNames[\"papayawhip\"] = 0xFFEFD5;\n                this._colorNames[\"beige\"] = 0xF5F5DC;\n                this._colorNames[\"seashell\"] = 0xFFF5EE;\n                this._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n                this._colorNames[\"mistyrose\"] = 0xFFE4E1;\n                this._colorNames[\"snow\"] = 0xFFFAFA;\n                this._colorNames[\"white\"] = 0xFFFFFF;\n                this._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n                this._colorNames[\"gainsboro\"] = 0xDCDCDC;\n                this._colorNames[\"lightgrey\"] = 0xD3D3D3;\n                this._colorNames[\"silver\"] = 0xC0C0C0;\n                this._colorNames[\"darkgrey\"] = 0xA9A9A9;\n                this._colorNames[\"grey\"] = 0x808080;\n                this._colorNames[\"lightslategrey\"] = 0x778899;\n                this._colorNames[\"slategrey\"] = 0x708090;\n                this._colorNames[\"dimgrey\"] = 0x696969;\n                this._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n                this._colorNames[\"black\"] = 0x000000;\n                this._colorNames[\"transparent\"] = 0xFF000000;\n            }\n            if (this._colorNames[data] != null)\n                return this._colorNames[data];\n            if ((data.length == 6) && this.isHex(data))\n                return parseInt(\"0x\" + data);\n        }\n        return null;\n    };\n    Cast.color = function (data) {\n        var result = this.tryColor(data);\n        if (result == null)\n            throw new CastError_1.default(\"Can't cast to color: \" + data);\n        return result;\n    };\n    Cast.tryClass = function (name) {\n        if (this._notClasses[name])\n            return name;\n        var result = this._classes[name];\n        if (result != null)\n            return result;\n        try {\n            result = window[name];\n            this._classes[name] = result;\n            return result;\n        }\n        catch (e /*ReferenceError*/) {\n        }\n        this._notClasses[name] = true;\n        return name;\n    };\n    Cast.image2D = function (data) {\n        if (data == null)\n            return null;\n        if (typeof (data) == 'string')\n            data = this.tryClass(data);\n        if (typeof (data) == 'function') {\n            try {\n                data = new data();\n            }\n            catch (e /*ArgumentError*/) {\n                data = new data(0, 0);\n            }\n        }\n        if (data instanceof Image2D_1.default)\n            return data;\n        if (data instanceof Single2DTexture_1.default)\n            data = data.image2D;\n        throw new CastError_1.default(\"Can't cast to BitmapImage2D: \" + data);\n    };\n    Cast.bitmapTexture = function (data) {\n        if (data == null)\n            return null;\n        if (typeof (data) == 'string')\n            data = this.tryClass(data);\n        if (typeof (data) == 'function') {\n            try {\n                data = new data();\n            }\n            catch (e /*ArgumentError*/) {\n                data = new data(0, 0);\n            }\n        }\n        if (data instanceof Single2DTexture_1.default)\n            return data;\n        try {\n            var bmd = Cast.image2D(data);\n            return new Single2DTexture_1.default(bmd);\n        }\n        catch (e /*CastError*/) {\n        }\n        throw new CastError_1.default(\"Can't cast to Single2DTexture: \" + data);\n    };\n    Cast._hexChars = \"0123456789abcdefABCDEF\";\n    Cast._notClasses = new Object();\n    Cast._classes = new Object();\n    return Cast;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Cast;\n\n},{\"../errors/CastError\":\"awayjs-display/lib/errors/CastError\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-core/lib/utils/ByteArray\":undefined}],\"awayjs-display/lib/utils/ElementsUtils\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float4Attributes_1 = require(\"awayjs-core/lib/attributes/Float4Attributes\");\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar Sphere_1 = require(\"awayjs-core/lib/geom/Sphere\");\nvar HitTestCache_1 = require(\"../graphics/HitTestCache\");\nvar ElementsUtils = (function () {\n    function ElementsUtils() {\n    }\n    ElementsUtils.generateFaceNormals = function (indexAttributes, positionAttributes, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var indices = indexAttributes.get(count, offset);\n        var positions = positionAttributes.get(positionAttributes.count);\n        if (output == null)\n            output = new Float4Attributes_1.default(count + offset);\n        else if (output.count < count + offset)\n            output.count = count + offset;\n        var indexDim = indexAttributes.dimensions;\n        var positionDim = positionAttributes.dimensions;\n        var faceNormals = output.get(count, offset);\n        //multiply by dimension to get index length\n        count *= indexDim;\n        var i = 0;\n        var j = 0;\n        var index;\n        var x1, x2, x3;\n        var y1, y2, y3;\n        var z1, z2, z3;\n        var dx1, dy1, dz1;\n        var dx2, dy2, dz2;\n        var cx, cy, cz;\n        var d;\n        if (positionDim == 3) {\n            while (i < count) {\n                index = indices[i++] * 3;\n                x1 = positions[index];\n                y1 = positions[index + 1];\n                z1 = positions[index + 2];\n                index = indices[i++] * 3;\n                x2 = positions[index];\n                y2 = positions[index + 1];\n                z2 = positions[index + 2];\n                index = indices[i++] * 3;\n                x3 = positions[index];\n                y3 = positions[index + 1];\n                z3 = positions[index + 2];\n                dx1 = x3 - x1;\n                dy1 = y3 - y1;\n                dz1 = z3 - z1;\n                dx2 = x2 - x1;\n                dy2 = y2 - y1;\n                dz2 = z2 - z1;\n                cx = dz1 * dy2 - dy1 * dz2;\n                cy = dx1 * dz2 - dz1 * dx2;\n                cz = dy1 * dx2 - dx1 * dy2;\n                d = Math.sqrt(cx * cx + cy * cy + cz * cz);\n                // length of cross product = 2*triangle area\n                faceNormals[j++] = cx;\n                faceNormals[j++] = cy;\n                faceNormals[j++] = cz;\n                faceNormals[j++] = d;\n            }\n        }\n        else if (positionDim == 2) {\n            while (i < count) {\n                faceNormals[j++] = 0;\n                faceNormals[j++] = 0;\n                faceNormals[j++] = 1;\n                faceNormals[j++] = 1;\n                i += 3;\n            }\n        }\n        output.set(faceNormals, offset);\n        return output;\n    };\n    ElementsUtils.generateNormals = function (indexAttributes, faceNormalAttributes, output, concatenatedBuffer) {\n        var indices = indexAttributes.get(indexAttributes.count);\n        var faceNormals = faceNormalAttributes.get(faceNormalAttributes.count);\n        if (output == null)\n            output = new Float3Attributes_1.default(concatenatedBuffer);\n        var indexDim = indexAttributes.dimensions;\n        var outputDim = output.dimensions;\n        var normals = output.get(output.count);\n        var i = 0;\n        var len = output.count * outputDim;\n        //clear normal values\n        while (i < len) {\n            normals[i++] = 0;\n            normals[i++] = 0;\n            normals[i++] = 0;\n        }\n        i = 0;\n        len = indexAttributes.count * indexDim;\n        var index;\n        var f1 = 0;\n        var f2 = 1;\n        var f3 = 2;\n        //collect face normals\n        while (i < len) {\n            index = indices[i++] * outputDim;\n            normals[index] += faceNormals[f1];\n            normals[index + 1] += faceNormals[f2];\n            normals[index + 2] += faceNormals[f3];\n            index = indices[i++] * outputDim;\n            normals[index] += faceNormals[f1];\n            normals[index + 1] += faceNormals[f2];\n            normals[index + 2] += faceNormals[f3];\n            index = indices[i++] * outputDim;\n            normals[index] += faceNormals[f1];\n            normals[index + 1] += faceNormals[f2];\n            normals[index + 2] += faceNormals[f3];\n            f1 += 4;\n            f2 += 4;\n            f3 += 4;\n        }\n        i = 0;\n        len = output.count * outputDim;\n        var vx;\n        var vy;\n        var vz;\n        var d;\n        //normalise normals collections\n        while (i < len) {\n            vx = normals[i];\n            vy = normals[i + 1];\n            vz = normals[i + 2];\n            d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\n            normals[i++] = vx * d;\n            normals[i++] = vy * d;\n            normals[i++] = vz * d;\n        }\n        output.set(normals);\n        return output;\n    };\n    ElementsUtils.generateFaceTangents = function (indexAttributes, positionAttributes, uvAttributes, output, count, offset, useFaceWeights) {\n        if (offset === void 0) { offset = 0; }\n        if (useFaceWeights === void 0) { useFaceWeights = false; }\n        var indices = indexAttributes.get(count, offset);\n        var positions = positionAttributes.get(positionAttributes.count);\n        var uvs = uvAttributes.get(uvAttributes.count);\n        if (output == null)\n            output = new Float3Attributes_1.default(count + offset);\n        else if (output.count < count + offset)\n            output.count = count + offset;\n        var positionDim = positionAttributes.dimensions;\n        var uvDim = uvAttributes.dimensions;\n        var indexDim = indexAttributes.dimensions;\n        var faceTangents = output.get(count, offset);\n        var i = 0;\n        var index1;\n        var index2;\n        var index3;\n        var v0;\n        var v1;\n        var v2;\n        var dv1;\n        var dv2;\n        var denom;\n        var x0, y0, z0;\n        var dx1, dy1, dz1;\n        var dx2, dy2, dz2;\n        var cx, cy, cz;\n        //multiply by dimension to get index length\n        count *= indexDim;\n        while (i < count) {\n            index1 = indices[i];\n            index2 = indices[i + 1];\n            index3 = indices[i + 2];\n            v0 = uvs[index1 * uvDim + 1];\n            dv1 = uvs[index2 * uvDim + 1] - v0;\n            dv2 = uvs[index3 * uvDim + 1] - v0;\n            v0 = index1 * positionDim;\n            v1 = index2 * positionDim;\n            v2 = index3 * positionDim;\n            x0 = positions[v0];\n            dx1 = positions[v1] - x0;\n            dx2 = positions[v2] - x0;\n            cx = dv2 * dx1 - dv1 * dx2;\n            y0 = positions[v0 + 1];\n            dy1 = positions[v1 + 1] - y0;\n            dy2 = positions[v2 + 1] - y0;\n            cy = dv2 * dy1 - dv1 * dy2;\n            if (positionDim == 3) {\n                z0 = positions[v0 + 2];\n                dz1 = positions[v1 + 2] - z0;\n                dz2 = positions[v2 + 2] - z0;\n                cz = dv2 * dz1 - dv1 * dz2;\n            }\n            else {\n                cz = 0;\n            }\n            denom = 1 / Math.sqrt(cx * cx + cy * cy + cz * cz);\n            faceTangents[i++] = denom * cx;\n            faceTangents[i++] = denom * cy;\n            faceTangents[i++] = denom * cz;\n        }\n        output.set(faceTangents, offset);\n        return output;\n    };\n    ElementsUtils.generateTangents = function (indexAttributes, faceTangentAttributes, faceNormalAttributes, output, concatenatedBuffer) {\n        var indices = indexAttributes.get(indexAttributes.count);\n        var faceTangents = faceTangentAttributes.get(faceTangentAttributes.count);\n        var faceNormals = faceNormalAttributes.get(faceNormalAttributes.count);\n        if (output == null)\n            output = new Float3Attributes_1.default(concatenatedBuffer);\n        var indexDim = indexAttributes.dimensions;\n        var outputDim = output.dimensions;\n        var tangents = output.get(output.count);\n        var i = 0;\n        var len = output.count * outputDim;\n        //clear tangent values\n        while (i < len) {\n            tangents[i++] = 0;\n            tangents[i++] = 0;\n            tangents[i++] = 0;\n        }\n        var weight;\n        var index;\n        var f1 = 0;\n        var f2 = 1;\n        var f3 = 2;\n        var f4 = 3;\n        i = 0;\n        len = indexAttributes.count * indexDim;\n        //collect face tangents\n        while (i < len) {\n            weight = faceNormals[f4];\n            index = indices[i++] * outputDim;\n            tangents[index++] += faceTangents[f1] * weight;\n            tangents[index++] += faceTangents[f2] * weight;\n            tangents[index] += faceTangents[f3] * weight;\n            index = indices[i++] * outputDim;\n            tangents[index++] += faceTangents[f1] * weight;\n            tangents[index++] += faceTangents[f2] * weight;\n            tangents[index] += faceTangents[f3] * weight;\n            index = indices[i++] * outputDim;\n            tangents[index++] += faceTangents[f1] * weight;\n            tangents[index++] += faceTangents[f2] * weight;\n            tangents[index] += faceTangents[f3] * weight;\n            f1 += 3;\n            f2 += 3;\n            f3 += 3;\n            f4 += 4;\n        }\n        i = 0;\n        len = output.count * outputDim;\n        var vx;\n        var vy;\n        var vz;\n        var d;\n        //normalise tangents collections\n        while (i < len) {\n            vx = tangents[i];\n            vy = tangents[i + 1];\n            vz = tangents[i + 2];\n            d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\n            tangents[i++] = vx * d;\n            tangents[i++] = vy * d;\n            tangents[i++] = vz * d;\n        }\n        output.set(tangents);\n        return output;\n    };\n    ElementsUtils.generateColors = function (indexAttributes, output, concatenatedBuffer, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (output == null)\n            output = new Byte4Attributes_1.default(concatenatedBuffer);\n        var index = 0;\n        var colors = new Uint8Array(count * 4);\n        while (index < count * 4) {\n            if (index / 4 & 1) {\n                colors[index] = 0xFF;\n                colors[index + 1] = 0xFF;\n                colors[index + 2] = 0xFF;\n                colors[index + 3] = 0xFF;\n            }\n            else {\n                colors[index] = 0xFF;\n                colors[index + 1] = 0xFF;\n                colors[index + 2] = 0xFF;\n                colors[index + 3] = 0xFF;\n            }\n            index += 4;\n        }\n        output.set(colors, offset);\n        return output;\n    };\n    ElementsUtils.scaleUVs = function (scaleU, scaleV, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (output.count < count + offset)\n            output.count = count + offset;\n        var outputDim = output.dimensions;\n        var uvs = output.get(count, offset);\n        var i = 0;\n        var j = 0;\n        var len = count * outputDim;\n        while (i < len) {\n            uvs[i++] *= scaleU;\n            uvs[i++] *= scaleV;\n        }\n        output.set(uvs, offset);\n    };\n    ElementsUtils.scale = function (scale, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (output.count < count + offset)\n            output.count = count + offset;\n        var outputDim = output.dimensions;\n        var positions = output.get(count, offset);\n        var i = 0;\n        var j = 0;\n        var len = count * outputDim;\n        while (i < len) {\n            positions[i++] *= scale;\n            positions[i++] *= scale;\n            positions[i++] *= scale;\n        }\n        output.set(positions, offset);\n    };\n    ElementsUtils.applyTransformation = function (transform, positionAttributes, normalAttributes, tangentAttributes, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        //todo: make this compatible with 2-dimensional positions\n        var positions = positionAttributes.get(count, offset);\n        var positionDim = positionAttributes.dimensions;\n        var normals;\n        var normalDim;\n        if (normalAttributes) {\n            normals = normalAttributes.get(count, offset);\n            normalDim = normalAttributes.dimensions;\n        }\n        var tangents;\n        var tangentDim;\n        if (tangentAttributes) {\n            tangents = tangentAttributes.get(count, offset);\n            tangentDim = tangentAttributes.dimensions;\n        }\n        var i;\n        var i1;\n        var i2;\n        var vector = new Vector3D_1.default();\n        var invTranspose;\n        if (normalAttributes || tangentAttributes) {\n            invTranspose = transform.clone();\n            invTranspose.invert();\n            invTranspose.transpose();\n        }\n        var vi0 = 0;\n        var ni0 = 0;\n        var ti0 = 0;\n        for (i = 0; i < count; ++i) {\n            // bake position\n            i1 = vi0 + 1;\n            i2 = vi0 + 2;\n            vector.x = positions[vi0];\n            vector.y = positions[i1];\n            vector.z = positions[i2];\n            vector = transform.transformVector(vector);\n            positions[vi0] = vector.x;\n            positions[i1] = vector.y;\n            positions[i2] = vector.z;\n            vi0 += positionDim;\n            if (normals) {\n                // bake normal\n                i1 = ni0 + 1;\n                i2 = ni0 + 2;\n                vector.x = normals[ni0];\n                vector.y = normals[i1];\n                vector.z = normals[i2];\n                vector = invTranspose.deltaTransformVector(vector);\n                vector.normalize();\n                normals[ni0] = vector.x;\n                normals[i1] = vector.y;\n                normals[i2] = vector.z;\n                ni0 += normalDim;\n            }\n            if (tangents) {\n                // bake tangent\n                i1 = ti0 + 1;\n                i2 = ti0 + 2;\n                vector.x = tangents[ti0];\n                vector.y = tangents[i1];\n                vector.z = tangents[i2];\n                vector = invTranspose.deltaTransformVector(vector);\n                vector.normalize();\n                tangents[ti0] = vector.x;\n                tangents[i1] = vector.y;\n                tangents[i2] = vector.z;\n                ti0 += tangentDim;\n            }\n        }\n        positionAttributes.set(positions, offset);\n        if (normalAttributes)\n            normalAttributes.set(normals, offset);\n        if (tangentAttributes)\n            tangentAttributes.set(tangents, offset);\n    };\n    ElementsUtils.getSubIndices = function (indexAttributes, numVertices, indexMappings, indexOffset) {\n        if (indexOffset === void 0) { indexOffset = 0; }\n        var buffer = indexAttributes.buffer;\n        var numIndices = indexAttributes.length;\n        //reset mappings\n        indexMappings.length = 0;\n        //shortcut for those buffers that fit into the maximum buffer sizes\n        if (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n            return buffer;\n        var i;\n        var indices = indexAttributes.get(indexAttributes.count, indexOffset);\n        var splitIndices = new Array();\n        var indexSwap = ElementsUtils._indexSwap;\n        indexSwap.length = numIndices;\n        for (i = 0; i < numIndices; i++)\n            indexSwap[i] = -1;\n        var originalIndex;\n        var splitIndex;\n        var index = 0;\n        var offsetLength = indexOffset * indexAttributes.dimensions;\n        // Loop over all triangles\n        i = 0;\n        while (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n            originalIndex = indices[i];\n            if (indexSwap[originalIndex] >= 0) {\n                splitIndex = indexSwap[originalIndex];\n            }\n            else {\n                // This vertex does not yet exist in the split list and\n                // needs to be copied from the long list.\n                splitIndex = index++;\n                indexSwap[originalIndex] = splitIndex;\n                indexMappings[splitIndex] = originalIndex;\n            }\n            // Store new index, which may have come from the swap look-up,\n            // or from copying a new set of vertex data from the original vector\n            splitIndices[i++] = splitIndex;\n        }\n        buffer = new AttributesBuffer_1.default(indexAttributes.size * indexAttributes.dimensions, splitIndices.length / indexAttributes.dimensions);\n        indexAttributes = indexAttributes.clone(buffer);\n        indexAttributes.set(splitIndices);\n        return buffer;\n    };\n    ElementsUtils.getSubVertices = function (vertexBuffer, indexMappings) {\n        if (!indexMappings.length)\n            return vertexBuffer;\n        var stride = vertexBuffer.stride;\n        var vertices = vertexBuffer.bufferView;\n        var splitVerts = new Uint8Array(indexMappings.length * stride);\n        var splitIndex;\n        var originalIndex;\n        var i = 0;\n        var j = 0;\n        var len = indexMappings.length;\n        for (i = 0; i < len; i++) {\n            splitIndex = i * stride;\n            originalIndex = indexMappings[i] * stride;\n            for (j = 0; j < stride; j++)\n                splitVerts[splitIndex + j] = vertices[originalIndex + j];\n        }\n        vertexBuffer = new AttributesBuffer_1.default(stride, len);\n        vertexBuffer.bufferView = splitVerts;\n        return vertexBuffer;\n    };\n    //TODO - generate this dyanamically based on num tris\n    ElementsUtils.hitTestTriangleElements = function (x, y, z, box, triangleElements, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var positionAttributes = triangleElements.positions;\n        var curveAttributes = triangleElements.getCustomAtributes(\"curves\");\n        var posDim = positionAttributes.dimensions;\n        var curveDim = curveAttributes.dimensions;\n        var positions = positionAttributes.get(count, offset);\n        var curves = curveAttributes ? curveAttributes.get(count, offset) : null;\n        var id0;\n        var id1;\n        var id2;\n        var ax;\n        var ay;\n        var bx;\n        var by;\n        var cx;\n        var cy;\n        var hitTestCache = triangleElements.hitTestCache[offset] || (triangleElements.hitTestCache[offset] = new HitTestCache_1.default());\n        var index = hitTestCache.lastCollisionIndex;\n        if (index != -1 && index < count) {\n            precheck: {\n                id0 = index + 2;\n                id1 = index + 1;\n                id2 = index + 0;\n                ax = positions[id0 * posDim];\n                ay = positions[id0 * posDim + 1];\n                bx = positions[id1 * posDim];\n                by = positions[id1 * posDim + 1];\n                cx = positions[id2 * posDim];\n                cy = positions[id2 * posDim + 1];\n                //console.log(ax, ay, bx, by, cx, cy);\n                //from a to p\n                var dx = ax - x;\n                var dy = ay - y;\n                //edge normal (a-b)\n                var nx = by - ay;\n                var ny = -(bx - ax);\n                //console.log(ax,ay,bx,by,cx,cy);\n                var dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    break precheck;\n                dx = bx - x;\n                dy = by - y;\n                nx = cy - by;\n                ny = -(cx - bx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    break precheck;\n                dx = cx - x;\n                dy = cy - y;\n                nx = ay - cy;\n                ny = -(ax - cx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    break precheck;\n                if (curves) {\n                    var curvey0 = curves[id0 * curveDim + 2];\n                    var curvey1 = curves[id1 * curveDim + 2];\n                    var curvey2 = curves[id2 * curveDim + 2];\n                    //check if not solid\n                    if (curvey0 || curvey1 || curvey2) {\n                        var v0x = bx - ax;\n                        var v0y = by - ay;\n                        var v1x = cx - ax;\n                        var v1y = cy - ay;\n                        var v2x = x - ax;\n                        var v2y = y - ay;\n                        var den = v0x * v1y - v1x * v0y;\n                        var v = (v2x * v1y - v1x * v2y) / den;\n                        var w = (v0x * v2y - v2x * v0y) / den;\n                        //var u:number = 1 - v - w;\t//commented out as inlined away\n                        //here be dragons\n                        var uu = 0.5 * v + w;\n                        var vv = w;\n                        var d = uu * uu - vv;\n                        var az = curves[id0 * curveDim];\n                        if (d > 0 && az == -128) {\n                            break precheck;\n                            ;\n                        }\n                        else if (d < 0 && az == 127) {\n                            break precheck;\n                            ;\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        //hard coded min vertex count to bother using a grid for\n        if (count > 150) {\n            var cells = hitTestCache.cells;\n            var divisions = cells.length ? hitTestCache.divisions : (hitTestCache.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n            var conversionX = divisions / box.width;\n            var conversionY = divisions / box.height;\n            var minx = box.x;\n            var miny = box.y;\n            if (!cells.length) {\n                //now we have bounds start creating grid cells and filling\n                cells.length = divisions * divisions;\n                for (var k = 0; k < count; k += 3) {\n                    id0 = k + 2;\n                    id1 = k + 1;\n                    id2 = k + 0;\n                    ax = positions[id0 * posDim];\n                    ay = positions[id0 * posDim + 1];\n                    bx = positions[id1 * posDim];\n                    by = positions[id1 * posDim + 1];\n                    cx = positions[id2 * posDim];\n                    cy = positions[id2 * posDim + 1];\n                    //subtractions to push into positive space\n                    var min_index_x = Math.floor((Math.min(ax, bx, cx) - minx) * conversionX);\n                    var min_index_y = Math.floor((Math.min(ay, by, cy) - miny) * conversionY);\n                    var max_index_x = Math.floor((Math.max(ax, bx, cx) - minx) * conversionX);\n                    var max_index_y = Math.floor((Math.max(ay, by, cy) - miny) * conversionY);\n                    for (var i = min_index_x; i <= max_index_x; i++) {\n                        for (var j = min_index_y; j <= max_index_y; j++) {\n                            var index = i + j * divisions;\n                            var nodes = cells[index] || (cells[index] = new Array());\n                            //push in the triangle ids\n                            nodes.push(id0, id1, id2);\n                        }\n                    }\n                }\n            }\n            var index_x = Math.floor((x - minx) * conversionX);\n            var index_y = Math.floor((y - miny) * conversionY);\n            if ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n                return false;\n            var nodes = cells[index_x + index_y * divisions];\n            if (nodes == null)\n                return false;\n            var nodeCount = nodes.length;\n            for (var k = 0; k < nodeCount; k += 3) {\n                id2 = nodes[k + 2];\n                if (id2 == index)\n                    continue;\n                id1 = nodes[k + 1];\n                id0 = nodes[k];\n                ax = positions[id0 * posDim];\n                ay = positions[id0 * posDim + 1];\n                bx = positions[id1 * posDim];\n                by = positions[id1 * posDim + 1];\n                cx = positions[id2 * posDim];\n                cy = positions[id2 * posDim + 1];\n                //from a to p\n                var dx = ax - x;\n                var dy = ay - y;\n                //edge normal (a-b)\n                var nx = by - ay;\n                var ny = -(bx - ax);\n                var dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    continue;\n                dx = bx - x;\n                dy = by - y;\n                nx = cy - by;\n                ny = -(cx - bx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    continue;\n                dx = cx - x;\n                dy = cy - y;\n                nx = ay - cy;\n                ny = -(ax - cx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    continue;\n                if (curves) {\n                    var curvey0 = curves[id0 * curveDim + 2];\n                    var curvey1 = curves[id1 * curveDim + 2];\n                    var curvey2 = curves[id2 * curveDim + 2];\n                    //check if not solid\n                    if (curvey0 || curvey1 || curvey2) {\n                        var v0x = bx - ax;\n                        var v0y = by - ay;\n                        var v1x = cx - ax;\n                        var v1y = cy - ay;\n                        var v2x = x - ax;\n                        var v2y = y - ay;\n                        var den = v0x * v1y - v1x * v0y;\n                        var v = (v2x * v1y - v1x * v2y) / den;\n                        var w = (v0x * v2y - v2x * v0y) / den;\n                        //var u:number = 1 - v - w;\t//commented out as inlined away\n                        //here be dragons\n                        var uu = 0.5 * v + w;\n                        var vv = w;\n                        var d = uu * uu - vv;\n                        var az = curves[id0 * curveDim];\n                        if (d > 0 && az == -128)\n                            continue;\n                        else if (d < 0 && az == 127)\n                            continue;\n                    }\n                }\n                hitTestCache.lastCollisionIndex = id2;\n                return true;\n            }\n            return false;\n        }\n        //brute force\n        for (var k = 0; k < count; k += 3) {\n            id2 = k + 0;\n            if (id2 == index)\n                continue;\n            id1 = k + 1;\n            id0 = k + 2;\n            ax = positions[id0 * posDim];\n            ay = positions[id0 * posDim + 1];\n            bx = positions[id1 * posDim];\n            by = positions[id1 * posDim + 1];\n            cx = positions[id2 * posDim];\n            cy = positions[id2 * posDim + 1];\n            //console.log(ax, ay, bx, by, cx, cy);\n            //from a to p\n            var dx = ax - x;\n            var dy = ay - y;\n            //edge normal (a-b)\n            var nx = by - ay;\n            var ny = -(bx - ax);\n            //console.log(ax,ay,bx,by,cx,cy);\n            var dot = (dx * nx) + (dy * ny);\n            if (dot > 0)\n                continue;\n            dx = bx - x;\n            dy = by - y;\n            nx = cy - by;\n            ny = -(cx - bx);\n            dot = (dx * nx) + (dy * ny);\n            if (dot > 0)\n                continue;\n            dx = cx - x;\n            dy = cy - y;\n            nx = ay - cy;\n            ny = -(ax - cx);\n            dot = (dx * nx) + (dy * ny);\n            if (dot > 0)\n                continue;\n            if (curves) {\n                var curvey0 = curves[id0 * curveDim + 2];\n                var curvey1 = curves[id1 * curveDim + 2];\n                var curvey2 = curves[id2 * curveDim + 2];\n                //check if not solid\n                if (curvey0 || curvey1 || curvey2) {\n                    var v0x = bx - ax;\n                    var v0y = by - ay;\n                    var v1x = cx - ax;\n                    var v1y = cy - ay;\n                    var v2x = x - ax;\n                    var v2y = y - ay;\n                    var den = v0x * v1y - v1x * v0y;\n                    var v = (v2x * v1y - v1x * v2y) / den;\n                    var w = (v0x * v2y - v2x * v0y) / den;\n                    //var u:number = 1 - v - w;\t//commented out as inlined away\n                    //here be dragons\n                    var uu = 0.5 * v + w;\n                    var vv = w;\n                    var d = uu * uu - vv;\n                    var az = curves[id0 * curveDim];\n                    if (d > 0 && az == -128) {\n                        continue;\n                    }\n                    else if (d < 0 && az == 127) {\n                        continue;\n                    }\n                }\n            }\n            hitTestCache.lastCollisionIndex = id2;\n            return true;\n        }\n        return false;\n    };\n    ElementsUtils.getTriangleGraphicsBoxBounds = function (positionAttributes, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var positions = positionAttributes.get(count, offset);\n        var posDim = positionAttributes.dimensions;\n        var pos;\n        var minX = 0, minY = 0, minZ = 0;\n        var maxX = 0, maxY = 0, maxZ = 0;\n        var len = count * posDim;\n        for (var i = 0; i < len; i += posDim) {\n            if (i == 0) {\n                maxX = minX = positions[i];\n                maxY = minY = positions[i + 1];\n                maxZ = minZ = (posDim == 3) ? positions[i + 2] : 0;\n            }\n            else {\n                pos = positions[i];\n                if (pos < minX)\n                    minX = pos;\n                else if (pos > maxX)\n                    maxX = pos;\n                pos = positions[i + 1];\n                if (pos < minY)\n                    minY = pos;\n                else if (pos > maxY)\n                    maxY = pos;\n                if (posDim == 3) {\n                    pos = positions[i + 2];\n                    if (pos < minZ)\n                        minZ = pos;\n                    else if (pos > maxZ)\n                        maxZ = pos;\n                }\n            }\n        }\n        if (output == null)\n            output = new Box_1.default();\n        output.x = minX;\n        output.y = minY;\n        output.z = minZ;\n        output.right = maxX;\n        output.bottom = maxY;\n        output.back = maxZ;\n        return output;\n    };\n    ElementsUtils.getTriangleGraphicsSphereBounds = function (positionAttributes, center, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var positions = positionAttributes.get(count, offset);\n        var posDim = positionAttributes.dimensions;\n        var maxRadiusSquared = 0;\n        var radiusSquared;\n        var len = count * posDim;\n        var distanceX;\n        var distanceY;\n        var distanceZ;\n        for (var i = 0; i < len; i += posDim) {\n            distanceX = positions[i] - center.x;\n            distanceY = positions[i + 1] - center.y;\n            distanceZ = (posDim == 3) ? positions[i + 2] - center.z : -center.z;\n            radiusSquared = distanceX * distanceX + distanceY * distanceY + distanceZ * distanceZ;\n            if (maxRadiusSquared < radiusSquared)\n                maxRadiusSquared = radiusSquared;\n        }\n        if (output == null)\n            output = new Sphere_1.default();\n        output.x = center.x;\n        output.y = center.y;\n        output.z = center.z;\n        output.radius = Math.sqrt(maxRadiusSquared);\n        return output;\n    };\n    ElementsUtils.tempFloat32x4 = new Float32Array(4);\n    ElementsUtils.LIMIT_VERTS = 0xffff;\n    ElementsUtils.LIMIT_INDICES = 0xffffff;\n    ElementsUtils._indexSwap = new Array();\n    return ElementsUtils;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsUtils;\n\n},{\"../graphics/HitTestCache\":\"awayjs-display/lib/graphics/HitTestCache\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/attributes/Float4Attributes\":undefined,\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/Sphere\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/utils\":[function(require,module,exports){\n\"use strict\";\nvar Cast_1 = require(\"./utils/Cast\");\nexports.Cast = Cast_1.default;\nvar ElementsUtils_1 = require(\"./utils/ElementsUtils\");\nexports.ElementsUtils = ElementsUtils_1.default;\n\n},{\"./utils/Cast\":\"awayjs-display/lib/utils/Cast\",\"./utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\"}]},{},[1])\n\n",
    "import * as adapters\t\t\t\tfrom \"./lib/adapters\";\nimport * as animators\t\t\t\tfrom \"./lib/animators\";\nimport * as base\t\t\t\t\tfrom \"./lib/base\";\nimport * as bounds\t\t\t\t\tfrom \"./lib/bounds\";\nimport * as controllers\t\t\t\tfrom \"./lib/controllers\";\nimport * as display\t\t\t\t\tfrom \"./lib/display\";\nimport * as draw\t\t\t\t\tfrom \"./lib/draw\";\nimport * as errors\t\t\t\t\tfrom \"./lib/errors\";\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\nimport * as factories\t\t\t\tfrom \"./lib/factories\";\nimport * as graphics\t\t\t\tfrom \"./lib/graphics\";\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\nimport * as materials\t\t\t\tfrom \"./lib/materials\";\nimport * as partition\t\t\t\tfrom \"./lib/partition\";\nimport * as pick\t\t\t\t\tfrom \"./lib/pick\";\nimport * as prefabs\t\t\t\t\tfrom \"./lib/prefabs\";\nimport * as text\t\t\t\t\tfrom \"./lib/text\";\nimport * as textures\t\t\t\tfrom \"./lib/textures\";\nimport * as utils\t\t\t\t\tfrom \"./lib/utils\";\nimport IRenderer\t\t\t\t\tfrom \"./lib/IRenderer\";\nimport ITraverser\t\t\t\t\tfrom \"./lib/ITraverser\";\nimport View\t\t\t\t\t\t\tfrom \"./lib/View\";\n\npartition.PartitionBase.registerAbstraction(partition.CameraNode, display.Camera);\npartition.PartitionBase.registerAbstraction(partition.DirectionalLightNode, display.DirectionalLight);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Sprite);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Shape);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.MovieClip);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Billboard);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.LineSegment);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextField);\npartition.PartitionBase.registerAbstraction(partition.LightProbeNode, display.LightProbe);\npartition.PartitionBase.registerAbstraction(partition.PointLightNode, display.PointLight);\npartition.PartitionBase.registerAbstraction(partition.SkyboxNode, display.Skybox);\n\nexport {\n\tadapters,\n\tanimators,\n\tbase,\n\tbounds,\n\tcontrollers,\n\tdisplay,\n\tdraw,\n\terrors,\n\tevents,\n\tfactories,\n\tgraphics,\n\tmanagers,\n\tmaterials,\n\tpartition,\n\tpick,\n\tprefabs,\n\ttext,\n\ttextures,\n\tutils,\n\tIRenderer,\n\tITraverser,\n\tView\n}\n\n",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport getTimer\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\nimport IRenderer\t\t\t\t\tfrom \"./IRenderer\";\nimport DisplayObject\t\t\t\tfrom \"./display/DisplayObject\";\nimport TouchPoint\t\t\t\t\tfrom \"./base/TouchPoint\";\nimport Scene\t\t\t\t\t\tfrom \"./display/Scene\";\nimport IPicker\t\t\t\t\t\tfrom \"./pick/IPicker\";\nimport PickingCollision\t\t\t\tfrom \"./pick/PickingCollision\";\nimport RaycastPicker\t\t\t\tfrom \"./pick/RaycastPicker\";\nimport Camera\t\t\t\t\t\tfrom \"./display/Camera\";\nimport CameraEvent\t\t\t\t\tfrom \"./events/CameraEvent\";\nimport DisplayObjectEvent\t\t\tfrom \"./events/DisplayObjectEvent\";\nimport RendererEvent\t\t\t\tfrom \"./events/RendererEvent\";\nimport MouseManager\t\t\t\t\tfrom \"./managers/MouseManager\";\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t ******************clear********************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//render the contents of the scene\n\t\tthis._pRenderer.render(this._pCamera, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollision = collidingObject;\n\t\t}\n\t}\n}\n\nexport default View;",
    "import TriangleElements\t\t\t\tfrom \"../../graphics/TriangleElements\";\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic elements:TriangleElements;\n}\n\nexport default ParticleData",
    "import AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport default AnimationNodeBase;",
    "export {default as ParticleData}\t\t\t\t\tfrom \"./animators/data/ParticleData\";\nexport {default as AnimationNodeBase}\t\t\t\tfrom \"./animators/nodes/AnimationNodeBase\";\nexport {default as IAnimationSet}\t\t\t\t\tfrom \"./animators/IAnimationSet\";\nexport {default as IAnimator}\t\t\t\t\t\tfrom \"./animators/IAnimator\";",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport default AlignmentMode;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport default HierarchicalProperties;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport default OrientationMode;",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\n\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport StyleEvent\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport TextureBase\t\t\t\t\tfrom \"../textures/TextureBase\";\n\n/**\n *\n */\nclass Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _uvMatrix:Matrix;\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get uvMatrix():Matrix\n\t{\n\t\treturn this._uvMatrix;\n\t}\n\n\tpublic set uvMatrix(value:Matrix)\n\t{\n\t\tif (this._uvMatrix == value)\n\t\t\treturn;\n\n\t\tthis._uvMatrix = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\t\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties()\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n\nexport default Style;\n",
    "import HierarchicalProperties\t\t\tfrom \"../base/HierarchicalProperties\";\nimport MovieClip\t\t\t\t\t\tfrom \"../display/MovieClip\";\nimport DisplayObject                    from \"../display/DisplayObject\";\nimport ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport FrameScriptManager\t\t\t\tfrom \"../managers/FrameScriptManager\";\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index] == null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tif(FrameScriptManager.frameScriptDebug){\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\n\t\t\t// try to get the functions name (it should be the first line as comment)\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\n\t\t\t}\n\t\t}\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport default Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport default TouchPoint;",
    "import EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport PerspectiveProjection\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\n\n\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport TransformEvent\t\t\t\tfrom \"../events/TransformEvent\";\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D()\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform()\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents()\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform()\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D()\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents()\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n\nexport default Transform;\n",
    "export {default as AlignmentMode}\t\t\t\t\tfrom \"./base/AlignmentMode\";\nexport {default as HierarchicalProperties}\t\t\tfrom \"./base/HierarchicalProperties\";\nexport {default as IBitmapDrawable}\t\t\t\t\tfrom \"./base/IBitmapDrawable\";\nexport {default as IRenderable}\t\t\t\t\t\tfrom \"./base/IRenderable\";\nexport {default as ISurface}\t\t\t\t\t\tfrom \"./base/ISurface\";\nexport {default as OrientationMode}\t\t\t\t\tfrom \"./base/OrientationMode\";\nexport {default as Style}\t\t\t\t\t\t\tfrom \"./base/Style\";\nexport {default as Timeline}\t\t\t\t\t\tfrom \"./base/Timeline\";\nexport {default as TouchPoint}\t\t\t\t\t\tfrom \"./base/TouchPoint\";\nexport {default as Transform}\t\t\t\t\t\tfrom \"./base/Transform\";",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport PlaneClassification\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ElementsType\t\t\t\t\tfrom \"../graphics/ElementsType\";\nimport BoundingVolumeBase\t\t\tfrom \"../bounds/BoundingVolumeBase\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport Sprite\t\t\t\t\t\tfrom \"../display/Sprite\";\nimport PrimitiveCubePrefab\t\t\tfrom \"../prefabs/PrimitiveCubePrefab\";\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most sprites.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}\n\nexport default AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport PlaneClassification\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ElementsType\t\t\t\t\tfrom \"../graphics/ElementsType\";\nimport BoundingVolumeBase\t\t\tfrom \"../bounds/BoundingVolumeBase\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport Sprite\t\t\t\t\t\tfrom \"../display/Sprite\";\nimport PrimitiveSpherePrefab\t\tfrom \"../prefabs/PrimitiveSpherePrefab\";\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}\n\nexport default BoundingSphere;",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport Sprite\t\t\t\t\t\tfrom \"../display/Sprite\";\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Sprite;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pEntity = null;\n\t\tthis._pBoundsPrimitive = null;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pInvalidated = true;\n\t\t}\n\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport default BoundsType;",
    "import PlaneClassification\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\n\nimport BoundingVolumeBase\t\t\tfrom \"../bounds/BoundingVolumeBase\";\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport default NullBounds;",
    "export {default as AxisAlignedBoundingBox}\t\t\tfrom \"./bounds/AxisAlignedBoundingBox\";\nexport {default as BoundingSphere}\t\t\t\t\tfrom \"./bounds/BoundingSphere\";\nexport {default as BoundingVolumeBase}\t\t\t\tfrom \"./bounds/BoundingVolumeBase\";\nexport {default as BoundsType}\t\t\t\t\t\tfrom \"./bounds/BoundsType\";\nexport {default as NullBounds}\t\t\t\t\t\tfrom \"./bounds/NullBounds\";",
    "import AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport DisplayObject\t\t\tfrom \"../display/DisplayObject\";\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport default ControllerBase;",
    "import MathConsts\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\n\nimport ControllerBase\t\t\tfrom \"../controllers/ControllerBase\";\nimport DisplayObject\t\t\tfrom \"../display/DisplayObject\";\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport default FirstPersonController;",
    "import DisplayObject\t\t\tfrom \"../display/DisplayObject\";\nimport HoverController\t\t\tfrom \"../controllers/HoverController\";\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport default FollowController;",
    "import MathConsts\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\tfrom \"../display/DisplayObject\";\nimport LookAtController\t\t\tfrom \"../controllers/LookAtController\";\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport default HoverController;",
    "import Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\tfrom \"../display/DisplayObject\";\nimport ControllerBase\t\t\tfrom \"../controllers/ControllerBase\";\nimport DisplayObjectEvent\t\tfrom \"../events/DisplayObjectEvent\";\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport default LookAtController;",
    "import Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\tfrom \"../display/DisplayObject\";\nimport LookAtController\t\t\tfrom \"../controllers/LookAtController\";\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tvar position:Vector3D = this._pTargetObject.transform.position.add(this._velocity);\n\t\tthis._pTargetObject.transform.moveTo(position.x, position.y, position.z);\n\n\t\tsuper.update();\n\t}\n}\n\nexport default SpringController;",
    "export {default as ControllerBase}\t\t\t\t\tfrom \"./controllers/ControllerBase\";\nexport {default as FirstPersonController}\t\t\tfrom \"./controllers/FirstPersonController\";\nexport {default as FollowController}\t\t\t\tfrom \"./controllers/FollowController\";\nexport {default as HoverController}\t\t\t\t\tfrom \"./controllers/HoverController\";\nexport {default as LookAtController}\t\t\t\tfrom \"./controllers/LookAtController\";\nexport {default as SpringController}\t\t\t\tfrom \"./controllers/SpringController\";",
    "import Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\n\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport IAnimator\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport IRenderable\t\t\t\t\tfrom \"../base/IRenderable\";\nimport BoundsType\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport RenderableEvent\t\t\t\tfrom \"../events/RenderableEvent\";\nimport SurfaceEvent\t\t\t\t\tfrom \"../events/SurfaceEvent\";\nimport DefaultMaterialManager\t\tfrom \"../managers/DefaultMaterialManager\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport TextureBase\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport Style\t\t\t\t\t\tfrom \"../base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport IPickingCollider\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderable\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:SurfaceEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:SurfaceEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:SurfaceEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tif (sampler.imageRect) {\n\t\t\t\tthis._billboardWidth = sampler.imageRect.width*image.width;\n\t\t\t\tthis._billboardHeight = sampler.imageRect.height*image.height;\n\t\t\t} else {\n\t\t\t\tthis._billboardWidth = image.rect.width;\n\t\t\t\tthis._billboardHeight = image.rect.height;\n\t\t\t}\n\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.invalidateElements();\n\t}\n\n\n\tpublic invalidateElements()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\t\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null)\n\t{\n\t\tthis.invalidateSurface();\n\n\t\tthis._updateDimensions();\n\t}\n}\n\nexport default Billboard;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ProjectionEvent\t\t\t\tfrom \"awayjs-core/lib/events/ProjectionEvent\";\nimport IProjection\t\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\nimport PerspectiveProjection\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\n\nimport HierarchicalProperties\t\tfrom \"../base/HierarchicalProperties\";\nimport IRenderer\t\t\t\t\tfrom \"../IRenderer\";\nimport BoundsType\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport DisplayObjectContainer\t\tfrom \"../display/DisplayObjectContainer\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport CameraEvent\t\t\t\t\tfrom \"../events/CameraEvent\";\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-sprites, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport default Camera;",
    "import Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LightBase\t\t\t\t\tfrom \"../display/LightBase\";\nimport HierarchicalProperties\t\tfrom \"../base/HierarchicalProperties\";\nimport BoundsType\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport DirectionalShadowMapper\t\tfrom \"../materials/shadowmappers/DirectionalShadowMapper\";\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport default DirectionalLight;",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport ArgumentError\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\nimport RangeError\t\t\t\t\tfrom \"awayjs-core/lib/errors/RangeError\";\nimport Extensions\t\t\t\t\tfrom \"awayjs-core/lib/utils/Extensions\";\n\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport HierarchicalProperties\t\tfrom \"../base/HierarchicalProperties\";\nimport PartitionBase\t\t\t\tfrom \"../partition/PartitionBase\";\nimport Scene\t\t\t\t\t\tfrom \"../display/Scene\";\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._invalidateChildren();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._invalidateChildren();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setBoundIdentity();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tprivate _invalidateChildren()\n\t{\n\t\tif (this._pIsContainer != Boolean(this._children.length)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsContainer = Boolean(this._children.length);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n}\n\nexport default DisplayObjectContainer;",
    "import BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport MathConsts\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport LoaderInfo\t\t\t\t\tfrom \"awayjs-core/lib/library/LoaderInfo\";\nimport EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IRenderer\t\t\t\t\tfrom \"../IRenderer\";\nimport IDisplayObjectAdapter\t\tfrom \"../adapters/IDisplayObjectAdapter\";\nimport HierarchicalProperties\t\tfrom \"../base/HierarchicalProperties\";\nimport BoundsType\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport DisplayObjectContainer\t\tfrom \"../display/DisplayObjectContainer\";\nimport Scene\t\t\t\t\t\tfrom \"../display/Scene\";\nimport ControllerBase\t\t\t\tfrom \"../controllers/ControllerBase\";\nimport AlignmentMode\t\t\t\tfrom \"../base/AlignmentMode\";\nimport OrientationMode\t\t\t\tfrom \"../base/OrientationMode\";\nimport IBitmapDrawable\t\t\t\tfrom \"../base/IBitmapDrawable\";\nimport Transform\t\t\t\t\tfrom \"../base/Transform\";\nimport PartitionBase\t\t\t\tfrom \"../partition/PartitionBase\";\nimport IPickingCollider\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\nimport Camera\t\t\t\t\t\tfrom \"../display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport DisplayObjectEvent\t\t\tfrom \"../events/DisplayObjectEvent\";\nimport TransformEvent\t\t\t\tfrom \"../events/TransformEvent\";\nimport PrefabBase\t\t\t\t\tfrom \"../prefabs/PrefabBase\";\nimport ITraverser\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pickingCollider:IPickingCollider;\n\tprivate _pickingCollision:PickingCollision;\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _boundsType:string;\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis.invalidate();\n\t\t\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pickingCollider:IPickingCollider;\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\t\tnewInstance.castsShadows = this.castsShadows;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(cameraTransform:Matrix3D):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = cameraTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollision():PickingCollision\n\t{\n\t\tif (!this._pickingCollision)\n\t\t\tthis._pickingCollision = new PickingCollision(this);\n\n\t\treturn this._pickingCollision;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartitionBounds();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc abstraction objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _acceptTraverser(collector:ITraverser)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent)\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent)\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartitionBounds();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\n\t\t\tthis.pickingCollider =  this._pParent.pickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n\n\tpublic invalidatePartitionBounds()\n\t{\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default DisplayObject;",
    "import Matrix3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport DisplayObjectContainer\tfrom \"../display/DisplayObjectContainer\";\nimport Camera\t\t\t\t\tfrom \"../display/Camera\";\nimport IEntity\t\t\t\t\tfrom \"../display/IEntity\";\nimport LightEvent\t\t\t\tfrom \"../events/LightEvent\";\nimport ShadowMapperBase\t\t\tfrom \"../materials/shadowmappers/ShadowMapperBase\";\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _shadowsEnabled:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get shadowsEnabled():boolean\n\t{\n\t\treturn this._shadowsEnabled;\n\t}\n\n\tpublic set shadowsEnabled(value:boolean)\n\t{\n\t\tif (this._shadowsEnabled == value)\n\t\t\treturn;\n\n\t\tthis._shadowsEnabled = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport default LightBase;",
    "import ImageCube\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nimport SamplerCube\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ErrorBase\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nimport LightBase\t\t\t\t\tfrom \"../display/LightBase\";\nimport BoundsType\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport Camera\t\t\t\t\t\tfrom \"../display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport default LightProbe;",
    "﻿import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport IAnimator\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport IRenderable\t\t\t\t\tfrom \"../base/IRenderable\";\nimport BoundsType\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport RenderableEvent\t\t\t\tfrom \"../events/RenderableEvent\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport Style\t\t\t\t\t\tfrom \"../base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport IPickingCollider\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderable\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateElements();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateElements();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateElements();\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidateElements()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false; //TODO: detect line collisions\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n}\n\nexport default LineSegment;",
    "import AssetLibraryBundle\t\t\tfrom \"awayjs-core/lib/library/AssetLibraryBundle\";\nimport Loader\t\t\t\t\t\tfrom \"awayjs-core/lib/library/Loader\";\nimport LoaderContext\t\t\t\tfrom \"awayjs-core/lib/library/LoaderContext\";\nimport URLRequest\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport URLLoaderEvent\t\t\t\tfrom \"awayjs-core/lib/events/URLLoaderEvent\";\nimport LoaderEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/LoaderEvent\";\nimport ParserEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/ParserEvent\";\nimport ParserBase\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\n\nimport DisplayObjectContainer\t\tfrom \"../display/DisplayObjectContainer\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (sprites, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader()\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}\n\nexport default LoaderContainer;",
    "import AssetEvent                   from \"awayjs-core/lib/events/AssetEvent\";\n\nimport DisplayObject                from \"../display/DisplayObject\";\nimport Sprite                       from \"../display/Sprite\";\nimport TextField                    from \"../display/TextField\";\nimport MouseEvent                   from \"../events/MouseEvent\";\nimport IMovieClipAdapter\t    \tfrom \"../adapters/IMovieClipAdapter\";\nimport Timeline                     from \"../base/Timeline\";\nimport FrameScriptManager           from \"../managers/FrameScriptManager\";\n\nclass MovieClip extends Sprite\n{\n\tprivate static _skipAdvance:boolean;\n\n\tprivate static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n\tpublic static assetType:string = \"[asset MovieClip]\";\n\n\tprivate _timeline:Timeline;\n\n\tprivate _isButton:boolean = false;\n\tprivate _onMouseOver:(event:MouseEvent) => void;\n\tprivate _onMouseOut:(event:MouseEvent) => void;\n\tprivate _onMouseDown:(event:MouseEvent) => void;\n\tprivate _onMouseUp:(event:MouseEvent) => void;\n\n\tprivate _time:number = 0;// the current time inside the animation\n\tprivate _currentFrameIndex:number = -1;// the current frame\n\n\tprivate _isPlaying:boolean = true;// false if paused or stopped\n\n\t// not sure if needed\n\tprivate _enterFrame:AssetEvent;\n\tprivate _skipAdvance : boolean;\n\tprivate _isInit:boolean = true;\n\n\tprivate _potentialInstances:Array<DisplayObject> = [];\n\tprivate _depth_sessionIDs:Object = {};\n\tprivate _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n\tconstructor(timeline:Timeline = null)\n\t{\n\t\tsuper();\n\n\t\tthis._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n\t\tthis.inheritColorTransform = true;\n\n\t\tthis._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n\t\tthis._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n\t\tthis._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n\t\tthis._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n\t\tthis._timeline = timeline || new Timeline();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tMovieClip._movieClips.push(this);\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._potentialInstances = [];\n\t\tthis._depth_sessionIDs = {};\n\t\tthis._sessionID_childs = {};\n\t}\n\n\tpublic reset_textclones()\n\t{\n\t\tif(this.timeline) {\n\t\t\tvar len:number = this._potentialInstances.length;\n\t\t\tfor (var i:number = 0; i< len; i++) {\n\t\t\t\tif (this._potentialInstances[i] != null) {\n\t\t\t\t\tif (this._potentialInstances[i].isAsset(TextField))\n\t\t\t\t\t\t(<TextField>this._potentialInstances[i]).text = (<TextField>this.timeline.getPotentialChildPrototype(i)).text;\n\t\t\t\t\telse if (this._potentialInstances[i].isAsset(MovieClip))\n\t\t\t\t\t\t(<MovieClip>this._potentialInstances[i]).reset_textclones();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get isInit():boolean\n\t{\n\t\treturn this._isInit;\n\t}\n\tpublic set isInit(value:boolean)\n\t{\n\t\tthis._isInit = value;\n\t}\n\n\tpublic get timeline():Timeline\n\t{\n\t\treturn this._timeline;\n\t}\n\n\tpublic set timeline(value:Timeline)\n\t{\n\t\tthis._timeline = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic loop:boolean = true;\n\n\tpublic get numFrames() : number\n\t{\n\t\treturn this._timeline.numFrames;\n\t}\n\n\tpublic jumpToLabel(label:string)\n\t{\n\t\t// the timeline.jumpTolabel will set currentFrameIndex\n\t\tthis._timeline.jumpToLabel(this, label);\n\t}\n\n\t/**\n\t * the current index of the current active frame\n\t */\n\tpublic constructedKeyFrameIndex:number = -1;\n\n\tpublic reset():void\n\t{\n\t\tsuper.reset();\n\n\t\t// time only is relevant for the root mc, as it is the only one that executes the update function\n\t\tthis._time = 0;\n\n\t\tif(this.adapter)\n\t\t\tthis.adapter.freeFromScript();\n\n\t\tthis.constructedKeyFrameIndex = -1;\n\t\tfor (var i:number = this.numChildren - 1; i >= 0; i--)\n\t\t\tthis.removeChildAt(i);\n\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\t\tthis._isPlaying = Boolean(numFrames > 1);\n\t\tif (numFrames) {\n\t\t\tthis._currentFrameIndex = 0;\n\t\t\tthis._timeline.constructNextFrame(this, true, true);\n\t\t} else {\n\t\t\tthis._currentFrameIndex = -1;\n\t\t}\n\t}\n\n\n\tpublic resetSessionIDs()\n\t{\n\t\tthis._depth_sessionIDs = {};\n\t}\n\n\t/*\n\t* Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n\t */\n\tpublic get currentFrameIndex():number\n\t{\n\t\treturn this._currentFrameIndex;\n\t}\n\n\tpublic set currentFrameIndex(value:number)\n\t{\n\t\t//if currentFrame is set greater than the available number of\n\t\t//frames, the playhead is moved to the last frame in the timeline.\n\t\t//But because the frame specified was not a keyframe, no scripts are\n\t\t//executed, even if they exist on the last frame.\n\t\tvar skip_script:boolean = false;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\n\t\tif (!numFrames)\n\t\t\treturn;\n\n\t\tif (value < 0) {\n\t\t\tvalue = 0;\n\t\t} else if (value >= numFrames) {\n\t\t\tvalue = numFrames - 1;\n\t\t\tskip_script = true;\n\t\t}\n\n\t\tif (this._currentFrameIndex == value)\n\t\t\treturn;\n\n\t\tthis._currentFrameIndex = value;\n\n\t\t//changing current frame will ignore advance command for that\n\t\t//update's advanceFrame function, unless advanceFrame has\n\t\t//already been executed\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tthis._timeline.gotoFrame(this, value, skip_script);\n\t}\n\n\tpublic addButtonListeners()\n\t{\n\t\tthis._isButton = true;\n\n\t\tthis.stop();\n\n\t\tthis.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\t}\n\n\tpublic removeButtonListeners()\n\t{\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n\t}\n\n\tpublic getChildAtSessionID(sessionID:number):DisplayObject\n\t{\n\t\treturn this._sessionID_childs[sessionID];\n\t}\n\n\tpublic getSessionIDDepths():Object\n\t{\n\t\treturn this._depth_sessionIDs;\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\t//this should be implemented for all display objects\n\t\tchild.inheritColorTransform = true;\n\n\t\tchild.reset();// this takes care of transform and visibility\n\n\t\treturn super.addChildAtDepth(child, depth, replace);\n\t}\n\n\tpublic _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n\t{\n\t\tthis._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n\t\tthis._sessionID_childs[sessionID] = child;\n\n\t\treturn this.addChildAtDepth(child, depth);\n\t}\n\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif(child.adapter)\n\t\t\tchild.adapter.freeFromScript();\n\n\t\tthis.adapter.unregisterScriptObject(child);\n\n\t\t//check to make sure _depth_sessionIDs wasn't modified with a new child\n\t\tif (this._depth_sessionIDs[child._depthID] == child._sessionID)\n\t\t\tdelete this._depth_sessionIDs[child._depthID];\n\n\t\tdelete this._sessionID_childs[child._sessionID];\n\n\t\tchild._sessionID = -1;\n\n\t\treturn super.removeChildAtInternal(index);\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn MovieClip.assetType;\n\t}\n\n\t/**\n\t * Starts playback of animation from current position\n\t */\n\tpublic play()\n\t{\n\t\tif (this._timeline.keyframe_indices.length > 1)\n\t\t\tthis._isPlaying = true;\n\t}\n\n\t/**\n\t * should be called right before the call to away3d-render.\n\t */\n\tpublic update()\n\t{\n\t\tMovieClip._skipAdvance = true;\n\n\t\tthis.advanceFrame();\n\n\t\tMovieClip._skipAdvance = false;\n\n\t\t// after we advanced the scenegraph, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we want to execute the onEnter\n\t\tthis.dispatchEvent(this._enterFrame);\n\n\t\t// after we executed the onEnter, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we execute any intervals queued\n\t\tFrameScriptManager.execute_intervals();\n\n\t\t// finally, we execute any scripts that were added from intervals\n\t\tFrameScriptManager.execute_queue();\n\n\t\t//execute any disposes as a result of framescripts\n\t\tFrameScriptManager.execute_dispose();\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tif (!this._potentialInstances[id])\n\t\t\tthis._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n\t\treturn this._potentialInstances[id];\n\t}\n\n\n\t/**\n\t * Stop playback of animation and hold current position\n\t */\n\tpublic stop()\n\t{\n\t\tthis._isPlaying = false;\n\t}\n\n\tpublic clone():MovieClip\n\t{\n\t\tvar newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:MovieClip)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.timeline = this._timeline;\n\t\tnewInstance.loop = this.loop;\n\t}\n\n\tpublic advanceFrame()\n\t{\n\t\tif (this._isPlaying && !this._skipAdvance) {\n\t\t\tif (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n\t\t\t\tif (this.loop) // end of loop - jump to first frame.\n\t\t\t\t\tthis.currentFrameIndex = 0;\n\t\t\t\telse //end of timeline, stop playing\n\t\t\t\t\tthis._isPlaying = false;\n\t\t\t} else { // not end - construct next frame\n\t\t\t\tthis._currentFrameIndex++;\n\t\t\t\tthis._timeline.constructNextFrame(this);\n\t\t\t}\n\t\t}\n\n\t\tvar len:number = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i <  len; ++i) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).advanceFrame();\n\t\t}\n\n\t\tthis._skipAdvance = false;\n\t}\n\n// DEBUG CODE:\n\tlogHierarchy(depth: number = 0):void\n\t{\n\t\tthis.printHierarchyName(depth, this);\n\n\t\tvar len = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).logHierarchy(depth + 1);\n\t\t\telse\n\t\t\t\tthis.printHierarchyName(depth + 1, child);\n\t\t}\n\t}\n\n\tprintHierarchyName(depth:number, target:DisplayObject)\n\t{\n\t\tvar str = \"\";\n\t\tfor (var i = 0; i < depth; ++i)\n\t\t\tstr += \"--\";\n\n\t\tstr += \" \" + target.name + \" = \" + target.id;\n\t\tconsole.log(str);\n\t}\n\n\tpublic clear()\n\t{\n\t\t//clear out potential instances\n\t\tvar len:number = this._potentialInstances.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tvar instance:DisplayObject = this._potentialInstances[i];\n\n\t\t\t//only dispose instances that are not used in script ie. do not have an instance name\n\t\t\tif (instance && instance.name == \"\") {\n\t\t\t\tFrameScriptManager.add_child_to_dispose(instance);\n\t\t\t\tdelete this._potentialInstances[i];\n\t\t\t}\n\t\t}\n\n\t\tsuper.clear();\n\t}\n}\nexport default MovieClip;\n",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LightBase\t\t\t\t\tfrom \"../display/LightBase\";\nimport BoundsType\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport Camera\t\t\t\t\t\tfrom \"../display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport CubeMapShadowMapper\t\t\tfrom \"../materials/shadowmappers/CubeMapShadowMapper\";\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport default PointLight;",
    "import ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport DisplayObjectContainer\t\tfrom \"../display/DisplayObjectContainer\";\nimport BasicPartition\t\t\t\tfrom \"../partition/BasicPartition\";\nimport PartitionBase\t\t\t\tfrom \"../partition/PartitionBase\";\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:ITraverser)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport default Scene;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport IAnimator\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport Graphics\t\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport ElementsBase\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport DisplayObjectContainer\t\tfrom \"../display/DisplayObjectContainer\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport TextureBase\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport ElementsUtils\t\t\t\tfrom \"../utils/ElementsUtils\";\nimport Style\t\t\t\t\t\tfrom \"../base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"../events/StyleEvent\";\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Shape class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Shape object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Shape objects that contain the same graphics.\n * However, a Shape object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate static _shapes:Array<Shape> = new Array<Shape>();\n\n\tpublic static assetType:string = \"[asset Shape]\";\n\n\tprivate _center:Vector3D;\n\tprivate _graphics:Graphics;\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Shape.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Shape.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Shape object.\n\t *\n\t * @param material    [optional]        The material with which to render the Shape.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tShape._shapes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Shape instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this shape,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subShapees, children of the shape, and the animator.\n\t *\n\t * If you want to copy just the shape, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new shape manually:\n\t *\n\t * <code>\n\t * var clone : Shape = new Shape(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Shape\n\t{\n\t\tvar newInstance:Shape = (Shape._shapes.length)? Shape._shapes.pop() : new Shape();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(shape:Shape)\n\t{\n\t\tsuper.copyTo(shape);\n\n\t\tthis._graphics.copyTo(shape.graphics);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _onGraphicsInvalidate(event:AssetEvent)\n\t{\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport default Shape;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport ImageCube\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\n\nimport IAnimationSet\t\t\t\tfrom \"../animators/IAnimationSet\";\nimport IAnimator\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport IRenderable\t\t\t\t\tfrom \"../base/IRenderable\";\nimport ISurface\t\t\t\t\t\tfrom \"../base/ISurface\";\nimport BoundsType\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport RenderableEvent\t\t\t\tfrom \"../events/RenderableEvent\";\nimport SurfaceEvent\t\t\t\t\tfrom \"../events/SurfaceEvent\";\nimport LightPickerBase\t\t\t\tfrom \"../materials/lightpickers/LightPickerBase\";\nimport SingleCubeTexture\t\t\tfrom \"../textures/SingleCubeTexture\";\nimport TextureBase\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport Style\t\t\t\t\t\tfrom \"../base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport IPickingCollider\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderable, ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _owners:Array<IRenderable>;\n\tprivate _curves:boolean = false;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether skybox should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._owners = new Array<IRenderable>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateElements()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\t\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default Skybox;",
    "﻿import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport IAnimator\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport Graphics\t\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport ElementsBase\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport DisplayObjectContainer\t\tfrom \"../display/DisplayObjectContainer\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport TextureBase\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport ElementsUtils\t\t\t\tfrom \"../utils/ElementsUtils\";\nimport Style\t\t\t\t\t\tfrom \"../base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"../events/StyleEvent\";\n\n/**\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nclass Sprite extends DisplayObjectContainer\n{\n\tprivate static _sprites:Array<Sprite> = new Array<Sprite>();\n\n\tpublic static assetType:string = \"[asset Sprite]\";\n\n\tprivate _center:Vector3D;\n\tpublic _graphics:Graphics; //TODO\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sprite.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Sprite object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Sprite.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Sprite object.\n\t *\n\t * @param material    [optional]        The material with which to render the Sprite.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tSprite._sprites.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Sprite instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this sprite,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subSpritees, children of the sprite, and the animator.\n\t *\n\t * If you want to copy just the sprite, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new sprite manually:\n\t *\n\t * <code>\n\t * var clone : Sprite = new Sprite(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Sprite\n\t{\n\t\tvar newInstance:Sprite = (Sprite._sprites.length)? Sprite._sprites.pop() : new Sprite();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(sprite:Sprite)\n\t{\n\t\tsuper.copyTo(sprite);\n\n\t\tthis._graphics.copyTo(sprite.graphics);\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _onGraphicsInvalidate(event:AssetEvent)\n\t{\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport default Sprite;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Float2Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\nimport Byte4Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\n\nimport HierarchicalProperties\t\tfrom \"../base/HierarchicalProperties\";\nimport Style \t\t\t\t\t\tfrom \"../base/Style\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport AntiAliasType\t\t\t\tfrom \"../text/AntiAliasType\";\nimport GridFitType\t\t\t\t\tfrom \"../text/GridFitType\";\nimport TextFieldAutoSize\t\t\tfrom \"../text/TextFieldAutoSize\";\nimport TextFieldType\t\t\t\tfrom \"../text/TextFieldType\";\nimport TextFormat\t\t\t\t\tfrom \"../text/TextFormat\";\nimport TextInteractionMode\t\t\tfrom \"../text/TextInteractionMode\";\nimport TextLineMetrics\t\t\t\tfrom \"../text/TextLineMetrics\";\nimport Sprite\t\t\t\t\t\tfrom \"../display/Sprite\";\nimport Graphics\t\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport Graphic\t\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport ElementsBase\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport TesselatedFontChar\t\t\tfrom \"../text/TesselatedFontChar\";\nimport TextFormatAlign\t\t\t\tfrom \"../text/TextFormatAlign\";\nimport DisplayObjectContainer\t\tfrom \"../display/DisplayObjectContainer\";\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Sprite\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGraphicsDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\tprivate _textElements:TriangleElements;\n\tprivate _textGraphic:Graphic;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\n\t/**\n\t * The graphics used by the sprite that provides it with its shape.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._textGraphicsDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn true; //TODO do this better\n\t}\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tif (this._textElements)\n\t\t\tthis._textElements.clear();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t\tthis._textGraphic = null;\n\n\t\tif (this._textElements) {\n\t\t\tthis._textElements.dispose();\n\t\t\tthis._textElements = null;\n\t\t}\n\t}\n\n\t/**\n\t * Reconstructs the Graphics for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGraphicsDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\n\t\tif (this._textGraphic) {\n\t\t\tthis._textGraphic.dispose();\n\t\t\tthis._textGraphic = null;\n\n\t\t\tthis._textElements.clear();\n\t\t\tthis._textElements.dispose();\n\t\t\tthis._textElements = null;\n\t\t}\n\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar numVertices:number = 0;\n\t\tvar elements:TriangleElements;\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale)+this._textFormat.letterSpacing;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tvar final_lines_justify_bool:Array<Boolean> = [];\n\t\tvar final_lines_justify:Array<number> = [];\n\t\tvar maxlineWidth:number=this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\t\t\tfinal_lines_justify.push(0);\n\t\t\tfinal_lines_justify_bool.push(false);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\telements = this_char.elements;\n\t\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\t\tnumVertices += elements.numVertices;\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((2 + this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif (((final_lines_width[final_lines_width.length - 1] + word_width) <= maxlineWidth)||(final_lines_chars[final_lines_chars.length - 1].length==0)) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tif(final_lines_chars[final_lines_chars.length - 1][final_lines_chars[final_lines_chars.length - 1].length-1]==null){\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].pop();\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].pop();\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] -= whitespace_width;\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]-=1;\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_justify_bool[final_lines_justify_bool.length - 1]=true;\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfinal_lines_justify.push(0);\n\t\t\t\t\tfinal_lines_justify_bool.push(false);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1]) <= maxlineWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]+=1;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ty_offset=2+(this._textFormat.font_table.ascent-this._textFormat.font_table.get_font_em_size())*char_scale;\n\n\t\tvar vertices:Float32Array = new Float32Array(numVertices*3);\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number= 2 + this._textFormat.leftMargin + this._textFormat.indent;\n\t\t\tvar justify_addion:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=2 + this._textFormat.leftMargin + this._textFormat.indent+(maxlineWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"justify\"){\n\t\t\t\tif(final_lines_justify_bool[i]){\n\t\t\t\t\tjustify_addion=((maxlineWidth)-final_lines_width[i])/final_lines_justify[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-(2 + this._textFormat.rightMargin);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\telements = this_char.elements;\n\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\tvar buffer:Float32Array = new Float32Array(elements.concatenatedBuffer.buffer);\n\t\t\t\t\t\tfor (var v:number = 0; v < elements.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3]*char_scale + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 1]*char_scale + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// hack for multiline textfield in icycle.\n\n\t\t\ty_offset+=(this._textFormat.font_table.ascent + this._textFormat.font_table.descent)*char_scale;\n\t\t\t//y_offset+=(this._textFormat.font_table.get_font_em_size()-this._textFormat.font_table.descent)*char_scale;\n\t\t\ty_offset+= this._textFormat.leading;\n\n\n\t\t}\n\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 3);\n\t\tattributesView.set(vertices);\n\t\tvar vertexBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\n\t\tthis._textElements = new TriangleElements(vertexBuffer);\n\t\tthis._textElements.setPositions(new Float2Attributes(vertexBuffer));\n\t\tthis._textElements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\n\n\t\tthis._textGraphic = this._graphics.addGraphic(this._textElements);\n\n\t\tthis.material = this._textFormat.material;\n\t\tvar sampler:Sampler2D = new Sampler2D();\n\t\tthis.style = new Style();\n\t\tthis.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n\t\tthis.style.uvMatrix = new Matrix(0,0,0,0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n\t\tthis.material.animateUVs = true;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport default TextField;",
    "export {default as Billboard}\t\t\t\t\t\tfrom \"./display/Billboard\";\nexport {default as Camera}\t\t\t\t\t\t\tfrom \"./display/Camera\";\nexport {default as DirectionalLight}\t\t\t\tfrom \"./display/DirectionalLight\";\nexport {default as DisplayObject}\t\t\t\t\tfrom \"./display/DisplayObject\";\nexport {default as DisplayObjectContainer}\t\t\tfrom \"./display/DisplayObjectContainer\";\nexport {default as IEntity}\t\t\t\t\t\t\tfrom \"./display/IEntity\";\nexport {default as LightBase}\t\t\t\t\t\tfrom \"./display/LightBase\";\nexport {default as LightProbe}\t\t\t\t\t\tfrom \"./display/LightProbe\";\nexport {default as LineSegment}\t\t\t\t\t\tfrom \"./display/LineSegment\";\nexport {default as LoaderContainer}\t\t\t\t\tfrom \"./display/LoaderContainer\";\nexport {default as MovieClip}\t\t\t\t\t\tfrom \"./display/MovieClip\";\nexport {default as PointLight}\t\t\t\t\t\tfrom \"./display/PointLight\";\nexport {default as Scene}\t\t\t\t\t\t\tfrom \"./display/Scene\";\nexport {default as Shape}\t\t\t\t\t\t\tfrom \"./display/Shape\";\nexport {default as Skybox}\t\t\t\t\t\t\tfrom \"./display/Skybox\";\nexport {default as Sprite}\t\t\t\t\t\t\tfrom \"./display/Sprite\";\nexport {default as TextField}\t\t\t\t\t\tfrom \"./display/TextField\";\n",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:number = 1;\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:number = 0;\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:number = 2;\n}\n\nexport default CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport default GradientType;",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\n\nimport CapsStyle\t\t\t\tfrom \"../draw/CapsStyle\";\nimport GradientType\t\t\t\tfrom \"../draw/GradientType\";\nimport GraphicsPathWinding\t\tfrom \"../draw/GraphicsPathWinding\";\nimport IGraphicsData\t\t\tfrom \"../draw/IGraphicsData\";\nimport InterpolationMethod\t\tfrom \"../draw/InterpolationMethod\";\nimport JointStyle\t\t\t\tfrom \"../draw/JointStyle\";\nimport LineScaleMode\t\t\tfrom \"../draw/LineScaleMode\";\nimport TriangleCulling\t\t\tfrom \"../draw/TriangleCulling\";\nimport SpreadMethod\t\t\t\tfrom \"../draw/SpreadMethod\";\n\nimport Style\t\t\t\t\tfrom \"../base/Style\";\nimport Graphics\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport Graphic\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport GraphicsPath\t\t\t\tfrom \"../draw/GraphicsPath\";\nimport GraphicsPathCommand\t\tfrom \"../draw/GraphicsPathCommand\";\nimport DefaultMaterialManager\tfrom \"../managers/DefaultMaterialManager\";\nimport MovieClip\t\t\t\tfrom \"../display/MovieClip\";\n\nimport Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Sprite\t\t\t\t\tfrom \"../display/Sprite\";\nimport Float3Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float2Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\n\nimport MathConsts\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\n\nimport GraphicsFactoryHelper\t\t\t\tfrom \"../draw/GraphicsFactoryHelper\";\n\nimport PartialImplementationError\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nimport TriangleElements from \"../graphics/TriangleElements\";\nimport MaterialBase from \"../materials/MaterialBase\";\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass GraphicsFactoryFills\n{\n\n\tpublic static draw_pathes(targetGraphic:Graphics) {\n\t\tvar len=targetGraphic.queued_fill_pathes.length;\n\t\tvar cp=0;\n\t\tfor(cp=0; cp<len; cp++){\n\t\t\tvar one_path:GraphicsPath = targetGraphic.queued_fill_pathes[cp];\n\t\t\t//one_path.finalizeContour();\n\t\t\tvar contour_commands:Array<Array<number> > = one_path.commands;\n\t\t\tvar contour_data:Array<Array<number> > = one_path.data;\n\t\t\tvar commands:Array<number>;\n\t\t\tvar data:Array<number>;\n\t\t\tvar i:number = 0;\n\t\t\tvar k:number = 0;\n\t\t\tvar vert_cnt:number = 0;\n\t\t\tvar data_cnt:number = 0;\n\t\t\tvar draw_direction:number = 0;\n\t\t\tvar contours_vertices:Array<Array<number>> = [[]];\n\t\t\tvar final_vert_list:Array<number> = [];\n\t\t\tvar final_vert_cnt:number = 0;\n\t\t\tvar lastPoint:Point = new Point();\n\t\t\tvar last_dir_vec:Point=new Point();\n\t\t\tvar end_point:Point=new Point();\n\t\t\tfor (k = 0; k < contour_commands.length; k++) {\n\t\t\t\tcontours_vertices.push([]);\n\t\t\t\tvert_cnt = 0;\n\t\t\t\tdata_cnt = 0;\n\t\t\t\tcommands = contour_commands[k];\n\t\t\t\tdata = contour_data[k];\n\t\t\t\tdraw_direction = 0;\n\n\t\t\t\tvar new_dir:number=0;\n\t\t\t\tvar new_dir_1:number=0;\n\t\t\t\tvar new_dir_2:number=0;\n\t\t\t\tvar dir_delta:number=0;\n\t\t\t\tvar last_direction:number=0;\n\n\t\t\t\tvar tmp_dir_point:Point=new Point();\n\t\t\t\tif((data[0] != data[data.length-2]) || (data[1] != data[data.length-1])){\n\t\t\t\t\tdata[data.length]==data[0];\n\t\t\t\t\tdata[data.length]==data[1];\n\t\t\t\t}\n\n\t\t\t\tlastPoint.x = data[0];\n\t\t\t\tlastPoint.y = data[1];\n\t\t\t\tif(commands[1]==GraphicsPathCommand.LINE_TO){\n\t\t\t\t\tlast_dir_vec.x = data[2]-lastPoint.x;\n\t\t\t\t\tlast_dir_vec.y = data[3]-lastPoint.y;\n\t\t\t\t}\n\t\t\t\telse if(commands[1]==GraphicsPathCommand.CURVE_TO){\n\t\t\t\t\tlast_dir_vec.x = data[4]-lastPoint.x;\n\t\t\t\t\tlast_dir_vec.y = data[5]-lastPoint.y;\n\t\t\t\t}\n\t\t\t\tdata_cnt=2;\n\t\t\t\tlast_dir_vec.normalize();\n\t\t\t\tlast_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\tfor (i = 1; i < commands.length; i++) {\n\t\t\t\t\tend_point = new Point(data[data_cnt++], data[data_cnt++]);\n\t\t\t\t\tif (commands[i]==GraphicsPathCommand.MOVE_TO) {\n\t\t\t\t\t\tconsole.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n\t\t\t\t\t}\n\t\t\t\t\telse if (commands[i]==GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\t\tend_point = new Point(data[data_cnt++], data[data_cnt++]);\n\n\t\t\t\t\t}\n\t\t\t\t\t//get the directional vector and the direction for this segment\n\t\t\t\t\ttmp_dir_point.x = end_point.x - lastPoint.x;\n\t\t\t\t\ttmp_dir_point.y = end_point.y - lastPoint.y;\n\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\tnew_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t// get the difference in angle to the last segment\n\t\t\t\t\tdir_delta = new_dir - last_direction;\n\t\t\t\t\tif(dir_delta>180){\n\t\t\t\t\t\tdir_delta-=360;\n\t\t\t\t\t}\n\t\t\t\t\tif(dir_delta<-180){\n\t\t\t\t\t\tdir_delta+=360;\n\t\t\t\t\t}\n\t\t\t\t\tdraw_direction += dir_delta;\n\t\t\t\t\tlast_direction = new_dir;\n\t\t\t\t\tlastPoint.x = end_point.x;\n\t\t\t\t\tlastPoint.y = end_point.y;\n\t\t\t\t}\n\t\t\t\tlastPoint.x = data[0];\n\t\t\t\tlastPoint.y = data[1];\n\t\t\t\tdata_cnt=2;\n\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t//console.log(\"Draw directions complete: \"+draw_direction);\n\t\t\t\tfor (i = 1; i < commands.length; i++) {\n\t\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\t\tconsole.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\n\t\t\t\t\t\t\ttmp_dir_point.x = control_x - lastPoint.x;\n\t\t\t\t\t\t\ttmp_dir_point.y = control_y - lastPoint.y;\n\t\t\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\t\t\tnew_dir_1 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\t\ttmp_dir_point.x = end_x - lastPoint.x;\n\t\t\t\t\t\t\ttmp_dir_point.y = end_y - lastPoint.y;\n\t\t\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\t\t\tnew_dir_2 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\t\t// get the difference in angle to the last segment\n\t\t\t\t\t\t\tvar curve_direction:number = new_dir_2 - new_dir_1;\n\t\t\t\t\t\t\tif(curve_direction>180){\n\t\t\t\t\t\t\t\tcurve_direction-=360;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(curve_direction<-180){\n\t\t\t\t\t\t\t\tcurve_direction+=360;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif((curve_direction==0)&&(curve_direction==180)&&(curve_direction==-180)){\n\t\t\t\t\t\t\t\tlastPoint.x = end_x;\n\t\t\t\t\t\t\t\tlastPoint.y = end_y;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar curve_attr_1 = -1;\n\t\t\t\t\t\t\tif (draw_direction < 0) {\n\t\t\t\t\t\t\t\tif (curve_direction > 0) {\n\t\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (curve_direction < 0) {\n\t\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (GraphicsFactoryHelper.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)) {\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastPoint.x = end_x;\n\t\t\t\t\t\t\tlastPoint.y = end_y;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE:\n\t\t\t\t\t\t\t//todo\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar verts:Array<number> = [];\n\t\t\tvar all_verts:Array<Point> = [];\n\t\t\tvar vertIndicess:Array<number> = [];\n\t\t\tvar elems:Array<number> = [];\n\t\t\tfor (k = 0; k < contours_vertices.length; k++) {\n\t\t\t\tvar vertices = contours_vertices[k];\n\n\t\t\t\t //for (i = 0; i < vertices.length / 2; ++i)\n\t\t\t\t //console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n\n\n\n\t\t\t\tvar verticesF32 = new Float32Array(vertices);\n\t\t\t\t//var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n\t\t\t\t//console.log(\"in vertices\", vertices);\n\t\t\t\t//var tess = new TESS();\n\t\t\t\tif (GraphicsFactoryHelper._tess_obj == null) {\n\t\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tGraphicsFactoryHelper._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n\n\t\t\t}\n\t\t\tGraphicsFactoryHelper._tess_obj.tesselate(0/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\t\t//console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n\t\t\tverts = GraphicsFactoryHelper._tess_obj.getVertices();\n\t\t\telems = GraphicsFactoryHelper._tess_obj.getElements();\n\t\t\t//console.log(\"out elements\", Graphics._tess_obj.getElements());\n\n\n\t\t\tvar numVerts:number = verts.length / 2;\n\t\t\tvar numElems:number = elems.length / 3;\n\t\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\t\tvar p1 = elems[i * 3];\n\t\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t}\n\t\t\t//for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t\t//\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\t\tattributesView.set(final_vert_list);\n\t\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\t\tattributesView.dispose();\n\t\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\t\tmaterial.bothSides = true;\n\t\t\tmaterial.useColorTransform = true;\n\t\t\tmaterial.curves = true;\n\t\t\tvar thisGraphic:Graphic=targetGraphic.addGraphic(elements, material);\n\t\t}\n\t\ttargetGraphic.queued_fill_pathes.length=0;\n\t}\n}\n\nexport default GraphicsFactoryFills;",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\n\nimport CapsStyle\t\t\t\tfrom \"../draw/CapsStyle\";\nimport GradientType\t\t\t\tfrom \"../draw/GradientType\";\nimport GraphicsPathWinding\t\tfrom \"../draw/GraphicsPathWinding\";\nimport IGraphicsData\t\t\tfrom \"../draw/IGraphicsData\";\nimport InterpolationMethod\t\tfrom \"../draw/InterpolationMethod\";\nimport JointStyle\t\t\t\tfrom \"../draw/JointStyle\";\nimport LineScaleMode\t\t\tfrom \"../draw/LineScaleMode\";\nimport TriangleCulling\t\t\tfrom \"../draw/TriangleCulling\";\nimport SpreadMethod\t\t\t\tfrom \"../draw/SpreadMethod\";\n\nimport GraphicsPath\t\t\t\tfrom \"../draw/GraphicsPath\";\nimport GraphicsPathCommand\t\tfrom \"../draw/GraphicsPathCommand\";\nimport DefaultMaterialManager\tfrom \"../managers/DefaultMaterialManager\";\nimport MovieClip\t\t\t\tfrom \"../display/MovieClip\";\n\nimport Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Sprite\t\t\t\t\tfrom \"../display/Sprite\";\nimport Float3Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float2Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\n\nimport MathConsts\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\n\nimport PartialImplementationError\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nimport TriangleElements from \"../graphics/TriangleElements\";\nimport MaterialBase from \"../materials/MaterialBase\";\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass GraphicsFactoryHelper\n{\n\n\tpublic static _tess_obj:any;\n\n\n\tpublic static isClockWiseXY(point1x:number, point1y:number, point2x:number, point2y:number, point3x:number, point3y:number):boolean\n\t{\n\t\tvar num:number=(point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x);\n\t\tif(num < 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic static getSign(ax:number, ay:number, cx:number, cy:number, bx:number, by:number):number\n\t{\n\t\treturn (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n\n\t}\n\n\tpublic static pointInTri(ax:number, ay:number, bx:number, by:number ,cx:number, cy:number, xx:number, xy:number):boolean\n\t{\n\t\tvar b1:boolean = GraphicsFactoryHelper.getSign(ax, ay, xx, xy, bx, by) > 0;\n\t\tvar b2:boolean = GraphicsFactoryHelper.getSign(bx, by, xx, xy, cx, cy) > 0;\n\t\tvar b3:boolean = GraphicsFactoryHelper.getSign(cx, cy, xx, xy, ax, ay) > 0;\n\t\treturn ((b1 == b2) && (b2 == b3));\n\t}\n\n\tpublic static getControlXForCurveX(a:number, c:number, b:number):number\n\t{\n\t\treturn c;\n\t}\n\tpublic static getControlYForCurveY(a:number, c:number, b:number):number\n\t{\n\t\treturn c;\n\t}\n\tpublic static drawPoint(startX:number,startY:number, vertices:Array<number>)\n\t{\n\t\tGraphicsFactoryHelper.addTriangle(startX-2, startY-2, startX+2, startY-2, startX+2, startY+2, 0, vertices);\n\t\tGraphicsFactoryHelper.addTriangle(startX-2, startY-2, startX-2, startY+2, startX+2, startY+2, 0, vertices);\n\t}\n\tpublic static addTriangle(startX:number,startY:number, controlX:number, controlY:number, endX:number, endY:number, tri_type:number, vertices:Array<number>)\n\t{\n\t\tvar final_vert_cnt:number = vertices.length;\n\t\tif(tri_type==0){\n\t\t\tvertices[final_vert_cnt++] = startX;\n\t\t\tvertices[final_vert_cnt++] = startY;\n\t\t\tvertices[final_vert_cnt++] = 1;\n\t\t\tvertices[final_vert_cnt++] = 2.0;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t\tvertices[final_vert_cnt++] = controlX;\n\t\t\tvertices[final_vert_cnt++] = controlY;\n\t\t\tvertices[final_vert_cnt++] = 1;\n\t\t\tvertices[final_vert_cnt++] = 2.0;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t\tvertices[final_vert_cnt++] = endX;\n\t\t\tvertices[final_vert_cnt++] = endY;\n\t\t\tvertices[final_vert_cnt++] = 1;\n\t\t\tvertices[final_vert_cnt++] = 2.0;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t}\n\t\telse{\n\t\t\tvertices[final_vert_cnt++] = startX;\n\t\t\tvertices[final_vert_cnt++] = startY;\n\t\t\tvertices[final_vert_cnt++] = tri_type;\n\t\t\tvertices[final_vert_cnt++] = 1.0;\n\t\t\tvertices[final_vert_cnt++] = 1.0;\n\t\t\tvertices[final_vert_cnt++] = controlX;\n\t\t\tvertices[final_vert_cnt++] = controlY;\n\t\t\tvertices[final_vert_cnt++] = tri_type;\n\t\t\tvertices[final_vert_cnt++] = 0.5;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t\tvertices[final_vert_cnt++] = endX;\n\t\t\tvertices[final_vert_cnt++] = endY;\n\t\t\tvertices[final_vert_cnt++] = tri_type;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t}\n\n\t}\n\tpublic static createCap(startX:number, startY:number, start_le:Point, start_ri:Point, dir_vec:Point, capstyle:number, cap_position:number, thickness:number, vertices:Array<number>)\n\t{\n\n\t\tif (capstyle == CapsStyle.ROUND) {\n\t\t\t//console.log(\"add round cap\");\n\t\t\tvar tmp1_x:number = startX + (cap_position * (dir_vec.x * thickness));\n\t\t\tvar tmp1_y:number = startY + (cap_position * (dir_vec.y * thickness));\n\t\t\ttmp1_x = tmp1_x * 2 - start_le.x/2 - start_ri.x/2;\n\t\t\ttmp1_y = tmp1_y * 2 - start_le.y/2 - start_ri.y/2;\n\t\t\tGraphicsFactoryHelper.addTriangle(start_le.x, start_le.y, tmp1_x, tmp1_y, start_ri.x, start_ri.y, -1, vertices);\n\t\t}\n\t\telse if (capstyle == CapsStyle.SQUARE) {\n\t\t\t//console.log(\"add square cap\");\n\t\t\tvar tmp1_x:number = start_le.x + (cap_position * (dir_vec.x * thickness));\n\t\t\tvar tmp1_y:number = start_le.y + (cap_position * (dir_vec.y * thickness));\n\t\t\tvar tmp2_x:number = start_ri.x + (cap_position * (dir_vec.x * thickness));\n\t\t\tvar tmp2_y:number = start_ri.y + (cap_position * (dir_vec.y * thickness));\n\n\t\t\tGraphicsFactoryHelper.addTriangle(tmp2_x,tmp2_y, tmp1_x, tmp1_y, start_le.x, start_le.y, 0, vertices);\n\t\t\tGraphicsFactoryHelper.addTriangle(tmp2_x,tmp2_y, start_le.x, start_le.y, start_ri.x, start_ri.y, 0, vertices);\n\t\t}\n\t}\n\tpublic static getLineFormularData(a:Point, b:Point):Point\n\t{\n\n\t\tvar tmp_x = b.x - a.x;\n\t\tvar tmp_y = b.y - a.y;\n\t\tvar return_point:Point=new Point();\n\t\tif ((tmp_x != 0)&&(tmp_y!=0))\n\t\t\treturn_point.x = tmp_y / tmp_x;\n\t\treturn_point.y = -(return_point.x * a.x - a.y);\n\t\treturn return_point;\n\t}\n\tpublic static getQuadricBezierPosition(t, start, control, end):number {\n\t\tvar xt = 1 - t;\n\t\treturn xt * xt * start + 2 * xt * t * control + t * t * end;\n\t}\n\tpublic static subdivideCurve(startx:number, starty:number, cx:number, cy:number, endx:number, endy:number, startx2:number, starty2:number, cx2:number, cy2:number, endx2:number, endy2:number, array_out:Array<number>, array2_out:Array<number>):void\n\t{\n\t\tvar angle_1:number=Math.atan2(cy - starty, cx - startx) * MathConsts.RADIANS_TO_DEGREES;\n\t\tvar angle_2:number=Math.atan2(endy - cy, endx - cx) * MathConsts.RADIANS_TO_DEGREES;\n\t\tvar angle_delta:number=angle_2 - angle_1;\n\t\t//console.log(\"angle_delta \"+angle_delta);\n\n\t\tif(angle_delta>180){\n\t\t\tangle_delta-=360;\n\t\t}\n\t\tif(angle_delta<-180){\n\t\t\tangle_delta+=360;\n\t\t}\n\t\tif(Math.abs(angle_delta)>=150){\n\t\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\n\t\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n\t\t\treturn;\n\t\t}\n\n\t\tvar b1:boolean=false;\n\t\tvar b2:boolean=false;\n\t\tif(angle_delta<0){\n\t\t\t// curve is curved to right side. right side is convex\n\t\t\tb1 = GraphicsFactoryHelper.getSign(startx, starty, cx2, cy2, endx, endy) > 0;\n\t\t\tb2 = GraphicsFactoryHelper.getSign(startx, starty, cx, cy, endx, endy) > 0;\n\t\t\tb1 = (((starty-endy)*(cx-startx)+(endx-startx)*(cy-starty))*((starty-endy)*(cx2-startx)+(endx-startx)*(cy2-starty)))<0;\n\n\t\t}\n\t\telse{\n\t\t\t// curve is curved to left side. left side is convex\n\t\t\tb1 = GraphicsFactoryHelper.getSign(startx2, starty2, cx2, cy2, endx2, endy2) > 0;\n\t\t\tb2 = GraphicsFactoryHelper.getSign(startx2, starty2, cx, cy, endx2, endy2) > 0;\n\t\t\tb1 = (((starty2-endy)*(cx-startx2)+(endx2-startx2)*(cy-starty2))*((starty2-endy2)*(cx2-startx2)+(endx2-startx2)*(cy2-starty2)))<0;\n\n\t\t}\n\t\tif(b1){\n\t\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\n\t\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n\t\t\treturn;\n\t\t}\n\t\t// triangles overlap. we must subdivide:\n\n\t\tvar c1x = startx + (cx - startx) * 0.5;// new controlpoint 1.1\n\t\tvar c1y = starty + (cy - starty) * 0.5;\n\t\tvar c2x = cx + (endx - cx) * 0.5;// new controlpoint 1.2\n\t\tvar c2y = cy + (endy - cy) * 0.5;\n\t\tvar ax = c1x + (c2x - c1x) * 0.5;// new middlepoint 1\n\t\tvar ay = c1y + (c2y - c1y) * 0.5;\n\n\t\tvar c1x2 = startx2 + (cx2 - startx2) * 0.5;// new controlpoint 2.1\n\t\tvar c1y2 = starty2 + (cy2 - starty2) * 0.5;\n\t\tvar c2x2 = cx2 + (endx2 - cx2) * 0.5;// new controlpoint 2.2\n\t\tvar c2y2 = cy2 + (endy2 - cy2) * 0.5;\n\t\tvar ax2 = c1x2 + (c2x2 - c1x2) * 0.5;// new middlepoint 2\n\t\tvar ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n\n\t\tGraphicsFactoryHelper.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n\t\tGraphicsFactoryHelper.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n\n\t}\n\n}\n\nexport default GraphicsFactoryHelper;",
    "import BitmapImage2D\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport MathConsts\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\n\nimport CapsStyle\t\t\t\tfrom \"../draw/CapsStyle\";\nimport GradientType\t\t\t\tfrom \"../draw/GradientType\";\nimport GraphicsPathWinding\t\tfrom \"../draw/GraphicsPathWinding\";\nimport IGraphicsData\t\t\tfrom \"../draw/IGraphicsData\";\nimport InterpolationMethod\t\tfrom \"../draw/InterpolationMethod\";\nimport JointStyle\t\t\t\tfrom \"../draw/JointStyle\";\nimport LineScaleMode\t\t\tfrom \"../draw/LineScaleMode\";\nimport TriangleCulling\t\t\tfrom \"../draw/TriangleCulling\";\nimport SpreadMethod\t\t\t\tfrom \"../draw/SpreadMethod\";\n\nimport Graphics\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport GraphicsPath\t\t\t\tfrom \"../draw/GraphicsPath\";\nimport GraphicsPathCommand\t\tfrom \"../draw/GraphicsPathCommand\";\nimport DefaultMaterialManager\tfrom \"../managers/DefaultMaterialManager\";\nimport MovieClip\t\t\t\tfrom \"../display/MovieClip\";\n\nimport Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Sprite\t\t\t\t\tfrom \"../display/Sprite\";\nimport Float3Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float2Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\n\nimport GraphicsFactoryHelper\t\t\tfrom \"../draw/GraphicsFactoryHelper\";\nimport GraphicsStrokeStyle\t\t\t\tfrom \"../draw/GraphicsStrokeStyle\";\n\n\nimport PartialImplementationError\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nimport TriangleElements \t\t\t\tfrom \"../graphics/TriangleElements\";\nimport MaterialBase \t\t\t\t\tfrom \"../materials/MaterialBase\";\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass GraphicsFactoryStrokes\n{\n\tpublic static draw_pathes(targetGraphic:Graphics){\n\t\tvar len=targetGraphic.queued_stroke_pathes.length;\n\t\tvar contour_commands:Array<Array<number> >;\n\t\tvar contour_data:Array<Array<number> >;\n\t\tvar strokeStyle:GraphicsStrokeStyle;\n\t\tvar one_path:GraphicsPath;\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tvar start_point:Point=new Point();\n\t\tvar end_point:Point=new Point();\n\t\tvar start_left:Point=new Point();\n\t\tvar start_right:Point=new Point();\n\t\tvar ctr_left:Point=new Point();\n\t\tvar ctr_right:Point=new Point();\n\t\tvar ctr_left2:Point=new Point();\n\t\tvar ctr_right2:Point=new Point();\n\t\tvar end_left:Point=new Point();\n\t\tvar end_right:Point=new Point();\n\t\tvar tmp_point:Point=new Point();\n\t\tvar tmp_point2:Point=new Point();\n\t\tvar tmp_point3:Point=new Point();\n\t\tvar closed:boolean=false;\n\t\tvar last_dir_vec:Point=new Point();\n\t\tvar cp=0;\n\t\tfor(cp=0; cp<len; cp++){\n\n\t\t\tone_path = targetGraphic.queued_stroke_pathes[cp];\n\t\t\tcontour_commands = one_path.commands;\n\t\t\tcontour_data = one_path.data;\n\t\t\tstrokeStyle = one_path.stroke();\n\n\t\t\tvar tessVerts:Array<number>=[];\n\n\t\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\t\tcommands = contour_commands[k];\n\t\t\t\tdata = contour_data[k];\n\t\t\t\tvert_cnt = 0;\n\t\t\t\tdata_cnt = 0;\n\n\t\t\t\tvar new_dir:number=0;\n\t\t\t\tvar dir_delta:number=0;\n\t\t\t\tvar last_direction:number=0;\n\n\t\t\t\tvar tmp_dir_point:Point=new Point();\n\n\t\t\t\tclosed = true;\n\t\t\t\tif((data[0] != data[data.length-2]) || (data[1] != data[data.length-1]))\n\t\t\t\t\tclosed = false;\n\t\t\t\telse{\n\t\t\t\t\tlast_dir_vec.x = data[data.length-2]-data[data.length-4];\n\t\t\t\t\tlast_dir_vec.y = data[data.length-1]-data[data.length-3];\n\t\t\t\t\tlast_dir_vec.normalize();\n\t\t\t\t\tlast_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t//console.log(\"Path is closed, we set initial direction: \"+last_direction);\n\t\t\t\t}\n\n\t\t\t\tdata_cnt=0;\n\t\t\t\tlastPoint.x=data[data_cnt++];\n\t\t\t\tlastPoint.y=data[data_cnt++];\n\n\n\t\t\t\tvar new_cmds:Array<number>=[];\n\t\t\t\tvar new_pnts:Array<Point>=[];\n\t\t\t\tvar new_cmds_cnt=0;\n\t\t\t\tvar new_pnts_cnt=0;\n\t\t\t\tvar prev_normal:Point = new Point();\n\t\t\t\tvar le_point:Point = new Point();\n\t\t\t\tvar curve_end_point:Point = new Point();\n\t\t\t\tvar ri_point:Point = new Point();\n\t\t\t\tvar ctr_point:Point = new Point();\n\n\t\t\t\tprev_normal.x = -1*last_dir_vec.y;\n\t\t\t\tprev_normal.y = last_dir_vec.x;\n\n\t\t\t\tfor (i = 1; i < commands.length; i++) {\n\t\t\t\t\tif (commands[i]==GraphicsPathCommand.MOVE_TO) {\n\t\t\t\t\t\tconsole.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(\"\");\n\t\t\t\t\t//console.log(\"segment \"+i+\"lastPoint x = \"+lastPoint.x+\" y = \"+lastPoint.y)\n\t\t\t\t\tend_point = new Point(data[data_cnt++], data[data_cnt++]);\n\t\t\t\t\t//console.log(\"segment \"+i+\"end_point x = \"+end_point.x+\" y = \"+end_point.y)\n\t\t\t\t\tif (commands[i]==GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\t\tcurve_end_point = new Point(data[data_cnt++], data[data_cnt++]);\n\t\t\t\t\t\t//console.log(\"segment \"+i+\"curve_end_point x = \"+curve_end_point.x+\" y = \"+curve_end_point.y)\n\t\t\t\t\t}\n\t\t\t\t\t//get the directional vector and the direction for this segment\n\t\t\t\t\ttmp_dir_point.x = end_point.x - lastPoint.x;\n\t\t\t\t\ttmp_dir_point.y = end_point.y - lastPoint.y;\n\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\tnew_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\n\t\t\t\t\t// get the difference in angle to the last segment\n\t\t\t\t\tdir_delta = new_dir - last_direction;\n\t\t\t\t\tif(dir_delta>180){\n\t\t\t\t\t\tdir_delta-=360;\n\t\t\t\t\t}\n\t\t\t\t\tif(dir_delta<-180){\n\t\t\t\t\t\tdir_delta+=360;\n\t\t\t\t\t}\n\t\t\t\t\tlast_direction = new_dir;\n\t\t\t\t\t//console.log(\"segment \"+i+\" direction: \"+dir_delta);\n\t\t\t\t\t// rotate direction around 90 degree\n\t\t\t\t\ttmp_point.x = -1 * tmp_dir_point.y;\n\t\t\t\t\ttmp_point.y = tmp_dir_point.x;\n\n\t\t\t\t\tri_point = new Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\tle_point = new Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n\n\t\t\t\t\tvar add_segment:boolean=false;\n\t\t\t\t\t// check if this is the first segment, and the path is not closed\n\t\t\t\t\t// in this case, we can just set the points to the contour points\n\t\t\t\t\tif((i==1)&&(!closed)){\n\t\t\t\t\t\t//console.log(\"segment \"+i+\"Path is not closed, we can just add the first segment\")\n\t\t\t\t\t\tadd_segment=true;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\n\t\t\t\t\t\t// we need to figure out if we need to add a joint or not\n\t\t\t\t\t\tif ((dir_delta==0)||(dir_delta==180)){\n\t\t\t\t\t\t\t// check if this and the prev segment was a line. if yes, than they can be merged\n\t\t\t\t\t\t\tif ((i!=1) && (commands[i]== GraphicsPathCommand.LINE_TO) && (new_cmds[new_cmds.length-1]==GraphicsPathCommand.LINE_TO)){\n\t\t\t\t\t\t\t\t//console.log(\"straight line can be merged in prev straight line\");\n\t\t\t\t\t\t\t\tadd_segment=false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if not we can just add the contour points\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tadd_segment=true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (dir_delta==180){\n\t\t\t\t\t\t\tconsole.log(\"path goes straight back (180�). DO we need to handle this edge case different ? !\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (dir_delta!=0) {\n\t\t\t\t\t\t\tadd_segment=true;\n\t\t\t\t\t\t\tvar half_angle:number=(180-(dir_delta));\n\t\t\t\t\t\t\tif(dir_delta<0){\n\t\t\t\t\t\t\t\thalf_angle=(-180-(dir_delta));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thalf_angle= half_angle * -0.5 * MathConsts.DEGREES_TO_RADIANS;\n\t\t\t\t\t\t\tvar distance:number=strokeStyle.half_thickness / Math.sin(half_angle);\n\t\t\t\t\t\t\ttmp_point2.x = tmp_dir_point.x * Math.cos(half_angle) + tmp_dir_point.y * Math.sin(half_angle);\n\t\t\t\t\t\t\ttmp_point2.y = tmp_dir_point.y * Math.cos(half_angle) - tmp_dir_point.x * Math.sin(half_angle);\n\t\t\t\t\t\t\ttmp_point2.normalize();\n\t\t\t\t\t\t\tvar merged_pnt_ri:Point = new Point(lastPoint.x - (tmp_point2.x * distance), lastPoint.y - (tmp_point2.y * distance));\n\t\t\t\t\t\t\tvar merged_pnt_le:Point = new Point(lastPoint.x + (tmp_point2.x * distance), lastPoint.y + (tmp_point2.y * distance));\n\t\t\t\t\t\t\tif (dir_delta > 0){\n\t\t\t\t\t\t\t\tri_point = merged_pnt_ri;\n\t\t\t\t\t\t\t\tvar contour_le:Point = new Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\tvar contour_prev_le:Point = new Point(lastPoint.x - (prev_normal.x * strokeStyle.half_thickness), lastPoint.y - (prev_normal.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\tle_point=contour_le;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tle_point = merged_pnt_le;\n\t\t\t\t\t\t\t\tvar contour_ri:Point = new Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\tvar contour_prev_ri:Point = new Point(lastPoint.x + (prev_normal.x * strokeStyle.half_thickness), lastPoint.y + (prev_normal.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\tri_point=contour_ri;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar addJoints:boolean=true;\n\t\t\t\t\t\t\tif (strokeStyle.jointstyle==JointStyle.MITER){\n\t\t\t\t\t\t\t\tvar distance_miter:number = (Math.sqrt((distance*distance)-(strokeStyle.half_thickness*strokeStyle.half_thickness))/strokeStyle.half_thickness);\n\t\t\t\t\t\t\t\tif(distance_miter<=strokeStyle.miter_limit){\n\t\t\t\t\t\t\t\t\taddJoints=false;\n\t\t\t\t\t\t\t\t\tri_point = merged_pnt_ri;\n\t\t\t\t\t\t\t\t\tle_point = merged_pnt_le;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tif (dir_delta > 0){\n\t\t\t\t\t\t\t\t\t\tcontour_le.x = contour_le.x-(tmp_dir_point.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\tcontour_le.y = contour_le.y-(tmp_dir_point.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\ttmp_point3.x=prev_normal.y*-1;\n\t\t\t\t\t\t\t\t\t\ttmp_point3.y=prev_normal.x;\n\t\t\t\t\t\t\t\t\t\tcontour_prev_le.x = contour_prev_le.x-(tmp_point3.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\tcontour_prev_le.y = contour_prev_le.y-(tmp_point3.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\tcontour_ri.x = contour_ri.x-(tmp_dir_point.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\tcontour_ri.y = contour_ri.y-(tmp_dir_point.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\ttmp_point3.x=prev_normal.y*-1;\n\t\t\t\t\t\t\t\t\t\ttmp_point3.y=prev_normal.x;\n\t\t\t\t\t\t\t\t\t\tcontour_prev_ri.x = contour_prev_ri.x-(tmp_point3.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\tcontour_prev_ri.y = contour_prev_ri.y-(tmp_point3.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(addJoints) {\n\n\t\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++]=(strokeStyle.jointstyle!=JointStyle.ROUND)? GraphicsPathCommand.BUILD_JOINT : GraphicsPathCommand.BUILD_ROUND_JOINT;\n\t\t\t\t\t\t\t\tif (dir_delta > 0) {\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = merged_pnt_ri;\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_le;\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_le;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_ri;\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = merged_pnt_le;\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_ri;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(strokeStyle.jointstyle==JointStyle.ROUND){\n\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x - (tmp_point2.x * Math.abs(distance)), lastPoint.y - (tmp_point2.y * Math.abs(distance)));\n\n\t\t\t\t\t\t\t\t\tif (dir_delta > 0) {\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_le;\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_le;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_ri;\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_ri;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprev_normal.x = tmp_point.x;\n\t\t\t\t\tprev_normal.y = tmp_point.y;\n\t\t\t\t\tif(add_segment){\n\t\t\t\t\t\tif (commands[i]== GraphicsPathCommand.LINE_TO) {\n\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.LINE_TO;\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = ri_point;\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = le_point;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (commands[i]== GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\t\t\ttmp_dir_point.x = curve_end_point.x - end_point.x;\n\t\t\t\t\t\t\ttmp_dir_point.y = curve_end_point.y - end_point.y;\n\t\t\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\t\t\tnew_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\t\tdir_delta = new_dir - last_direction;\n\n\t\t\t\t\t\t\tlast_direction = new_dir;\n\n\t\t\t\t\t\t\ttmp_point.x = -1 * tmp_dir_point.y;\n\t\t\t\t\t\t\ttmp_point.y = tmp_dir_point.x;\n\t\t\t\t\t\t\tif((dir_delta!=0)&&(dir_delta!=180)){\n\t\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.CURVE_TO;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = ri_point;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = le_point;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x, lastPoint.y);\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(end_point.x, end_point.y);\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = curve_end_point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.LINE_TO;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = ri_point;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = le_point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprev_normal.x = tmp_point.x;\n\t\t\t\t\t\t\tprev_normal.y = tmp_point.y;\n\t\t\t\t\t\t\tlastPoint = curve_end_point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (commands[i]== GraphicsPathCommand.LINE_TO) {\n\t\t\t\t\t\tlastPoint = end_point;\n\t\t\t\t\t}\n\t\t\t\t\tif(i==commands.length-1){\n\t\t\t\t\t\tif (!closed) {\n\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.NO_OP;\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.NO_OP;\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new_pnts[0];\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new_pnts[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t// first we draw all the curves:\n\t\t\t\tnew_cmds_cnt=0;\n\t\t\t\tnew_pnts_cnt=0;\n\t\t\t\tfor (i = 0; i < new_cmds.length; i++) {\n\n\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.LINE_TO){\n\t\t\t\t\t\tnew_pnts_cnt+=2;\n\t\t\t\t\t}\n\t\t\t\t\telse if(new_cmds[i]==GraphicsPathCommand.CURVE_TO){\n\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\n\n\t\t\t\t\t\tstart_point = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tctr_point = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tend_point = new_pnts[new_pnts_cnt++];\n\n\t\t\t\t\t\tend_right = new_pnts[new_pnts_cnt];\n\t\t\t\t\t\tend_left = new_pnts[new_pnts_cnt+1];\n\n\n\t\t\t\t\t\t// get the directional vector for the first part of the curve\n\t\t\t\t\t\ttmp_dir_point.x = ctr_point.x - start_point.x;\n\t\t\t\t\t\ttmp_dir_point.y = ctr_point.y - start_point.y;\n\t\t\t\t\t\ttmp_point3.x = ctr_point.x - start_point.x;\n\t\t\t\t\t\ttmp_point3.y = ctr_point.y - start_point.y;\n\t\t\t\t\t\tvar length1:number =tmp_point3.length;\n\t\t\t\t\t\ttmp_dir_point.normalize();\n\n\n\t\t\t\t\t\t// get the directional vector for the second part of the curve\n\t\t\t\t\t\ttmp_point2.x = end_point.x - ctr_point.x;\n\t\t\t\t\t\ttmp_point2.y = end_point.y - ctr_point.y;\n\t\t\t\t\t\tvar length2:number =tmp_point2.length;\n\n\t\t\t\t\t\ttmp_point2.normalize();\n\n\t\t\t\t\t\tvar length_calc:number = 0.5 - ((length2-length1)/length1)*0.5;\n\t\t\t\t\t\tif(length1>length2){\n\t\t\t\t\t\t\tlength_calc = 0.5 + ((length1-length2)/length2)*0.5;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// get angle to positive x-axis for both dir-vectors, than get the difference between those\n\t\t\t\t\t\tvar angle_1:number=Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\tvar angle_2:number=Math.atan2(tmp_point2.y, tmp_point2.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\tdir_delta=angle_2-angle_1;\n\n\t\t\t\t\t\tif(dir_delta>180){\n\t\t\t\t\t\t\tdir_delta-=360;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(dir_delta<-180){\n\t\t\t\t\t\t\tdir_delta+=360;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(dir_delta==0){\n\t\t\t\t\t\t\tconsole.log(\"This is not a curve, we can just draw it like a straight line\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//console.log(\"segment : '\"+i+\"' direction:\"+dir_delta);\n\t\t\t\t\t\tvar dirNumber:number=1;\n\t\t\t\t\t\tif(dir_delta<0){\n\t\t\t\t\t\t\tdirNumber=-1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar half_angle:number=dir_delta*0.5*MathConsts.DEGREES_TO_RADIANS;\n\t\t\t\t\t\tvar lengthpos:number=Math.abs(length1*Math.sin(half_angle));\n\n\t\t\t\t\t\tvar distance:number=strokeStyle.half_thickness / Math.sin(half_angle);\n\t\t\t\t\t\ttmp_point3.x = tmp_point2.x * Math.cos(half_angle) + tmp_point2.y * Math.sin(half_angle);\n\t\t\t\t\t\ttmp_point3.y = tmp_point2.y * Math.cos(half_angle) - tmp_point2.x * Math.sin(half_angle);\n\t\t\t\t\t\ttmp_point3.normalize();\n\t\t\t\t\t\tvar merged_pnt_ri:Point = new Point(ctr_point.x - (tmp_point3.x * distance), ctr_point.y - (tmp_point3.y * distance));\n\t\t\t\t\t\tvar merged_pnt_le:Point = new Point(ctr_point.x + (tmp_point3.x * distance), ctr_point.y + (tmp_point3.y * distance));\n\n\n\t\t\t\t\t\tvar curve_x:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.x, ctr_point.x, end_point.x);\n\t\t\t\t\t\tvar curve_y:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.y, ctr_point.y, end_point.y);\n\n\t\t\t\t\t\tvar curve_2x:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.x, ctr_point.x, end_point.x);\n\t\t\t\t\t\tvar curve_2y:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.y, ctr_point.y, end_point.y);\n\n\t\t\t\t\t\ttmp_point3.x =  -1*(curve_y - curve_2y);\n\t\t\t\t\t\ttmp_point3.y =  curve_x - curve_2x;\n\n\t\t\t\t\t\ttmp_point3.normalize();\n\n\t\t\t\t\t\t//GraphicsFactoryHelper.drawPoint(curve_x,curve_y, final_vert_list);\n\n\t\t\t\t\t\t// move the point on the curve to use correct thickness\n\t\t\t\t\t\tctr_right.x = curve_x +(dirNumber * tmp_point3.x * strokeStyle.half_thickness);\n\t\t\t\t\t\tctr_right.y = curve_y +(dirNumber * tmp_point3.y * strokeStyle.half_thickness);\n\t\t\t\t\t\tctr_left.x = curve_x -(dirNumber * tmp_point3.x * strokeStyle.half_thickness);\n\t\t\t\t\t\tctr_left.y = curve_y -(dirNumber * tmp_point3.y * strokeStyle.half_thickness);\n\n\t\t\t\t\t\t//GraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\n\t\t\t\t\t\t//GraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\n\n\t\t\t\t\t\t// calculate the actual controlpoints\n\t\t\t\t\t\tctr_right.x = ctr_right.x * 2 - start_right.x/2 - end_right.x/2;\n\t\t\t\t\t\tctr_right.y = ctr_right.y * 2 - start_right.y/2 - end_right.y/2;\n\t\t\t\t\t\tctr_left.x = ctr_left.x * 2 - start_left.x/2 - end_left.x/2;\n\t\t\t\t\t\tctr_left.y = ctr_left.y * 2 - start_left.y/2 - end_left.y/2;\n\n\n\t\t\t\t\t\t//ctr_right=merged_pnt_ri;\n\t\t\t\t\t\t//ctr_left=merged_pnt_le;\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t// controlpoints version2:\n\t\t\t\t\t\ttmp_dir_point.x = start_left.x-start_right.x;\n\t\t\t\t\t\ttmp_dir_point.y = start_left.y-start_right.y;\n\t\t\t\t\t\ttmp_point2.x = end_left.x-end_right.x;\n\t\t\t\t\t\ttmp_point2.y = end_left.y-end_right.y;\n\n\t\t\t\t\t\tctr_right.x = ctr_point.x-(tmp_dir_point.x/2);\n\t\t\t\t\t\tctr_right.y = ctr_point.y-(tmp_dir_point.y/2);\n\t\t\t\t\t\tvar new_end_ri:Point = new Point(end_point.x+(tmp_dir_point.x/2), end_point.y+(tmp_dir_point.y/2));\n\n\t\t\t\t\t\tctr_left.x = ctr_point.x+(tmp_dir_point.x/2);\n\t\t\t\t\t\tctr_left.y = ctr_point.y+(tmp_dir_point.y/2);\n\t\t\t\t\t\tvar new_end_le:Point = new Point(end_point.x-(tmp_dir_point.x/2), end_point.y-(tmp_dir_point.y/2));\n\t\t\t\t\t\t*/\n\n/*\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(start_right.x, start_right.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(start_left.x, start_left.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(end_right.x, end_right.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(end_left.x, end_left.y , final_vert_list);\n*/\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tGraphicsFactoryHelper.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n\n\t\t\t\t\t\tif(dir_delta>0) {\n\t\t\t\t\t\t\tfor (var sc:number = 0; sc < subdivided.length / 6; sc++) {\n\t\t\t\t\t\t\t\t// right curved\n\t\t\t\t\t\t\t\t// concave curves:\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 1, final_vert_list);\n\n\t\t\t\t\t\t\t\t// fills\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 0, final_vert_list);\n\n\t\t\t\t\t\t\t\t// convex curves:\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], -1, final_vert_list);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfor (var sc:number = 0; sc < subdivided.length / 6; sc++) {\n\t\t\t\t\t\t\t\t// left curved\n\t\t\t\t\t\t\t\t// convex curves:\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], -1, final_vert_list);\n\n\t\t\t\t\t\t\t\t// fills\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 0, final_vert_list);\n\n\n\t\t\t\t\t\t\t\t// concave curves:\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 1, final_vert_list);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(new_cmds[i]>=GraphicsPathCommand.BUILD_JOINT) {\n\t\t\t\t\t\tnew_pnts_cnt+=3;\n\t\t\t\t\t\t//GraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n\t\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.BUILD_ROUND_JOINT) {\n\t\t\t\t\t\t\tend_left = new_pnts[new_pnts_cnt++];// concave curves:\n\t\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\t\t//console.log(\"add round tri\");\n\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_right.x, start_right.y,  end_left.x, end_left.y,start_left.x, start_left.y, -1, final_vert_list);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// now we draw all the normal triangles.\n\t\t\t\t// we do it in 2 steps, to prevent curves cut anything out of underlying normal tris\n\t\t\t\tnew_cmds_cnt=0;\n\t\t\t\tnew_pnts_cnt=0;\n\t\t\t\tfor (i = 0; i < new_cmds.length; i++) {\n\n\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.LINE_TO){\n\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tend_right = new_pnts[new_pnts_cnt];\n\t\t\t\t\t\tend_left = new_pnts[new_pnts_cnt+1];\n\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_left.x,  start_left.y,  end_left.x,  end_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if(new_cmds[i]==GraphicsPathCommand.CURVE_TO){\n\t\t\t\t\t\tnew_pnts_cnt+=5;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(new_cmds[i]>=GraphicsPathCommand.BUILD_JOINT) {\n\t\t\t\t\t\tend_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n\t\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.BUILD_ROUND_JOINT) {\n\t\t\t\t\t\t\tnew_pnts_cnt+=3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!closed){\n\t\t\t\t\tlast_dir_vec.x = data[2] - data[0];\n\t\t\t\t\tlast_dir_vec.y = data[3] - data[1];\n\t\t\t\t\tlast_dir_vec.normalize();\n\t\t\t\t\tGraphicsFactoryHelper.createCap(data[0], data[1], new_pnts[0], new_pnts[1], last_dir_vec, strokeStyle.capstyle, -1, strokeStyle.half_thickness, final_vert_list);\n\n\t\t\t\t\tlast_dir_vec.x = data[data.length-2] - data[data.length-4];\n\t\t\t\t\tlast_dir_vec.y = data[data.length-1] - data[data.length-3];\n\t\t\t\t\tlast_dir_vec.normalize();\n\t\t\t\t\tGraphicsFactoryHelper.createCap(data[data.length-2], data[data.length-1], new_pnts[new_pnts.length-2], new_pnts[new_pnts.length-1], last_dir_vec, strokeStyle.capstyle, 1, strokeStyle.half_thickness, final_vert_list);\n\n\t\t\t\t\t/*\n\t\t\t\t\t last_dir_vec.x = data[data.length-2] - data[data.length-4];\n\t\t\t\t\t last_dir_vec.y = data[data.length-1] - data[data.length-3];\n\t\t\t\t\t last_dir_vec.normalize();\n\t\t\t\t\t GraphicsFactoryHelper.createCap(data[data.length-2], data[data.length-1], contour_points[contour_points.length-1], contour_points[contour_points.length-2], last_dir_vec, strokeStyle.capstyle, -1, strokeStyle.half_thickness, final_vert_list);\n\t\t\t\t\t */\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//console.log(\"final_vert_cnt \"+(final_vert_cnt/5));\n\t\t\t// todo: handle material / submesh settings, and check if a material / submesh already exists for this settings\n\n\t\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 5);\n\t\t\tattributesView.set(final_vert_list);\n\t\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\t\tattributesView.dispose();\n\t\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\t\t//elements.setUVs(new Float2Attributes(attributesBuffer));\n\t\t\t//curve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\t\tmaterial.bothSides = true;\n\t\t\tmaterial.useColorTransform = true;\n\t\t\tmaterial.curves = true;\n\t\t\ttargetGraphic.addGraphic(elements, material);\n\t\t}\n\t\ttargetGraphic.queued_stroke_pathes.length=0;\n\t}\n\n}\n\nexport default GraphicsFactoryStrokes;",
    "import IGraphicsData\t\tfrom \"../draw/IGraphicsData\";\n\n\nclass GraphicsFillStyle implements IGraphicsData\n{\n    public static data_type:string = \"[graphicsdata FillStyle]\";\n    /**\n     * The Vector of drawing commands as integers representing the path.\n     */\n    private _color:number;\n    private _alpha:number;\n\n    constructor(color:number = 0xffffff, alpha:number = 1)\n    {\n        this._color=color;\n        this._alpha=alpha;\n    }\n\n    public get data_type():string\n    {\n        return GraphicsFillStyle.data_type;\n    }\n}\n\nexport default GraphicsFillStyle;",
    "/**\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPathCommand\n{\n\t/**\n\t * Represents the default \"do nothing\" command.\n\t */\n\tpublic static NO_OP:number = 0;\n\t/**\n\t * Specifies a drawing command that moves the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static MOVE_TO:number = 1;\n\n\t/**\n\t * Specifies a drawing command that draws a line from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static LINE_TO:number = 2;\n\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO:number = 3;\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static BUILD_JOINT:number \t\t= 13;\n\tpublic static BUILD_ROUND_JOINT:number \t= 14;\n\n\t/**\n\t * Specifies a \"line to\" drawing command,\n\t * but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_LINE_TO:number = 4;\n\n\t/**\n\t *   Specifies a \"move to\" drawing command,\n\t *   but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_MOVE_TO:number = 5;\n\n\t/**\n\t * Specifies a drawing command that draws a curve from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector, using 2 control points.\n\t */\n\tpublic static CUBIC_CURVE:number = 6;\n}\nexport default GraphicsPathCommand;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport default GraphicsPathWinding;",
    "import GraphicsPathWinding\t\tfrom \"../draw/GraphicsPathWinding\";\nimport GraphicsPathCommand\t\tfrom \"../draw/GraphicsPathCommand\";\nimport IGraphicsData\t\t    from \"../draw/IGraphicsData\";\nimport GraphicsFillStyle\t\tfrom \"../draw/GraphicsFillStyle\";\nimport GraphicsStrokeStyle\t\tfrom \"../draw/GraphicsStrokeStyle\";\n\nimport Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPath implements IGraphicsData\n{\n    public static data_type:string = \"[graphicsdata path]\";\n    /**\n     * The Vector of drawing commands as integers representing the path.\n     */\n    private _commands:Array<Array<number>>;\n    /**\n     * The Vector of Numbers containing the parameters used with the drawing commands.\n     */\n    private _data:Array<Array<number>>;\n\n    /**\n     * Specifies the winding rule using a value defined in the GraphicsPathWinding class.\n     */\n    private _winding_rule:string;\n\n    /**\n     * The Vector of Numbers containing the parameters used with the drawing commands.\n     */\n    private _winding_directions:Array<number>;\n\n    private _startPoint:Point;\n    private _cur_point:Point;\n    private _style:IGraphicsData;\n\n    constructor(commands:Array<number> = null, data:Array<number> = null, winding_rule:string = GraphicsPathWinding.EVEN_ODD)\n    {\n        this._data=[];\n        this._commands=[];\n        this._style = null;\n\n        if(commands!=null && data!=null){\n            this._data[0]=data;\n            this._commands[0]=commands;\n        }\n        else{\n            this._data[0]=[];\n            this._commands[0]=[];\n        }\n        this._startPoint=new Point();\n        this._cur_point=new Point();\n        this._winding_rule=winding_rule;\n        this._winding_directions=[];\n    }\n\n    public get data_type():string\n    {\n        return GraphicsPath.data_type;\n    }\n\n    public get style():IGraphicsData\n    {\n        return this._style;\n    }\n    public set style(value:IGraphicsData)\n    {\n        this._style = value;\n    }\n\n    public fill():IGraphicsData\n    {\n        if (this._style==null)\n            return null;\n        if (this._style.data_type==GraphicsFillStyle.data_type)\n            return this._style;\n        return null;\n    }\n    public stroke():GraphicsStrokeStyle\n    {\n        if (this._style==null)\n            return null;\n        if (this._style.data_type==GraphicsStrokeStyle.data_type)\n            return <GraphicsStrokeStyle>this._style;\n        return null;\n    }\n\n    public get commands():Array<Array<number>>\n    {\n        return this._commands;\n    }\n\n    public get data():Array<Array<number>>\n    {\n        return this._data;\n    }\n\n    public curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.CURVE_TO);\n        /*\n         if(this.isFill){\n         this._tmp_point.x=anchorX-this._cur_point.x;\n         this._tmp_point.y=anchorY-this._cur_point.y;\n         this._tmp_point.normalize();\n\n         var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\n         testpoint.normalize();\n         var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n         if(degree_anchor>180)degree_anchor-=360;\n         //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n         this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n         this._tmp_point.x=controlX-this._cur_point.x;\n         this._tmp_point.y=controlY-this._cur_point.y;\n         this._tmp_point.normalize();\n         //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n         var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\n         if(degree_control>180)degree_control-=360;\n         //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n         console.log(\"degree_control \"+degree_control);\n         console.log(\"degree_anchor \"+degree_anchor);\n         console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\n         this._direction.x=testpoint.x;\n         this._direction.y=testpoint.y;\n         if((degree_control)<0)\n         this._data[this._data.length-1].push(1);\n         else\n         this._data[this._data.length-1].push(2);\n\n         }\n         else{\n         this._data[this._data.length-1].push(1);\n         }\n         */\n        this._data[this._data.length-1].push(controlX);\n        this._data[this._data.length-1].push(controlY);\n        this._data[this._data.length-1].push(anchorX);\n        this._data[this._data.length-1].push(anchorY);\n        this._cur_point.x=anchorX;\n        this._cur_point.y=anchorY;\n\n    }\n\n    public lineTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.LINE_TO);\n        this._data[this._data.length-1].push(x);\n        this._data[this._data.length-1].push(y);\n\n\n        this._cur_point.x=x;\n        this._cur_point.y=y;\n    }\n\n    public moveTo(x:number, y:number)\n    {\n        // whenever a moveTo command apears, we start a new contour\n        if(this._commands[this._commands.length-1].length>0){\n            this._commands.push([GraphicsPathCommand.MOVE_TO]);\n            this._data.push([x, y]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    }\n\n    public wideLineTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n    public wideMoveTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n}\n\nexport default GraphicsPath;",
    "import IGraphicsData\t\tfrom \"../draw/IGraphicsData\";\nimport JointStyle\t\t    from \"../draw/JointStyle\";\nimport CapsStyle\t\t    from \"../draw/CapsStyle\";\n\nclass GraphicsStrokeStyle implements IGraphicsData\n{\n    public static data_type:string = \"[graphicsdata StrokeStyle]\";\n\n    private _color:number;\n    private _alpha:number;\n    private _thickness:number;\n    private _jointstyle:number;\n    private _capstyle:number;\n    private _miter_limit:number;\n\n    constructor(color:number = 0xffffff, alpha:number = 1, thickness:number = 10, jointstyle:number = JointStyle.ROUND, capstyle:number = CapsStyle.SQUARE, miter_limit:number=10)\n    {\n        this._color=color;\n        this._alpha=alpha;\n        this._thickness=thickness;\n        this._jointstyle=jointstyle;\n        this._capstyle=capstyle;\n        this._miter_limit=miter_limit;\n    }\n\n    public get data_type():string\n    {\n        return GraphicsStrokeStyle.data_type;\n    }\n\n    public get color():number\n    {\n        return this._color;\n    }\n    public set color(value:number)\n    {\n        this._color = value;\n    }\n\n    public get alpha():number\n    {\n        return this._alpha;\n    }\n    public set alpha(value:number)\n    {\n        this._alpha = value;\n    }\n\n    public get half_thickness():number\n    {\n        return this._thickness/2;\n    }\n    public get thickness():number\n    {\n        return this._thickness;\n    }\n    public set thickness(value:number)\n    {\n        this._thickness = value;\n    }\n\n    public get jointstyle():number\n    {\n        return this._jointstyle;\n    }\n    public set jointstyle(value:number)\n    {\n        this._jointstyle = value;\n    }\n    public get miter_limit():number\n    {\n        return this._miter_limit;\n    }\n    public set miter_limit(value:number){\n\n        this._miter_limit = value;\n    }\n    public get capstyle():number\n    {\n        return this._capstyle;\n    }\n    public set capstyle(value:number)\n    {\n        this._capstyle = value;\n    }\n}\n\nexport default GraphicsStrokeStyle;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport default InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:number = 2;\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:number = 0;\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:number = 1;\n}\n\nexport default JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport default LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport default PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport default SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport default TriangleCulling;",
    "export {default as CapsStyle}\t\t\t\t\t\tfrom \"./draw/CapsStyle\";\nexport {default as GradientType}\t\t\t\t\tfrom \"./draw/GradientType\";\nexport {default as GraphicsFactoryFills} \t\t\tfrom \"./draw/GraphicsFactoryFills\";\nexport {default as GraphicsFactoryHelper} \t\t\tfrom \"./draw/GraphicsFactoryHelper\";\nexport {default as GraphicsFactoryStrokes} \t\t\tfrom \"./draw/GraphicsFactoryStrokes\";\nexport {default as GraphicsFillStyle} \t\t\t    from \"./draw/GraphicsFillStyle\";\nexport {default as GraphicsStrokeStyle}\t\t\t    from \"./draw/GraphicsStrokeStyle\";\nexport {default as GraphicsPath}\t\t\t\t\tfrom \"./draw/GraphicsPath\";\nexport {default as GraphicsPathCommand}\t\t\t\tfrom \"./draw/GraphicsPathCommand\";\nexport {default as GraphicsPathWinding}\t\t\t\tfrom \"./draw/GraphicsPathWinding\";\nexport {default as IGraphicsData}\t\t\t\t\tfrom \"./draw/IGraphicsData\";\nexport {default as InterpolationMethod}\t\t\t\tfrom \"./draw/InterpolationMethod\";\nexport {default as JointStyle}\t\t\t\t\t\tfrom \"./draw/JointStyle\";\nexport {default as LineScaleMode}\t\t\t\t\tfrom \"./draw/LineScaleMode\";\nexport {default as PixelSnapping}\t\t\t\t\tfrom \"./draw/PixelSnapping\";\nexport {default as SpreadMethod}\t\t\t\t\tfrom \"./draw/SpreadMethod\";\nexport {default as TriangleCulling}\t\t\t\t\tfrom \"./draw/TriangleCulling\";",
    "import ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nclass CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport default CastError;",
    "export {default as CastError}\t\t\t\t\t\tfrom \"./errors/CastError\";",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport Camera\t\t\t\t\tfrom \"../display/Camera\";\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}\n\nexport default CameraEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport DisplayObject\t\t\tfrom \"../display/DisplayObject\";\n\nclass DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}\n\nexport default DisplayObjectEvent;",
    "import AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nclass ElementsEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Elements's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a Elements's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a Elements's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a Elements's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsEvent\n\t{\n\t\treturn new ElementsEvent(this.type, this._attributesView);\n\t}\n}\n\nexport default ElementsEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport default LightEvent;",
    "import Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IEntity\t\t\t\t\tfrom \"../display/IEntity\";\nimport IRenderable\t\t\t\tfrom \"../base/IRenderable\";\nimport View\t\t\t\t\t\tfrom \"../View\";\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The entity inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport default MouseEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IRenderable\t\t\t\t\t\tfrom \"../base/IRenderable\";\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableEvent\n * @see away.core.base.Graphics\n */\nclass RenderableEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_SURFACE:string = \"invalidateRenderable\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_ELEMENTS:string = \"invalidateElements\";\n\n\tprivate _renderable:IRenderable;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderable:IRenderable)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderable = renderable;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderable():IRenderable\n\t{\n\t\treturn this._renderable;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableEvent\n\t{\n\t\treturn new RenderableEvent(this.type, this._renderable);\n\t}\n}\n\nexport default RenderableEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport default RendererEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}\n\nexport default ResizeEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport Style\t\t\t\t\t\tfrom \"../base/Style\";\n\nclass StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}\n\nexport default StyleEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport ISurface\t\t\t\t\t\tfrom \"../base/ISurface\";\n\nclass SurfaceEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _surface:ISurface;\n\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, surface:ISurface)\n\t{\n\t\tsuper(type);\n\n\t\tthis._surface = surface;\n\t}\n\n\t/**\n\t * The surface of the renderable.\n\t */\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SurfaceEvent\n\t{\n\t\treturn new SurfaceEvent(this.type, this._surface);\n\t}\n}\n\nexport default SurfaceEvent;",
    "import Point\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IEntity\t\t\t\t\tfrom \"../display/IEntity\";\nimport IRenderable\t\t\t\tfrom \"../base/IRenderable\";\nimport View\t\t\t\t\t\tfrom \"../View\";\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\n\nclass TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport default TouchEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport Transform\t\t\t\tfrom \"../base/Transform\";\n\nclass TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}\n\nexport default TransformEvent;",
    "export {default as CameraEvent}\t\t\t\t\t\tfrom \"./events/CameraEvent\";\nexport {default as DisplayObjectEvent}\t\t\t\tfrom \"./events/DisplayObjectEvent\";\nexport {default as ElementsEvent}\t\t\t\t\tfrom \"./events/ElementsEvent\";\nexport {default as LightEvent}\t\t\t\t\t\tfrom \"./events/LightEvent\";\nexport {default as MouseEvent}\t\t\t\t\t\tfrom \"./events/MouseEvent\";\nexport {default as RenderableEvent}\t\t\t\t\tfrom \"./events/RenderableEvent\";\nexport {default as RendererEvent}\t\t\t\t\tfrom \"./events/RendererEvent\";\nexport {default as ResizeEvent}\t\t\t\t\t\tfrom \"./events/ResizeEvent\";\nexport {default as StyleEvent}\t\t\t\t\t\tfrom \"./events/StyleEvent\";\nexport {default as SurfaceEvent}\t\t\t\t\tfrom \"./events/SurfaceEvent\";\nexport {default as TouchEvent}\t\t\t\t\t\tfrom \"./events/TouchEvent\";\nexport {default as TransformEvent}\t\t\t\t\tfrom \"./events/TransformEvent\";",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Float3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Short3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport ElementsEvent\t\t\t\tfrom \"../events/ElementsEvent\";\nimport Graphic\t\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport IPickingCollider\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\n\n/**\n * @class away.base.TriangleElements\n */\nclass ElementsBase extends AssetBase\n{\n\tprivate _indices:Short3Attributes;\n\tprivate _customAttributesNames:Array<string> = new Array<string>();\n\tprivate _customAttributes:Object = new Object();\n\t\n\tprivate _numElements:number = 0;\n\tpublic _numVertices:number = 0;\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:ElementsEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\t\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._indices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributesNames():Array<string>\n\t{\n\t\treturn this._customAttributesNames;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributes(name:string):AttributesView\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\t\n\t/**\n\t * The total amount of triangles in the TriangleElements.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\tpublic copyTo(elements:ElementsBase)\n\t{\n\t\tif (this.indices)\n\t\t\telements.setIndices(this.indices.clone());\n\t\t\n\t\tfor (var name in this._customAttributes)\n\t\t\telements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\t\t}\n\t\t\n\t\tfor (var name in this._customAttributes) {\n\t\t\tthis._customAttributes[name].dispose();\n\t\t\tdelete this._customAttributes;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._indices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._indices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._indices)\n\t\t\t\tthis._indices = new Short3Attributes();\n\n\t\t\tthis._indices.set(values, offset);\n\t\t} else if (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._indices) {\n\t\t\tthis._numElements = this._indices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\t\n\t/**\n\t * Updates custom attributes.\n\t */\n\tpublic setCustomAttributes(name:string, array:Array<number>, offset?:number);\n\tpublic setCustomAttributes(name:string, arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setCustomAttributes(name:string, attributesView:AttributesView, offset?:number);\n\tpublic setCustomAttributes(name:string, values:any, offset:number = 0)\n\t{\n\t\tif (values == this._customAttributes[name])\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributes[name] = values;\n\t\t} else if (values) {\n\t\t\tif (!this._customAttributes[name])\n\t\t\t\tthis._customAttributes[name] = new Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\n\n\t\t\tthis._customAttributes[name].set(values, offset);\n\t\t} else if (this._customAttributes[name]) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n\t\t\tdelete this._customAttributes[name];\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._customAttributes[name]);\n\n\t\tthis._verticesDirty[this._customAttributes[name].id] = false;\n\n\t\tif (this._customAttributesNames.indexOf(name) == -1)\n\t\t\tthis._customAttributesNames.push(name);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D, count:number = 0, offset:number = 0)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number, count:number = 0, offset:number = 0)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1, count:number = 0, offset:number = 0)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getBoxBounds(target:Box = null, count:number = 0, offset:number = 0):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null, count:number = 0, offset:number = 0):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box, count:number = 0, offset:number = 0):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies()\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new ElementsEvent(ElementsEvent.INVALIDATE_INDICES, this._indices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices()\n\t{\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._indices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new ElementsEvent(ElementsEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision, count:number = 0, offset:number = 0):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default ElementsBase;",
    "class ElementsType\n{\n\t/**\n\t *\n\t */\n\tpublic static TRIANGLE:string = \"triangle\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINE:string = \"line\";\n}\n\nexport default ElementsType;",
    "import Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport BitmapImage2D\t\t\t \tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport ElementsBase\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport Style\t\t\t\t\t\tfrom \"../base/Style\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport IAnimator \t\t\t\t\tfrom \"../animators/IAnimator\";\nimport ElementsEvent\t\t\t\tfrom \"../events/ElementsEvent\";\nimport StyleEvent\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport ParticleData\t\t\t\t\tfrom \"../animators/data/ParticleData\";\n\n\n\n\nimport GraphicsPath\t\t\t\t\tfrom \"../draw/GraphicsPath\";\nimport GraphicsPathCommand\t\t\tfrom \"../draw/GraphicsPathCommand\";\nimport GraphicsFactoryFills\t\t\tfrom \"../draw/GraphicsFactoryFills\";\nimport GraphicsFactoryStrokes\t\tfrom \"../draw/GraphicsFactoryStrokes\";\nimport PartialImplementationError\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nimport InterpolationMethod\t\t\tfrom \"../draw/InterpolationMethod\";\nimport JointStyle\t\t\t\t\tfrom \"../draw/JointStyle\";\nimport LineScaleMode\t\t\t\tfrom \"../draw/LineScaleMode\";\nimport TriangleCulling\t\t\t\tfrom \"../draw/TriangleCulling\";\nimport SpreadMethod\t\t\t\t\tfrom \"../draw/SpreadMethod\";\nimport CapsStyle\t\t\t\t\tfrom \"../draw/CapsStyle\";\nimport GradientType\t\t\t\t\tfrom \"../draw/GradientType\";\nimport GraphicsPathWinding\t\t\tfrom \"../draw/GraphicsPathWinding\";\nimport IGraphicsData\t\t\t\tfrom \"../draw/IGraphicsData\";\nimport GraphicsStrokeStyle\t\t\tfrom \"../draw/GraphicsStrokeStyle\";\nimport GraphicsFillStyle\t\t\tfrom \"../draw/GraphicsFillStyle\";\n\n\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Sprite\n *\n * @class Graphics\n */\nclass Graphics extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Graphics]\";\n\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\n\tprivate _boxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tprivate _sphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _graphics:Array<Graphic> = new Array<Graphic>();\n\tprivate _animator:IAnimator;\n\tprivate _style:Style;\n\n\tprivate _queued_fill_pathes:Array<GraphicsPath>;\n\tprivate _queued_stroke_pathes:Array<GraphicsPath>;\n\tprivate _active_fill_path:GraphicsPath;\n\tprivate _active_stroke_path:GraphicsPath;\n\n\tprivate _current_position:Point=new Point();\n\n\tpublic get assetType():string\n\t{\n\t\treturn Graphics.assetType;\n\t}\n\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n\tpublic get count():number\n\t{\n\t\treturn this._graphics.length;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (graphic.material) {\n\t\t\t\tgraphic.material.iRemoveOwner(graphic);\n\t\t\t\tgraphic.material.iAddOwner(graphic);\n\t\t\t}\n\n\t\t\t//invalidate any existing graphic objects in case they need to pull new elements\n\t\t\tgraphic.invalidateElements();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\tpublic get queued_stroke_pathes():Array<GraphicsPath>\n\t{\n\t\treturn this._queued_stroke_pathes;\n\t}\n\n\tpublic set queued_stroke_pathes(value:Array<GraphicsPath>)\n\t{\n\t\tthis._queued_stroke_pathes=value\n\t}\n\tpublic get queued_fill_pathes():Array<GraphicsPath>\n\t{\n\t\treturn this._queued_fill_pathes;\n\t}\n\n\tpublic set queued_fill_pathes(value:Array<GraphicsPath>)\n\t{\n\t\tthis._queued_fill_pathes=value\n\t}\n\t/**\n\t * The material with which to render the Graphics.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iRemoveOwner(graphic);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iAddOwner(graphic);\n\t}\n\n\t/**\n\t * Creates a new Graphics object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._current_position=new Point();\n\t\tthis._queued_fill_pathes=[];\n\t\tthis._queued_stroke_pathes=[];\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t}\n\n\t/**\n\t * Adds a GraphicBase wrapping a Elements.\n\t *\n\t * @param elements\n\t */\n\tpublic addGraphic(elements:ElementsBase, material:MaterialBase = null, style:Style = null, count:number = 0, offset:number = 0):Graphic\n\t{\n\t\tvar graphic:Graphic;\n\n\t\tif (Graphic._available.length) {\n\t\t\tgraphic = Graphic._available.pop();\n\t\t\tgraphic._iIndex = this._graphics.length;\n\t\t\tgraphic.parent = this;\n\t\t\tgraphic.elements = elements;\n\t\t\tgraphic.material = material;\n\t\t\tgraphic.style = style;\n\t\t\tgraphic.count = count;\n\t\t\tgraphic.offset = offset;\n\t\t} else {\n\t\t\tgraphic = new Graphic(this._graphics.length, this, elements, material, style, count, offset);\n\t\t}\n\n\t\tthis._graphics.push(graphic);\n\n\t\tgraphic.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis.invalidate();\n\n\t\treturn graphic;\n\t}\n\n\tpublic removeGraphic(graphic:Graphic)\n\t{\n\t\tthis._graphics.splice(this._graphics.indexOf(graphic), 1);\n\n\t\tgraphic.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tgraphic.elements = null;\n\t\tgraphic.material = null;\n\t\tgraphic.style = null;\n\t\tgraphic.clear();\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getGraphicAt(index:number):Graphic\n\t{\n\t\treturn this._graphics[index];\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].applyTransformation(transform);\n\t}\n\n\tpublic copyTo(graphics:Graphics)\n\t{\n\t\tgraphics.material = this._material;\n\t\tgraphics.style = this.style;\n\t\tgraphics.particles = this.particles;\n\t\tgraphics.numParticles = this.numParticles;\n\t\tvar graphic:Graphic;\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\t\t\tgraphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle(), graphic.count, graphic.offset);\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tgraphics.animator = this._animator.clone();\n\t}\n\n\tpublic clone():Graphics\n\t{\n\t\tvar newInstance:Graphics = new Graphics();\n\t\t\n\t\tthis.copyTo(newInstance);\n\t\t\n\t\treturn newInstance;\n\t}\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].scale(scale);\n\t}\n\n\tpublic clear()\n\t{\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--){\n\t\t\tthis._graphics[i].clear();\n\t\t\t//this._graphics[i].dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Clears all resources used by the Graphics object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].dispose();\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar len:number = this._graphics.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic getBoxBounds():Box\n\t{\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._boxBoundsInvalid = false;\n\n\t\t\tif (!this._boxBounds)\n\t\t\t\tthis._boxBounds = new Box();\n\n\t\t\tif (this._graphics.length) {\n\t\t\t\tthis._boxBounds.setBoundIdentity();\n\t\t\t\tvar len:number = this._graphics.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\t\tthis._boxBounds = this._boxBounds.union(this._graphics[i].getBoxBounds(), this._boxBounds);\n\t\t\t} else {\n\t\t\t\tthis._boxBounds.setEmpty();\n\t\t\t}\n\t\t}\n\n\t\treturn this._boxBounds;\n\t}\n\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttarget = this._graphics[i].getSphereBounds(center, target);\n\n\t\treturn target;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\t}\n\n\tpublic _iInvalidateSurfaces()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateSurface();\n\t}\n\n\n\tpublic invalidateElements()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateElements();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number):boolean\n\t{\n\t\t//TODO: handle lines as well\n\t\tvar len:number = this._graphics.length;\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tif (this._graphics[i].hitTestPoint(x, y, 0))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttraverser.applyRenderable(this._graphics[i]);\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\n\t\t\treturn;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic draw_fills() {\n\t\tGraphicsFactoryFills.draw_pathes(this);\n\t}\n\n\tpublic draw_strokes(){\n\t\tGraphicsFactoryStrokes.draw_pathes(this);\n\t}\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\tthis.draw_fills();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\t// todo: create bitmap fill style\n\t\tthis._active_fill_path.style=new GraphicsFillStyle(0xffffff, 1);\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\t\tthis.draw_fills();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.style=new GraphicsFillStyle(color, alpha);\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\t\tthis.draw_fills();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\t// todo: create gradient fill style\n\t\tthis._active_fill_path.style=new GraphicsFillStyle(colors[0], alphas[0]);\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\t\tsourceGraphics.copyTo(this);\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tthrow new PartialImplementationError(\"cubicCurveTo\");\n\t\t/*\n\t\t t = 0.5; // given example value\n\t\t x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n\t\t y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n\t\t this.queued_command_types.push(Graphics.CMD_BEZIER);\n\t\t this.queued_command_data.push(controlX1);\n\t\t this.queued_command_data.push(controlY1);\n\t\t this.queued_command_data.push(controlX2);\n\t\t this.queued_command_data.push(controlY2);\n\t\t this.queued_command_data.push(anchorX);\n\t\t this.queued_command_data.push(anchorY);\n\n\t\t // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n\t\t this.draw_direction+=0;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tthis._current_position.x=anchorX;\n\t\tthis._current_position.y=anchorY;\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\t\t// todo: directly create triangles instead of draw commands ?\n\t\tvar radius2=radius*1.065;\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x-radius, y);\n\t\t\tfor(var i=8; i>=0;i--){\n\n\t\t\t\tvar degree = (i) *(360/8)*Math.PI/180;\n\t\t\t\tvar degree2 = degree + ((360/16)*Math.PI/180);\n\t\t\t\tthis._active_fill_path.curveTo(x-(Math.cos(degree2)*radius2), y+(Math.sin(degree2)*radius2),x-(Math.cos(degree)*radius), y+(Math.sin(degree)*radius));\n\t\t\t}\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+radius);\n\t\t\tvar radius2=radius*0.93;\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y+(radius2), x-radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y-(radius2), x, y-radius);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y-(radius2), x+radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y+(radius2), x, y+radius);\n\t\t}\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\t\twidth/=2;\n\t\theight/=2;\n\t\tif(this._active_fill_path!=null){\n\n\t\t\tthis._active_fill_path.moveTo(x, y+height);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\t\t//this.draw_fills();\n\t\t/*\n\t\t for (var i:number=0; i<graphicsData.length; i++){\n\t\t //todo\n\t\t if(graphicsData[i].dataType==\"beginFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"Path\"){\n\n\t\t }\n\n\t\t }\n\t\t */\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\t\t//todo\n\t\t/*\n\t\t if(this._active_fill_path!=null){\n\t\t this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t if(this._active_stroke_path!=null){\n\t\t this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t this._current_position.x=anchorX;\n\t\t this._current_position.y=anchorY;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\t\t//todo: directly create triangles instead of drawing commands ?\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\t\t//todo: directly create triangles instead of drawing commands ?\n\t\tif(!ellipseHeight){\n\t\t\tellipseHeight=ellipseWidth;\n\t\t}\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_fill_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_fill_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\t//todo\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\t//todo\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\t\tthis.draw_strokes();\n\t\tthis.draw_fills();\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, capstyle:number = CapsStyle.NONE, jointstyle:number = JointStyle.MITER, miterLimit:number = 100)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tthis._active_stroke_path.style = new  GraphicsStrokeStyle(color, alpha, thickness, jointstyle, capstyle, miterLimit);\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\t}\n}\n\nexport default Graphics;",
    "import Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport IAnimator\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport RenderableEvent\t\t\t\tfrom \"../events/RenderableEvent\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport Style\t\t\t\t\t\tfrom \"../base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport ElementsEvent\t\t\t\tfrom \"../events/ElementsEvent\";\nimport IRenderable \t\t\t\t\tfrom \"../base/IRenderable\";\nimport Graphics\t\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport ElementsBase\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport IPickingCollider\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Sprite\n *\n * @class away.base.Graphic\n */\nclass Graphic extends AssetBase implements IRenderable\n{\n\tpublic static _available:Array<Graphic> = new Array<Graphic>();\n\n\tpublic static assetType:string = \"[asset Graphic]\";\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _boxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tprivate _sphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid = true;\n\tprivate _style:Style;\n\tprivate _material:MaterialBase;\n\tprivate _elements:ElementsBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\n\tpublic count:number;\n\n\tpublic offset:number;\n\t\n\tpublic parent:Graphics;\n\n\t/**\n\t * The Elements object which provides the geometry data for this Graphic.\n\t */\n\tpublic get  elements():ElementsBase\n\t{\n\t\treturn this._elements;\n\t}\n\n\tpublic set elements(value:ElementsBase)\n\t{\n\t\tif (this._elements == value)\n\t\t\treturn;\n\n\t\tthis._elements = value;\n\n\t\tthis.invalidateElements();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Graphic.assetType;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parent.animator;\n\t}\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parent.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parent.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * Creates a new Graphic object\n\t */\n\tconstructor(index:number, parent:Graphics, elements:ElementsBase, material:MaterialBase = null, style:Style = null, count:number = 0, offset:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\t\n\t\tthis._iIndex = index;\n\t\tthis.parent = parent;\n\t\tthis.elements = elements;\n\t\tthis.material = material;\n\t\tthis.style = style;\n\t\tthis.count = count;\n\t\tthis.offset = offset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.parent.removeGraphic(this);\n\t\tthis.parent = null;\n\n\t\tGraphic._available.push(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\t}\n\t\n\tpublic invalidateElements()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _iGetExplicitStyle():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\tprivate _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\n\t\t\treturn;\n\t\t\n\t\tthis.invalidate();\n\t\t\n\t\tthis.dispatchEvent(event);\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn this._elements._iTestCollision(pickingCollider, this.material, pickingCollision, this.count, this.offset)\n\t}\n\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tthis._elements.applyTransformation(transform, this.count, this.offset);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number)\n\t{\n\t\tvar box:Box;\n\n\t\t//early out for box test\n\t\tif(!(box = this.getBoxBounds()).contains(x, y, z))\n\t\t\treturn false;\n\n\t\treturn this._elements.hitTestPoint(x, y, z, box, this.count, this.offset);\n\t}\n\t\n\tpublic scale(scale:number)\n\t{\n\t\tthis._elements.scale(scale, this.count, this.offset);\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tthis._elements.scaleUV(scaleU, scaleV, this.count, this.offset);\n\t}\n\n\tpublic getBoxBounds():Box\n\t{\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._boxBoundsInvalid = false;\n\n\t\t\tthis._boxBounds = this._elements.getBoxBounds(this._boxBounds || (this._boxBounds = new Box()), this.count, this.offset);\n\t\t}\n\n\t\treturn this._boxBounds;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn this._elements.getSphereBounds(center, target, this.count, this.offset);\n\t}\n}\n\nexport default Graphic;",
    "/**\n * @class away.base.HitTestCache\n */\nclass HitTestCache\n{\n\t/**\n\t * \n\t */\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\n\t/**\n\t *\n\t */\n\tpublic lastCollisionIndex:number = - 1;\n\n\t/**\n\t * \n\t */\n\tpublic divisions:number;\n}\n\nexport default HitTestCache;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Byte4Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nimport Float3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float1Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float1Attributes\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ElementsBase\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport ElementsUtils\t\t\t\tfrom \"../utils/ElementsUtils\";\nimport IPickingCollider\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * @class LineElements\n */\nclass LineElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset LineElements]\";\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineElements.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineElements\n\t{\n\t\tvar clone:LineElements = new LineElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this.indices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision, count:number = 0, offset:number = 0):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollision, count || this._numVertices, offset);\n\t}\n}\n\nexport default LineElements;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Float4Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float4Attributes\";\nimport Float3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float2Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\nimport Float1Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Float1Attributes\";\nimport Short3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport Box\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Sphere\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ElementsBase\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport Graphic\t\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport ElementsUtils\t\t\t\tfrom \"../utils/ElementsUtils\";\nimport IPickingCollider\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * @class away.base.TriangleElements\n */\nclass TriangleElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset TriangleElements]\";\n\t\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:AttributesView;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:AttributesView;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\t//used for hittesting geometry\n\tpublic hitTestCache:Object = new Object();\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleElements.assetType;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\tif (!this._positions)\n\t\t\tthis.setPositions(new Float3Attributes(this._concatenatedBuffer));\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():AttributesView\n\t{\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\tpublic getBoxBounds(target:Box = null, count:number = 0, offset:number = 0):Box\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, count || this._numVertices, offset);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null, count:number = 0, offset:number = 0):Sphere\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, count || this._numVertices, offset);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box, count:number = 0, offset:number = 0):boolean\n\t{\n\t\treturn ElementsUtils.hitTestTriangleElements(x, y, 0, box, this, count || this._numVertices, offset);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._positions)\n\t\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer); //positions cannot be null\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._normals = ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._tangents = ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setUVs(attributesView:AttributesView, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._uvs)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = values;\n\t\t} else if (values) {\n\t\t\tif (!this._uvs)\n\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._uvs.set(values, offset);\n\t\t} else if (this._uvs) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._positions) {\n\t\t\tthis._positions.dispose();\n\t\t\tthis._positions = null;\n\t\t}\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\t}\n\n\tpublic copyTo(elements:TriangleElements)\n\t{\n\t\tsuper.copyTo(elements);\n\n\t\t//temp disable auto derives\n\t\tvar autoDeriveNormals:boolean = this._autoDeriveNormals;\n\t\tvar autoDeriveTangents:boolean = this._autoDeriveTangents;\n\t\telements.autoDeriveNormals = this._autoDeriveNormals = false;\n\t\telements.autoDeriveTangents = this._autoDeriveTangents = false;\n\n\t\telements.setPositions(this.positions.clone());\n\n\t\tif (this.normals)\n\t\t\telements.setNormals(this.normals.clone());\n\n\t\tif (this.tangents)\n\t\t\telements.setTangents(this.tangents.clone());\n\n\t\tif (this.uvs)\n\t\t\telements.setUVs(this.uvs.clone());\n\n\t\telements.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\telements.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\telements.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\telements.autoDeriveNormals = this._autoDeriveNormals = autoDeriveNormals;\n\t\telements.autoDeriveTangents = this._autoDeriveTangents = autoDeriveTangents;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleElements\n\t{\n\t\tvar clone:TriangleElements = new TriangleElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tthis.copyTo(clone);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1, count:number = 0, offset:number = 0)\n\t{\n\t\tif (this.uvs) // only scale if uvs exist\n\t\t\tElementsUtils.scaleUVs(scaleU, scaleV, this.uvs, count || this._numVertices, offset);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number, count:number = 0, offset:number = 0)\n\t{\n\t\tElementsUtils.scale(scale, this.positions, count || this._numVertices, offset);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D, count:number = 0, offset:number = 0)\n\t{\n\t\tElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, count || this._numVertices, offset);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision, count:number = 0, offset:number = 0):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollision, count || this._numVertices, offset);\n\t}\n}\n\nexport default TriangleElements;",
    "export {default as ElementsBase}\t\t\t\t\tfrom \"./graphics/ElementsBase\";\nexport {default as ElementsType}\t\t\t\t\tfrom \"./graphics/ElementsType\";\nexport {default as Graphic}\t\t\t\t\t\t\tfrom \"./graphics/Graphic\";\nexport {default as Graphics}\t\t\t\t\t\tfrom \"./graphics/Graphics\";\nexport {default as LineElements}\t\t\t\t\tfrom \"./graphics/LineElements\";\nexport {default as TriangleElements}\t\t\t\tfrom \"./graphics/TriangleElements\";",
    "import Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport BitmapImageCube\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImageCube\";\n\nimport IRenderable\t\t\t\t\tfrom \"../base/IRenderable\";\nimport LineElements\t\t\t\t\tfrom \"../graphics/LineElements\";\nimport Skybox\t\t\t\t\t\tfrom \"../display/Skybox\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport BasicMaterial\t\t\t\tfrom \"../materials/BasicMaterial\";\nimport Single2DTexture\t\t\t\tfrom \"../textures/Single2DTexture\";\nimport SingleCubeTexture\t\t\tfrom \"../textures/SingleCubeTexture\";\nimport TextureBase\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport Graphic\t\t\t\t\t\tfrom \"../graphics/Graphic\";\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderable:IRenderable = null):MaterialBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Graphic) && (<Graphic> renderable).elements.isAsset(LineElements)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderable:IRenderable = null):TextureBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial(0xFFFFFF);\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D()\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}\n\nexport default DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\tfrom \"../display/DisplayObject\";\nimport MovieClip\t\t\t\t\t\tfrom \"../display/MovieClip\";\n\nclass FrameScriptManager\n{\n\t// FrameScript debugging:\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\n\n\n\tpublic static frameScriptDebug:Object = undefined;\n\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport default FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport TouchPoint\t\t\t\t\tfrom \"../base/TouchPoint\";\nimport View\t\t\t\t\t\t\tfrom \"../View\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\nimport AwayMouseEvent\t\t\t\tfrom \"../events/MouseEvent\";\nimport FrameScriptManager\t\t\tfrom \"../managers/FrameScriptManager\";\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollision:PickingCollision;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollision;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollision)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollision;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collision:PickingCollision = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collision == null)\n\t\t\tcollision = this._iCollision;\n\n\t\t// 3D properties.\n\t\tif (collision) {\n\t\t\t// Object.\n\t\t\tevent.entity = collision.entity;\n\t\t\tevent.renderable = collision.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collision.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collision.position? collision.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collision.normal? collision.normal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.elementIndex = collision.elementIndex;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollision)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport default MouseManager;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport View\t\t\t\t\t\t\tfrom \"../View\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\nimport AwayTouchEvent\t\t\t\tfrom \"../events/TouchEvent\";\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollision:PickingCollision;\n\tprivate _previousCollidingObject:PickingCollision;\n\tpublic static _iCollisionFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollisionFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollision)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollision)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollision, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.entity = collider.entity;\n\t\t\tevent.renderable = collider.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collider.position? collider.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collider.normal? collider.normal.clone() : null;\n\t\t\t// ElementsIndex.\n\t\t\tevent.elementIndex = collider.elementIndex;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollision, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport default TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "export {default as DefaultMaterialManager}\t\t\tfrom \"./managers/DefaultMaterialManager\";\nexport {default as FrameScriptManager}\t\t\t\tfrom \"./managers/FrameScriptManager\";\nexport {default as MouseManager}\t\t\t\t\tfrom \"./managers/MouseManager\";\nexport {default as TouchManager}\t\t\t\t\tfrom \"./managers/TouchManager\";",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport Single2DTexture\t\t\t\tfrom \"../textures/Single2DTexture\";\nimport TextureBase\t\t\t\t\tfrom \"../textures/TextureBase\";\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}\n\nexport default BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport default LightSources;",
    "import BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport IAnimationSet\t\t\t\tfrom \"../animators/IAnimationSet\";\nimport IAnimator\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport ISurface\t\t\t\t\t\tfrom \"../base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"../base/IRenderable\";\nimport SurfaceEvent\t\t\t\t\tfrom \"../events/SurfaceEvent\";\nimport LightPickerBase\t\t\t\tfrom \"../materials/lightpickers/LightPickerBase\";\nimport TextureBase\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport Style\t\t\t\t\t\tfrom \"../base/Style\";\nimport StyleEvent\t\t\t\t\tfrom \"../events/StyleEvent\";\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderable> = new Array<IRenderable>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\tprivate _curves:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether material should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use an atlas. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderable as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderable that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * Removes an IRenderable as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateSurfaces()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateSurface();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number)\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidatePasses();\n\n\t\t//invalidate renderables for number of images getter (in case it has changed)\n\t\tthis.invalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport default MaterialBase;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport IEntity\t\t\t\t\t\tfrom \"../../display/IEntity\";\nimport LightBase\t\t\t\t\tfrom \"../../display/LightBase\";\nimport DirectionalLight\t\t\t\tfrom \"../../display/DirectionalLight\";\nimport LightProbe\t\t\t\t\tfrom \"../../display/LightProbe\";\nimport PointLight\t\t\t\t\tfrom \"../../display/PointLight\";\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity)\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport default LightPickerBase;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport LightBase\t\t\t\t\tfrom \"../../display/LightBase\";\nimport DirectionalLight\t\t\t\tfrom \"../../display/DirectionalLight\";\nimport LightProbe\t\t\t\t\tfrom \"../../display/LightProbe\";\nimport PointLight\t\t\t\t\tfrom \"../../display/PointLight\";\nimport LightEvent\t\t\t\t\tfrom \"../../events/LightEvent\";\nimport LightPickerBase\t\t\t\tfrom \"../../materials/lightpickers/LightPickerBase\";\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport default StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport FreeMatrixProjection\t\t\tfrom \"awayjs-core/lib/projections/FreeMatrixProjection\";\nimport IProjection\t\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\n\nimport IRenderer\t\t\t\t\tfrom \"../../IRenderer\";\nimport Scene\t\t\t\t\t\tfrom \"../../display/Scene\";\nimport Camera\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport DirectionalShadowMapper\t\tfrom \"../../materials/shadowmappers/DirectionalShadowMapper\";\nimport Single2DTexture\t\t\t\tfrom \"../../textures/Single2DTexture\";\n\nclass CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = camera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport default CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport PerspectiveProjection\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\n\nimport Scene\t\t\t\t\t\tfrom \"../../display/Scene\";\nimport Camera\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport PointLight\t\t\t\t\tfrom \"../../display/PointLight\";\nimport ShadowMapperBase\t\t\t\tfrom \"../../materials/shadowmappers/ShadowMapperBase\";\nimport IRenderer\t\t\t\t\tfrom \"../../IRenderer\";\nimport SingleCubeTexture\t\t\tfrom \"../../textures/SingleCubeTexture\";\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.moveTo(pos.x, pos.y, pos.z);\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:SingleCubeTexture, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tif (this._needsRender[i])\n\t\t\t\trenderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i)\n\t}\n}\n\nexport default CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport FreeMatrixProjection\t\t\tfrom \"awayjs-core/lib/projections/FreeMatrixProjection\";\n\nimport Scene\t\t\t\t\t\tfrom \"../../display/Scene\";\nimport IRenderer\t\t\t\t\tfrom \"../../IRenderer\";\nimport Camera\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"../../display/DirectionalLight\";\nimport ShadowMapperBase\t\t\t\tfrom \"../../materials/shadowmappers/ShadowMapperBase\";\nimport Single2DTexture\t\t\t\tfrom \"../../textures/Single2DTexture\";\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer)\n\t{\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(camera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = camera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(camera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((camera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((camera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((camera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(camera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport default DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport DirectionalShadowMapper\t\tfrom \"../../materials/shadowmappers/DirectionalShadowMapper\";\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar corners:Array<number> = camera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport default NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport Scene\t\t\t\t\t\tfrom \"../../display/Scene\";\nimport LightBase\t\t\t\t\tfrom \"../../display/LightBase\";\nimport IRenderer\t\t\t\t\tfrom \"../../IRenderer\";\nimport Camera\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport TextureBase\t\t\t\t\tfrom \"../../textures/TextureBase\";\n\nclass ShadowMapperBase extends AssetBase\n{\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(camera:Camera, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(scene, this._depthMap, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:TextureBase, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport default ShadowMapperBase;",
    "export {default as LightPickerBase}\t\t\t\t\tfrom \"./materials/lightpickers/LightPickerBase\";\nexport {default as StaticLightPicker}\t\t\t\tfrom \"./materials/lightpickers/StaticLightPicker\";\nexport {default as CascadeShadowMapper}\t\t\t\tfrom \"./materials/shadowmappers/CascadeShadowMapper\";\nexport {default as CubeMapShadowMapper}\t\t\t\tfrom \"./materials/shadowmappers/CubeMapShadowMapper\";\nexport {default as DirectionalShadowMapper}\t\t\tfrom \"./materials/shadowmappers/DirectionalShadowMapper\";\nexport {default as NearDirectionalShadowMapper}\t\tfrom \"./materials/shadowmappers/NearDirectionalShadowMapper\";\nexport {default as ShadowMapperBase}\t\t\t\tfrom \"./materials/shadowmappers/ShadowMapperBase\";\nexport {default as BasicMaterial}\t\t\t\t\tfrom \"./materials/BasicMaterial\";\nexport {default as LightSources}\t\t\t\t\tfrom \"./materials/LightSources\";\nexport {default as MaterialBase}\t\t\t\t\tfrom \"./materials/MaterialBase\";",
    "import DisplayObject from \"../display/DisplayObject\";\n\nimport NodeBase\t\t\t\t\t\tfrom \"../partition/NodeBase\";\nimport PartitionBase\t\t\t\tfrom \"../partition/PartitionBase\";\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport default BasicPartition;",
    "import EntityNode\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t// todo: dead end for now, if it has a debug sprite, then sure accept that\n\t}\n}\n\nexport default CameraNode;",
    "import EntityNode\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default DirectionalLightNode;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport AxisAlignedBoundingBox\t\tfrom \"../bounds/AxisAlignedBoundingBox\";\nimport BoundingSphere\t\t\t\tfrom \"../bounds/BoundingSphere\";\nimport BoundingVolumeBase\t\t\tfrom \"../bounds/BoundingVolumeBase\";\nimport BoundsType\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport NullBounds\t\t\t\t\tfrom \"../bounds/NullBounds\";\nimport SceneGraphNode\t\t\t\tfrom \"../partition/SceneGraphNode\";\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport DisplayObjectEvent\t\t\tfrom \"../events/DisplayObjectEvent\";\nimport INode\t\t\t\t\t\tfrom \"../partition/INode\";\n\n/**\n * @class away.partition.EntityNode\n */\nclass DisplayObjectNode extends AbstractionBase implements INode\n{\n\tpublic numEntities:number = 0;\n\n\tpublic isSceneGraphNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\n\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\n\t\n\tpublic _displayObject:DisplayObject;\n\tprivate _boundsDirty:boolean = true;\n\tprivate _bounds:BoundingVolumeBase;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic parent:SceneGraphNode;\n\n\tprivate _boundsType:string;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._displayObject.debugVisible;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._boundsDirty)\n\t\t\tthis._updateBounds();\n\n\t\treturn this._bounds;\n\t}\n\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\n\t{\n\t\tsuper(displayObject, pool);\n\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\n\n\t\tthis._displayObject = displayObject;\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\n\t\tthis._boundsType = this._displayObject.boundsType;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this._displayObject.castsShadows;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\t\tthis._displayObject = null;\n\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tthis._bounds = null;\n\t}\n\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tif (this._boundsType != this._displayObject.boundsType) {\n\t\t\tthis._boundsType = this._displayObject.boundsType;\n\t\t\tthis._boundsDirty = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\t\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isRenderable():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t// do nothing here\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\t// do nothing here\n\t}\n\n\tprivate _updateBounds()\n\t{\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tif (this._boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis._boundsDirty = false;\n\t}\n}\n\nexport default DisplayObjectNode;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport DisplayObjectEvent\t\t\tfrom \"../events/DisplayObjectEvent\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\nimport DisplayObjectNode\t\t\tfrom \"../partition/DisplayObjectNode\";\nimport PartitionBase\t\t\t\tfrom \"../partition/PartitionBase\";\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends DisplayObjectNode\n{\n\tpublic numEntities:number = 1;\n\n\tprivate _partition:PartitionBase;\n\tprivate _maskPosition:Vector3D = new Vector3D();\n\n\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper(displayObject, partition);\n\n\t\tthis._partition = partition;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._partition = null;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(globalRayPosition:Vector3D, globalRayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\n\t\t\treturn false;\n\n\t\tvar pickingCollision:PickingCollision = this._displayObject._iPickingCollision;\n\t\tpickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\n\t\tpickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\n\n\t\tif (!pickingCollision.normal)\n\t\t\tpickingCollision.normal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollision.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollision.globalRayPosition = globalRayPosition;\n\t\tpickingCollision.globalRayDirection = globalRayDirection;\n\t\tpickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isRenderable():boolean\n\t{\n\t\treturn this._displayObject._iAssignedColorTransform()._isRenderable();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyEntity(this._displayObject);\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\tthis.bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tprivate isIntersectingMasks(globalRayPosition:Vector3D, globalRayDirection:Vector3D, masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tthis._maskPosition.x = globalRayPosition.x + globalRayDirection.x*1000;\n\t\t\tthis._maskPosition.y = globalRayPosition.y + globalRayDirection.y*1000;\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nexport default EntityNode;",
    "import EntityNode\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default LightProbeNode;",
    "import DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport INode\t\t\t\t\t\tfrom \"../partition/INode\";\nimport IContainerNode\t\t\t\tfrom \"../partition/IContainerNode\";\nimport BoundingVolumeBase\t\t\tfrom \"../bounds/BoundingVolumeBase\";\nimport NullBounds from \"../bounds/NullBounds\";\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements IContainerNode\n{\n\tprivate _bounds:BoundingVolumeBase = new NullBounds();\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:IContainerNode;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isRenderable():boolean\n\t{\n\t\treturn true;\n\t}\n\t\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n}\n\nexport default NodeBase;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\n\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport EntityNode\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport IEntityNodeClass\t\t\t\tfrom \"../partition/IEntityNodeClass\";\nimport DisplayObjectNode\t\t\tfrom \"../partition/DisplayObjectNode\";\nimport IContainerNode\t\t\t\tfrom \"../partition/IContainerNode\";\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _rootNode:IContainerNode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:DisplayObjectNode;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(displayObject:DisplayObject)\n\t{\n\t\tthis._abstractionPool[displayObject.id] = null;\n\t}\n\n\tpublic traverse(traverser:ITraverser)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tif (this._rootNode) {\n\t\t\tthis._rootNode.acceptTraverser(traverser);\n\t\t}\n\t}\n\n\tpublic iMarkForUpdate(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:DisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode._displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:IContainerNode;\n\t\tvar t:DisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n\t}\n}\n\nexport default PartitionBase;",
    "import EntityNode\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default PointLightNode;",
    "import ITraverser\t\t\t\tfrom \"../ITraverser\";\nimport DisplayObjectNode\t\t\tfrom \"../partition/DisplayObjectNode\";\nimport EntityNode\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport IContainerNode\t\t\t\tfrom \"../partition/IContainerNode\";\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends DisplayObjectNode implements IContainerNode\n{\n\tpublic isSceneGraphNode:boolean = true;\n\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _childDepths:Array<number> = new Array<number>();\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tfor (i = this._pChildNodes.length - 1; i >= 0; i--)\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\tfor (i = this._childMasks.length - 1; i >= 0; i--)\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:DisplayObjectNode)\n\t{\n\t\tnode.parent = this;\n\n\t\tif (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.push(node);\n\t\t} else {\n\t\t\tvar depth:number = node._displayObject._depthID;\n\t\t\tvar len:number = this._childDepths.length;\n\t\t\tvar index:number = len;\n\n\t\t\twhile (index--)\n\t\t\t\tif (this._childDepths[index] < depth)\n\t\t\t\t\tbreak;\n\n\t\t\tindex++;\n\n\t\t\tif (index < len) {\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\n\t\t\t} else {\n\t\t\t\tthis._pChildNodes.push(node);\n\t\t\t\tthis._childDepths.push(depth);\n\t\t\t}\n\t\t}\n\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:DisplayObjectNode)\n\t{\n\t\tif (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\n\t\t} else {\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\n\n\t\t\tthis._pChildNodes.splice(index, 1);\n\t\t\tthis._childDepths.splice(index, 1);\n\t\t}\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\n\t}\n}\nexport default SceneGraphNode;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport DisplayObjectContainer\t\tfrom \"../display/DisplayObjectContainer\";\nimport ITraverser\t\t\t\tfrom \"../ITraverser\";\nimport SceneGraphNode\t\t\t\tfrom \"../partition/SceneGraphNode\";\nimport PartitionBase\t\t\t\tfrom \"../partition/PartitionBase\";\nimport IContainerNode\t\t\t\tfrom \"../partition/IContainerNode\";\nimport DisplayObjectNode\t\t\tfrom \"../partition/DisplayObjectNode\";\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tprivate _sceneGraphNodePool:SceneGraphNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool();\n\t}\n\n\tpublic traverse(traverser:ITraverser)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\tif (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\n\t\t\tthis._rootNode = <SceneGraphNode> node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\n\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport default SceneGraphPartition;\n\n\n/**\n * @class away.pool.SceneGraphNodePool\n */\nclass SceneGraphNodePool implements IAbstractionPool\n{\n\tprivate _abstractionPool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdelete this._abstractionPool[displayObjectContainer.id];\n\t}\n}",
    "import Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\n\nimport EntityNode\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport ITraverser\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applySkybox(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport default SkyboxNode;",
    "export {default as BasicPartition}\t\t\t\t\tfrom \"./partition/BasicPartition\";\nexport {default as CameraNode}\t\t\t\t\t\tfrom \"./partition/CameraNode\";\nexport {default as DirectionalLightNode}\t\t\tfrom \"./partition/DirectionalLightNode\";\nexport {default as DisplayObjectNode}\t\t\t\tfrom \"./partition/DisplayObjectNode\";\nexport {default as EntityNode}\t\t\t\t\t\tfrom \"./partition/EntityNode\";\nexport {default as IContainerNode}\t\t\t\t\tfrom \"./partition/IContainerNode\";\nexport {default as IDisplayObjectNode}\t\t\t\tfrom \"./partition/IDisplayObjectNode\";\nexport {default as IEntityNodeClass}\t\t\t\tfrom \"./partition/IEntityNodeClass\";\nexport {default as INode}\t\t\t\t\t\t\tfrom \"./partition/INode\";\nexport {default as LightProbeNode}\t\t\t\t\tfrom \"./partition/LightProbeNode\";\nexport {default as NodeBase}\t\t\t\t\t\tfrom \"./partition/NodeBase\";\nexport {default as PartitionBase}\t\t\t\t\tfrom \"./partition/PartitionBase\";\nexport {default as PointLightNode}\t\t\t\t\tfrom \"./partition/PointLightNode\";\nexport {default as SceneGraphNode}\t\t\t\t\tfrom \"./partition/SceneGraphNode\";\nexport {default as SceneGraphPartition}\t\t\t\tfrom \"./partition/SceneGraphPartition\";\nexport {default as SkyboxNode}\t\t\t\t\t\tfrom \"./partition/SkyboxNode\";\n",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Point\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport LineElements\t\t\t\t\t\tfrom \"../graphics/LineElements\";\nimport TriangleElements\t\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport Billboard\t\t\t\t\t\tfrom \"../display/Billboard\";\nimport PickingCollision\t\t\t\t\tfrom \"../pick/PickingCollision\";\nimport IPickingCollider\t\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport MaterialBase\t\t\t\t\t\tfrom \"../materials/MaterialBase\";\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollision The collision object used to store the collision results\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollision:PickingCollision)\n\t{\n\t\tpickingCollision.renderable = null;\n\n\t\t//if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollision.renderable = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleElements:TriangleElements, material:MaterialBase, pickingCollision:PickingCollision, count:number, offset:number = 0):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollision.rayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollision.rayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:ArrayBufferView = triangleElements.positions.get(count, offset);\n\t\tvar posDim:number = triangleElements.positions.dimensions;\n\n\t\tvar indices:Uint16Array;\n\t\tif (triangleElements.indices) {\n\t\t\tindices = triangleElements.indices.get(triangleElements.numElements);\n\t\t\tcount = indices.length;\n\t\t}\n\n\t\tfor (var index:number = 0; index < count; index+=3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\tif (indices) {\n\t\t\t\ti0 = indices[index]*posDim;\n\t\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\t\ti2 = indices[index + 2]*posDim;\n\t\t\t} else {\n\t\t\t\ti0 = index*posDim;\n\t\t\t\ti1 = (index + 1)*posDim;\n\t\t\t\ti2 = (index + 2)*posDim;\n\t\t\t}\n\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp1x = positions[i1];\n\t\t\tp2x = positions[i2];\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\ts0y = p1y - p0y;\n\t\t\ts1y = p2y - p0y;\n\n\t\t\tif (posDim == 3) {\n\t\t\t\tp0z = positions[i0 + 2];\n\t\t\t\tp1z = positions[i1 + 2];\n\t\t\t\tp2z = positions[i2 + 2];\n\t\t\t\ts0z = p1z - p0z;\n\t\t\t\ts1z = p2z - p0z;\n\n\t\t\t\t// evaluate sides and triangle normal\n\t\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\t\tnx *= nl;\n\t\t\t\tny *= nl;\n\t\t\t\tnz *= nl;\n\t\t\t} else { //2d hittest\n\t\t\t\tnx = 0;\n\t\t\t\tny = 0;\n\t\t\t\tnz = 1;\n\t\t\t}\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < pickingCollision.rayEntryDistance) { // all tests passed\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollision.rayEntryDistance = t;\n\t\t\t\t\tpickingCollision.position = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollision.normal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tif (triangleElements.uvs) { //uv calculations\n\t\t\t\t\t\tvar uvs:ArrayBufferView = triangleElements.uvs.get(triangleElements.numVertices);\n\t\t\t\t\t\tvar uvDim:number = triangleElements.uvs.dimensions;\n\n\t\t\t\t\t\tvar uIndex:number = indices[index]*uvDim;\n\t\t\t\t\t\tvar uv0:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 1]*uvDim;\n\t\t\t\t\t\tvar uv1:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 2]*uvDim;\n\t\t\t\t\t\tvar uv2:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tpickingCollision.uv = new Point(u*uv0.x + v*uv1.x + w*uv2.x, u*uv0.y + v*uv1.y + w*uv2.y);\n\t\t\t\t\t}\n\t\t\t\t\tpickingCollision.elementIndex = collisionTriangleIndex;\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\t//\n\t///**\n\t// * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n\t// *\n\t// * @param triangleElements\n\t// * @param material\n\t// * @param pickingCollision\n\t// * @returns {boolean}\n\t// */\n\t//public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\n\t//{\n\t//\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\n\t//\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\n\t//\n\t//\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t//\t//this will only work while all points lie on the x/y plane\n\t//\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\t//\n\t//\tvar result:Vector3D = new Vector3D();\n\t//\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t//\tresult.x = rayPosition.x - ( plane.x*distance);\n\t//\tresult.y = rayPosition.y - ( plane.y*distance);\n\t//\tresult.z = rayPosition.z - ( plane.z*distance);\n\t//\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t//\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t//\trayDirection.scaleBy(t);\n\t//\tvar p:Vector3D = rayPosition.add(rayDirection);\n\t//\n\t//\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n\t//\tvar collisionCurveIndex:number = -1;\n\t//\tvar bothSides:boolean = material.bothSides;\n\t//\n\t//\n\t//\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n\t//\tvar posDim:number = curveElements.positions.dimensions;\n\t//\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n\t//\tvar curveDim:number = curveElements.curves.dimensions;\n\t//\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n\t//\tvar uvDim:number = curveElements.uvs.dimensions;\n\t//\tvar numIndices:number = indices.length;\n\t//\n\t//\n\t//\tfor(var index:number = 0; index < numIndices; index+=3)\n\t//\t{\n\t//\t\tvar id0:number = indices[index];\n\t//\t\tvar id1:number = indices[index + 1] * posDim;\n\t//\t\tvar id2:number = indices[index + 2] * posDim;\n\t//\n\t//\t\tvar ax:number = positions[id0 * posDim];\n\t//\t\tvar ay:number = positions[id0 * posDim + 1];\n\t//\t\tvar bx:number = positions[id1];\n\t//\t\tvar by:number = positions[id1 + 1];\n\t//\t\tvar cx:number = positions[id2];\n\t//\t\tvar cy:number = positions[id2 + 1];\n\t//\n\t//\t\tvar curvex:number = curves[id0 * curveDim];\n\t//\t\tvar az:number = positions[id0 * posDim + 2];\n\t//\n\t//\t\t//console.log(ax, ay, bx, by, cx, cy);\n\t//\n\t//\t\t//from a to p\n\t//\t\tvar dx:number = ax - p.x;\n\t//\t\tvar dy:number = ay - p.y;\n\t//\n\t//\t\t//edge normal (a-b)\n\t//\t\tvar nx:number = by - ay;\n\t//\t\tvar ny:number = -(bx - ax);\n\t//\n\t//\t\t//console.log(ax,ay,bx,by,cx,cy);\n\t//\n\t//\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot a\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = bx - p.x;\n\t//\t\tdy = by - p.y;\n\t//\t\tnx = cy - by;\n\t//\t\tny = -(cx - bx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot b\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = cx - p.x;\n\t//\t\tdy = cy - p.y;\n\t//\t\tnx = ay - cy;\n\t//\t\tny = -(ax - cx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot c\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\t//check if not solid\n\t//\t\tif (curvex != 2) {\n\t//\n\t//\t\t\tvar v0x:number = bx - ax;\n\t//\t\t\tvar v0y:number = by - ay;\n\t//\t\t\tvar v1x:number = cx - ax;\n\t//\t\t\tvar v1y:number = cy - ay;\n\t//\t\t\tvar v2x:number = p.x - ax;\n\t//\t\t\tvar v2y:number = p.y - ay;\n\t//\n\t//\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t//\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t//\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t//\t\t\tvar u:number = 1 - v - w;\n\t//\n\t//\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t//\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\t//\n\t//\t\t\tvar d:number = uu * uu - vv;\n\t//\n\t//\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t//\t\t\t\tcontinue;\n\t//\t\t}\n\t//\t\t//TODO optimize away this pointless check as the distance is always the same\n\t//\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t//\t\tif (distance < shortestCollisionDistance) {\n\t//\t\t\tshortestCollisionDistance = distance;\n\t//\t\t\tcollisionCurveIndex = index/3;\n\t//\t\t\tpickingCollision.rayEntryDistance = distance;\n\t//\t\t\tpickingCollision.localPosition = p;\n\t//\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\n\t//\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t//\t\t\tpickingCollision.index = index;\n\t//\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\n\t//\n\t//\t\t\t// if not looking for best hit, first found will do...\n\t//\t\t\tif (!this._findClosestCollision)\n\t//\t\t\t\treturn true;\n\t//\t\t}\n\t//\t}\n\t//\n\t//\tif (collisionCurveIndex >= 0)\n\t//\t\treturn true;\n\t//\n\t//\treturn false;\n\t//}\n\n\t/**\n\t * Tests a <code>LineElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineElements:LineElements, material:MaterialBase, pickingCollision:PickingCollision, count:number, offset:number = 0):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default JSPickingCollider;",
    "import Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport IRenderable\t\t\t\t\tfrom \"../base/IRenderable\";\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollision\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollision\n */\nclass PickingCollision\n{\n\t/**\n\t * The entity to which this collision object belongs.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable associated with a collision.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The local position of the collision on the renderable's surface.\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the element where the collision took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * Creates a new <code>PickingCollision</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tthis.entity = entity;\n\t}\n}\n\nexport default PickingCollision;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n\nimport ITraverser\t\t\t\t\tfrom \"../ITraverser\";\nimport DisplayObject\t\t\t\tfrom \"../display/DisplayObject\";\nimport Scene\t\t\t\t\t\tfrom \"../display/Scene\";\nimport View\t\t\t\t\t\t\tfrom \"../View\";\nimport IPicker\t\t\t\t\t\tfrom \"../pick/IPicker\";\nimport PickingCollision\t\t\t\tfrom \"../pick/PickingCollision\";\nimport IEntity\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport IRenderable\t\t\t\t\tfrom \"../base/IRenderable\";\nimport INode\t\t\t\t\t\tfrom \"../partition/INode\";\nimport IPickingCollider\t\t\t\tfrom \"../pick/IPickingCollider\";\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker, ITraverser\n{\n\tprivate _rayPosition:Vector3D;\n\tprivate _rayDirection:Vector3D;\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _bestCollision:PickingCollision;\n\tprivate _testCollision:PickingCollision;\n\tprivate _testCollider:IPickingCollider;\n\tprivate _ignoredEntities:Array<IEntity>;\n\n\tprivate _entities:Array<IEntity> = new Array<IEntity>();\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic onlyMouseEnabled:boolean = true;\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollision\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollision\n\t{\n\t\tthis._rayPosition = rayPosition;\n\t\tthis._rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this);\n\n\t\t//early out if no collisions detected\n\t\tif (!this._entities.length)\n\t\t\treturn null;\n\n\t\tvar collision:PickingCollision = this.getPickingCollision();\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn collision;\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\n//\t\t{\n//\t\t\tthis._numRenderables = 0;\n//\n//\t\t\tvar renderable:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\trenderable = entities[c];\n//\n//\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollision(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities:Array<IEntity>)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\t\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tif (this._ignoredEntities) {\n\t\t\tvar len:number = this._ignoredEntities.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollision.rayEntryDistance > entity2._iPickingCollision.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollision():PickingCollision\n\t{\n\t\t// Sort entities from closest to furthest to reduce tests.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis._bestCollision = null;\n\t\t\n\t\tvar entity:IEntity;\n\t\tvar len:number = this._entities.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tentity = this._entities[i];\n\t\t\tthis._testCollision = entity._iPickingCollision;\n\t\t\tif (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\n\t\t\t\tthis._testCollider = entity.pickingCollider;\n\t\t\t\tif (this._testCollider) {\n\t\t\t\t\tthis._testCollision.rayEntryDistance = Number.MAX_VALUE;\n\t\t\t\t\tentity._acceptTraverser(this);\n\t\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\t\tif (this._bestCollision && !this._findClosestCollision)\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if (!this._testCollision.rayOriginIsInsideBounds) {\n\t\t\t\t\t// A bounds collision with no picking collider stops all checks.\n\t\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\t\tthis._bestCollision = this._testCollision;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._bestCollision)\n\t\t\tthis.updatePosition(this._bestCollision);\n\n\t\treturn this._bestCollision;\n\t}\n\n\tprivate updatePosition(pickingCollision:PickingCollision)\n\t{\n\t\tvar collisionPos:Vector3D = pickingCollision.position || (pickingCollision.position = new Vector3D());\n\n\t\tvar rayDir:Vector3D = pickingCollision.rayDirection;\n\t\tvar rayPos:Vector3D = pickingCollision.rayPosition;\n\t\tvar t:number = pickingCollision.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tif (!this.isIgnored(entity))\n\t\t\tthis._entities.push(entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tif (renderable._iTestCollision(this._testCollision, this._testCollider))\n\t\t\tthis._bestCollision = this._testCollision;\n\t}\n\t\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport default RaycastPicker;",
    "export {default as IPicker}\t\t\t\t\t\t\tfrom \"./pick/IPicker\";\nexport {default as IPickingCollider}\t\t\t\tfrom \"./pick/IPickingCollider\";\nexport {default as JSPickingCollider}\t\t\t\tfrom \"./pick/JSPickingCollider\";\nexport {default as PickingCollision}\t\t\t\tfrom \"./pick/PickingCollision\";\nexport {default as RaycastPicker}\t\t\t\t\tfrom \"./pick/RaycastPicker\";",
    "import AssetBase\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport DisplayObject\t\t\tfrom \"../display/DisplayObject\";\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport default PrefabBase;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"../graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"../graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"../graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A Capsule primitive sprite.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\nimport PrimitiveCylinderPrefab\tfrom \"../prefabs/PrimitiveCylinderPrefab\";\n\n/**\n * A UV Cone primitive sprite.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport default PrimitiveConePrefab;",
    "﻿﻿import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"../graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"../graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"../graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar numIndices:number = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGraphics() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"../graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"../graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"../graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A Cylinder primitive sprite.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"../graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"../graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"../graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A Plane primitive sprite.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper(material, elementsType);\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGraphics.numVertices) {\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar uvs:ArrayBufferView;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidatePrimitive()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\nimport PrimitiveCylinderPrefab\tfrom \"../prefabs/PrimitiveCylinderPrefab\";\n\n/**\n * A UV RegularPolygon primitive sprite.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport default PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AbstractMethodError\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport DisplayObject\t\t\tfrom \"../display/DisplayObject\";\nimport ElementsType\t\t\t\tfrom \"../graphics/ElementsType\";\nimport ElementsBase\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"../graphics/TriangleElements\";\nimport LineElements\t\t\t\tfrom \"../graphics/LineElements\";\nimport Sprite\t\t\t\t\tfrom \"../display/Sprite\";\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\nimport PrefabBase\t\t\t\tfrom \"../prefabs/PrefabBase\";\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _primitiveDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _elements:ElementsBase;\n\tprivate _elementsType:string;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get elementsType():string\n\t{\n\t\treturn this._elementsType;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Sprite> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\")\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._material = material;\n\t\tthis._elementsType = elementsType;\n\n\t\tif (this._elementsType == ElementsType.TRIANGLE) {\n\t\t\tvar triangleElements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\ttriangleElements.autoDeriveNormals = false;\n\t\t\ttriangleElements.autoDeriveTangents = false;\n\t\t\tthis._elements = triangleElements;\n\t\t} else if (this._elementsType == ElementsType.LINE) {\n\t\t\tthis._elements = new LineElements(new AttributesBuffer());\n\t\t}\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\t\n\t/**\n\t * Invalidates the primitive, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidatePrimitive()\n\t{\n\t\tthis._primitiveDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGraphics()\n\t{\n\t\tthis._pBuildGraphics(this._elements, this._elementsType);\n\n\t\tthis._primitiveDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._elements, this._elementsType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._primitiveDirty)\n\t\t\tthis.updateGraphics();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar sprite:Sprite = new Sprite(this._material);\n\t\tsprite.graphics.addGraphic(this._elements);\n\t\tsprite._iSourcePrefab = this;\n\n\t\treturn sprite;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport default PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"../graphics/ElementsType\";\nimport LineElements\t\t\t\tfrom \"../graphics/LineElements\";\nimport ElementsBase\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"../graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A UV Sphere primitive sprite.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:ArrayBufferView = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport ElementsType\t\t\t\tfrom \"../graphics/ElementsType\";\nimport ElementsBase\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\tfrom \"../graphics/TriangleElements\";\nimport MaterialBase\t\t\t\tfrom \"../materials/MaterialBase\";\nimport PrimitivePrefabBase\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A UV Cylinder primitive sprite.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport default PrimitiveTorusPrefab;",
    "export {default as PrefabBase}\t\t\t\t\t\tfrom \"./prefabs/PrefabBase\";\nexport {default as PrimitiveCapsulePrefab}\t\t\tfrom \"./prefabs/PrimitiveCapsulePrefab\";\nexport {default as PrimitiveConePrefab}\t\t\t\tfrom \"./prefabs/PrimitiveConePrefab\";\nexport {default as PrimitiveCubePrefab}\t\t\t\tfrom \"./prefabs/PrimitiveCubePrefab\";\nexport {default as PrimitiveCylinderPrefab}\t\t\tfrom \"./prefabs/PrimitiveCylinderPrefab\";\nexport {default as PrimitivePlanePrefab}\t\t\tfrom \"./prefabs/PrimitivePlanePrefab\";\nexport {default as PrimitivePolygonPrefab}\t\t\tfrom \"./prefabs/PrimitivePolygonPrefab\";\nexport {default as PrimitivePrefabBase}\t\t\t\tfrom \"./prefabs/PrimitivePrefabBase\";\nexport {default as PrimitiveSpherePrefab}\t\t\tfrom \"./prefabs/PrimitiveSpherePrefab\";\nexport {default as PrimitiveTorusPrefab}\t\t\tfrom \"./prefabs/PrimitiveTorusPrefab\";",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport default AntiAliasType;",
    "import AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport FontTable\t\t\t\t\tfrom \"../text/TesselatedFontTable\";\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nclass Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport default Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport default GridFitType;",
    "import TesselatedFontTable\t\t\tfrom \"../text/TesselatedFontTable\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport TriangleElements\t\t\t\tfrom \"../graphics/TriangleElements\";\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * Elements for this char\n\t */\n\tpublic elements:TriangleElements;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(elements:TriangleElements)\n\t{\n\t\tthis.elements = elements;\n\t}\n\n}\n\nexport default TesselatedFontChar;",
    "import AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport ElementsBase\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport TesselatedFontChar\t\t\tfrom \"../text/TesselatedFontChar\";\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _ascent:number;\n\tprivate _descent:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._ascent=0;\n\t\tthis._descent=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget ascent():number {\n\t\treturn this._ascent;\n\t}\n\n\tset ascent(value:number){\n\t\tthis._ascent=value;\n\t}\n\tget descent():number {\n\t\treturn this._descent;\n\t}\n\n\tset descent(value:number){\n\t\tthis._descent=value;\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getChar(name:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[name];\n\t}\n\t/**\n\t *\n\t */\n\tpublic setChar(name:string, elements:ElementsBase, char_width:number):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<TriangleElements> elements);\n\t\ttesselated_font_char.char_width=char_width;\n\t\telements.name = name;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[name]=tesselated_font_char;\n\t}\n\n}\n\nexport default TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport default TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport default TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport default TextFormatAlign;",
    "import AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport TesselatedFontTable\t\t\tfrom \"../text/TesselatedFontTable\";\nimport MaterialBase\t\t\t\t\tfrom \"../materials/MaterialBase\";\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport default TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport default TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport default TextLineMetrics;",
    "export {default as AntiAliasType}\t\t\t\t\tfrom \"./text/AntiAliasType\";\nexport {default as Font}\t\t\t\t\t\t\tfrom \"./text/Font\";\nexport {default as GridFitType}\t\t\t\t\t\tfrom \"./text/GridFitType\";\nexport {default as TesselatedFontChar}\t\t\t\tfrom \"./text/TesselatedFontChar\";\nexport {default as TesselatedFontTable}\t\t\t\tfrom \"./text/TesselatedFontTable\";\nexport {default as TextFieldAutoSize}\t\t\t\tfrom \"./text/TextFieldAutoSize\";\nexport {default as TextFieldType}\t\t\t\t\tfrom \"./text/TextFieldType\";\nexport {default as TextFormat}\t\t\t\t\t\tfrom \"./text/TextFormat\";\nexport {default as TextFormatAlign}\t\t\t\t\tfrom \"./text/TextFormatAlign\";\nexport {default as TextInteractionMode}\t\t\t\tfrom \"./text/TextInteractionMode\";\nexport {default as TextLineMetrics}\t\t\t\t\tfrom \"./text/TextLineMetrics\";",
    "/**\n\n\n */\nclass MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\n}\n\nexport default MappingMode;",
    "﻿﻿import Sampler2D\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport Image2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport ErrorBase\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\nimport ImageUtils\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nimport MappingMode\t\t\t\tfrom \"../textures/MappingMode\";\nimport TextureBase\t\t\t\tfrom \"../textures/TextureBase\";\n\nclass Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}\n\nexport default Single2DTexture;",
    "import SamplerCube\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\nimport ImageCube\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\n\nimport TextureBase\t\t\t\tfrom \"../textures/TextureBase\";\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport default SingleCubeTexture;",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport ISurface\t\t\t\t\t\tfrom \"../base/ISurface\";\n/**\n *\n */\nclass TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number)\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport default TextureBase;",
    "export {default as MappingMode}\t\t\t\t\t\tfrom \"./textures/MappingMode\";\nexport {default as Single2DTexture}\t\t\t\t\tfrom \"./textures/Single2DTexture\";\nexport {default as SingleCubeTexture}\t\t\t\tfrom \"./textures/SingleCubeTexture\";\nexport {default as TextureBase}\t\t\t\t\t\tfrom \"./textures/TextureBase\";",
    "import Image2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport CastError\t\t\t\tfrom \"../errors/CastError\";\nimport Single2DTexture\t\t\tfrom \"../textures/Single2DTexture\";\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport default Cast;",
    "import AttributesBuffer\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AttributesView\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport Short2Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Short2Attributes\";\nimport Short3Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport Float3Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport Float4Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Float4Attributes\";\nimport Byte4Attributes\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nimport Matrix3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Box\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport Sphere\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\n\nimport TriangleElements\t\t\tfrom \"../graphics/TriangleElements\";\nimport HitTestCache\t\t\tfrom \"../graphics/HitTestCache\";\n\nclass ElementsUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tif (positionDim == 3) {\n\t\t\twhile (i < count) {\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx1 = positions[index];\n\t\t\t\ty1 = positions[index + 1];\n\t\t\t\tz1 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx2 = positions[index];\n\t\t\t\ty2 = positions[index + 1];\n\t\t\t\tz2 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx3 = positions[index];\n\t\t\t\ty3 = positions[index + 1];\n\t\t\t\tz3 = positions[index + 2];\n\t\t\t\tdx1 = x3 - x1;\n\t\t\t\tdy1 = y3 - y1;\n\t\t\t\tdz1 = z3 - z1;\n\t\t\t\tdx2 = x2 - x1;\n\t\t\t\tdy2 = y2 - y1;\n\t\t\t\tdz2 = z2 - z1;\n\t\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t\t// length of cross product = 2*triangle area\n\n\t\t\t\tfaceNormals[j++] = cx;\n\t\t\t\tfaceNormals[j++] = cy;\n\t\t\t\tfaceNormals[j++] = cz;\n\t\t\t\tfaceNormals[j++] = d;\n\t\t\t}\n\t\t} else if (positionDim == 2) {\n\t\t\twhile (i < count) {\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\ti += 3;\n\t\t\t}\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:AttributesView, uvAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = <Float32Array> uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar v0:number;\n\t\tvar v1:number;\n\t\tvar v2:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tv0 = index1*positionDim;\n\t\t\tv1 = index2*positionDim;\n\t\t\tv2 = index3*positionDim;\n\n\t\t\tx0 = positions[v0];\n\t\t\tdx1 = positions[v1] - x0;\n\t\t\tdx2 = positions[v2] - x0;\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\n\t\t\ty0 = positions[v0 + 1];\n\t\t\tdy1 = positions[v1 + 1] - y0;\n\t\t\tdy2 = positions[v2 + 1] - y0;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\n\t\t\tif (positionDim == 3) {\n\t\t\t\tz0 = positions[v0 + 2];\n\t\t\t\tdz1 = positions[v1 + 2] - z0;\n\t\t\t\tdz2 = positions[v2 + 2] - z0;\n\t\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\t} else {\n\t\t\t\tcz = 0;\n\t\t\t}\n\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:AttributesView, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\t//todo: make this compatible with 2-dimensional positions\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = ElementsUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestTriangleElements(x:number, y:number, z:number, box:Box, triangleElements:TriangleElements, count:number, offset:number = 0):boolean\n\t{\n\t\tvar positionAttributes:AttributesView = triangleElements.positions;\n\t\tvar curveAttributes:AttributesView = triangleElements.getCustomAtributes(\"curves\");\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar curves:ArrayBufferView = curveAttributes? curveAttributes.get(count, offset) : null;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar hitTestCache:HitTestCache = triangleElements.hitTestCache[offset] || (triangleElements.hitTestCache[offset] = new HitTestCache());\n\t\tvar index:number = hitTestCache.lastCollisionIndex;\n\t\t\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\t\tif (d > 0 && az == -128) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t} else if (d < 0 && az == 127) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = hitTestCache.cells;\n\t\t\tvar divisions:number = cells.length? hitTestCache.divisions : (hitTestCache.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/box.width;\n\t\t\tvar conversionY:number = divisions/box.height;\n\t\t\tvar minx:number = box.x;\n\t\t\tvar miny:number = box.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid0 = nodes[k];\n\t\t\t\t\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\n\t\t\t\t\t\tif (d > 0 && az == -128)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse if (d < 0 && az == 127)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\thitTestCache.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\t\t\t\n\t\t\tid1 = k + 1;\n\t\t\tid0 = k + 2;\n\t\t\t\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tif (curves) {\n\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\tif (d > 0 && az == -128) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 127) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\thitTestCache.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getTriangleGraphicsBoxBounds(positionAttributes:AttributesView, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tvar pos:number;\n\t\tvar minX:number = 0, minY:number = 0, minZ:number = 0;\n\t\tvar maxX:number = 0, maxY:number = 0, maxZ:number = 0;\n\n\t\tvar len:number = count*posDim;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tif (i == 0) {\n\t\t\t\tmaxX = minX = positions[i];\n\t\t\t\tmaxY = minY = positions[i + 1];\n\t\t\t\tmaxZ = minZ = (posDim == 3)? positions[i + 2] : 0;\n\t\t\t} else {\n\t\t\t\tpos = positions[i];\n\t\t\t\tif (pos < minX)\n\t\t\t\t\tminX = pos;\n\t\t\t\telse if (pos > maxX)\n\t\t\t\t\tmaxX = pos;\n\n\t\t\t\tpos = positions[i + 1];\n\n\t\t\t\tif (pos < minY)\n\t\t\t\t\tminY = pos;\n\t\t\t\telse if (pos > maxY)\n\t\t\t\t\tmaxY = pos;\n\n\t\t\t\tif (posDim == 3) {\n\t\t\t\t\tpos = positions[i + 2];\n\n\t\t\t\t\tif (pos < minZ)\n\t\t\t\t\t\tminZ = pos;\n\t\t\t\t\telse if (pos > maxZ)\n\t\t\t\t\t\tmaxZ = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\t\t\n\t\toutput.x = minX;\n\t\toutput.y = minY;\n\t\toutput.z = minZ;\n\t\toutput.right = maxX;\n\t\toutput.bottom = maxY;\n\t\toutput.back = maxZ;\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGraphicsSphereBounds(positionAttributes:AttributesView, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = count*posDim;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = (posDim == 3)? positions[i + 2] - center.z : -center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\t\t\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport default ElementsUtils;",
    "export {default as Cast}\t\t\t\t\t\t\tfrom \"./utils/Cast\";\nexport {default as ElementsUtils}\t\t\t\t\tfrom \"./utils/ElementsUtils\";"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "_pUpdateImplicitMaskId",
    "_iAssignedMaskId",
    "_explicitMasks",
    "maskId",
    "_pUpdateImplicitMasks",
    "_iAssignedMasks",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "masks",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "_pImplicitMasks",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iMasksConfig",
    "_iIsMouseEnabled",
    "_iSetScene",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "target_childs_dic",
    "target_sessionIDs_dic",
    "child",
    "getChildAt",
    "getChildDepth",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "target_child_sessionIDS",
    "key",
    "removeChildAt",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "register_objects",
    "props_cnt",
    "props_start_idx",
    "value_start_index",
    "props_type",
    "doit",
    "childID",
    "update_child_stream",
    "getChildAtSessionID",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "properties_stream_int",
    "mask",
    "mouseEnabled",
    "isAsset",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_fps",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "exit_frame",
    "reset",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "newFps",
    "play",
    "timeDelta",
    "frameMarker",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "additional_margin_x",
    "additional_margin_y",
    "font_chars_scale",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "textlines2",
    "t2",
    "line_width",
    "c_cnt",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "err",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pImplicitDebugVisible",
    "enterNode",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "isEntityCollector",
    "applyEntity",
    "_pDebugEntity",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar maxDevisions:number = 32;\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif(this.numVertices > 150){\n\n\n\t\t\tif (this.cells == null) {\n\t\t\t\tthis.buildGrid();\n\t\t\t}\n\t\t\tvar cell:number = this.getCell(x, y);\n\t\t\tif (cell == -1) return false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\t\t\tif (nodes == null) return false;\n\n\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot a\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot b\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot c\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tprivate _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean;\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tprivate _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\tpublic get maskId():number\n\t{\n\t\treturn this._explicitMaskId;\n\t}\n\n\tpublic set maskId(value:number)\n\t{\n\t\tif (this._explicitMaskId == value)\n\t\t\treturn;\n\n\t\tthis._explicitMaskId = value;\n\n\t\tthis._pUpdateImplicitMaskId(this._pParent? this._pParent._iAssignedMaskId() : -1);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\tif (this._explicitMasks != null && this._explicitMasks.length) {\n\t\t\tvar len:number = this._explicitMasks.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tthis._explicitMasks[i].maskId = this._explicitMasks[i].id;\n\t\t}\n\n\n\t\tthis._pUpdateImplicitMasks(this._pParent? this._pParent._iAssignedMasks() : null);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\n\t{\n\t\tif (!newInstance)\n\t\t\tnewInstance = new DisplayObject();\n\n\t\tnewInstance.pivot = this.pivot;\n\t\tnewInstance._iMatrix3D = this._iMatrix3D\n\t\t//newInstance.name = this.name;\n\n\t\tnewInstance.maskId = this._explicitMaskId;\n\t\tnewInstance.masks = this.masks? this.masks.concat() : null;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset_to_init_state():void\n\t{\n\t\tthis.visible=true;\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\t\tif(this.colorTransform)\n\t\t\tthis.colorTransform.clear();\n\t\t//this.name=\"\";\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitMaskId(value._iAssignedMaskId());\n\t\t\tthis._pUpdateImplicitMasks(value._iAssignedMasks());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitMaskId(-1);\n\t\t\tthis._pUpdateImplicitMasks(null);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\treturn;\n\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.queueDispatch(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:PartitionBase, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMaskId(value:number)\n\t{\n\t\tthis._pImplicitMaskId = (value != -1)? value : this._explicitMaskId;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\n\t{\n\t\tthis._pImplicitMasks = (value != null)? (this._explicitMasks != null)? value.concat([this._explicitMasks]) : value.concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].maskId);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices==null)||(this.frame_recipe==null)||(this.keyframe_durations==null))\n\t\t\treturn;\n\t\tthis.keyframe_firstframes=[];\n\t\tthis.keyframe_constructframes=[];\n\t\tvar frame_cnt=0;\n\t\tvar ic=0;\n\t\tvar ic2=0;\n\t\tvar keyframe_cnt=0;\n\t\tvar last_construct_frame=0;\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\n\t\t\t\tlast_construct_frame=keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt]=frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\n\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\n\t\t\t\tthis.keyframe_indices[frame_cnt++]=ic;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds() : Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\n\t\tthis_clone.name=\"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value : number)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe=this.keyframe_firstframes[target_keyframe_idx];\n\t\tif(frameIndex==value){\n\t\t\t//we are already on exactly this frame.\n\t\t\treturn;\n\t\t}\n\t\tif(current_keyframe_idx+1==target_keyframe_idx){\n\t\t\t// target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, true, true);\n\t\t\treturn;\n\t\t}\n\n\t\tif(firstframe==value){\n\t\t\t//frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\t\t}\n\n\t\tif(current_keyframe_idx==target_keyframe_idx) {\n\t\t\t// already constructed - exit\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number=this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number=break_frame_idx;\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\tif((jump_forward)&&(!jump_gap)){\n\t\t\tstart_construct_idx=current_keyframe_idx+1;\n\t\t}\n\t\tvar target_childs_dic:Object=[];\n\t\tvar target_sessionIDs_dic:Object=[];\n\t\tvar i:number = target_mc.numChildren;\n\t\tvar child:DisplayObject;\n\n\t\tif((jump_forward) && (start_construct_idx==target_keyframe_idx)){\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\n\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\n\t\t\t// before we do that, we need to clear the childlist\n/*\n\t\t\twhile(i--){\n\t\t\t\tchild = target_mc.getChildAt(i);\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t}\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, false);\n\t\t\treturn;\n\t\t\t*/\n\t\t}\n\n\t\twhile(i--){\n\t\t\tchild = target_mc.getChildAt(i);\n\t\t\tif(jump_gap){\n\t\t\t\t// if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t}\n\t\t\telse if (jump_forward){\n\t\t\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\t\t\ttarget_childs_dic[target_mc.getChildDepth(child)]=child;\n\t\t\t\ttarget_sessionIDs_dic[target_mc.getChildDepth(child)]=child._sessionID;\n\t\t\t}\n\t\t}\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number>=[];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt=0;\n\t\tvar k;\n\t\tfor(k=start_construct_idx;k<=target_keyframe_idx; k++){\n\t\t\tvar frame_command_idx:number=this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number=this.frame_recipe[k];\n\n\t\t\tif ((frame_recipe & 2) == 2){\n\t\t\t\t// remove childs\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tvar len = this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor(var i:number = 0; i < len; i++){i\n\t\t\t\t\tdelete target_childs_dic[(this.remove_child_stream[start_index+i] - 16383)];\n\t\t\t\t\tdelete target_sessionIDs_dic[(this.remove_child_stream[start_index+i] - 16383)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4){\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tvar len = this.command_length_stream[frame_command_idx++];\n\t\t\t\tvar i:number=len;\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\twhile(i--){\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\n\t\t\t\t\t//target._sessionID = start_index + i;\n\t\t\t\t\ttarget_childs_dic[(this.add_child_stream[start_index*2 + i*2 + 1] - 16383)] = target;\n\t\t\t\t\ttarget_sessionIDs_dic[(this.add_child_stream[start_index*2 + i*2 + 1] - 16383)] = start_index + i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tupdate_indices[update_cnt++]=frame_command_idx;// execute update command later\n\t\t}\n\t\t//  step2: construct the final frame\n\n\t\tvar target_child_sessionIDS:Object={};\n\t\tfor (var key in target_sessionIDs_dic) {\n\t\t\tif (target_sessionIDs_dic[key] != null) {\n\t\t\t\ttarget_child_sessionIDS[target_sessionIDs_dic[key]] = key;\n\t\t\t}\n\t\t}\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames get removed from the target_child_sessionIDS + target_childs_dic\n\t\ti = target_mc.numChildren;\n\t\twhile(i--){\n\t\t\tchild=target_mc.getChildAt(i);\n\t\t\tif(target_child_sessionIDS[child._sessionID]){\n\t\t\t\ttarget_childs_dic[target_child_sessionIDS[child._sessionID]]=null;\n\t\t\t\ttarget_child_sessionIDS[child._sessionID]=null;\n\t\t\t\ttarget_sessionIDs_dic[target_child_sessionIDS[child._sessionID]]=null;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t}\n\t\t}\n\t\tfor (var key in target_childs_dic) {\n\t\t\tchild=target_childs_dic[key];\n\t\t\tif(child){\n\t\t\t\tchild._sessionID=target_sessionIDs_dic[key];\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\n\t\t\t}\n\t\t}\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number=0;\n\t\tfor(k=0;k<update_indices.length; k++){\n\t\t\tframe_command_idx=update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\n\t\t}\n\t\tupdate_indices=null;\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean=false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif((queueScript)&&(this.keyframe_firstframes[new_keyFrameIndex]==frameIndex)){\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\t\t}\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx=this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe=this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif((frame_recipe & 1)==1) {\n\t\t\t\tvar i:number = target_mc.numChildren;\n\t\t\t\twhile (i--) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ((frame_recipe & 2)==2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\n\n\t\t}\n\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++) {\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\t\t}\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter \n\t\tvar i:number=len;\n\t\twhile(i--){\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\n\t\t\ttarget._sessionID = start_index + i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number):void\n\t{\n\t\tvar register_objects:Array<DisplayObject>=[];\n\t\tvar props_cnt:number;\n\t\tvar props_start_idx:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tfor(var i:number = 0; i < len; i++) {\n\t\t\tvar childID:number=this.update_child_stream[start_index + i];\n\t\t\t//var target:DisplayObject = sourceMovieClip.getPotentialChildInstance(childID);\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(childID);//target._sessionID);\n\t\t\tif (target!=null) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\n\t\t\t\t\tdoit = false;\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[start_index + i];\n\t\t\t\tprops_cnt = this.update_child_props_length_stream[start_index + i];\n\n\t\t\t\tfor(var p:number = 0; p < props_cnt; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[props_start_idx + p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[props_start_idx + p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t// mask the mc with a list of objects\n\t\t\t\t\t\t\t// a object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\n\t\t\t\t\t\t\tvar mask_length:number=this.properties_stream_int[value_start_index++];\n\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\tfor(var m:number = 0; m < mask_length; m++){\n\t\t\t\t\t\t\t\tmask = masks[m] = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++]);//sourceMovieClip.getPotentialChildInstance();\n\t\t\t\t\t\t\t\tif(mask==null)\n\t\t\t\t\t\t\t\t\tthrow \"mask object not found !\";\n\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\n\t\t\t\t\t\t\t\tif(mask.isAsset(DisplayObjectContainer))\n\t\t\t\t\t\t\t\t\t(<DisplayObjectContainer> mask).mouseChildren = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget.masks = masks;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\n\t\t\t\t\t\t\tif (target.adapter && target.adapter.isVisibilityByScript()){}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\t//todo: remove once runtime does not need id for mask anymore\n\t\t\t\t\t\t\t//target._iMaskID = childID;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n}\n\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depths:Array<number> = new Array<number>();\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\t\t\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], this._depths[index] + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._children.push(child);\n\t\tthis._depths.push(depth);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\t\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._depths.length)? this._depths[index] : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\n\t{\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\n\n\t\tnewInstance.partition = this.partition;\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\n\t\tnewInstance.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\t\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\n\t}\n\t\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\n\t{\n\t\treturn this._depths[this.getChildIndex(child)];\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\t\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\t\t\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._depths[index2];\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._depths[index1]);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMaskId(value:number)\n\t{\n\t\tsuper._pUpdateImplicitMaskId(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMaskId(this._pImplicitMaskId);\n\t}\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\n\t{\n\t\tsuper._pUpdateImplicitMasks(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMasks(this._pImplicitMasks);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:PartitionBase, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\t\tvar depth:number = this._depths.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == depth + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\treturn child;\n\t}\n\t\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\treturn this._depths.indexOf(depth);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._depths.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._depths[i])\n\t\t\t\tthis._nextHighestDepth = this._depths[i];\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this.maskId !== -1 && !masksFlag)return;\n\t\tif(this.visible==false)return;\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\n\t\t\tif(childHit) {\n\t\t\t\tvar all_masks:Array<DisplayObject> = this.masks;\n\t\t\t\tif(all_masks){\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\tif(mask_child.parent){\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\n\t\t\t\t\t\t\tif(childHit) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\n\n\t\tthis._containerNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iSetScene(this);\n\t\tthis._iIsRoot = true;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone.maskId = this.maskId;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        for (i = 0; i < len; ++i)\n            clone.addChild(this.getChildAt(i).clone());\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\t// if this is a mask, directly return false\n\t\tif(this.maskId !== -1 && !masksFlag)return false;\n\n\t\t// if this is invisible, all children should be invisible too.\n\t\t// todo: is the above statement correct for awayjs visible-property ?\n\t\tif(this.visible==false)return false;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\t\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tif(this.geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\n\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this.masks;\n\t\t\t\t\t\tif (all_masks) {\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\n\t\t\t\t\t\t\tif (all_hir_masks){\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hit:boolean = false;\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\n\t\tif(hit)\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\n\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\n\n    private _fps:number;// we use ms internally, but have fps, so user can set time by frame\n    private _isPlaying:boolean;// false if paused or stopped\n    private _loop:boolean = true;\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Array<DisplayObject>;\n    private _active_session_ids:Array<DisplayObject>;\n   // private _framescripts_to_execute:Array<Function>;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n        this._active_session_ids=[];\n        this._potentialInstances = [];\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._fps = 30;\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n    public get loop()\n    {\n        return this._loop;\n    }\n\n    public set loop(value:boolean)\n    {\n        this._loop = value;\n    }\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string) : void\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    public get currentFrameIndex() : number\n    {\n        return this._currentFrameIndex;\n    }\n    public get constructedKeyFrameIndex() : number\n    {\n        return this._constructedKeyFrameIndex;\n    }\n\n    public set constructedKeyFrameIndex(value : number)\n    {\n        this._constructedKeyFrameIndex = value;\n    }\n\n    public exit_frame():void\n    {\n\n        this._skipAdvance = false;\n        var i:number=this.numChildren;\n        while (i--){\n            var child:DisplayObject=this.getChildAt(i);\n            if(child.isAsset(MovieClip)){\n                (<MovieClip>child).exit_frame();\n            }\n        }\n    }\n    public reset():void\n    {\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        var i:number=this.numChildren;\n        while (i--){\n            this.removeChildAt(i);\n        }\n\n        this._skipAdvance = true;\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public set currentFrameIndex(value : number)\n    {\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n            if (value < 0)\n                value = 0;\n            else if (value >= this._timeline.numFrames)\n                value = this._timeline.numFrames - 1;\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value);\n            this._currentFrameIndex = value;\n        }\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._active_session_ids[sessionID];\n    }\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n        child.reset_to_init_state();// this takes care of transform and visibility\n\t\tsuper.addChildAtDepth(child, depth, replace);\n        if(child.isAsset(MovieClip))(<MovieClip>child).reset();\n        this._active_session_ids[child._sessionID]=child;\n        return child;\n    }\n\n    public removeChild(child:DisplayObject):DisplayObject\n    {\n        super.removeChild(child);\n        if(child.adapter)child.adapter.freeFromScript();\n        this.adapter.unregisterScriptObject(child);\n        this._active_session_ids[child._sessionID]=null;\n        return child;\n    }\n\n    public removeChildAtDepth(depth:number /*int*/):DisplayObject\n    {\n        var child:DisplayObject=super.removeChildAtDepth(depth);\n        if(child.adapter)child.adapter.freeFromScript();\n        this.adapter.unregisterScriptObject(child);\n        this._active_session_ids[child._sessionID]=null;\n        return child;\n    }\n    public removeChildAt(index:number /*int*/):DisplayObject\n    {\n        var child:DisplayObject=super.removeChildAt(index);\n        if(child.adapter)child.adapter.freeFromScript();\n        this.adapter.unregisterScriptObject(child);\n        this._active_session_ids[child._sessionID]=null;\n        return child;\n    }\n\n    public get fps():number\n    {\n        return this._fps;\n    }\n\n    public set fps(newFps:number)\n    {\n        this._fps = newFps;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update(timeDelta:number)\n    {\n        //this.logHierarchy();\n        // TODO: Implement proper elastic racetrack logic\n        var frameMarker:number = Math.floor(1000/this._fps);\n\n        // right now, just advance frame once time marker has been reached (only allow for one frame advance per-update)\n        this._time += Math.min(timeDelta, frameMarker);\n\n        if (this._time >= frameMarker) {\n            this._time = 0;\n            this.advanceFrame();\n            // after we advanced the scenegraph, we might have some script that needs executing\n            FrameScriptManager.execute_queue();\n\n            // now we want to execute the onEnter\n            this.dispatchEvent(this._enterFrame);\n            // after we executed the onEnter, we might have some script that needs executing\n            FrameScriptManager.execute_queue();\n\n\n            FrameScriptManager.execute_intervals();\n            FrameScriptManager.execute_queue();\n\n            this.exit_frame();\n\n        }\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id]) {\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n        }\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone(newInstance:MovieClip = null) : DisplayObject\n    {\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\n\n        newInstance._fps = this._fps;\n        newInstance._loop = this._loop;\n\n        return newInstance;\n    }\n\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tsuper.iSetParent(value);\n\t}\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        if(this._timeline.numFrames) {\n            var i;\n            var oldFrameIndex = this._currentFrameIndex;\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop) {\n                advance = false;\n            }\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\n                this._currentFrameIndex = 0;\n                advance = false;\n            }\n            if (advance) {\n                ++this._currentFrameIndex;\n                if (this._currentFrameIndex == this._timeline.numFrames) {\n                    // looping - jump to first frame.\n                    this.currentFrameIndex=0;\n                }\n                else if (oldFrameIndex != this._currentFrameIndex){\n                    // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n            if (!skipChildren)\n                this.advanceChildren();\n\n        }\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len = this.numChildren;\n        for (var i = 0; i <  len; ++i) {\n            var child = this.getChildAt(i);\n            if (child instanceof MovieClip)\n                (<MovieClip>child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        for (var i = 0; i < len; i++) {\n            var child = this.getChildAt(i);\n\n            if (child instanceof MovieClip)\n                (<MovieClip>child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.maskId;\n        console.log(str);\n    }\n\n\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskId = this.maskId;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue=value.toString();\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar additional_margin_x:number=2;\n\t\tvar additional_margin_y:number=2;\n\t\tfont_chars_scale\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar textlines2:Array<string> = textlines[tl].split(\"\\n\");\n\t\t\tfor (var t2 = 0; t2 < textlines2.length; t2++) {\n\t\t\t\tvar line_width:number = 0;\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar font_chars_scale:Array<number> =[];\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\tif(this_char == null) {\n\t\t\t\t\t\tif(this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\n\t\t\t\t\tfont_chars[c_cnt++]=this_char;\n\t\t\t\t}\n\t\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t\t}\n\t\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\n\t\t\t\t}\n\t\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\t\tchar_scale = font_chars_scale[i];\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t}\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone.maskId = this.maskId;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len = this.numChildren;\n\t\tvar i;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tclone.addChild(this.getChildAt(i).clone());\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = []; // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        if (this.numEntities == 0 && !this._pImplicitDebugVisible)\n            return;\n\n        if (traverser.enterNode(this)) {\n            if (this._pEntityNode)\n                this._pEntityNode.acceptTraverser(traverser);\n\n            var i:number;\n            for (i = 0; i < this._numChildMasks; i++)\n                this._childMasks[i].acceptTraverser(traverser);\n\n            for (i = 0; i < this._pNumChildNodes; i++)\n                this._pChildNodes[i].acceptTraverser(traverser);\n\n            if (this._pImplicitDebugVisible && traverser.isEntityCollector)\n                traverser.applyEntity(this._pDebugEntity);\n        }\n    }\n\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    public findParentForNode(node:IDisplayObjectNode):INode\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer)\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\n\n        return this._pool.getItem(node.displayObject.parent);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskId != -1) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = this._container.getChildDepth(node.displayObject);\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskId != -1) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\t//this._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor(rootContainer:DisplayObjectContainer)\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\n\n\t\tif (containerNode) {\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\n\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t\t}\n\n\t\treturn containerNode;\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\n\n\t\tif (entityNode) {\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\n\n\t\t\tdelete this._entityNodePool[displayObject.id];\n\t\t}\n\n\t\treturn entityNode;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
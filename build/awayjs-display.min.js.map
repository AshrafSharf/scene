{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/CSSMaterialBase.ts",
    "awayjs-display/lib/materials/CurveMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/CSSBillboardRenderable.ts",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable.ts",
    "awayjs-display/lib/pool/CSSRenderableBase.ts",
    "awayjs-display/lib/pool/CSSSkyboxRenderable.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/render/CSSDefaultRenderer.ts",
    "awayjs-display/lib/render/CSSRendererBase.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/animators/IAnimationSet",
    "module",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetType",
    "NamedAssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "ANIMATION_NODE",
    "awayjs-core/lib/library/AssetType",
    "undefined",
    "awayjs-core/lib/library/NamedAssetBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "material",
    "_pParentMesh",
    "_subGeometry",
    "CURVE_SUB_MESH",
    "_iCollectRenderable",
    "rendererPool",
    "applyCurveSubMesh",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "set",
    "value",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "clone",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scale",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "_iTestCollision",
    "shortestCollisionDistance",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IMaterialOwner",
    "awayjs-display/lib/base/IRenderObjectOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "LIGHT",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "LINE_SUB_MESH",
    "applyLineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "TRIANGLE_SUB_MESH",
    "applyTriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "transform",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "CONTAINER",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "event",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "onLoadError",
    "_iAddParseErrorHandler",
    "onParseError",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "clear",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_animator",
    "BILLBOARD",
    "SIZE_CHANGED",
    "testBillboardCollision",
    "_iCollectRenderables",
    "applyBillboard",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "CAMERA",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "LINE_SEGMENT",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "applyLineSegment",
    "awayjs-display/lib/entities/Mesh",
    "Geometry",
    "GeometryEvent",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "MESH",
    "_geometry",
    "BOUNDS_INVALID",
    "SUB_GEOMETRY_ADDED",
    "SUB_GEOMETRY_REMOVED",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "applyTransformation",
    "disposeWithAnimatorAndChildren",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "j",
    "subGeom",
    "boundingPositions",
    "numSubGeoms",
    "getBoundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getSubMeshClass",
    "testMeshCollision",
    "_iInvalidateRenderableGeometries",
    "awayjs-core/lib/data/Geometry",
    "awayjs-core/lib/events/GeometryEvent",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renderObjects",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRenderObject",
    "invalidateRenderObject",
    "invalidatePasses",
    "_cubeMap",
    "format",
    "SKYBOX",
    "_iAddRenderObject",
    "renderObject",
    "_iRemoveRenderObject",
    "getRenderObject",
    "renderablePool",
    "getSkyboxRenderObject",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "CurveSubGeometry",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "appendText",
    "newText",
    "newFormat",
    "positions",
    "curveData",
    "uvs",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "this_subGeom",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "indices2",
    "positions2",
    "curveData2",
    "curves",
    "console",
    "log",
    "curve_sub_geom",
    "updateIndices",
    "updatePositions",
    "updateCurves",
    "updateUVs",
    "addSubGeometry",
    "subMeshes",
    "closeParagraph",
    "construct_geometry",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "id",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "_textFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderObjectOwner",
    "_renderObjectOwner",
    "RENDER_OBJECT_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapData",
    "BitmapTexture",
    "BasicMaterial",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "assetType",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapData",
    "createCheckeredBitmapData",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapData",
    "awayjs-core/lib/textures/BitmapTexture",
    "awayjs-display/lib/materials/BasicMaterial",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Texture2DBase",
    "MaterialBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "getMaterialRenderObject",
    "awayjs-core/lib/textures/Texture2DBase",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/CSSMaterialBase",
    "ImageTexture",
    "CSSMaterialBase",
    "_iMaterialId",
    "_imageElement",
    "_imageStyle",
    "_pTexture",
    "htmlImageElement",
    "node",
    "getElementsByTagName",
    "sheet",
    "styleSheets",
    "insertRule",
    "cssRules",
    "backgroundImage",
    "src",
    "backgroundSize",
    "transformOrigin",
    "_pHeight",
    "_pWidth",
    "_pNotifySizeChanged",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-display/lib/materials/CurveMaterial",
    "CurveMaterial",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "ColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "MATERIAL",
    "_colorTransform",
    "alphaMultiplier",
    "CHANGE",
    "_pInvalidatePasses",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "LIGHT_PICKER",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "w",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "Rectangle",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "floor",
    "snap2",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "PartialImplementationError",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "RenderTexture",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-core/lib/textures/RenderTexture",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "pickingCollisionVO",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "RaycastCollector",
    "findClosestCollision",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_findClosestCollision",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "pickingCollider",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/CSSBillboardRenderable",
    "CSSRenderableBase",
    "CSSBillboardRenderable",
    "billboard",
    "div",
    "onmousedown",
    "img",
    "className",
    "awayjs-display/lib/pool/CSSRenderableBase",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable",
    "CSSLineSegmentRenderable",
    "lineSegment",
    "invalidateIndexData",
    "invalidateVertexData",
    "dataType",
    "awayjs-display/lib/pool/CSSSkyboxRenderable",
    "CSSSkyboxRenderable",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderObject",
    "awayjs-display/lib/pool/IRenderablePool",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRendererPool",
    "LineSubGeometry",
    "TriangleSubGeometry",
    "addSubMeshClass",
    "subMeshClass",
    "subGeometryType",
    "subMeshClassPool",
    "defaultSubMeshTypes",
    "SUB_GEOMETRY_TYPE",
    "awayjs-core/lib/data/LineSubGeometry",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_numVertices",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "normals",
    "tangents",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGeometry",
    "numVertices",
    "vertexNormals",
    "vertexTangents",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "offset",
    "normLen",
    "tanLen",
    "updateVertexNormals",
    "updateVertexTangents",
    "_pBuildUVs",
    "scaleU",
    "scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "startPositions",
    "endPositions",
    "updateThickness",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "PRIMITIVE_PREFAB",
    "invalidateGeometryType",
    "updateGeometryType",
    "removeSubGeometry",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "mesh",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "nx",
    "ny",
    "nz",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/render/CSSDefaultRenderer",
    "CoordinateSystem",
    "CSSRendererBase",
    "CSSEntityCollector",
    "CSSDefaultRenderer",
    "_contextMatrix",
    "_skyboxProjection",
    "_container",
    "overflow",
    "_context",
    "_contextStyle",
    "transformStyle",
    "_pBackBufferInvalid",
    "pUpdateBackBuffer",
    "pDraw",
    "coordinateSystem",
    "RIGHT_HANDED",
    "drawRenderables",
    "_renderableHead",
    "_activeMaterial",
    "clip",
    "drawSkybox",
    "renderSceneTransform",
    "awayjs-core/lib/projections/CoordinateSystem",
    "awayjs-display/lib/render/CSSRendererBase",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "renderToTexture",
    "forceSoftware",
    "profile",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_depthTextureInvalid",
    "_viewPort",
    "_scissorRect",
    "_localPos",
    "_globalPos",
    "window",
    "innerWidth",
    "innerHeight",
    "updateGlobalPos",
    "notifyViewportUpdate",
    "notifyScissorUpdate",
    "surfaceSelector",
    "pExecuteRender",
    "scissorRects",
    "cameras",
    "pCollectRenderables",
    "lineSubMesh",
    "triangleSubMesh",
    "_applyRenderable",
    "materialId",
    "cascaded",
    "_iEntryPoint",
    "zIndex",
    "zOffset",
    "dotProduct",
    "_pCameraForward",
    "_scissorUpdated",
    "_viewPortUpdated",
    "awayjs-display/lib/render/IRenderer",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderObjectId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "FONT",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "TEXTFORMAT",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "CollectorBase",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "bitmapData",
    "HTMLImageElement",
    "imageElement",
    "draw",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray"
  ],
  "mappings": "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65D,YAAY,aAAe,QAChC75D,MAAK65D,YAAY,cAAgB,QACjC75D,MAAK65D,YAAY,SAAW,QAC5B75D,MAAK65D,YAAY,aAAe,QAChC75D,MAAK65D,YAAY,iBAAmB,QACpC75D,MAAK65D,YAAY,mBAAqB,OACtC75D,MAAK65D,YAAY,iBAAmB,OACpC75D,MAAK65D,YAAY,YAAc,KAC/B75D,MAAK65D,YAAY,QAAU,KAC3B75D,MAAK65D,YAAY,aAAe,OAChC75D,MAAK65D,YAAY,iBAAmB,KACpC75D,MAAK65D,YAAY,QAAU,KAC3B75D,MAAK65D,YAAY,QAAU,KAC3B75D,MAAK65D,YAAY,aAAe,OAChC75D,MAAK65D,YAAY,cAAgB,OACjC75D,MAAK65D,YAAY,oBAAsB,OACvC75D,MAAK65D,YAAY,gBAAkB,OACnC75D,MAAK65D,YAAY,kBAAoB,OACrC75D,MAAK65D,YAAY,YAAc,OAC/B75D,MAAK65D,YAAY,aAAe,KAChC75D,MAAK65D,YAAY,SAAW,KAC5B75D,MAAK65D,YAAY,eAAiB,OAClC75D,MAAK65D,YAAY,aAAe,OAChC75D,MAAK65D,YAAY,QAAU,KAC3B75D,MAAK65D,YAAY,cAAgB,OACjC75D,MAAK65D,YAAY,aAAe,OAChC75D,MAAK65D,YAAY,eAAiB,QAClC75D,MAAK65D,YAAY,eAAiB,QAClC75D,MAAK65D,YAAY,aAAe,QAChC75D,MAAK65D,YAAY,cAAgB,OACjC75D,MAAK65D,YAAY,eAAiB,KAClC75D,MAAK65D,YAAY,qBAAuB,KACxC75D,MAAK65D,YAAY,kBAAoB,OACrC75D,MAAK65D,YAAY,aAAe,OAChC75D,MAAK65D,YAAY,SAAW,OAC5B75D,MAAK65D,YAAY,aAAe,QAChC75D,MAAK65D,YAAY,iBAAmB,QACpC75D,MAAK65D,YAAY,aAAe,QAChC75D,MAAK65D,YAAY,QAAU,QAC3B75D,MAAK65D,YAAY,UAAY,QAC7B75D,MAAK65D,YAAY,SAAW,QAC5B75D,MAAK65D,YAAY,iBAAmB,QACpC75D,MAAK65D,YAAY,kBAAoB,QACrC75D,MAAK65D,YAA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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATION_NODE;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import CurveSubGeometry\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CURVE_SUB_MESH;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyCurveSubMesh(this);\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends NamedAssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic alpha:number;\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this._pScaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._pScaleZ = val/this.getBox().depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this._pScaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._pScaleY = val/this.getBox().height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this._pScaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._pScaleX = val/this.getBox().width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(3);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\tif (this._width != null) {\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._height != null) {\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._depth != null) {\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\t\t}\n\n\n\t\treturn this._pBoxBounds;\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid) {\n\t\t\tthis._pUpdateSphereBounds();\n\t\t}\n\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\treturn point; //TODO\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n\t\tif (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tif (this._listenToSceneChanged)\n\t\t\t\tthis.notifySceneChange();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (!this._scenechanged)\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scenechanged);\n}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\t}\n\t\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\t\t\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n}\n\nexport = DisplayObject;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SUB_MESH;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyLineSubMesh(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends NamedAssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.TRIANGLE_SUB_MESH;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyTriangleSubMesh(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tprivate _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CONTAINER;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = name;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\n\t\treturn child;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:LoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a BitmapData object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its BitmapData reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same BitmapData object,\n * multiple display objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each display\n * object instance.</p>\n *\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.BILLBOARD;\n\t}\n\n\t/**\n\t * The BitmapData object being referenced.\n\t */\n\tpublic bitmapData:BitmapData; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardWidth;\n\t\tthis._pBoxBounds.height = this._billboardHeight;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyBillboard(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CAMERA;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:CubeTextureBase;\n\tprivate _specularMap:CubeTextureBase;\n\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():CubeTextureBase\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:CubeTextureBase)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():CubeTextureBase\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:CubeTextureBase)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SEGMENT;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyLineSegment(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MESH;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tlen = this.numChildren;\n\t\tvar obj:any;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tobj = this.getChildAt(i).clone();\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tclone.animator = this._animator.clone();\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tminX = maxX = boundingPositions[i];\n\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getSubMeshClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderObjectOwner\n{\n\tprivate _cubeMap:CubeTextureBase;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\t\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic _pInvalidateRenderObject()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():CubeTextureBase\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:CubeTextureBase)\n\t{\n\t\tif (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\t\tthis._pInvalidateRenderObject();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKYBOX;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renderObjects.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].dispose();\n\n\t\tthis._renderObjects = new Array<IRenderObject>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\n\t}\n\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.push(renderObject);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool)\n\t{\n\t\treturn renderablePool.getSkyboxRenderObject(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\n\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t}\n\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t * \n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string, newFormat:TextFormat) {\n\n\t\tvar indices:Array<number> = new Array<number>();\n\t\tvar positions:Array<number> = new Array<number>();\n\t\tvar curveData:Array<number> = new Array<number>();\n\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=newFormat.size/newFormat.font_table.get_font_em_size();\n\t\tvar tri_idx_offset:number=0;\n\t\tvar tri_cnt:number=0;\n\t\tvar x_offset:number=0;\n\t\tvar y_offset:number=0;\n\t\tfor (var i = 0; i < newText.length; i++) {\n\t\t\tvar this_subGeom:CurveSubGeometry = <CurveSubGeometry> newFormat.font_table.get_subgeo_for_char(newText.charCodeAt(i).toString());\n\t\t\tif (this_subGeom != null) {\n\t\t\t\ttri_cnt=0;\n\t\t\t\tvar indices2:Array<number> = this_subGeom.indices;\n\t\t\t\tvar positions2:Array<number> = this_subGeom.positions;\n\t\t\t\tvar curveData2:Array<number> = this_subGeom.curves;\n\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\n\t\t\t\t\tindices.push(indices2[v]+tri_idx_offset);\n\t\t\t\t\ttri_cnt++;\n\t\t\t\t}\n\t\t\t\ttri_idx_offset+=tri_cnt;\n\t\t\t\tfor (v = 0; v < positions2.length/3; v++) {\n\t\t\t\t\tpositions.push((positions2[v*3]*char_scale)+x_offset);\n\t\t\t\t\tpositions.push((positions2[v*3+1]*char_scale*-1)+y_offset);\n\t\t\t\t\tpositions.push(positions2[v*3+2]);\n\t\t\t\t\tcurveData.push(curveData2[v*2]);\n\t\t\t\t\tcurveData.push(curveData2[v*2+1]);\n\t\t\t\t\tuvs.push(0.0);\n\t\t\t\t\tuvs.push(0.0);\n\t\t\t\t}\n\t\t\t\tx_offset+=newFormat.font_table.get_font_em_size()*char_scale;\n\t\t\t\t//xcount+=newFormat.font_table.get_font_em_size();\n\t\t\t\tconsole.log(x_offset);\n\t\t\t\t//matrix.appendScale(0.1,0.1,0.1);\n\t\t\t}\n\t\t}\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\n\t\tcurve_sub_geom.updateIndices(indices);\n\t\tcurve_sub_geom.updatePositions(positions);\n\t\tcurve_sub_geom.updateCurves(curveData);\n\t\tcurve_sub_geom.updateUVs(uvs);\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=newFormat.material;\n\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic construct_geometry()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OBJECT_OWNER_UPDATED:string = \"renderObjectOwnerUpdated\";\n\n\tprivate _renderObjectOwner:IRenderObjectOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderObjectOwner:IRenderObjectOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderObjectOwner = renderObjectOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderObjectOwner():IRenderObjectOwner\n\t{\n\t\treturn this._renderObjectOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderObjectOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapData:BitmapData;\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\n\tprivate static _defaultLineMaterial:BasicMaterial;\n\tprivate static _defaultTexture:BitmapTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.assetType == AssetType.LINE_SUB_MESH) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):BitmapTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapData():BitmapData\n\t{\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase implements IRenderObjectOwner\n{\n    private _preserveAlpha:boolean = false;\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRenderObject();\n    }\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMaterialRenderObject(this);\n\t}\n}\n\nexport = BasicMaterial;",
    "import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass CSSMaterialBase extends MaterialBase\n{\n\tprivate _imageElement:HTMLImageElement;\n\tprivate _imageStyle:MSStyleCSSProperties;\n\n\n\tpublic get imageElement():HTMLImageElement\n\t{\n\t\treturn this._imageElement;\n\t}\n\n\tpublic get imageStyle():MSStyleCSSProperties\n\t{\n\t\treturn this._imageStyle;\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tif (value instanceof ImageTexture) {\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\n\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\n\t\t\tnode.type = \"text/css\";\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\n\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\n\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\n\t\t\tstyle.backgroundSize = \"100% 100%\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = this._imageElement.width + \"px\";\n\t\t\tstyle.height = this._imageElement.height + \"px\";\n\t\t\tstyle.transformOrigin\n\t\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t\tthis._pHeight = this._imageElement.height;\n\t\t\tthis._pWidth = this._imageElement.width;\n\n\t\t\tthis._pNotifySizeChanged();\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis.texture = texture;\n\n\t\tthis.smooth = smooth;\n\t\tthis.repeat = repeat;\n\t}\n}\n\nexport = CSSMaterialBase;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass CurveMaterial extends MaterialBase implements IRenderObjectOwner\n{\n    private _preserveAlpha:boolean = false;\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRenderObject();\n    }\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMaterialRenderObject(this);\n\t}\n}\n\nexport = CurveMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends NamedAssetBase implements IRenderObjectOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:Texture2DBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MATERIAL;;\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pHeight = this._pTexture.height;\n\t\tthis._pWidth = this._pTexture.width;\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renderObjects.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].dispose();\n\n\t\tthis._renderObjects = new Array<IRenderObject>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRenderObject()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.push(renderObject);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\n\n\t\treturn renderObject;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT_PICKER;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform = this._pOverallDepthCamera.transform;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\tthrow new PartialImplementationError();\n\t\t/*\n\t\t return new RenderCubeTexture( this._depthMapSize );\n\t\t */\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tprivate _depthMap:TextureProxyBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tprivate _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureProxyBase)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureProxyBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:IEntity;\n\tprivate _partition:Partition;\n\tprivate _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSBillboardRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"billboard\";\n\n\tconstructor(pool:IRenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + billboard.material.id;\n\t}\n}\n\nexport = CSSBillboardRenderable;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSLineSegmentRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"lineSegment\";\n\n\tconstructor(pool:IRenderablePool, lineSegment:LineSegment)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + lineSegment.material.id;\n\t}\n}\n\nexport = CSSLineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSRenderableBase implements IRenderable\n{\n\t/**\n\t *\n\t */\n\tprivate _pool:IRenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic next:CSSRenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderObjectId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t *\n\t */\n\tpublic htmlElement:HTMLElement;\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param material\n\t * @param animator\n\t */\n\tconstructor(pool:IRenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner)\n\t{\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderableOwner = renderableOwner;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.renderableOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateGeometry()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\n\t}\n}\n\nexport = CSSRenderableBase;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n\n/**\n * @class away.pool.CSSSkyboxRenderable\n */\nclass CSSSkyboxRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"skybox\";\n\n\tconstructor(pool:IRenderablePool, skyBox:Skybox)\n\t{\n\t\tsuper(pool, skyBox, skyBox);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\t\tvar img:HTMLDivElement;\n\n\t\t//create the six images that make up the skybox\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + skyBox.id;\n\t}\n}\n\nexport = CSSSkyboxRenderable;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static subMeshClassPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static addSubMeshClass(subMeshClass:ISubMeshClass, subGeometryType:string):string\n\t{\n\t\tSubMeshPool.subMeshClassPool[subGeometryType] = subMeshClass;\n\n\t\treturn subGeometryType;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getSubMeshClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.subMeshClassPool[subGeometry.subGeometryType];\n\t}\n\n\tpublic static defaultSubMeshTypes =\n\t\t[SubMeshPool.addSubMeshClass(LineSubMesh, LineSubGeometry.SUB_GEOMETRY_TYPE),\n\t\tSubMeshPool.addSubMeshClass(TriangleSubMesh, TriangleSubGeometry.SUB_GEOMETRY_TYPE),\n\t\tSubMeshPool.addSubMeshClass(CurveSubMesh, CurveSubGeometry.SUB_GEOMETRY_TYPE)];\n}\n\nexport = SubMeshPool;",
    "import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends NamedAssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = hw\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Array<number>;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//horizonal lines\n\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\t\tvar numVertices:number;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = -hh;\n\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Array<number>;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.PRIMITIVE_PREFAB;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tif (j < this._segmentsH) {\n\t\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\n\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\n\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\n{\n\tprivate _container:HTMLDivElement;\n\tprivate _context:HTMLDivElement;\n\tprivate _contextStyle:MSStyleCSSProperties;\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\n\t\n\tprivate _activeMaterial:CSSMaterialBase;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tprivate _transform:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Creates a new CSSDefaultRenderer object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//create container for the renderer\n\t\tthis._container = document.createElement(\"div\");\n\t\tthis._container.style.overflow = \"hidden\";\n\t\tthis._container.style.position = \"absolute\";\n\t\t\n\t\t//add container to body\n\t\tdocument.body.appendChild(this._container);\n\n\t\t//create conxtext for the renderer\n\t\tthis._context = document.createElement(\"div\");\n\t\tthis._contextStyle = this._context.style;\n\t\tthis._contextStyle.position = \"absolute\";\n\t\tthis._contextStyle.transformStyle\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\n\t\tthis._contextStyle.transformOrigin\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t//add context to container\n\t\tthis._container.appendChild(this._context);\n\t}\n\n\t/**\n\t *\n\t * @param entityCollector\n\t */\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tthis._iRender(<EntityCollector> entityCollector);\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n//\t\t\tif (entityCollector.skyBox) {\n//\t\t\t\tif (this._activeMaterial)\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n//\n//\t\t\t\tthis._activeMaterial = null;\n//\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\n//\t\t\t\tthis.drawSkybox(entityCollector);\n//\n//\t\t\t}\n//\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\n\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\n\t\t}\n\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\n\n//\t\t\tif (this._activeMaterial)\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n\n\t\tthis._activeMaterial = null;\n\t}\n\n\t/**\n\t * Updates the backbuffer properties.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\tthis._container.style.width = this._width + \"px\";\n\t\tthis._container.style.height = this._height + \"px\";\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\n\n\t\t//update context matrix\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\n\n\t\t//update context tranform\n\t\tthis._contextStyle.transform\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\n\t\t\t= this._contextStyle[\"-moz-transform\"]\n\t\t\t= this._contextStyle[\"-o-transform\"]\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\n\n\t\twhile (item) {\n\t\t\t//this._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\n\n\t\t\t//serialise transform and apply to html element\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\n\t\t\tthis._transform.append(viewProjection);\n\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\n\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\n\n\t\t\tstyle.transformStyle\n\t\t\t\t= style[\"-webkit-transform-style\"]\n\t\t\t\t= style[\"-moz-transform-style\"]\n\t\t\t\t= style[\"-o-transform-style\"]\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\n\n\t\t\t//check if child requires adding to the view\n\t\t\tif (!this._context.contains(item.htmlElement))\n\t\t\t\tthis._context.appendChild(item.htmlElement);\n\n\t\t\titem = item.next;\n\t\t}\n\n//\t\t\tvar numPasses:number;\n//\t\t\tvar j:number;\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\n//\t\t\tvar item2:away.render.CSSRenderableBase;\n//\n//\t\t\twhile (item) {\n//\t\t\t\tthis._activeMaterial = item.material;\n//\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\n//\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\n//\n//\t\t\t\tj = 0;\n//\n//\t\t\t\tdo {\n//\t\t\t\t\titem2 = item;\n//\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\n//\n//\t\t\t\t\tif ((rttMask & which) != 0) {\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\n//\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\n//\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\n//\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\n//\n//\t\t\t\t\t} else {\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\n//\t\t\t\t\t}\n//\t\t\t\t} while (++j < numPasses);\n//\n//\t\t\t\titem = item2;\n//\t\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\t//TODO\n\t}\n\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\treturn new CSSEntityCollector();\n\t}\n}\n\nexport = CSSDefaultRenderer;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass CSSRendererBase extends EventDispatcher\n{\n\tprivate _billboardRenderablePool:IRenderablePool;\n\tprivate _lineSegmentRenderablePool:IRenderablePool;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tprivate _shareContext:boolean = false;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _depthTextureInvalid:boolean = true;\n\n\tpublic _renderableHead:CSSRenderableBase;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorRect:Rectangle = new Rectangle();\n\tprivate _scissorDirty:boolean;\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\t/**\n\t * A viewPort rectangle equivalent of the StageGL size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._scissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._scissorRect.width = value;\n\t\tthis._viewPort.width = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._scissorRect.height = value;\n\t\tthis._viewPort.height = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\n\t{\n\t\tsuper();\n\n\t\t//this._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\n\t\t//this._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\n\n\t\tthis._viewPort = new Rectangle();\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tif (!entityCollector.entityHead)\n\t\t\treturn;\n\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\n\t}\n\n\tpublic _iRenderCascades(entityCollector:CollectorBase, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\n\t{\n\t\t////reset head values\n\t\t//this._renderableHead = null;\n\t\t//\n\t\t////grab entity head\n\t\t//var item:EntityListItem = entityCollector.entityHead;\n\t\t//\n\t\t////set temp values for entry point and camera forward vector\n\t\t//this._pCamera = entityCollector.camera;\n\t\t//this._iEntryPoint = this._pCamera.scenePosition;\n\t\t//this._pCameraForward = this._pCamera.transform.forwardVector;\n\t\t//\n\t\t////iterate through all entities\n\t\t//while (item) {\n\t\t//\t//item.entity._iCollectRenderables(this);\n\t\t//\titem = item.next;\n\t\t//}\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Performs the actual drawing of dom objects to the target.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\n\t */\n\tpublic pDraw(entityCollector:CSSEntityCollector)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t * @param billboard\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\n\t}\n\n\t/**\n\t *\n\t * @param skybox\n\t */\n\tpublic applySkybox(skybox:Skybox)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @private\n\t */\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\n\t{\n\t\tvar material:CSSMaterialBase;// = <CSSMaterialBase> renderable.renderableOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (material) {\n\t\t\t//set ids for faster referencing\n\t\t\trenderable.materialId = material._iMaterialId;\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\n\t\t\trenderable.cascaded = false;\n\n\t\t\t// project onto camera's z-axis\n\t\t\tposition = this._iEntryPoint.subtract(position);\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\n\n\t\t\t//store reference to scene transform\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\t\t//store reference to next item in list\n\t\t\trenderable.next = this._renderableHead;\n\t\t\tthis._renderableHead = renderable;\n\t\t}\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tthis._viewPort.x = this._globalPos.x;\n\t\tthis._viewPort.y = this._globalPos.y;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CSSRendererBase;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderObjectId;\n\t\t\t\tvar mb:number = headB.renderObjectId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport FontTable\t\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends NamedAssetBase implements IAsset\n{\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.FONT;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends NamedAssetBase\n{\n\tprivate _font_chars:Array<SubGeometryBase>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<SubGeometryBase>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<SubGeometryBase>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):SubGeometryBase\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(subgeo);\n\t\tthis._font_chars_dic[char]=subgeo;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends NamedAssetBase implements IAsset\n{\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\tpublic align:string;\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.TEXTFORMAT;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static bitmapData(data:any):BitmapData\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapData)\n\t\t\treturn data;\n\n\t\tif (data instanceof ImageTexture)\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\n\n\t\tif (data instanceof HTMLImageElement) {\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\n\t\t\tbitmapData.draw(imageElement)\n\t\t\treturn bitmapData;\n\t\t}\n\n\t\t//            if (data is DisplayObject) {\n\t\t//                var ds:DisplayObject = data as DisplayObject;\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\n\t\t//                mat.tx = 0;\n\t\t//                mat.ty = 0;\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\n\t\t//                return bmd;\n\t\t//            }\n\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):BitmapTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\n\t\t\treturn new BitmapTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\n\t}\n}\n\nexport = Cast;"
  ],
  "sourceRoot": ""
}
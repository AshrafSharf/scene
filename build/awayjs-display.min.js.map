{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display/display.ts",
    "awayjs-display.js",
    "awayjs-display/lib/animators/data/ParticleData.ts",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/Style.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/LoaderContainer.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathCommand.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/GraphicsPath.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/ElementsEvent.ts",
    "awayjs-display/lib/events/GraphicsEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderOwnerEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/StyleEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/events/TransformEvent.ts",
    "awayjs-display/lib/graphics/ElementsBase.ts",
    "awayjs-display/lib/graphics/ElementsType.ts",
    "awayjs-display/lib/graphics/Graphics.ts",
    "awayjs-display/lib/graphics/Graphic.ts",
    "awayjs-display/lib/graphics/LineElements.ts",
    "awayjs-display/lib/graphics/TriangleElements.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/DisplayObjectNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/RenderableListItemPool.ts",
    "awayjs-display/lib/pool/RenderableListItem.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/MappingMode.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/ElementsUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "./display.ts",
    "module",
    "Camera",
    "DirectionalLight",
    "Mesh",
    "Billboard",
    "LineSegment",
    "TextField",
    "PointLight",
    "LightProbe",
    "Skybox",
    "CameraNode",
    "DirectionalLightNode",
    "EntityNode",
    "LightProbeNode",
    "PartitionBase",
    "PointLightNode",
    "SkyboxNode",
    "registerAbstraction",
    "display",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/LightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "awayjs-display/lib/entities/Mesh",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/entities/Skybox",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/partition/CameraNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/LightProbeNode",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/data/ParticleData",
    "ParticleData",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "TransformEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "Array",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transform",
    "addEventListener",
    "INVALIDATE_MATRIX3D",
    "event",
    "_onInvalidateMatrix3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "_onInvalidateColorTransform",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "set",
    "value",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "colorTransform",
    "alphaMultiplier",
    "invalidate",
    "_pInvalidateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "_eulers",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "id",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "_pivot",
    "pivot",
    "_pivotScale",
    "SCENE_TRANSFORM",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateMatrix3D",
    "scale",
    "_width",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "len",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "position",
    "matrix3D",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "clone",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "adapter",
    "transform",
    "disposeValues",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "target",
    "setTo",
    "pos",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "movePivot",
    "dx",
    "dy",
    "dz",
    "reset",
    "visible",
    "clearMatrix3D",
    "clearColorTransform",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "removeEventListener",
    "hasEventListener",
    "_pImplicitPartition",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartitionBounds",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "clear",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "_iController",
    "updateController",
    "appendTranslation",
    "_iIsRoot",
    "append",
    "_matrix3DDirty",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_acceptTraverser",
    "collector",
    "push",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "prepend",
    "INVALIDATE_PARTITION_BOUNDS",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/TransformEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher",
    "StyleEvent",
    "Style",
    "_samplers",
    "_images",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "getImageAt",
    "texture",
    "index",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "INVALIDATE_PROPERTIES",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/events/StyleEvent",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "indexOf",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "_children",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "_matrix3D",
    "_rotation",
    "_skew",
    "_scale",
    "_components",
    "director",
    "getForward",
    "negate",
    "_colorTransform",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "moveDown",
    "moveTo",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "Math",
    "sqrt",
    "identity",
    "elements",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "ElementsType",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_x",
    "_y",
    "_z",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "LINE",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/graphics/ElementsType",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "removeChildAtInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "splice",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/LoaderContainer",
    "AssetLibraryBundle",
    "Loader",
    "AssetEvent",
    "URLLoaderEvent",
    "LoaderEvent",
    "ParserEvent",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "getInstance",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "LOAD_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "LOAD_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathCommand",
    "GraphicsPathCommand",
    "NO_OP",
    "MOVE_TO",
    "LINE_TO",
    "CURVE_TO",
    "CURVE_TO_2",
    "WIDE_LINE_TO",
    "WIDE_MOVE_TO",
    "CUBIC_CURVE",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/GraphicsPath",
    "GraphicsPath",
    "commands",
    "winding",
    "_data",
    "_commands",
    "_draw_directions",
    "_contours_closed",
    "_direction",
    "_startPoint",
    "_cur_point",
    "_tmp_point",
    "isFill",
    "_winding",
    "_isFill",
    "curveTo",
    "controlX",
    "controlY",
    "anchorX",
    "anchorY",
    "testpoint",
    "degree_anchor",
    "acos",
    "PI",
    "degree_control",
    "atan2",
    "console",
    "log",
    "lineTo",
    "finalizeContour",
    "wideLineTo",
    "wideMoveTo",
    "awayjs-display/lib/draw/Graphics",
    "DefaultMaterialManager",
    "AttributesView",
    "Float3Attributes",
    "Float2Attributes",
    "PartialImplementationError",
    "TriangleElements",
    "Graphics",
    "_current_position",
    "_target",
    "_queued_fill_pathes",
    "_queued_stroke_pathes",
    "_active_fill_path",
    "_active_stroke_path",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "draw_fill",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "graphics",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "drawCircle",
    "radius2",
    "degree",
    "degree2",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "draw_strokes",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "contour_commands",
    "contour_data",
    "contour_closed",
    "contours_closed",
    "vert_cnt",
    "data_cnt",
    "draw_started",
    "final_vert_list",
    "final_vert_cnt",
    "lastPoint",
    "start_point",
    "end_point",
    "start_left",
    "start_right",
    "ctr_left",
    "ctr_right",
    "ctr_left2",
    "ctr_right2",
    "end_left",
    "end_right",
    "tmp_point",
    "tmp_point2",
    "first_point",
    "first_point_set",
    "closed",
    "tessVerts",
    "_tess_obj",
    "newTess",
    "contour_points",
    "contour_types",
    "curve_direction",
    "control_x",
    "control_y",
    "end_x",
    "end_y",
    "con_length",
    "next_start_right",
    "next_start_left",
    "next_end_right",
    "next_end_left",
    "prevLeft",
    "prevRight",
    "nextIdx",
    "cur_vertical",
    "next_vertical",
    "cur_horizontal",
    "next_horizontal",
    "factor1",
    "offsetY1",
    "factor2",
    "offsetY2",
    "factor3",
    "offsetY3",
    "factor4",
    "offsetY4",
    "finished_curves",
    "finished_curves_types",
    "test_concave_curves",
    "test_convex_curves",
    "curve_sign",
    "getSign",
    "curve_sign2",
    "curve_sign3",
    "subdivided",
    "subdivided2",
    "subdivideCurve",
    "sc",
    "verticesF32",
    "Float32Array",
    "addContour",
    "tesselate",
    "verts",
    "all_verts",
    "vertIndicess",
    "elems",
    "getVertices",
    "getElements",
    "numVerts",
    "numElems",
    "p1",
    "p2",
    "p3",
    "attributesView",
    "attributesBuffer",
    "buffer",
    "setPositions",
    "setCustomAttributes",
    "setUVs",
    "material",
    "getDefaultMaterial",
    "bothSides",
    "useColorTransform",
    "curves",
    "addGraphic",
    "isClockWiseXY",
    "point1x",
    "point1y",
    "point2x",
    "point2y",
    "point3x",
    "point3y",
    "bx",
    "by",
    "pointInTri",
    "xx",
    "xy",
    "b1",
    "b2",
    "b3",
    "startx",
    "starty",
    "endx",
    "endy",
    "startx2",
    "starty2",
    "cx2",
    "cy2",
    "endx2",
    "endy2",
    "array_out",
    "array2_out",
    "c1x",
    "c1y",
    "c2x",
    "c2y",
    "c1x2",
    "c1y2",
    "c2x2",
    "c2y2",
    "ax2",
    "ay2",
    "contour_draw_directions",
    "draw_directions",
    "draw_direction",
    "contours_vertices",
    "curve_attr_1",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "Rectangle",
    "RenderableOwnerEvent",
    "RenderOwnerEvent",
    "pixelSnapping",
    "smoothing",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "_updateDimensions",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "_material",
    "iRemoveOwner",
    "INVALIDATE_TEXTURE",
    "iAddOwner",
    "_uvTransform",
    "_style",
    "_iTestCollision",
    "shortestCollisionDistance",
    "testBillboardCollision",
    "applyRenderable",
    "getTextureAt",
    "getDefaultSampler",
    "rect",
    "imageRect",
    "frameRect",
    "INVALIDATE_ELEMENTS",
    "invalidateRenderOwner",
    "INVALIDATE_RENDER_OWNER",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RenderOwnerEvent",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "nX",
    "nY",
    "_applyRenderer",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "DirectionalShadowMapper",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "SamplerCube",
    "ErrorBase",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "specularSampler",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "invalidateGraphics",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "GraphicsEvent",
    "_shareAnimationGraphics",
    "_tempPoint",
    "_onGraphicsBoundsInvalidDelegate",
    "onGraphicsBoundsInvalid",
    "_graphics",
    "BOUNDS_INVALID",
    "animator",
    "removeOwner",
    "addOwner",
    "uvTransform",
    "bakeTransformations",
    "applyTransformation",
    "_meshes",
    "pop",
    "mesh",
    "shareAnimationGraphics",
    "union",
    "getBoxBounds",
    "_center",
    "getSphereBounds",
    "acceptTraverser",
    "count",
    "local",
    "awayjs-display/lib/events/GraphicsEvent",
    "awayjs-display/lib/graphics/Graphics",
    "awayjs-display/lib/entities/MovieClip",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "isAsset",
    "text",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "logHierarchy",
    "printHierarchyName",
    "instance",
    "add_child_to_dispose",
    "awayjs-display/lib/events/MouseEvent",
    "CubeMapShadowMapper",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "BlendMode",
    "SingleCubeTexture",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_curves",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "INVALIDATE",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "Matrix",
    "TextFieldType",
    "Sampler2D",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGraphicsDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textFields",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "getChar",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "positions",
    "numVertices",
    "curveData2",
    "getCustomAtributes",
    "leading",
    "vertexBuffer",
    "curveElements",
    "animateUVs",
    "uv_values",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "EventBase",
    "_camera",
    "awayjs-core/lib/events/EventBase",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/ElementsEvent",
    "ElementsEvent",
    "_attributesView",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "apply",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localNormal",
    "elementsIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "renderOwner",
    "_renderOwner",
    "INVALIDATE_ANIMATION",
    "_renderableOwner",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/graphics/ElementsBase",
    "Short3Attributes",
    "ElementsBase",
    "concatenatedBuffer",
    "_customAttributesNames",
    "_customAttributes",
    "_numElements",
    "_verticesDirty",
    "_invalidateVertices",
    "_concatenatedBuffer",
    "_indices",
    "getCustomAtributesNames",
    "setIndices",
    "values",
    "offset",
    "clearIndices",
    "invalidateIndicies",
    "clearVertices",
    "invalidateVertices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "center",
    "_invalidateIndices",
    "pickingCollider",
    "pickingCollisionVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "TRIANGLE",
    "Graphic",
    "ElementsUtils",
    "sourceEntity",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "graphic",
    "invalidateElements",
    "_iInvalidateRenderOwners",
    "_iGetExplicitMaterial",
    "newGraphic",
    "_available",
    "parent",
    "_invalidateBounds",
    "removeGraphic",
    "getGraphicAt",
    "particles",
    "numParticles",
    "_iGetExplicitStyle",
    "_iGetExplicitUVTransform",
    "_boxBounds",
    "setBoundIdentity",
    "hitTestTriangleElements",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/utils/ElementsUtils",
    "_iIndex",
    "_iPickingCollisionVO",
    "awayjs-display/lib/graphics/LineElements",
    "Byte4Attributes",
    "Float1Attributes",
    "LineElements",
    "_numVertices",
    "_positions",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "floor",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "cells",
    "lastCollisionIndex",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_uvs",
    "_condensedIndexLookUp",
    "getTriangleGraphicsBoxBounds",
    "getTriangleGraphicsSphereBounds",
    "generateNormals",
    "faceNormals",
    "generateTangents",
    "faceTangents",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "uvs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "scaleUVs",
    "generateFaceTangents",
    "numElements",
    "generateFaceNormals",
    "testTriangleCollision",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "draw",
    "setPixel",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "imageColor",
    "_preserveAlpha",
    "invalidateTexture",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ImageBase",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateRenderOwners",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "isContainerNode",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "_updateBounds",
    "onClear",
    "_debugEntity",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "awayjs-core/lib/library/AbstractionBase",
    "_partition",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "debugVisible",
    "isEntityCollector",
    "boundsPrimitive",
    "iMarkForUpdate",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "applyLightProbe",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "assetClass",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pEntityNode",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "SceneGraphNodePool",
    "isContainer",
    "displayObjectContainer",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleElements",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "posDim",
    "uvDim",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "lineElements",
    "RaycastCollector",
    "_ignoredRenderables",
    "_onlyMouseEnabled",
    "_numRenderables",
    "_raycastCollector",
    "_renderables",
    "_view",
    "getSceneCollision",
    "renderableHead",
    "renderable",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "renderables",
    "sortOnNearT",
    "renderable1",
    "renderable2",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/RenderableListItemPool",
    "RenderableListItem",
    "RenderableListItemPool",
    "_pool",
    "_index",
    "_poolSize",
    "getItem",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/RenderableListItem",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "elementsType",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidatePrimitive",
    "_pInvalidateUVs",
    "_pBuildGraphics",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGraphics",
    "horangle",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "_scaleU",
    "_scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGraphics",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_primitiveDirty",
    "_uvDirty",
    "_elementsType",
    "_elements",
    "updateGraphics",
    "updateUVs",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "dim",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "setChar",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "ImageUtils",
    "TextureBase",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "isImage2DValid",
    "setImageAt",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/traverse/CollectorBase",
    "CollectorBase",
    "_numCullPlanes",
    "_pRenderableListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pRenderableHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "index3",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "precheck",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\n\nPartitionBase.registerAbstraction(CameraNode, Camera);\nPartitionBase.registerAbstraction(DirectionalLightNode, DirectionalLight);\nPartitionBase.registerAbstraction(EntityNode, Mesh);\nPartitionBase.registerAbstraction(EntityNode, Billboard);\nPartitionBase.registerAbstraction(EntityNode, LineSegment);\nPartitionBase.registerAbstraction(EntityNode, TextField);\nPartitionBase.registerAbstraction(LightProbeNode, LightProbe);\nPartitionBase.registerAbstraction(PointLightNode, PointLight);\nPartitionBase.registerAbstraction(SkyboxNode, Skybox);\n\n\n\n/**\n *\n * static shim\n */\nclass display\n{\n\n}\n\nexport = display;",
    null,
    "import TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic elements:TriangleElements;\n}\n\nexport = ParticleData",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-core/lib/library/LoaderInfo\");\nimport EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis.invalidate();\n\t\t\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartitionBounds();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc abstraction objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _acceptTraverser(collector:CollectorBase)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent)\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent)\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartitionBounds();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tif (this._pPickingCollisionVO) {\n\t\t\tthis._pPickingCollisionVO.dispose();\n\t\t\tthis._pPickingCollisionVO = null;\n\t\t}\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n\n\tpublic invalidatePartitionBounds()\n\t{\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n\t}\n}\n\nexport = DisplayObject;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\n\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n *\n */\nclass Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties()\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n\nexport = Style;\n",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager\t\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tif(FrameScriptManager.frameScriptDebug){\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\n\t\t\t// try to get the functions name (it should be the first line as comment)\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\n\t\t\t}\n\t\t}\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D()\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform()\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents()\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform()\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D()\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents()\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n\nexport = Transform;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsType\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab(null, ElementsType.LINE);\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsType\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab(null, ElementsType.LINE);\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pEntity = null;\n\t\tthis._pBoundsPrimitive = null;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pInvalidated = true;\n\t\t}\n\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport Loader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport URLLoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader()\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}\n\nexport = LoaderContainer;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n* Defines the values to use for specifying path-drawing commands.\n* The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPathCommand\n{\n\t/**\n\t * Represents the default \"do nothing\" command.\n\t */\n\tpublic static NO_OP:number = 0;\n\t/**\n\t * Specifies a drawing command that moves the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static MOVE_TO:number = 1;\n\n\t/**\n\t * Specifies a drawing command that draws a line from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static LINE_TO:number = 2;\n\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO:number = 3;\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO_2:number = 13;\n\n\t/**\n\t * Specifies a \"line to\" drawing command,\n\t * but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_LINE_TO:number = 4;\n\n\t/**\n\t *   Specifies a \"move to\" drawing command,\n\t *   but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_MOVE_TO:number = 5;\n\n\t/**\n\t * Specifies a drawing command that draws a curve from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector, using 2 control points.\n\t */\n\tpublic static CUBIC_CURVE:number = 6;\n}\n\nexport = GraphicsPathCommand;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport GraphicsPathCommand\t\t= require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPath\n{\n    /**\n     * The Vector of drawing commands as integers representing the path.\n     */\n    private _commands:Array<Array<number>>;\n    /**\n     * The Vector of Numbers containing the parameters used with the drawing commands.\n     */\n    private _data:Array<Array<number>>;\n\n    private _draw_directions:Array<number>;\n    private _contours_closed:Array<boolean>;\n\n    /**\n     * Specifies the winding rule using a value defined in the GraphicsPathWinding class.\n     */\n    private _winding:string;\n\n    private _startPoint:Point;\n    private _tmp_point:Point;\n    private _cur_point:Point;\n    private _direction:Point;\n    private _isFill:boolean;\n\n    constructor(commands:Array<number> = null, data:Array<number> = null, winding:string = GraphicsPathWinding.EVEN_ODD)\n    {\n        this._data=[];\n        this._commands=[];\n        this._draw_directions=[0];\n        this._contours_closed=[false];\n\n        if(commands!=null && data!=null){\n            this._data[0]=data;\n            this._commands[0]=commands;\n        }\n        else{\n            this._data[0]=[];\n            this._commands[0]=[];\n\n        }\n\n        this._direction=new Point(0, -1);\n        this._startPoint=new Point();\n        this._cur_point=new Point();\n        this._tmp_point=new Point();\n        this.isFill=false;\n        this._winding=winding;\n    }\n\n    public get draw_directions():Array<number>\n    {\n        return this._draw_directions;\n    }\n    public get contours_closed():Array<boolean>\n    {\n        return this._contours_closed;\n    }\n\n    public get isFill():boolean\n    {\n        return this._isFill;\n    }\n    public set isFill(value:boolean)\n    {\n        this._isFill=value;\n    }\n    public get commands():Array<Array<number>>\n    {\n        return this._commands;\n    }\n\n    public get data():Array<Array<number>>\n    {\n        return this._data;\n    }\n\n    public curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.CURVE_TO);\n\n        if(this.isFill){\n            this._tmp_point.x=anchorX-this._cur_point.x;\n            this._tmp_point.y=anchorY-this._cur_point.y;\n            this._tmp_point.normalize();\n\n            var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\n            testpoint.normalize();\n            var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n            if(degree_anchor>180)degree_anchor-=360;\n            //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n            this._tmp_point.x=controlX-this._cur_point.x;\n            this._tmp_point.y=controlY-this._cur_point.y;\n            this._tmp_point.normalize();\n            //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n            var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\n            if(degree_control>180)degree_control-=360;\n            //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n            console.log(\"degree_control \"+degree_control);\n            console.log(\"degree_anchor \"+degree_anchor);\n            console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\n            this._direction.x=testpoint.x;\n            this._direction.y=testpoint.y;\n            if((degree_control)<0)\n                this._data[this._data.length-1].push(1);\n            else\n                this._data[this._data.length-1].push(2);\n\n        }\n        else{\n            this._data[this._data.length-1].push(1);\n        }\n        this._cur_point.x=anchorX;\n        this._cur_point.y=anchorY;\n        this._data[this._data.length-1].push(controlX);\n        this._data[this._data.length-1].push(controlY);\n        this._data[this._data.length-1].push(anchorX);\n        this._data[this._data.length-1].push(anchorY);\n\n    }\n\n    public lineTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.LINE_TO);\n        this._data[this._data.length-1].push(x);\n        this._data[this._data.length-1].push(y);\n        if(this.isFill) {\n            this._tmp_point.x = x - this._cur_point.x;\n            this._tmp_point.y = y - this._cur_point.y;\n            this._tmp_point.normalize();\n            this._direction.x=this._tmp_point.x;\n            this._direction.y=this._tmp_point.y;\n            var degree_anchor:number = Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n        }\n        this._cur_point.x=x;\n        this._cur_point.y=y;\n    }\n\n    public moveTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length>0){\n            this.finalizeContour();\n            this._draw_directions.push(0);\n            this._contours_closed.push(false);\n            this._commands.push([]);\n            this._data.push([]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    }\n\n    public finalizeContour()\n    {\n        if((this._startPoint.x != this._cur_point.x) || (this._startPoint.y != this._cur_point.y)){\n            if(this.isFill) {\n                this.lineTo(this._startPoint.x, this._startPoint.y);\n            }\n        }\n        else{\n            this._contours_closed[this._contours_closed.length-1]=true;\n        }\n\n    }\n    public wideLineTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n    public wideMoveTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n}\n\nexport = GraphicsPath;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\nimport GraphicsPath\t\t\t\t= require(\"awayjs-display/lib/draw/GraphicsPath\");\nimport GraphicsPathCommand\t\t= require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nimport DefaultMaterialManager\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MovieClip\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\")\nimport AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\n\n\nimport PartialImplementationError\t\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport TriangleElements = require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase = require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\tprivate _queued_fill_pathes:Array<GraphicsPath>;\n\tprivate _queued_stroke_pathes:Array<GraphicsPath>;\n\n\tpublic static _tess_obj:any;\n\n\tpublic _target:Mesh;\n\n\tprivate _active_fill_path:GraphicsPath;\n\tprivate _active_stroke_path:GraphicsPath;\n\n\tprivate _current_position:Point=new Point();\n\n\tconstructor(target:Mesh){\n\t\tthis._target=target;\n\t\tthis._queued_fill_pathes=[];\n\t\tthis._queued_stroke_pathes=[];\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\t\tthis._current_position=new Point();\n\t}\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\t// todo: do this the correct way\n\t\tthis._target.graphics.dispose();\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\t\tsourceGraphics._target.graphics.copyTo(this._target.graphics);\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tthrow new PartialImplementationError(\"cubicCurveTo\");\n\t\t/*\n\t\t t = 0.5; // given example value\n\t\t x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n\t\t y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n\t\t this.queued_command_types.push(Graphics.CMD_BEZIER);\n\t\t this.queued_command_data.push(controlX1);\n\t\t this.queued_command_data.push(controlY1);\n\t\t this.queued_command_data.push(controlX2);\n\t\t this.queued_command_data.push(controlY2);\n\t\t this.queued_command_data.push(anchorX);\n\t\t this.queued_command_data.push(anchorY);\n\n\t\t // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n\t\t this.draw_direction+=0;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tthis._current_position.x=anchorX;\n\t\tthis._current_position.y=anchorY;\n\t\t/*\n\t\tthis.queued_command_types.push(Graphics.CMD_CURVE);\n\t\tthis.queued_command_data.push(controlX);\n\t\tthis.queued_command_data.push(controlY);\n\t\tthis.queued_command_data.push(anchorX);\n\t\tthis.queued_command_data.push(anchorY);\n\t\t*/\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\t\tvar radius2=radius*1.065;\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x-radius, y);\n\t\t\tfor(var i=8; i>=0;i--){\n\n\t\t\t\tvar degree = (i) *(360/8)*Math.PI/180;\n\t\t\t\tvar degree2 = degree + ((360/16)*Math.PI/180);\n\t\t\t\tthis._active_fill_path.curveTo(x-(Math.cos(degree2)*radius2), y+(Math.sin(degree2)*radius2),x-(Math.cos(degree)*radius), y+(Math.sin(degree)*radius));\n\t\t\t}\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+radius);\n\t\t\tvar radius2=radius*0.93;\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y+(radius2), x-radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y-(radius2), x, y-radius);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y-(radius2), x+radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y+(radius2), x, y+radius);\n\t\t}\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\t\twidth/=2;\n\t\theight/=2;\n\t\tif(this._active_fill_path!=null){\n\n\t\t\tthis._active_fill_path.moveTo(x, y+height);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\t\t//this.draw_fill();\n\t\t/*\n\t\t for (var i:number=0; i<graphicsData.length; i++){\n\t\t //todo\n\t\t if(graphicsData[i].dataType==\"beginFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"Path\"){\n\n\t\t }\n\n\t\t }\n\t\t */\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\t\t//todo\n\t\t/*\n\t\t if(this._active_fill_path!=null){\n\t\t this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t if(this._active_stroke_path!=null){\n\t\t this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t this._current_position.x=anchorX;\n\t\t this._current_position.y=anchorY;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t\tif(!ellipseHeight){\n\t\t\tellipseHeight=ellipseWidth;\n\t\t}\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_fill_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_fill_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\t//todo\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\t//todo\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\t\tthis.draw_strokes();\n\t\tthis.draw_fill();\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\t}\n\n\tpublic draw_strokes(){\n\t\tif(this._active_stroke_path==null)return;\n\t\tthis._active_stroke_path.finalizeContour();\n\t\tvar contour_commands:Array<Array<number> >=this._active_stroke_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_stroke_path.data;\n\t\tvar contour_closed:Array<boolean >=this._active_stroke_path.contours_closed;\n\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_started:boolean=false;\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tvar start_point:Point=new Point();\n\t\tvar end_point:Point=new Point();\n\t\tvar start_left:Point=new Point();\n\t\tvar start_right:Point=new Point();\n\t\tvar ctr_left:Point=new Point();\n\t\tvar ctr_right:Point=new Point();\n\t\tvar ctr_left2:Point=new Point();\n\t\tvar ctr_right2:Point=new Point();\n\t\tvar end_left:Point=new Point();\n\t\tvar end_right:Point=new Point();\n\t\tvar tmp_point:Point=new Point();\n\t\tvar tmp_point2:Point=new Point();\n\t\tvar first_point:Point=new Point();\n\t\tvar first_point_set:boolean=false;\n\t\tvar closed:boolean=false;\n\t\tvar thickness:number=3;\n\t\tvar tessVerts:Array<number>=[];\n\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tvar contour_points:Array<Point>=[];\n\t\t\tvar contour_types:Array<number>=[];\n\t\t\tcommands = contour_commands[k];\n\t\t\tdata = contour_data[k];\n\t\t\tclosed=contour_closed[k];\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tdraw_started=false;\n\t\t\tfirst_point_set=false;\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.LINE_TO);\n\t\t\t\t\t\tend_point.x = data[data_cnt++];\n\t\t\t\t\t\tend_point.y = data[data_cnt++];\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_point.y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = end_point.x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tend_left.x  = end_point.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_point.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_point.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_point.y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tlastPoint.x=end_point.x;\n\t\t\t\t\t\tlastPoint.y=end_point.y;\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO);\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO_2);\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\n\n\t\t\t\t\t\ttmp_point.x = -1*(control_y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = control_x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tctr_left.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right.x, ctr_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left.x, ctr_left.y));\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_y-control_y);\n\t\t\t\t\t\ttmp_point.y = end_x-control_x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\tctr_left2.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left2.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right2.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right2.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tend_left.x  = end_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right2.x, ctr_right2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left2.x, ctr_left2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tlastPoint.x=end_x;\n\t\t\t\t\t\tlastPoint.y=end_y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar con_length:number=contour_points.length/4;\n\t\t\tvar next_start_right:Point=new Point();\n\t\t\tvar next_start_left:Point=new Point();\n\t\t\tvar next_end_right:Point=new Point();\n\t\t\tvar next_end_left:Point=new Point();\n\t\t\tvar prevLeft:Point;\n\t\t\tvar prevRight:Point;\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\tvar nextIdx:number = i + 1;\n\t\t\t\tif (i >= con_length - 1) {\n\t\t\t\t\t// last segment\n\t\t\t\t\tif (closed) {\n\t\t\t\t\t\tnextIdx = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextIdx = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nextIdx >= 0) {\n\t\t\t\t\tnext_start_right = contour_points[nextIdx * 4];\n\t\t\t\t\tnext_start_left = contour_points[nextIdx * 4 + 1];\n\t\t\t\t\tnext_end_right = contour_points[nextIdx * 4 + 2];\n\t\t\t\t\tnext_end_left = contour_points[nextIdx * 4 + 3];\n\n\t\t\t\t\tvar cur_vertical:boolean = false;\n\t\t\t\t\tvar next_vertical:boolean = false;\n\t\t\t\t\tvar cur_horizontal:boolean = false;\n\t\t\t\t\tvar next_horizontal:boolean = false;\n\n\t\t\t\t\ttmp_point.x = end_right.x - start_right.x;\n\t\t\t\t\ttmp_point.y = end_right.y - start_right.y;\n\t\t\t\t\tvar factor1:number=0;\n\t\t\t\t\tvar offsetY1:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor1 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY1 = -(factor1 * start_right.x - start_right.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_right.x - next_start_right.x;\n\t\t\t\t\ttmp_point.y = next_end_right.y - next_start_right.y;\n\t\t\t\t\tvar factor2:number=0;\n\t\t\t\t\tvar offsetY2:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor2 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY2 = -(factor2 * next_start_right.x - next_start_right.y);\n\t\t\t\t\t}\n\n\n\t\t\t\t\ttmp_point.x = end_left.x - start_left.x;\n\t\t\t\t\ttmp_point.y = end_left.y - start_left.y;\n\t\t\t\t\tvar factor3:number=0;\n\t\t\t\t\tvar offsetY3:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor3 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY3 = -(factor3 * start_left.x - start_left.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_left.x - next_start_left.x;\n\t\t\t\t\ttmp_point.y = next_end_left.y - next_start_left.y;\n\t\t\t\t\tvar factor4:number=0;\n\t\t\t\t\tvar offsetY4:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor4 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY4 = -(factor4 * next_start_left.x - next_start_left.y);\n\t\t\t\t\t}\n\t\t\t\t\tif ((cur_vertical && cur_horizontal)||(next_horizontal && next_vertical)) console.log(\"ERROR\");\n\t\t\t\t\tif((factor1==factor2)||(factor3==factor4)) {\n\t\t\t\t\t\tconsole.log(\"STRAIGHT LINE factor same\");\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor1);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor2);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor3);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor4);\n\t\t\t\t\t}\n\t\t\t\t\t//else\n\t\t\t\t\tif ((cur_horizontal && next_horizontal)||(cur_vertical && next_vertical)) console.log(\"STRAIGHT LINE\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ((cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\t\t\tend_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\t\t\tend_left.y = next_start_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((cur_vertical)&&(!next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(!next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor2 * start_right.x + offsetY2;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor4 * start_left.x + offsetY4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (next_start_right.y - offsetY1)/factor1;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = next_start_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (next_start_left.y - offsetY3)/factor3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(cur_horizontal)\");\n\t\t\t\t\t\t\tend_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tend_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(!cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * next_start_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * next_start_left.x + offsetY3;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (end_right.y - offsetY2)/factor2;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (end_left.y - offsetY4)/factor4;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.log(\"else\");\n\t\t\t\t\t\t\tconsole.log(\"factor1 - factor2 \"+(factor1 - factor2));\n\t\t\t\t\t\t\tconsole.log(\"offsetY1 - offsetY2 \"+(offsetY1 - offsetY2));\n\t\t\t\t\t\t\tconsole.log(\"factor3 - factor4 \"+(factor3 - factor4));\n\t\t\t\t\t\t\tconsole.log(\"offsetY3 - offsetY4 \"+(offsetY3 - offsetY4));\n\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = -((offsetY1 - offsetY2) / (factor1 - factor2));\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * end_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = -((offsetY3 - offsetY4) / (factor3 - factor4));\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * end_left.x + offsetY3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\tnext_start_left.y = end_left.y;\n\n\n\t\t\t\t\t// calculate the correct end points\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO_2)\n\t\t\t\t\tcontinue;\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\ti++;\n\t\t\t\t\tctr_right = contour_points[i * 4];\n\t\t\t\t\tctr_left = contour_points[i * 4 + 1];\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\n\t\t\t\t\tvar finished_curves:Array<Point>=[];\n\t\t\t\t\tvar finished_curves_types:Array<number>=[];\n\t\t\t\t\tvar test_concave_curves:Array<Point>=[];\n\t\t\t\t\tvar test_convex_curves:Array<Point>=[];\n\t\t\t\t\tvar curve_sign:boolean=this.getSign(start_right.x, start_right.y,  ctr_right.x, ctr_right.y, end_right.x, end_right.y )>0;\n\t\t\t\t\tvar curve_sign2:number=-1;\n\t\t\t\t\tvar curve_sign3:number=1;\n\t\t\t\t\ttessVerts.length=0;\n\t\t\t\t\tif(curve_sign){\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y,subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(tessVerts.length>0){\n\n\t\t\t\t\t\tvar verticesF32 = new Float32Array(tessVerts);\n\t\t\t\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, tessVerts.length / 2);\n\t\t\t\t\t}\n\t\t\t\t\tvar t:number=0;\n\t\t\t\t\tfor(t=0; t<finished_curves_types.length;t++){\n\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].y;;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t console.log(\"final verts stroke \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\t */\n\t\tGraphics._tess_obj.tesselate(4/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t}\n\n\t\t// todo: handle material / submesh settings, and check if a material / submesh already exists for this settings\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_stroke_path=null;\n\t}\n\n\tpublic isClockWiseXY(point1x:number, point1y:number, point2x:number, point2y:number, point3x:number, point3y:number):boolean\n\t{\n\t\treturn ((point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x) < 0);\n\t}\n\n\tpublic getSign(ax:number, ay:number, cx:number, cy:number, bx:number, by:number):number\n\t{\n\t\t/*if(this.isClockWiseXY(ax, ay, bx, by, cx, cy)) {\n\t\t return (bx - ax) * (cy - ay) - (by - ay) * (cx - ax);\n\t\t }*/\n\t\treturn (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n\n\t}\n\n\tpublic pointInTri(ax:number, ay:number, bx:number, by:number ,cx:number, cy:number, xx:number, xy:number):boolean\n\t{\n\t\tvar b1:boolean = this.getSign(ax, ay, xx, xy, bx, by) > 0;\n\t\tvar b2:boolean = this.getSign(bx, by, xx, xy, cx, cy) > 0;\n\t\tvar b3:boolean = this.getSign(cx, cy, xx, xy, ax, ay) > 0;\n\t\treturn ((b1 == b2) && (b2 == b3));\n\t}\n\tpublic subdivideCurve(startx:number, starty:number, cx:number, cy:number, endx:number, endy:number, startx2:number, starty2:number, cx2:number, cy2:number, endx2:number, endy2:number, array_out:Array<number>, array2_out:Array<number>):void\n\t{\n\t\t/*\n\t\t if(!this.pointInTri(startx2, starty2, cx2, cy2, endx2, endy2, cx, cy)){\n\t\t }\n\t\t */\n\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\n\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n\t\treturn;\n\t\tvar c1x = startx + (cx - startx) * 0.5;\n\t\tvar c1y = starty + (cy - starty) * 0.5;\n\t\tvar c2x = cx + (endx - cx) * 0.5;\n\t\tvar c2y = cy + (endy - cy) * 0.5;\n\t\tvar ax = c1x + (c2x - c1x) * 0.5;\n\t\tvar ay = c1y + (c2y - c1y) * 0.5;\n\n\t\tvar c1x2 = startx2 + (cx2 - startx2) * 0.5;\n\t\tvar c1y2 = starty2 + (cy2 - starty2) * 0.5;\n\t\tvar c2x2 = cx2 + (endx2 - cx2) * 0.5;\n\t\tvar c2y2 = cy2 + (endy2 - cy2) * 0.5;\n\t\tvar ax2 = c1x2 + (c2x2 - c1x2) * 0.5;\n\t\tvar ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n\t\tif(this.pointInTri(startx2, starty2, c1x2, c1y2, ax2, ay2, c1x, c1y)){\n\t\t\tthis.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n\t\t}\n\t\telse{\n\t\t\tarray_out.push(startx, starty, c1x, c1y, ax, ay);\n\t\t\tarray2_out.push(startx2, starty2, c1x2, c1y2, ax2, ay2);\n\t\t}\n\n\t\tif(this.pointInTri(ax2, ay2, c2x2, c2y2,  endx2, endy2, c2x, c2y)){\n\t\t\tthis.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n\t\t}\n\t\telse{\n\t\t\tarray_out.push(ax, ay, c2x, c2y, endx, endy);\n\t\t\tarray2_out.push(ax2, ay2, c2x2, c2y2, endx2, endy2);\n\t\t}\n\t}\n\tpublic draw_fill(){\n\t\tif(this._active_fill_path==null)return;\n\t\tthis._active_fill_path.finalizeContour();\n\n\t\tvar contour_commands:Array<Array<number> >=this._active_fill_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_fill_path.data;\n\t\tvar contour_draw_directions:Array<number>=this._active_fill_path.draw_directions;\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_direction:number=0;\n\t\tvar contours_vertices:Array<Array<number>> = [[]];\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tcontours_vertices.push([]);\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tcommands=contour_commands[k];\n\t\t\tdata=contour_data[k];\n\t\t\tdraw_direction=contour_draw_directions[k];\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar curve_attr_1 = -1;\n\t\t\t\t\t\tif (draw_direction > 0) {\n\t\t\t\t\t\t\tif (curve_direction == 1) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (curve_direction == 2) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!this.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)){\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPoint.x = end_x;\n\t\t\t\t\t\tlastPoint.y = end_y;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE:\n\t\t\t\t\t\t//todo\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contours_vertices.length; k++) {\n\t\t\tvar vertices=contours_vertices[k];\n\t\t\t/*\n\t\t\t for (i = 0; i < vertices.length / 2; ++i)\n\t\t\t console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n\t\t\t */\n\t\t\tvar verticesF32 = new Float32Array(vertices);\n\t\t\t//var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n\t\t\t//console.log(\"in vertices\", vertices);\n\t\t\t//var tess = new TESS();\n\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n\n\t\t}\n\t\tGraphics._tess_obj.tesselate(0/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\t//console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\t\t//console.log(\"out elements\", Graphics._tess_obj.getElements());\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t}\n\t\t//for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t//\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_fill_path=null;\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:Matrix;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:RenderOwnerEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(RenderOwnerEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(RenderOwnerEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:RenderOwnerEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:RenderOwnerEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _acceptTraverser(traverser:CollectorBase)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tvar rect:Rectangle = sampler.imageRect || image.rect;\n\t\t\tthis._billboardWidth = rect.width*image.width;\n\t\t\tthis._billboardHeight = rect.height*image.height;\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null)\n\t{\n\t\tthis.invalidateRenderOwner();\n\n\t\tthis._updateDimensions();\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:Matrix;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateGraphics()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_ELEMENTS, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false; //TODO: detect line collisions\n\t}\n\n\tpublic _acceptTraverser(traverser:CollectorBase)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport GraphicsEvent\t\t\t\t= require(\"awayjs-display/lib/events/GraphicsEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * Mesh is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate static _meshes:Array<Mesh> = new Array<Mesh>();\n\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _center:Vector3D;\n\tpublic _graphics:Graphics;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGraphics:boolean = true;\n\n\tpublic _onGraphicsBoundsInvalidDelegate:(event:GraphicsEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The graphics used by the mesh that provides it with its shape.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation graphics.\n\t */\n\tpublic get shareAnimationGraphics():boolean\n\t{\n\t\treturn this._shareAnimationGraphics;\n\t}\n\n\tpublic set shareAnimationGraphics(value:boolean)\n\t{\n\t\tthis._shareAnimationGraphics = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._graphics.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._graphics.uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param graphics                    The graphics used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onGraphicsBoundsInvalidDelegate = (event:GraphicsEvent) => this.onGraphicsBoundsInvalid(event);\n\n\t\tthis._graphics = new Graphics(this); //unique graphics object for each Mesh\n\t\tthis._graphics.addEventListener(GraphicsEvent.BOUNDS_INVALID, this._onGraphicsBoundsInvalidDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tMesh._meshes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = (Mesh._meshes.length)? Mesh._meshes.pop() : new Mesh();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(mesh:Mesh)\n\t{\n\t\tsuper.copyTo(mesh);\n\n\t\tmesh.castsShadows = this._castsShadows;\n\t\tmesh.shareAnimationGraphics = this._shareAnimationGraphics;\n\n\t\tthis._graphics.copyTo(mesh.graphics);\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGraphicsBoundsInvalid(event:GraphicsEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport = Mesh;",
    "import AssetEvent                   = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform               = require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport DisplayObjectContainer       = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject                = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh                         = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard                    = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField                    = require(\"awayjs-display/lib/entities/TextField\");\nimport MouseEvent                   = require(\"awayjs-display/lib/events/MouseEvent\");\nimport IMovieClipAdapter\t    \t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                     = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager           = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    private static _skipAdvance:boolean;\n\n    private static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:AssetEvent;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public dispose()\n    {\n        this.disposeValues();\n\n        MovieClip._movieClips.push(this);\n    }\n\n    public disposeValues()\n    {\n        super.disposeValues();\n\n        this._potentialInstances = {};\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    }\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        } else {\n            this._currentFrameIndex = -1;\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        //if currentFrame is set greater than the available number of\n        //frames, the playhead is moved to the last frame in the timeline.\n        //But because the frame specified was not a keyframe, no scripts are\n        //executed, even if they exist on the last frame.\n        var skip_script:boolean = false;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n\n        if (!numFrames)\n            return;\n\n        if (value < 0) {\n            value = 0;\n        } else if (value >= numFrames) {\n            value = numFrames - 1;\n            skip_script = true;\n        }\n\n        if (this._currentFrameIndex == value)\n            return;\n\n        this._currentFrameIndex = value;\n\n        //changing current frame will ignore advance command for that\n        //update's advanceFrame function, unless advanceFrame has\n        //already been executed\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        this._timeline.gotoFrame(this, value, skip_script);\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        return super.addChildAtDepth(child, depth, replace);\n    }\n\n    public _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n    {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n        this._sessionID_childs[sessionID] = child;\n\n        return this.addChildAtDepth(child, depth);\n    }\n\n    public removeChildAtInternal(index:number):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        MovieClip._skipAdvance = true;\n\n        this.advanceFrame();\n\n        MovieClip._skipAdvance = false;\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        //execute any disposes as a result of framescripts\n        FrameScriptManager.execute_dispose();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame()\n    {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop) // end of loop - jump to first frame.\n                    this.currentFrameIndex = 0;\n                else //end of timeline, stop playing\n                    this._isPlaying = false;\n            } else { // not end - construct next frame\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n\n        var len:number = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public clear()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                FrameScriptManager.add_child_to_dispose(instance);\n                delete this._potentialInstances[key];\n            }\n        }\n\n        super.clear();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone.transform.matrix3D = this.transform.matrix3D\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _uvTransform:Matrix;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _curves:boolean = false;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether skybox should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Style \t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGraphicsDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._textGraphicsDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t}\n\n\t/**\n\t * Reconstructs the Graphics for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGraphicsDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\t\tthis._graphics.dispose();\n\t\tthis._graphics = new Graphics(this);\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:TriangleElements = this_char.elements;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar elements:TriangleElements = this_char.elements;\n\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\tvar positions2:ArrayBufferView = elements.positions.get(elements.numVertices);\n\t\t\t\t\t\tvar curveData2:ArrayBufferView = elements.getCustomAtributes(\"curves\").get(elements.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < elements.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v*2]*char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v*2 + 1]*char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v*3];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v*3 + 1];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v*3 + 2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// hack for multiline textfield in icycle.\n\t\t\ty_offset+=(this._textFormat.size+this._textFormat.leading*1.6);\n\t\t\tif(this._textFormat.leading>=11){\n\t\t\t\ty_offset+=2.5;\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 5);\n\t\tattributesView.set(vertices);\n\t\tvar vertexBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curveElements:TriangleElements = new TriangleElements(vertexBuffer);\n\t\tcurveElements.setPositions(new Float2Attributes(vertexBuffer));\n\t\tcurveElements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\n\n\t\tthis._graphics.addGraphic(curveElements);\n\n\t\tthis.material = this._textFormat.material;\n\t\tvar sampler:Sampler2D = new Sampler2D();\n\t\tthis.style = new Style();\n\t\tthis.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n\t\tthis.material.animateUVs = true;\n\t\tthis.uvTransform = new Matrix(0,0,0,0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}\n\nexport = CameraEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nclass ElementsEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Elements's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a Elements's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a Elements's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a Elements's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsEvent\n\t{\n\t\treturn new ElementsEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = ElementsEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Graphic\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GraphicsEvent\n* @see away3d.core.base.Graphics\n*/\nclass GraphicsEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():GraphicsEvent\n\t{\n\t\treturn new GraphicsEvent(this.type);\n\t}\n}\n\nexport = GraphicsEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementsIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.elementsIndex = this.elementsIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nclass RenderOwnerEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderOwnerEvent\n\t{\n\t\treturn new RenderOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderOwnerEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderableOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Graphics\n */\nclass RenderableOwnerEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_RENDER_OWNER:string = \"invalidateRenderableOwner\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_ELEMENTS:string = \"invalidateElements\";\n\n\tprivate _renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderableOwner:IRenderableOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderableOwner = renderableOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderableOwner():IRenderableOwner\n\t{\n\t\treturn this._renderableOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableOwnerEvent\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderableOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}\n\nexport = ResizeEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n\nclass StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}\n\nexport = StyleEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementsIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.elementsIndex = this.elementsIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Transform\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\n\nclass TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}\n\nexport = TransformEvent;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * @class away.base.TriangleElements\n */\nclass ElementsBase extends AssetBase\n{\n\tprivate _indices:Short3Attributes;\n\tprivate _customAttributesNames:Array<string> = new Array<string>();\n\tprivate _customAttributes:Object = new Object();\n\t\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:ElementsEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\t\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._indices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributesNames():Array<string>\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributes(name:string):AttributesView\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\t\n\t/**\n\t * The total amount of triangles in the TriangleElements.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\tpublic copyTo(elements:ElementsBase)\n\t{\n\t\tif (this.indices)\n\t\t\telements.setIndices(this.indices.clone());\n\t\t\n\t\tfor (var name in this._customAttributes)\n\t\t\telements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\t\t}\n\t\t\n\t\tfor (var name in this._customAttributes) {\n\t\t\tthis._customAttributes[name].dispose();\n\t\t\tdelete this._customAttributes;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._indices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._indices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._indices)\n\t\t\t\tthis._indices = new Short3Attributes();\n\n\t\t\tthis._indices.set(values, offset);\n\t\t} else if (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._indices) {\n\t\t\tthis._numElements = this._indices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\t\n\t/**\n\t * Updates custom attributes.\n\t */\n\tpublic setCustomAttributes(name:string, array:Array<number>, offset?:number);\n\tpublic setCustomAttributes(name:string, arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setCustomAttributes(name:string, attributesView:AttributesView, offset?:number);\n\tpublic setCustomAttributes(name:string, values:any, offset:number = 0)\n\t{\n\t\tif (values == this._customAttributes[name])\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributes[name] = values;\n\t\t} else if (values) {\n\t\t\tif (!this._customAttributes[name])\n\t\t\t\tthis._customAttributes[name] = new Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\n\n\t\t\tthis._customAttributes[name].set(values, offset);\n\t\t} else if (this._customAttributes[name]) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n\t\t\tdelete this._customAttributes[name];\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._customAttributes[name]);\n\n\t\tthis._verticesDirty[this._customAttributes[name].id] = false;\n\n\t\tif (this._customAttributesNames.indexOf(name) == -1)\n\t\t\tthis._customAttributesNames.push(name);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies()\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new ElementsEvent(ElementsEvent.INVALIDATE_INDICES, this._indices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices()\n\t{\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._indices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new ElementsEvent(ElementsEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ElementsBase;",
    "class ElementsType\n{\n\t/**\n\t *\n\t */\n\tpublic static TRIANGLE:string = \"triangle\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINE:string = \"line\";\n}\n\nexport = ElementsType;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport GraphicsEvent\t\t\t= require(\"awayjs-display/lib/events/GraphicsEvent\");\nimport Style\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IAnimator \t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport ElementsEvent\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport StyleEvent\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport IPickingCollider\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport CollectorBase\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ElementsUtils\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport ParticleData\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\n\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Mesh\n *\n * @class Graphics\n */\nclass Graphics extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Graphics]\";\n\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\n\tprivate _boxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tprivate _sphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _graphics:Array<Graphic> = new Array<Graphic>();\n\tprivate _animator:IAnimator;\n\tprivate _uvTransform:Matrix;\n\tprivate _style:Style;\n\n\tpublic sourceEntity:IEntity;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Graphics.assetType;\n\t}\n\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n\tpublic get count():number\n\t{\n\t\treturn this._graphics.length;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (graphic.material) {\n\t\t\t\tgraphic.material.iRemoveOwner(graphic);\n\t\t\t\tgraphic.material.iAddOwner(graphic);\n\t\t\t}\n\n\t\t\t//invalidate any existing graphic objects in case they need to pull new elements\n\t\t\tgraphic.invalidateElements();\n\t\t}\n\t}\n\n\t/*\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateRenderOwners();\n\t}\n\n\t/**\n\t * The material with which to render the Graphics.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iRemoveOwner(graphic);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iAddOwner(graphic);\n\t}\n\n\t/**\n\t * Creates a new Graphics object.\n\t */\n\tconstructor(sourceEntity:IEntity)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\n\t\tthis.sourceEntity = sourceEntity;\n\t}\n\n\t/**\n\t * Adds a GraphicBase wrapping a Elements.\n\t *\n\t * @param elements\n\t */\n\tpublic addGraphic(elements:ElementsBase, material:MaterialBase = null, style:Style = null, uvTransform:Matrix = null)\n\t{\n\t\tvar newGraphic:Graphic;\n\n\t\tif (Graphic._available.length) {\n\t\t\tnewGraphic = Graphic._available.pop();\n\t\t\tnewGraphic.parent = this;\n\t\t\tnewGraphic.elements = elements;\n\t\t\tnewGraphic.material = material;\n\t\t\tnewGraphic.style = style;\n\t\t\tnewGraphic.uvTransform = uvTransform;\n\t\t} else {\n\t\t\tnewGraphic = new Graphic(this._graphics.length, this, elements, material, style, uvTransform);\n\t\t}\n\n\t\tthis._graphics.push(newGraphic);\n\n\t\telements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._invalidateBounds();\n\t}\n\n\tpublic removeGraphic(graphic:Graphic)\n\t{\n\t\tthis._graphics.splice(this._graphics.indexOf(graphic), 1);\n\n\t\tgraphic.elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tgraphic.elements = null;\n\t\tgraphic.material = null;\n\t\tgraphic.style = null;\n\n\t\tthis._invalidateBounds();\n\t}\n\n\tpublic getGraphicAt(index:number):Graphic\n\t{\n\t\treturn this._graphics[index];\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.applyTransformation(transform);\n\t}\n\n\tpublic copyTo(graphics:Graphics)\n\t{\n\t\tgraphics.material = this._material;\n\t\tgraphics.style = this.style;\n\t\tgraphics.particles = this.particles;\n\t\tgraphics.numParticles = this.numParticles;\n\t\tgraphics.uvTransform = this.uvTransform;\n\t\tvar graphic:Graphic;\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\t\t\tgraphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle(), graphic._iGetExplicitUVTransform());\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tgraphics.animator = this._animator.clone();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scale(scale);\n\t}\n\n\tpublic clear()\n\t{\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].clear();\n\t}\n\n\t/**\n\t * Clears all resources used by the Graphics object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].dispose();\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar len:number = this._graphics.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic getBoxBounds():Box\n\t{\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._boxBoundsInvalid = false;\n\n\t\t\tif (!this._boxBounds)\n\t\t\t\tthis._boxBounds = new Box();\n\n\t\t\tif (this._graphics.length) {\n\t\t\t\tthis._boxBounds.setBoundIdentity();\n\t\t\t\tvar len:number = this._graphics.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\t\tthis._boxBounds = this._graphics[i].elements.getBoxBounds(this._boxBounds);\n\t\t\t} else {\n\t\t\t\tthis._boxBounds.setEmpty();\n\t\t\t}\n\t\t}\n\n\t\treturn this._boxBounds;\n\t}\n\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttarget = this._graphics[i].elements.getSphereBounds(center, target);\n\n\t\treturn target;\n\t}\n\n\tprivate _invalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.hasEventListener(GraphicsEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GraphicsEvent(GraphicsEvent.BOUNDS_INVALID));\n\t}\n\n\tpublic _iInvalidateRenderOwners()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateRenderOwner();\n\t}\n\n\n\tpublic invalidateElements()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateElements();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number):boolean\n\t{\n\t\t//TODO: handle lines as well\n\t\tvar len:number = this._graphics.length;\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tif (ElementsUtils.hitTestTriangleElements(x, y, 0, this.getBoxBounds(), <TriangleElements> this._graphics[i].elements))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttraverser.applyRenderable(this._graphics[i]);\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis._iInvalidateRenderOwners();\n\t}\n\n\tprivate _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\n\t\t\treturn;\n\n\t\tthis._invalidateBounds();\n\t}\n}\n\nexport = Graphics;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IRenderableOwner \t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport IPickingCollider = require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO = require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Mesh object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Mesh\n *\n * @class away.base.Graphic\n */\nclass Graphic extends AssetBase implements IRenderableOwner\n{\n\tpublic static _available:Array<Graphic> = new Array<Graphic>();\n\n\tpublic static assetType:string = \"[asset Graphic]\";\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _uvTransform:Matrix;\n\tprivate _style:Style;\n\tprivate _material:MaterialBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic parent:Graphics;\n\n\t/**\n\t * The Elements object which provides the geometry data for this Graphic.\n\t */\n\tpublic elements:ElementsBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Graphic.assetType;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parent.animator;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this.parent.sourceEntity.pickingCollider;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\treturn this.parent.sourceEntity._iPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this.parent.sourceEntity._iIsMouseEnabled();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\treturn this.parent.sourceEntity._iAssignedMasks();\n\t}\n\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The material used to render the current TriangleGraphic. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parent.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parent.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform || this.parent.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\n\t/**\n\t * Creates a new Graphic object\n\t */\n\tconstructor(index:number, parent:Graphics, elements:ElementsBase, material:MaterialBase = null, style:Style = null, uvTransform:Matrix = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._iIndex = index;\n\t\tthis.parent = parent;\n\t\tthis.elements = elements;\n\t\tthis.material = material;\n\t\tthis.style = style;\n\t\tthis.uvTransform = uvTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.parent.removeGraphic(this);\n\t\tthis.parent = null;\n\n\t\tGraphic._available.push(this);\n\t}\n\n\tpublic invalidateElements()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _iGetExplicitStyle():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic _iGetExplicitUVTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number):boolean\n\t{\n\t\treturn this.elements._iTestCollision(this.pickingCollider, this.material, this._iPickingCollisionVO, shortestCollisionDistance)\n\t}\n\n}\n\nexport = Graphic;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineElements\n */\nclass LineElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset LineElements]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineElements.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineElements.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineElements\n\t{\n\t\tvar clone:LineElements = new LineElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this.indices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineElements;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleElements\n */\nclass TriangleElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset TriangleElements]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:AttributesView;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:AttributesView;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = - 1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleElements.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\tif (!this._positions)\n\t\t\tthis.setPositions(new Float3Attributes(this._concatenatedBuffer));\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():AttributesView\n\t{\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._positions)\n\t\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer); //positions cannot be null\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._normals = ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._tangents = ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setUVs(attributesView:AttributesView, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._uvs)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = values;\n\t\t} else if (values) {\n\t\t\tif (!this._uvs)\n\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._uvs.set(values, offset);\n\t\t} else if (this._uvs) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._positions) {\n\t\t\tthis._positions.dispose();\n\t\t\tthis._positions = null;\n\t\t}\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\t}\n\n\tpublic copyTo(elements:TriangleElements)\n\t{\n\t\tsuper.copyTo(elements);\n\n\t\t//temp disable auto derives\n\t\telements.autoDeriveNormals = false;\n\t\telements.autoDeriveTangents = false;\n\n\t\telements.setPositions(this.positions.clone());\n\n\t\tif (this.normals)\n\t\t\telements.setNormals(this.normals.clone());\n\n\t\tif (this.tangents)\n\t\t\telements.setTangents(this.tangents.clone());\n\n\t\tif (this.uvs)\n\t\t\telements.setUVs(this.uvs.clone());\n\n\t\telements.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\telements.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\telements.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\telements.autoDeriveNormals = this._autoDeriveNormals;\n\t\telements.autoDeriveTangents = this._autoDeriveTangents;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleElements\n\t{\n\t\tvar clone:TriangleElements = new TriangleElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tthis.copyTo(clone);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tif (this.uvs) // only scale if uvs exist\n\t\t\tElementsUtils.scaleUVs(scaleU, scaleV, this.uvs, this._numVertices);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tElementsUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleElements;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Graphic) && (<Graphic> renderableOwner).elements.isAsset(LineElements)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial(0xFFFFFF);\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D()\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// FrameScript debugging:\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\n\n\n\tpublic static frameScriptDebug:Object = undefined;\n\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.elementsIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// ElementsIndex.\n\t\t\tevent.elementsIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.elementsIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner> = new Array<IRenderableOwner>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\tprivate _curves:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether material should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use an atlas. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateRenderOwners()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateRenderOwner();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number)\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidatePasses();\n\n\t\t//invalidate renderables for number of images getter (in case it has changed)\n\t\tthis.invalidateRenderOwners();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity)\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase extends AssetBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass DisplayObjectNode extends AbstractionBase implements INode\n{\n\tpublic numEntities:number = 0;\n\n\tpublic isSceneGraphNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\n\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\n\t\n\tpublic _displayObject:DisplayObject;\n\tprivate _debugEntity:IEntity;\n\tprivate _boundsDirty:boolean = true;\n\tprivate _bounds:BoundingVolumeBase;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic parent:SceneGraphNode;\n\n\tpublic isContainerNode:boolean = false;\n\n\tpublic boundsType:string;\n\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._boundsDirty)\n\t\t\tthis._updateBounds();\n\n\t\treturn this._bounds;\n\t}\n\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\n\t{\n\t\tsuper(displayObject, pool);\n\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\n\n\t\tthis._displayObject = displayObject;\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\n\t\tthis.boundsType = this._displayObject.boundsType;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this._displayObject.castsShadows;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\t\tthis._displayObject = null;\n\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tthis._bounds = null;\n\t\tthis._debugEntity = null;\n\t}\n\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tif (this.boundsType != this._displayObject.boundsType) {\n\t\t\tthis.boundsType = this._displayObject.boundsType;\n\t\t\tthis._boundsDirty = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// do nothing here\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\t// do nothing here\n\t}\n\n\tprivate _updateBounds()\n\t{\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tif (this.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\n\t\telse if (this.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\n\t\telse if (this.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis._boundsDirty = false;\n\t}\n}\n\nexport = DisplayObjectNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends DisplayObjectNode\n{\n\tpublic numEntities:number = 1;\n\n\tprivate _partition:PartitionBase;\n\n\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper(displayObject, partition);\n\n\t\tthis._partition = partition;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._partition = null;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._displayObject._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._displayObject.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\tthis._displayObject._acceptTraverser(traverser);\n\n\t\t\tif (this._displayObject.debugVisible && traverser.isEntityCollector)\n\t\t\t\tthis.bounds.boundsPrimitive._acceptTraverser(traverser);\n\t\t}\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\tthis.bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements IContainerNode\n{\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:IContainerNode;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n}\n\nexport = NodeBase;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/partition/IEntityNodeClass\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _rootNode:IContainerNode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:DisplayObjectNode;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(displayObject:DisplayObject)\n\t{\n\t\tthis._abstractionPool[displayObject.id] = null;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:DisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode._displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:IContainerNode;\n\t\tvar t:DisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n\t}\n}\n\nexport = PartitionBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends DisplayObjectNode implements IContainerNode\n{\n\tpublic isSceneGraphNode:boolean = true;\n\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _childDepths:Array<number> = new Array<number>();\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _numChildMasks:number = 0;\n\tprivate _pNumChildNodes:number = 0;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic _pEntityNode:EntityNode;\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (this._pEntityNode)\n\t\t\tthis._pEntityNode.acceptTraverser(traverser);\n\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numChildMasks; i++)\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\n\n\t\tfor (i = 0; i < this._pNumChildNodes; i++)\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:DisplayObjectNode)\n\t{\n\t\tnode.parent = this;\n\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = <EntityNode> node;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.push(node);\n\t\t\tthis._numChildMasks = this._childMasks.length;\n\t\t} else {\n\t\t\tvar depth:number = node._displayObject._depthID;\n\t\t\tvar len:number = this._childDepths.length;\n\t\t\tvar index:number = len;\n\n\t\t\twhile (index--)\n\t\t\t\tif (this._childDepths[index] < depth)\n\t\t\t\t\tbreak;\n\n\t\t\tindex++;\n\n\t\t\tif (index < len) {\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\n\t\t\t} else {\n\t\t\t\tthis._pChildNodes.push(node);\n\t\t\t\tthis._childDepths.push(depth);\n\t\t\t}\n\t\t\tthis._pNumChildNodes = this._childDepths.length;\n\t\t}\n\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:DisplayObjectNode)\n\t{\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = null;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\n\t\t\tthis._numChildMasks = this._childMasks.length;\n\t\t} else {\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\n\n\t\t\tthis._pChildNodes.splice(index, 1);\n\t\t\tthis._childDepths.splice(index, 1);\n\n\t\t\tthis._pNumChildNodes = this._childDepths.length;\n\t\t}\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\n\t}\n}\nexport = SceneGraphNode;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tprivate _sceneGraphNodePool:SceneGraphNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool();\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\tif (node._displayObject.partition == this || node._displayObject._iIsRoot) {\n\t\t\tthis._rootNode = <SceneGraphNode> node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\n\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;\n\n\n/**\n * @class away.pool.SceneGraphNodePool\n */\nclass SceneGraphNodePool implements IAbstractionPool\n{\n\tprivate _abstractionPool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdelete this._abstractionPool[displayObjectContainer.id];\n\t}\n}",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applySkybox(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport LineElements\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport AttributesView = require(\"awayjs-core/lib/attributes/AttributesView\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleElements:TriangleElements, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:ArrayBufferView = triangleElements.positions.get(triangleElements.numVertices);\n\t\tvar posDim:number = triangleElements.positions.dimensions;\n\n\t\tvar indices:Uint16Array;\n\t\tvar count:number;\n\t\tif (triangleElements.indices) {\n\t\t\tindices = triangleElements.indices.get(triangleElements.numElements);\n\t\t\tcount = indices.length;\n\t\t} else {\n\t\t\tcount = triangleElements.numVertices;\n\t\t}\n\n\t\tfor (var index:number = 0; index < count; index+=3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\tif (indices) {\n\t\t\t\ti0 = indices[index]*posDim;\n\t\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\t\ti2 = indices[index + 2]*posDim;\n\t\t\t} else {\n\t\t\t\ti0 = index*posDim;\n\t\t\t\ti1 = (index + 1)*posDim;\n\t\t\t\ti2 = (index + 2)*posDim;\n\t\t\t}\n\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp1x = positions[i1];\n\t\t\tp2x = positions[i2];\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\ts0y = p1y - p0y;\n\t\t\ts1y = p2y - p0y;\n\n\t\t\tif (posDim == 3) {\n\t\t\t\tp0z = positions[i0 + 2];\n\t\t\t\tp1z = positions[i1 + 2];\n\t\t\t\tp2z = positions[i2 + 2];\n\t\t\t\ts0z = p1z - p0z;\n\t\t\t\ts1z = p2z - p0z;\n\n\t\t\t\t// evaluate sides and triangle normal\n\t\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\t\tnx *= nl;\n\t\t\t\tny *= nl;\n\t\t\t\tnz *= nl;\n\t\t\t} else { //2d hittest\n\t\t\t\tnx = 0;\n\t\t\t\tny = 0;\n\t\t\t\tnz = 1;\n\t\t\t}\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tif (triangleElements.uvs) { //uv calculations\n\t\t\t\t\t\tvar uvs:ArrayBufferView = triangleElements.uvs.get(triangleElements.numVertices);\n\t\t\t\t\t\tvar uvDim:number = triangleElements.uvs.dimensions;\n\n\t\t\t\t\t\tvar uIndex:number = indices[index]*uvDim;\n\t\t\t\t\t\tvar uv0:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 1]*uvDim;\n\t\t\t\t\t\tvar uv1:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 2]*uvDim;\n\t\t\t\t\t\tvar uv2:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tpickingCollisionVO.uv = new Point(u*uv0.x + v*uv1.x + w*uv2.x, u*uv0.y + v*uv1.y + w*uv2.y);\n\t\t\t\t\t}\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.elementsIndex = this.pGetMeshGraphicIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\t//\n\t///**\n\t// * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n\t// *\n\t// * @param triangleElements\n\t// * @param material\n\t// * @param pickingCollisionVO\n\t// * @param shortestCollisionDistance\n\t// * @returns {boolean}\n\t// */\n\t//public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t//{\n\t//\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t//\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t//\n\t//\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t//\t//this will only work while all points lie on the x/y plane\n\t//\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\t//\n\t//\tvar result:Vector3D = new Vector3D();\n\t//\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t//\tresult.x = rayPosition.x - ( plane.x*distance);\n\t//\tresult.y = rayPosition.y - ( plane.y*distance);\n\t//\tresult.z = rayPosition.z - ( plane.z*distance);\n\t//\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t//\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t//\trayDirection.scaleBy(t);\n\t//\tvar p:Vector3D = rayPosition.add(rayDirection);\n\t//\n\t//\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n\t//\tvar collisionCurveIndex:number = -1;\n\t//\tvar bothSides:boolean = material.bothSides;\n\t//\n\t//\n\t//\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n\t//\tvar posDim:number = curveElements.positions.dimensions;\n\t//\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n\t//\tvar curveDim:number = curveElements.curves.dimensions;\n\t//\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n\t//\tvar uvDim:number = curveElements.uvs.dimensions;\n\t//\tvar numIndices:number = indices.length;\n\t//\n\t//\n\t//\tfor(var index:number = 0; index < numIndices; index+=3)\n\t//\t{\n\t//\t\tvar id0:number = indices[index];\n\t//\t\tvar id1:number = indices[index + 1] * posDim;\n\t//\t\tvar id2:number = indices[index + 2] * posDim;\n\t//\n\t//\t\tvar ax:number = positions[id0 * posDim];\n\t//\t\tvar ay:number = positions[id0 * posDim + 1];\n\t//\t\tvar bx:number = positions[id1];\n\t//\t\tvar by:number = positions[id1 + 1];\n\t//\t\tvar cx:number = positions[id2];\n\t//\t\tvar cy:number = positions[id2 + 1];\n\t//\n\t//\t\tvar curvex:number = curves[id0 * curveDim];\n\t//\t\tvar az:number = positions[id0 * posDim + 2];\n\t//\n\t//\t\t//console.log(ax, ay, bx, by, cx, cy);\n\t//\n\t//\t\t//from a to p\n\t//\t\tvar dx:number = ax - p.x;\n\t//\t\tvar dy:number = ay - p.y;\n\t//\n\t//\t\t//edge normal (a-b)\n\t//\t\tvar nx:number = by - ay;\n\t//\t\tvar ny:number = -(bx - ax);\n\t//\n\t//\t\t//console.log(ax,ay,bx,by,cx,cy);\n\t//\n\t//\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot a\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = bx - p.x;\n\t//\t\tdy = by - p.y;\n\t//\t\tnx = cy - by;\n\t//\t\tny = -(cx - bx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot b\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = cx - p.x;\n\t//\t\tdy = cy - p.y;\n\t//\t\tnx = ay - cy;\n\t//\t\tny = -(ax - cx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot c\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\t//check if not solid\n\t//\t\tif (curvex != 2) {\n\t//\n\t//\t\t\tvar v0x:number = bx - ax;\n\t//\t\t\tvar v0y:number = by - ay;\n\t//\t\t\tvar v1x:number = cx - ax;\n\t//\t\t\tvar v1y:number = cy - ay;\n\t//\t\t\tvar v2x:number = p.x - ax;\n\t//\t\t\tvar v2y:number = p.y - ay;\n\t//\n\t//\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t//\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t//\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t//\t\t\tvar u:number = 1 - v - w;\n\t//\n\t//\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t//\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\t//\n\t//\t\t\tvar d:number = uu * uu - vv;\n\t//\n\t//\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t//\t\t\t\tcontinue;\n\t//\t\t}\n\t//\t\t//TODO optimize away this pointless check as the distance is always the same\n\t//\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t//\t\tif (distance < shortestCollisionDistance) {\n\t//\t\t\tshortestCollisionDistance = distance;\n\t//\t\t\tcollisionCurveIndex = index/3;\n\t//\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t//\t\t\tpickingCollisionVO.localPosition = p;\n\t//\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t//\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t//\t\t\tpickingCollisionVO.index = index;\n\t//\t\t\t//\t\t\t\t\t\tpickingCollisionVO.elementsIndex = this.pGetMeshGraphicIndex(renderable);\n\t//\n\t//\t\t\t// if not looking for best hit, first found will do...\n\t//\t\t\tif (!this._findClosestCollision)\n\t//\t\t\t\treturn true;\n\t//\t\t}\n\t//\t}\n\t//\n\t//\tif (collisionCurveIndex >= 0)\n\t//\t\treturn true;\n\t//\n\t//\treturn false;\n\t//}\n\n\t/**\n\t * Tests a <code>LineElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineElements:LineElements, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n//\t\tpublic elementsIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.displayObject = null;\n\t\tthis.renderableOwner = null;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RenderableListItem\t\t\t= require(\"awayjs-display/lib/pool/RenderableListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredRenderables = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _renderables:Array<IRenderableOwner>;\n\tprivate _numRenderables:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._renderables = new Array<IRenderableOwner>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numRenderables = 0;\n\t\tvar node:RenderableListItem = this._raycastCollector.renderableHead;\n\t\tvar renderable:IRenderableOwner;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(renderable = node.renderable))\n\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numRenderables)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numRenderables = 0;\n//\n//\t\t\tvar renderable:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\trenderable = entities[c];\n//\n//\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(renderables)\n\t{\n\t\tthis._ignoredRenderables = renderables;\n\t}\n\n\tprivate isIgnored(renderable:IRenderableOwner):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !renderable._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredRenderables[i] == renderable)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(renderable1:IRenderableOwner, renderable2:IRenderableOwner):number\n\t{\n\t\treturn renderable1._iPickingCollisionVO.rayEntryDistance > renderable2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._renderables.length = this._numRenderables;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._renderables = this._renderables.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar renderable:IRenderableOwner;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numRenderables; ++i) {\n\t\t\trenderable = this._renderables[i];\n\t\t\tpickingCollisionVO = renderable._iPickingCollisionVO;\n\t\t\tif (renderable.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && renderable._iTestCollision(shortestCollisionDistance)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(renderable._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//discard entities\n\t\tthis._renderables.length = 0;\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import RenderableListItem\t\t\t\t= require(\"awayjs-display/lib/pool/RenderableListItem\");\n\n/**\n * @class away.pool.RenderableListItemPool\n */\nclass RenderableListItemPool\n{\n\tprivate _pool:Array<RenderableListItem> = new Array<RenderableListItem>();\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic getItem():RenderableListItem\n\t{\n\t\tvar item:RenderableListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new RenderableListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tvar item:RenderableListItem;\n\t\tvar len:number = this._pool.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\titem = this._pool[i];\n\t\t\titem.renderable = null;\n\t\t\titem.next = null;\n\t\t}\n\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = RenderableListItemPool;",
    "import IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass RenderableListItem\n{\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderableOwner;\n\n\t/**\n\t *\n\t */\n\tpublic next:RenderableListItem;\n}\n\nexport = RenderableListItem;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar numIndices:number = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGraphics() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper(material, elementsType);\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGraphics.numVertices) {\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar uvs:ArrayBufferView;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidatePrimitive()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _primitiveDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _elements:ElementsBase;\n\tprivate _elementsType:string;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get elementsType():string\n\t{\n\t\treturn this._elementsType;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\")\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._material = material;\n\t\tthis._elementsType = elementsType;\n\n\t\tif (this._elementsType == ElementsType.TRIANGLE) {\n\t\t\tvar triangleElements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\ttriangleElements.autoDeriveNormals = false;\n\t\t\ttriangleElements.autoDeriveTangents = false;\n\t\t\tthis._elements = triangleElements;\n\t\t} else if (this._elementsType == ElementsType.LINE) {\n\t\t\tthis._elements = new LineElements(new AttributesBuffer());\n\t\t}\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\t\n\t/**\n\t * Invalidates the primitive, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidatePrimitive()\n\t{\n\t\tthis._primitiveDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGraphics()\n\t{\n\t\tthis._pBuildGraphics(this._elements, this._elementsType);\n\n\t\tthis._primitiveDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._elements, this._elementsType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._primitiveDirty)\n\t\t\tthis.updateGraphics();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._material);\n\t\tmesh.graphics.addGraphic(this._elements);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:ArrayBufferView = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Mesh\n *\n * @class away.base.GraphicBase\n */\nclass Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * Elements for this char\n\t */\n\tpublic elements:TriangleElements;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(elements:TriangleElements)\n\t{\n\t\tthis.elements = elements;\n\n\t\tthis.char_width = 0;\n\n\t\tif (this.elements != null) {\n\t\t\tvar positions2:ArrayBufferView = this.elements.positions.get(this.elements.numVertices);\n\t\t\tvar count:number = this.elements.positions.count;\n\t\t\tvar dim:number = this.elements.positions.dimensions;\n\t\t\tfor (var v:number = 0; v < count*dim; v+=dim) {\n\t\t\t\tif(positions2[v] > this.char_width)\n\t\t\t\t\tthis.char_width = positions2[v];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Mesh\n *\n * @class away.base.GraphicBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getChar(name:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[name];\n\t}\n\t/**\n\t *\n\t */\n\tpublic setChar(name:string, elements:ElementsBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<TriangleElements> elements);\n\t\telements.name = name;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[name]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "/**\n\n\n */\nclass MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\n}\n\nexport = MappingMode;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport MappingMode\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n/**\n *\n */\nclass TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number)\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport = TextureBase;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport RenderableListItem\t\t\t\t= require(\"awayjs-display/lib/pool/RenderableListItem\");\nimport RenderableListItemPool\t\t\t= require(\"awayjs-display/lib/pool/RenderableListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IRenderableOwner = require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pRenderableHead:RenderableListItem;\n\tpublic _pRenderableListItemPool:RenderableListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pRenderableListItemPool = new RenderableListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get renderableHead():RenderableListItem\n\t{\n\t\treturn this._pRenderableHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pRenderableHead = null;\n\t\tthis._pRenderableListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyRenderable(renderable:IRenderableOwner)\n\t{\n\t\tvar item:RenderableListItem = this._pRenderableListItemPool.getItem();\n\t\titem.renderable = renderable;\n\n\t\titem.next = this._pRenderableHead;\n\t\tthis._pRenderableHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nclass ElementsUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tif (positionDim == 3) {\n\t\t\twhile (i < count) {\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx1 = positions[index];\n\t\t\t\ty1 = positions[index + 1];\n\t\t\t\tz1 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx2 = positions[index];\n\t\t\t\ty2 = positions[index + 1];\n\t\t\t\tz2 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx3 = positions[index];\n\t\t\t\ty3 = positions[index + 1];\n\t\t\t\tz3 = positions[index + 2];\n\t\t\t\tdx1 = x3 - x1;\n\t\t\t\tdy1 = y3 - y1;\n\t\t\t\tdz1 = z3 - z1;\n\t\t\t\tdx2 = x2 - x1;\n\t\t\t\tdy2 = y2 - y1;\n\t\t\t\tdz2 = z2 - z1;\n\t\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t\t// length of cross product = 2*triangle area\n\n\t\t\t\tfaceNormals[j++] = cx;\n\t\t\t\tfaceNormals[j++] = cy;\n\t\t\t\tfaceNormals[j++] = cz;\n\t\t\t\tfaceNormals[j++] = d;\n\t\t\t}\n\t\t} else if (positionDim == 2) {\n\t\t\twhile (i < count) {\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\ti += 3;\n\t\t\t}\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:AttributesView, uvAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = <Float32Array> uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar v0:number;\n\t\tvar v1:number;\n\t\tvar v2:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tv0 = index1*positionDim;\n\t\t\tv1 = index2*positionDim;\n\t\t\tv2 = index3*positionDim;\n\n\t\t\tx0 = positions[v0];\n\t\t\tdx1 = positions[v1] - x0;\n\t\t\tdx2 = positions[v2] - x0;\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\n\t\t\ty0 = positions[v0 + 1];\n\t\t\tdy1 = positions[v1 + 1] - y0;\n\t\t\tdy2 = positions[v2 + 1] - y0;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\n\t\t\tif (positionDim == 3) {\n\t\t\t\tz0 = positions[v0 + 2];\n\t\t\t\tdz1 = positions[v1 + 2] - z0;\n\t\t\t\tdz2 = positions[v2 + 2] - z0;\n\t\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\t} else {\n\t\t\t\tcz = 0;\n\t\t\t}\n\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:AttributesView, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\t//todo: make this compatible with 2-dimensional positions\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = ElementsUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestTriangleElements(x:number, y:number, z:number, boundingBox:Box, triangleElements:TriangleElements):boolean\n\t{\n\t\tvar positionAttributes:AttributesView = triangleElements.positions;\n\t\tvar curveAttributes:AttributesView = triangleElements.getCustomAtributes(\"curves\");\n\t\tvar count:number = triangleElements.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count);\n\t\tvar curves:ArrayBufferView = curveAttributes? curveAttributes.get(count) : null;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = triangleElements.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvex:number = curves[id0 * curveDim + 1];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = triangleElements.cells;\n\t\t\tvar divisions:number = cells.length? triangleElements.divisions : (triangleElements.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvex:number = curves[id0 * curveDim + 1];\n\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\n\t\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tif (curves) {\n\t\t\t\tvar curvex:number = curves[id0 * curveDim + 1];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getTriangleGraphicsBoxBounds(positionAttributes:AttributesView, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = 0, minY:number = 0, minZ:number = 0;\n\t\tvar maxX:number = 0, maxY:number = 0, maxZ:number = 0;\n\n\t\tvar len:number = count*posDim;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tif (i == 0) {\n\t\t\t\tmaxX = minX = positions[i];\n\t\t\t\tmaxY = minY = positions[i + 1];\n\t\t\t\tmaxZ = minZ = (posDim == 3)? positions[i + 2] : 0;\n\t\t\t} else {\n\t\t\t\tpos = positions[i];\n\t\t\t\tif (pos < minX)\n\t\t\t\t\tminX = pos;\n\t\t\t\telse if (pos > maxX)\n\t\t\t\t\tmaxX = pos;\n\n\t\t\t\tpos = positions[i + 1];\n\n\t\t\t\tif (pos < minY)\n\t\t\t\t\tminY = pos;\n\t\t\t\telse if (pos > maxY)\n\t\t\t\t\tmaxY = pos;\n\n\t\t\t\tif (posDim == 3) {\n\t\t\t\t\tpos = positions[i + 2];\n\n\t\t\t\t\tif (pos < minZ)\n\t\t\t\t\t\tminZ = pos;\n\t\t\t\t\telse if (pos > maxZ)\n\t\t\t\t\t\tmaxZ = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (output.x > minX)\n\t\t\toutput.x = minX;\n\n\t\tif (output.y > minY)\n\t\t\toutput.y = minY;\n\n\t\tif (output.z > minZ)\n\t\t\toutput.z = minZ;\n\n\t\tif (output.right < maxX)\n\t\t\toutput.right = maxX;\n\n\t\tif (output.bottom < maxY)\n\t\t\toutput.bottom = maxY;\n\n\t\tif (output.back < maxZ)\n\t\t\toutput.back = maxZ;\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGraphicsSphereBounds(positionAttributes:AttributesView, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = count*posDim;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = (posDim == 3)? positions[i + 2] - center.z : -center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = ElementsUtils;"
  ],
  "sourceRoot": ""
}
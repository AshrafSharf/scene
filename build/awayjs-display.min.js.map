{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "_pUpdateImplicitMaskId",
    "_iAssignedMaskId",
    "_explicitMasks",
    "maskId",
    "_pUpdateImplicitMasks",
    "_iAssignedMasks",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "masks",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "_pImplicitMasks",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iMasksConfig",
    "_iIsMouseEnabled",
    "_iSetScene",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "target_childs_dic",
    "target_sessionIDs_dic",
    "child",
    "getChildAt",
    "getChildDepth",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "target_child_sessionIDS",
    "key",
    "removeChildAt",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "end_index",
    "childID",
    "update_child_stream",
    "getChildAtSessionID",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "properties_stream_int",
    "mask",
    "mouseEnabled",
    "isAsset",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "exit_frame",
    "reset",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "textlines2",
    "t2",
    "line_width",
    "c_cnt",
    "font_chars",
    "font_chars_scale",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "err",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pImplicitDebugVisible",
    "enterNode",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "isEntityCollector",
    "applyEntity",
    "_pDebugEntity",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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ChC51E,MAAK41E,YAAY,aAAe,MAChC51E,MAAK41E,YAAY,kBAAoB,OACrC51E,MAAK41E,YAAY,kBAAoB,QACrC51E,MAAK41E,YAAY,mBAAqB,OACtC51E,MAAK41E,YAAY,aAAe,OAChC51E,MAAK41E,YAAY,iBAAmB,OACpC51E,MAAK41E,YAAY,gBAAkB,OACnC51E,MAAK41E,YAAY,QAAU,GAC3B51E,MAAK41E,YAAY,YAAc,GAC/B51E,MAAK41E,YAAY,cAAgB,GACjC51E,MAAK41E,YAAY,QAAU,GAC3B51E,MAAK41E,YAAY,cAAgB,OACjC51E,MAAK41E,YAAY,eAAiB,KAClC51E,MAAK41E,YAAY,gBAAkB,OACnC51E,MAAK41E,YAAY,WAAa,OAC9B51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,cAAgB,QACjC51E;KAAK41E,YAAY,SAAW,QAC5B51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,iBAAmB,QACpC51E,MAAK41E,YAAY,mBAAqB,OACtC51E,MAAK41E,YAAY,iBAAmB,OACpC51E,MAAK41E,YAAY,YAAc,KAC/B51E,MAAK41E,YAAY,QAAU,KAC3B51E,MAAK41E,YAAY,aAAe,OAChC51E,MAAK41E,YAAY,iBAAmB,KACpC51E,MAAK41E,YAAY,QAAU,KAC3B51E,MAAK41E,YAAY,QAAU,KAC3B51E,MAAK41E,YAAY,aAAe,OAChC51E,MAAK41E,YAAY,cAAgB,OACjC51E,MAAK41E,YAAY,oBAAsB,OACvC51E,MAAK41E,YAAY,gBAAkB,OACnC51E,MAAK41E,YAAY,kBAAoB,OACrC51E,MAAK41E,YAAY,YAAc,OAC/B51E,MAAK41E,YAAY,aAAe,KAChC51E,MAAK41E,YAAY,SAAW,KAC5B51E,MAAK41E,YAAY,eAAiB,OAClC51E,MAAK41E,YAAY,aAAe,OAChC51E,MAAK41E,YAAY,QAAU,KAC3B51E,MAAK41E,YAAY,cAAgB,OACjC51E,MAAK41E,YAAY,aAAe,OAChC51E,MAAK41E,YAAY,eAAiB,QAClC51E,MAAK41E,YAAY,eAAiB,QAClC51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,cAAgB,OACjC51E,MAAK41E,YAAY,eAAiB,KAClC51E,MAAK41E,YAAY,qBAAuB,KACxC51E,MAAK41E,YAAY,kBAAoB,OACrC51E,MAAK41E,YAAY,aAAe,OAChC51E,MAAK41E,YAAY,SAAW,OAC5B51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,iBAAmB,QACpC51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,QAAU,QAC3B51E,MAAK41E,YAAY,UAAY,QAC7B51E,MAAK41E,YAAY,SAAW,QAC5B51E,MAAK41E,YAAY,iBAAmB,QACpC51E,MAAK41E,YAAY,kBAAoB,QACrC51E,MAAK41E,YAAY,YAAc,QAC/B51E,MAAK41E,YAAY,SAAW,QAC5B51E,MAAK41E,YAAY,eAAiB,QAClC51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,OAAS,QAC1B51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,UAAY,QAC7B51E,MAAK41E,YAAY,eAAiB,OAClC51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,QAAU,QAC3B51E,MAAK41E,YAAY,cAAgB,QACjC51E,MAAK41E,YAAY,WAAa,OAC9B51E,MAAK41E,YAAY,UAAY,OAC7B51E,MAAK41E,YAAY,SAAW,QAC5B51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,cAAgB,QACjC51E,MAAK41E,YAAY,UAAY,QAC7B51E,MAAK41E,YAAY,cAAgB,QACjC51E,MAAK41E,YAAY,eAAiB,QAClC51E,MAAK41E,YAAY,SAAW,QAC5B51E,MAAK41E,YAAY,UAAY,QAC7B51E,MAAK41E,YAAY,cAAgB,QACjC51E,MAAK41E,YAAY,UAAY,QAC7B51E,MAAK41E,YAAY,aAAe,QAChC51E,MAAK41E,YAAY,WAAa,QAC9B51E,MAAK41E,YAAY,OAAS,QAC1B51E,MAAK41E,YAAY,YAAc,QAC/B51E,MAAK41E,YAAY,WAAa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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\t//grid stuff - to tidy\r\n\tprivate cells:Array<Array<number>>;\r\n\t//TODO - generate this dyanamically based on num tris\r\n\tprivate devisions:number = 32;\r\n\tprivate conversionX:number;\r\n\tprivate conversionY:number;\r\n\tprivate minx:number;\r\n\tprivate maxx:number;\r\n\tprivate miny:number;\r\n\tprivate maxy:number;\r\n\r\n\tprivate getCell(x:number, y:number):number\r\n\t{\r\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\r\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\r\n\r\n\t\t//out of bounds\r\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\r\n\r\n\t\treturn  index_x + index_y * this.devisions;\r\n\t}\r\n\tprivate buildGrid():void\r\n\t{\r\n\t\t//calculate bounds, ideally via bounding box already computed\r\n\t\t//if not just loop through and generate min/max\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tthis.minx = Number.MAX_VALUE;\r\n\t\tthis.maxx = -Number.MAX_VALUE;\r\n\t\tthis.miny = Number.MAX_VALUE;\r\n\t\tthis.maxy = -Number.MAX_VALUE;\r\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\r\n\t\t{\r\n\t\t\tvar x:number = positions[k];\r\n\t\t\tvar y:number = positions[k + 1];\r\n\r\n\t\t\tif(x < this.minx) this.minx = x;\r\n\t\t\tif(x > this.maxx) this.maxx = x;\r\n\t\t\tif(y < this.miny) this.miny = y;\r\n\t\t\tif(y > this.maxy) this.maxy = y;\r\n\t\t}\r\n\r\n\t\tvar width:number = this.maxx - this.minx;\r\n\t\tvar height:number = this.maxy - this.miny;\r\n\r\n\r\n\t\t//now we have bounds start creating grid cells and filling\r\n\t\tvar maxDevisions:number = 32;\r\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\r\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\r\n\t\tvar numCells:number = this.devisions * this.devisions;\r\n\t\tvar cellWidth:number = width/this.devisions;\r\n\t\tvar cellHeight:number = height/this.devisions;\r\n\r\n\t\tthis.conversionX = 1/cellWidth;\r\n\t\tthis.conversionY = 1/cellHeight;\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tthis.cells = new Array<Array<number>>(numCells);\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//subtractions to push into positive space\r\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\r\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\r\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\r\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\r\n\r\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\r\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\r\n\r\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\r\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\r\n\r\n\r\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar index:number = i + j * this.devisions;\r\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\r\n\t\t\t\t\tif(nodes == null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnodes = new Array<number>();\r\n\t\t\t\t\t\tthis.cells[index] = nodes;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif(this.numVertices > 150){\r\n\r\n\r\n\t\t\tif (this.cells == null) {\r\n\t\t\t\tthis.buildGrid();\r\n\t\t\t}\r\n\t\t\tvar cell:number = this.getCell(x, y);\r\n\t\t\tif (cell == -1) return false;\r\n\r\n\t\t\tvar nodes:Array<number> = this.cells[cell];\r\n\t\t\tif (nodes == null) return false;\r\n\r\n\r\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//brute force\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tprivate _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean;\r\n\tpublic _pIsEntity:boolean = false;\r\n\tpublic _pIsContainer:boolean = false;\r\n\tpublic _sessionID:number = -1;\r\n\r\n\tprivate _explicitPartition:PartitionBase;\r\n\tpublic _pImplicitPartition:PartitionBase;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tprivate _explicitMaskId:number = -1;\r\n\tprivate _explicitMasks:Array<DisplayObject>;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tpublic _pImplicitMaskId:number = -1;\r\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\r\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isContainer()\r\n\t{\r\n\t\treturn this._pIsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():PartitionBase\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:PartitionBase)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\r\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\tpublic get maskId():number\r\n\t{\r\n\t\treturn this._explicitMaskId;\r\n\t}\r\n\r\n\tpublic set maskId(value:number)\r\n\t{\r\n\t\tif (this._explicitMaskId == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMaskId = value;\r\n\r\n\t\tthis._pUpdateImplicitMaskId(this._pParent? this._pParent._iAssignedMaskId() : -1);\r\n\t}\r\n\r\n\tpublic get masks():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._explicitMasks;\r\n\t}\r\n\r\n\tpublic set masks(value:Array<DisplayObject>)\r\n\t{\r\n\t\tif (this._explicitMasks == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMasks = value;\r\n\r\n\t\tif (this._explicitMasks != null && this._explicitMasks.length) {\r\n\t\t\tvar len:number = this._explicitMasks.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tthis._explicitMasks[i].maskId = this._explicitMasks[i].id;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pUpdateImplicitMasks(this._pParent? this._pParent._iAssignedMasks() : null);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\r\n\t{\r\n\t\tif (!newInstance)\r\n\t\t\tnewInstance = new DisplayObject();\r\n\r\n\t\tnewInstance.pivot = this.pivot;\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D\r\n\t\t//newInstance.name = this.name;\r\n\r\n\t\tnewInstance.maskId = this._explicitMaskId;\r\n\t\tnewInstance.masks = this.masks? this.masks.concat() : null;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset_to_init_state():void\r\n\t{\r\n\t\tthis.visible=true;\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\t\tif(this.colorTransform)\r\n\t\t\tthis.colorTransform.clear();\r\n\t\t//this.name=\"\";\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():PartitionBase\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitMaskId(value._iAssignedMaskId());\r\n\t\t\tthis._pUpdateImplicitMasks(value._iAssignedMasks());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitMaskId(-1);\r\n\t\t\tthis._pUpdateImplicitMasks(null);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.queueDispatch(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:PartitionBase, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMaskId(value:number)\r\n\t{\r\n\t\tthis._pImplicitMaskId = (value != -1)? value : this._explicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\tthis._pImplicitMasks = (value != null)? (this._explicitMasks != null)? value.concat([this._explicitMasks]) : value.concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\r\n\r\n\t\tthis._pImplicitMaskIds.length = 0;\r\n\r\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\r\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar implicitChildren:Array<DisplayObject>;\r\n\t\t\tvar implicitChildIds:Array<number>;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\r\n\t\t\t\tnumChildren = implicitChildren.length;\r\n\t\t\t\timplicitChildIds = new Array<number>();\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\r\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].maskId);\r\n\r\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMaskId():number\r\n\t{\r\n\t\treturn this._pImplicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\r\n\t{\r\n\t\treturn this._pImplicitMasks;\r\n\t}\r\n\r\n\tpublic _iMasksConfig():Array<Array<number>>\r\n\t{\r\n\t\treturn this._pImplicitMaskIds;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices==null)||(this.frame_recipe==null)||(this.keyframe_durations==null))\r\n\t\t\treturn;\r\n\t\tthis.keyframe_firstframes=[];\r\n\t\tthis.keyframe_constructframes=[];\r\n\t\tvar frame_cnt=0;\r\n\t\tvar ic=0;\r\n\t\tvar ic2=0;\r\n\t\tvar keyframe_cnt=0;\r\n\t\tvar last_construct_frame=0;\r\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\r\n\t\t\t\tlast_construct_frame=keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt]=frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\r\n\r\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++]=ic;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\tif(scriptPass1)\r\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n\t\t\telse\r\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChilds() : Array<DisplayObject>\r\n\t{\r\n\t\treturn this._potentialPrototypes;\r\n\t}\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\r\n\t\tthis_clone.name=\"\";\r\n\t\treturn this_clone;\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value:number)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\r\n\t\tif (frameIndex == value) //we are already on exactly this frame.\r\n\t\t\treturn;\r\n\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\r\n\r\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, true, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\r\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\r\n\t\t\treturn;\r\n\r\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number = break_frame_idx;\r\n\r\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\r\n\r\n\t\tvar target_childs_dic:Object = {};\r\n\t\tvar target_sessionIDs_dic:Object = {};\r\n\t\tvar i:number = target_mc.numChildren;\r\n\t\tvar len:number;\r\n\t\tvar k:number;\r\n\t\tvar child:DisplayObject;\r\n\t\tvar depth:number;\r\n\r\n\t\tif (jump_forward && start_construct_idx == target_keyframe_idx){\r\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\r\n\r\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\r\n\t\t\t// before we do that, we need to clear the childlist\r\n/*\r\n\t\t\twhile(i--){\r\n\t\t\t\tchild = target_mc.getChildAt(i);\r\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\r\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t}\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, false);\r\n\t\t\treturn;\r\n\t\t\t*/\r\n\t\t}\r\n\r\n\t\twhile (i--) {\r\n\t\t\tchild = target_mc.getChildAt(i);\r\n\t\t\tif (jump_gap) { // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t} else if (jump_forward) { // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\t\t\tdepth = target_mc.getChildDepth(child)\r\n\t\t\t\ttarget_childs_dic[depth] = child;\r\n\t\t\t\ttarget_sessionIDs_dic[depth] = child._sessionID;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\r\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt = 0;\r\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\r\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\r\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\r\n\t\t\tvar start_index:number;\r\n\t\t\tvar idx:number;\r\n\r\n\t\t\tif ((frame_recipe & 2) == 2) {\r\n\t\t\t\t// remove childs\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tlen = this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\tdepth = this.remove_child_stream[start_index + i] - 16383;\r\n\t\t\t\t\tdelete target_childs_dic[depth];\r\n\t\t\t\t\tdelete target_sessionIDs_dic[depth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ((frame_recipe & 4) == 4) {\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tlen = this.command_length_stream[frame_command_idx++];\r\n\t\t\t\ti = len;\r\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t\t\t// this could be changed in exporter\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\tidx = start_index*2 + i*2;\r\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\r\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\r\n\t\t\t\t\ttarget_childs_dic[depth] = target;\r\n\t\t\t\t\ttarget_sessionIDs_dic[depth] = start_index + i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ((frame_recipe & 8) == 8)\r\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\r\n\t\t}\r\n\t\t//  step2: construct the final frame\r\n\r\n\t\tvar target_child_sessionIDS:Object = {};\r\n\t\tfor (var key in target_sessionIDs_dic)\r\n\t\t\tif (target_sessionIDs_dic[key] != null)\r\n\t\t\t\ttarget_child_sessionIDS[target_sessionIDs_dic[key]] = key;\r\n\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames get removed from the target_child_sessionIDS + target_childs_dic\r\n\t\ti = target_mc.numChildren;\r\n\t\twhile (i--) {\r\n\t\t\tchild=target_mc.getChildAt(i);\r\n\t\t\tif (target_child_sessionIDS[child._sessionID]) {\r\n\t\t\t\ttarget_childs_dic[target_child_sessionIDS[child._sessionID]] = null;\r\n\t\t\t\ttarget_child_sessionIDS[child._sessionID] = null;\r\n\t\t\t\ttarget_sessionIDs_dic[target_child_sessionIDS[child._sessionID]] = null;\r\n\t\t\t} else {\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var key in target_childs_dic) {\r\n\t\t\tchild = target_childs_dic[key];\r\n\t\t\tif(child) {\r\n\t\t\t\tchild._sessionID = target_sessionIDs_dic[key];\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number;\r\n\t\tvar len:number = update_indices.length;\r\n\t\tfor (k = 0; k < len; k++) {\r\n\t\t\tframe_command_idx = update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\r\n\t\t}\r\n\r\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean=false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif((queueScript)&&(this.keyframe_firstframes[new_keyFrameIndex]==frameIndex)){\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n\t\t}\r\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\r\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx=this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe=this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif((frame_recipe & 1)==1) {\r\n\t\t\t\tvar i:number = target_mc.numChildren;\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ((frame_recipe & 2)==2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 4)==4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif((frame_recipe & 8)==8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++)\r\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t// this could be changed in exporter\r\n\t\tvar i:number = len;\r\n\t\twhile(i--){\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\r\n\t\t\ttarget._sessionID = start_index + i;\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tvar props_start_idx:number;\r\n\t\tvar props_len:number;\r\n\t\tvar props_end_index:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor(var i:number = start_index; i < end_index; i++) {\r\n\t\t\tvar childID:number = this.update_child_stream[i];\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(childID);\r\n\t\t\tif (target != null) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\r\n\t\t\t\t\tdoit = false;\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\r\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\r\n\t\t\t\tprops_end_index = props_start_idx + props_len;\r\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t// mask the mc with a list of objects\r\n\t\t\t\t\t\t\t// a object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\r\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\r\n\t\t\t\t\t\t\tvar mask_length:number=this.properties_stream_int[value_start_index++];\r\n\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\tfor(var m:number = 0; m < mask_length; m++){\r\n\t\t\t\t\t\t\t\tmask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++]);\r\n\t\t\t\t\t\t\t\tif(mask){\r\n\t\t\t\t\t\t\t\t\tmasks[m] = mask;\r\n\t\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\r\n\t\t\t\t\t\t\t\t\tif(mask.isAsset(DisplayObjectContainer))\r\n\t\t\t\t\t\t\t\t\t\t(<DisplayObjectContainer> mask).mouseChildren = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttarget.masks = masks;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\r\n\t\t\t\t\t\t\tif (target.adapter && target.adapter.isVisibilityByScript()){}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _depths:Array<number> = new Array<number>();\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _nextHighestDepthDirty:boolean;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsContainer = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\t\t\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\t\tvar index = this.getDepthIndexInternal(depth);\r\n\r\n\t\tif (index != -1) {\r\n\t\t\tif (replace) {\r\n\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t} else {\r\n\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\tthis.addChildAtDepth(this._children[index], this._depths[index] + 1, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._nextHighestDepth < depth + 1)\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\r\n\t\tthis._children.push(child);\r\n\t\tthis._depths.push(depth);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._depths.length)? this._depths[index] : this.getNextHighestDepth(), false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\r\n\t{\r\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\r\n\r\n\t\tnewInstance.partition = this.partition;\r\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\r\n\t\tnewInstance.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\t\r\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\treturn this._depths[this.getChildIndex(child)];\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\tif (this._nextHighestDepthDirty)\r\n\t\t\tthis._updateNextHighestDepth();\r\n\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\t\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t\t\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._depths[index2];\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._depths[index1]);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMaskId(value:number)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMaskId(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMaskId(this._pImplicitMaskId);\r\n\t}\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMasks(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMasks(this._pImplicitMasks);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:PartitionBase, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\t\tvar depth:number = this._depths.splice(index, 1)[0];\r\n\r\n\t\t//update next highest depth\r\n\t\tif (this._nextHighestDepth == depth + 1)\r\n\t\t\tthis._nextHighestDepthDirty = true;\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\treturn this._depths.indexOf(depth);\r\n\t}\r\n\r\n\tprivate _updateNextHighestDepth()\r\n\t{\r\n\t\tthis._nextHighestDepthDirty = false;\r\n\r\n\t\tthis._nextHighestDepth = 0;\r\n\t\tvar len:number = this._depths.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._nextHighestDepth < this._depths[i])\r\n\t\t\t\tthis._nextHighestDepth = this._depths[i];\r\n\r\n\t\tthis._nextHighestDepth += 1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this.maskId !== -1 && !masksFlag)return;\r\n\t\tif(this.visible==false)return;\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\r\n\t\t\tif(childHit) {\r\n\t\t\t\tvar all_masks:Array<DisplayObject> = this.masks;\r\n\t\t\t\tif(all_masks){\r\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\r\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\tif(mask_child.parent){\r\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\r\n\t\t\t\t\t\t\tif(childHit) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tthis._containerNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\r\n\r\n\t\tthis._containerNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends DisplayObjectContainer\r\n{\r\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor(partition:PartitionBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.partition = partition || new BasicPartition();\r\n\r\n\t\tthis._iSetScene(this);\r\n\t\tthis._iIsRoot = true;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone.maskId = this.maskId;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        for (i = 0; i < len; ++i)\r\n            clone.addChild(this.getChildAt(i).clone());\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\t// if this is a mask, directly return false\r\n\t\tif(this.maskId !== -1 && !masksFlag)return false;\r\n\r\n\t\t// if this is invisible, all children should be invisible too.\r\n\t\t// todo: is the above statement correct for awayjs visible-property ?\r\n\t\tif(this.visible==false)return false;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\t\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\r\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\r\n\r\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\r\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this.masks;\r\n\t\t\t\t\t\tif (all_masks) {\r\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\r\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\r\n\t\t\t\t\t\t\tif (all_hir_masks){\r\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\r\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\r\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar hit:boolean = false;\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\r\n\t\tif(hit)\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean;\r\n    private _onMouseOver:(event:MouseEvent) => void;\r\n    private _onMouseOut:(event:MouseEvent) => void;\r\n    private _onMouseDown:(event:MouseEvent) => void;\r\n    private _onMouseUp:(event:MouseEvent) => void;\r\n\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrameIndex:number;// the current frame\r\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\r\n\r\n    private _isPlaying:boolean;// false if paused or stopped\r\n    private _loop:boolean = true;\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit : boolean;\r\n\r\n    private _potentialInstances:Array<DisplayObject>;\r\n    private _active_session_ids:Array<DisplayObject>;\r\n   // private _framescripts_to_execute:Array<Function>;\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor(timeline:Timeline = null)\r\n    {\r\n        super();\r\n        this._active_session_ids=[];\r\n        this._potentialInstances = [];\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        this._isInit=true;\r\n        this._isPlaying = true; // auto-play\r\n        this._isButton=false;\r\n\r\n        this._time = 0;\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n        this.inheritColorTransform = true;\r\n\r\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n        this._timeline = timeline || new Timeline();\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n    }\r\n    public get loop()\r\n    {\r\n        return this._loop;\r\n    }\r\n\r\n    public set loop(value:boolean)\r\n    {\r\n        this._loop = value;\r\n    }\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this._timeline.numFrames;\r\n    }\r\n\r\n    public jumpToLabel(label:string) : void\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    public get currentFrameIndex() : number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n    public get constructedKeyFrameIndex() : number\r\n    {\r\n        return this._constructedKeyFrameIndex;\r\n    }\r\n\r\n    public set constructedKeyFrameIndex(value : number)\r\n    {\r\n        this._constructedKeyFrameIndex = value;\r\n    }\r\n\r\n    public exit_frame():void\r\n    {\r\n\r\n        this._skipAdvance = false;\r\n        var i:number=this.numChildren;\r\n        while (i--){\r\n            var child:DisplayObject=this.getChildAt(i);\r\n            if(child.isAsset(MovieClip)){\r\n                (<MovieClip>child).exit_frame();\r\n            }\r\n        }\r\n    }\r\n    public reset():void\r\n    {\r\n        // time only is relevant for the root mc, as it is the only one that executes the update function\r\n        this._time = 0;\r\n\r\n        if(this.adapter)this.adapter.freeFromScript();\r\n\r\n        this._isPlaying = true;\r\n\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        var i:number=this.numChildren;\r\n        while (i--){\r\n            this.removeChildAt(i);\r\n        }\r\n\r\n        this._skipAdvance = true;\r\n        if (this._timeline.numFrames) {\r\n            this._currentFrameIndex = 0;\r\n            this._timeline.constructNextFrame(this, true, true);\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\r\n     */\r\n    public set_currentFrameIndex(value : number) {\r\n        this._skipAdvance = true;\r\n        this._currentFrameIndex = value;\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public set currentFrameIndex(value : number)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            value = Math.floor(value);\r\n            if (value < 0)\r\n                value = 0;\r\n            else if (value >= this._timeline.numFrames)\r\n                value = this._timeline.numFrames - 1;\r\n\r\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this._timeline.gotoFrame(this, value);\r\n            this._currentFrameIndex = value;\r\n        }\r\n    }\r\n\r\n    public addButtonListeners()\r\n    {\r\n        this._isButton = true;\r\n\r\n        this.stop();\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListeners()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public getChildAtSessionID(sessionID:number):DisplayObject\r\n    {\r\n        return this._active_session_ids[sessionID];\r\n    }\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n        child.reset_to_init_state();// this takes care of transform and visibility\r\n\t\tsuper.addChildAtDepth(child, depth, replace);\r\n        if(child.isAsset(MovieClip))(<MovieClip>child).reset();\r\n        this._active_session_ids[child._sessionID]=child;\r\n        return child;\r\n    }\r\n\r\n    public removeChild(child:DisplayObject):DisplayObject\r\n    {\r\n        super.removeChild(child);\r\n        if(child.adapter)child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        this._active_session_ids[child._sessionID]=null;\r\n        return child;\r\n    }\r\n\r\n    public removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject=super.removeChildAtDepth(depth);\r\n        if(child.adapter)child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        this._active_session_ids[child._sessionID]=null;\r\n        return child;\r\n    }\r\n    public removeChildAt(index:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject=super.removeChildAt(index);\r\n        if(child.adapter)child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        this._active_session_ids[child._sessionID]=null;\r\n        return child;\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update()\r\n    {\r\n        this.advanceFrame();\r\n        // after we advanced the scenegraph, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we want to execute the onEnter\r\n        this.dispatchEvent(this._enterFrame);\r\n        // after we executed the onEnter, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n\r\n        FrameScriptManager.execute_intervals();\r\n        FrameScriptManager.execute_queue();\r\n\r\n        this.exit_frame();\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id]) {\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n        }\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone(newInstance:MovieClip = null) : DisplayObject\r\n    {\r\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\r\n\r\n        newInstance._loop = this._loop;\r\n\r\n        return newInstance;\r\n    }\r\n\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.iSetParent(value);\r\n\t}\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            var i;\r\n            var oldFrameIndex = this._currentFrameIndex;\r\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\r\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop) {\r\n                advance = false;\r\n            }\r\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\r\n                this._currentFrameIndex = 0;\r\n                advance = false;\r\n            }\r\n            if (advance) {\r\n                ++this._currentFrameIndex;\r\n                if (this._currentFrameIndex == this._timeline.numFrames) {\r\n                    // looping - jump to first frame.\r\n                    this.currentFrameIndex=0;\r\n                }\r\n                else if (oldFrameIndex != this._currentFrameIndex){\r\n                    // not looping - construct next frame\r\n                    this._timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n            if (!skipChildren)\r\n                this.advanceChildren();\r\n\r\n        }\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n    private advanceChildren()\r\n    {\r\n        var len = this.numChildren;\r\n        for (var i = 0; i <  len; ++i) {\r\n            var child = this.getChildAt(i);\r\n            if (child instanceof MovieClip)\r\n                (<MovieClip>child).advanceFrame();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        for (var i = 0; i < len; i++) {\r\n            var child = this.getChildAt(i);\r\n\r\n            if (child instanceof MovieClip)\r\n                (<MovieClip>child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target.maskId;\r\n        console.log(str);\r\n    }\r\n\r\n\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone.maskId = this.maskId;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue=value.toString();\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic _textColor:number /*int*/;\r\n\r\n\tget textColor(){\r\n\t\treturn this._textColor;\r\n\t}\r\n\tset textColor(value:number){\r\n\t\tthis._textColor=value;\r\n\t\tif(this.colorTransform==null){\r\n\t\t\tthis.colorTransform=new ColorTransform();\r\n\t\t}\r\n\t\tthis.colorTransform.color=value;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar additional_margin_x:number=(this._textFormat.size * this._textFormat.font_table.offset_x);\r\n\t\tvar additional_margin_y:number=(this._textFormat.size * this._textFormat.font_table.offset_y);\r\n\t\tvar y_offset:number=additional_margin_y;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar textlines2:Array<string> = textlines[tl].split(\"\\n\");\r\n\t\t\tfor (var t2 = 0; t2 < textlines2.length; t2++) {\r\n\t\t\t\tvar line_width:number = 0;\r\n\t\t\t\tvar c_cnt:number = 0;\r\n\t\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\t\tvar font_chars_scale:Array<number> =[];\r\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\r\n\t\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\r\n\t\t\t\t\tif(this_char == null) {\r\n\t\t\t\t\t\tif(this._textFormat.fallback_font_table) {\r\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\r\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\r\n\t\t\t\t\tfont_chars[c_cnt++]=this_char;\r\n\t\t\t\t}\r\n\t\t\t\tvar x_offset:number=additional_margin_x;\r\n\t\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t\t}\r\n\t\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\t\tchar_scale = font_chars_scale[i];\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n\t\tclone.geometry = new Geometry();\r\n\t\t//clone.material = this._material;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone.maskId = this.maskId;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\r\n\t\t//var len:number = this._subMeshes.length;\r\n\t\t//for (var i:number = 0; i < len; ++i)\r\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tvar len = this.numChildren;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this.getChildAt(i).clone());\r\n\r\n\t\t//if (this._animator)\r\n\t\t//\tclone.animator = this._animator.clone();\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\t// queues pass1 of scripts.\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\r\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\r\n\r\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\r\n\r\n\tprivate static _intervalID:number=0;\r\n\tpublic static setInterval(func:any):number\r\n\t{\r\n\t\tthis._intervalID++;\r\n\t\tthis._active_intervals[this._intervalID]=func;\r\n\t\treturn this._intervalID\r\n\t}\r\n\r\n\tpublic static clearInterval(id:number):void\r\n\t{\r\n\t\tdelete this._active_intervals[id];\r\n\t}\r\n\r\n\tpublic static execute_intervals():void\r\n\t{\r\n\t\tfor(var key in this._active_intervals){\r\n\t\t\tthis._active_intervals[key].call();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs_pass2.push(mc);\r\n\t\tthis._queued_scripts_pass2.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\r\n\t\t\treturn;\r\n\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif(mc.scene!=null) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\t if (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\r\n\t\t\t// if nothing is queued, the function will return directly anyway\r\n\t\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass BasicPartition extends PartitionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rootNode = new NodeBase();\r\n\t}\r\n}\r\n\r\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n    public isContainerNode:boolean = true;\r\n\r\n    public _iUpdateQueueNext:IDisplayObjectNode;\r\n\r\n    private _pool:ContainerNodePool;\r\n    private _container : DisplayObjectContainer;\r\n    private _partition:PartitionBase;\r\n    private _childDepths:Array<number> = new Array<number>();\r\n    private _childMasks:Array<INode> = new Array<INode>();\r\n    private _numChildMasks:number = 0;\r\n\r\n    public _pEntityNode:IDisplayObjectNode;\r\n\r\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\r\n    {\r\n        super();\r\n\r\n        this._pool = pool;\r\n        this._container = container;\r\n        this._partition = partition;\r\n    }\r\n\r\n    public get displayObject():DisplayObject\r\n    {\r\n        return this._container;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param traverser\r\n     */\r\n    public acceptTraverser(traverser:CollectorBase)\r\n    {\r\n        if (this.numEntities == 0 && !this._pImplicitDebugVisible)\r\n            return;\r\n\r\n        if (traverser.enterNode(this)) {\r\n            if (this._pEntityNode)\r\n                this._pEntityNode.acceptTraverser(traverser);\r\n\r\n            var i:number;\r\n            for (i = 0; i < this._numChildMasks; i++)\r\n                this._childMasks[i].acceptTraverser(traverser);\r\n\r\n            for (i = 0; i < this._pNumChildNodes; i++)\r\n                this._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n            if (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n                traverser.applyEntity(this._pDebugEntity);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @returns {away.partition.NodeBase}\r\n     */\r\n    public findParentForNode(node:IDisplayObjectNode):INode\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer)\r\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\r\n\r\n        return this._pool.getItem(node.displayObject.parent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iAddNode(node:IDisplayObjectNode)\r\n    {\r\n        node.parent = this;\r\n\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = node;\r\n        } else if (node.displayObject.maskId != -1) {\r\n            this._childMasks.push(node);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var depth:number = this._container.getChildDepth(node.displayObject);\r\n            var len:number = this._childDepths.length;\r\n            var index:number = len;\r\n\r\n            while (index--)\r\n                if (this._childDepths[index] < depth)\r\n                    break;\r\n\r\n            index++;\r\n\r\n            if (index < len) {\r\n                this._pChildNodes.splice(index, 0, node);\r\n                this._childDepths.splice(index, 0, depth);\r\n            } else {\r\n                this._pChildNodes.push(node);\r\n                this._childDepths.push(depth);\r\n            }\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities += numEntities;\r\n        } while ((node = <EntityNode> node.parent) != null);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iRemoveNode(node:IDisplayObjectNode)\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = null;\r\n        } else if (node.displayObject.maskId != -1) {\r\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var index:number = this._pChildNodes.indexOf(node);\r\n\r\n            this._pChildNodes.splice(index, 1);\r\n            this._childDepths.splice(index, 1);\r\n\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(false);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities -= numEntities;\r\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\r\n    }\r\n}\r\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static assetClass:IAssetClass = DirectionalLight;\r\n\r\n\tprivate _directionalLight:DirectionalLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n\tpublic isContainerNode:boolean = false;\r\n\r\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:DisplayObject;\r\n\tprivate _partition:PartitionBase;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis.numEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get displayObject():DisplayObject\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.displayObject.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\t//this._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:LightProbe;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase implements INode\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\tpublic numEntities:number = 0;\r\n\r\n\tpublic parent:INode;\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:INode):INode\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\r\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:INode)\r\n\t{\r\n\t\tnode.parent = this;\r\n\t\tthis.numEntities += node.numEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities += numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:INode)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities -= numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass PartitionBase\r\n{\r\n\tpublic _entityNodePool:EntityNodePool;\r\n\tpublic _rootNode:INode;\r\n\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:IDisplayObjectNode;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._entityNodePool = new EntityNodePool(this);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode;\r\n\r\n\t\tif (node.parent) {\r\n\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\r\n\t\twhile (node) {\r\n\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\tnode.displayObject._iInternalUpdate();\r\n\t\t\tnode = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\t//reset head\r\n\t\tnode = this._updateQueue;\r\n\t\tvar targetNode:INode;\r\n\t\tvar t:IDisplayObjectNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node.parent)\r\n\t\t\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\r\n\t}\r\n}\r\n\r\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:PointLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass SceneGraphPartition extends PartitionBase\r\n{\r\n\tpublic _containerNodePool:ContainerNodePool;\r\n\r\n\tconstructor(rootContainer:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._containerNodePool = new ContainerNodePool(this);\r\n\r\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tsuper.traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iRegisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iUnregisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n}\r\n\r\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:Skybox;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _view:View;\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._view = view;\r\n\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\t//horrible hack for 2d masks\r\n\t\tif (masks != null) {\r\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\r\n\t\t\tvar numLayers:number = masks.length;\r\n\t\t\tvar children:Array<DisplayObject>;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar layerHit:boolean;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\tchildren = masks[i];\r\n\t\t\t\tnumChildren = children.length;\r\n\t\t\t\tlayerHit = false;\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\r\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\r\n\t\t\t\t\t\tlayerHit = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!layerHit)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n/**\r\n * @class away.pool.ContainerNodePool\r\n */\r\nclass ContainerNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _containerNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\r\n\r\n\t\tif (containerNode) {\r\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\r\n\r\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\r\n\t\t}\r\n\r\n\t\treturn containerNode;\r\n\t}\r\n}\r\n\r\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tdelete this._entityNodePool[displayObject.id];\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\r\n\t{\r\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\r\n\t{\r\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\r\n\t}\r\n\r\n\tprivate static main = EntityNodePool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\r\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\r\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\r\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\r\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\r\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\r\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\r\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\r\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\r\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get font_styles():Array<FontTable>\r\n\t{\r\n\t\treturn this._font_styles;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _offset_x:number;\r\n\tprivate _offset_y:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t\tthis._offset_x=0;\r\n\t\tthis._offset_y=0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tget offset_x():number {\r\n\t\treturn this._offset_x;\r\n\t}\r\n\r\n\tset offset_x(value:number){\r\n\t\tthis._offset_x=value;\r\n\t}\r\n\r\n\tget offset_y():number {\r\n\t\treturn this._offset_y;\r\n\t}\r\n\r\n\tset offset_y(value:number){\r\n\t\tthis._offset_y=value;\r\n\t}\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic fallback_font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CapsStyle.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/GradientType.ts",
    "awayjs-display/lib/base/GraphicsPathWinding.ts",
    "awayjs-display/lib/base/Graphics.ts",
    "awayjs-display/lib/base/InterpolationMethod.ts",
    "awayjs-display/lib/base/JointStyle.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineScaleMode.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/PixelSnapping.ts",
    "awayjs-display/lib/base/SpreadMethod.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleCulling.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/display/ContextMode.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/StageEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/CSSMaterialBase.ts",
    "awayjs-display/lib/materials/CurveMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/CSSBillboardRenderable.ts",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable.ts",
    "awayjs-display/lib/pool/CSSRenderableBase.ts",
    "awayjs-display/lib/pool/CSSSkyboxRenderable.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/render/CSSDefaultRenderer.ts",
    "awayjs-display/lib/render/CSSRendererBase.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/animators/IAnimationSet",
    "module",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetType",
    "NamedAssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "ANIMATION_NODE",
    "awayjs-core/lib/library/AssetType",
    "undefined",
    "awayjs-core/lib/library/NamedAssetBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Vector3D",
    "SubGeometryBase",
    "CurveSubMesh",
    "SubGeometryEvent",
    "CurveSubGeometry",
    "concatenatedArrays",
    "_positionsDirty",
    "_curvesDirty",
    "_faceNormalsDirty",
    "_vertexNormalsDirty",
    "_uvsDirty",
    "_secondaryUVsDirty",
    "_jointIndicesDirty",
    "_jointWeightsDirty",
    "_concatenateArrays",
    "_autoDeriveNormals",
    "_useFaceWeights",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_pSubMeshClass",
    "_useCondensedIndices",
    "set",
    "value",
    "_pUpdateStrideOffset",
    "_pOffset",
    "VERTEX_DATA",
    "POSITION_DATA",
    "stride",
    "_curves",
    "CURVE_DATA",
    "_uvs",
    "UV_DATA",
    "_pStride",
    "len",
    "_pNumVertices",
    "_pVertices",
    "Array",
    "_pStrideOffsetDirty",
    "notifyUVsUpdate",
    "updatePositions",
    "_positions",
    "updateCurves",
    "updateUVs",
    "updateFaceNormals",
    "_faceNormals",
    "_condensedIndexLookUp",
    "getBoundingPositions",
    "values",
    "index",
    "positions",
    "getStride",
    "getOffset",
    "pInvalidateBounds",
    "notifyPositionsUpdate",
    "offset",
    "curves",
    "_pNotifyVerticesUpdate",
    "notifyCurvesUpdate",
    "uvs",
    "uvIdx",
    "lenV",
    "_faceWeights",
    "updateIndices",
    "indices",
    "clone",
    "_pIndices",
    "concat",
    "scaleUV",
    "scaleU",
    "scaleV",
    "ratioU",
    "ratioV",
    "scale",
    "applyTransformation",
    "transform",
    "i1",
    "i2",
    "vector",
    "invTranspose",
    "vi0",
    "vStride",
    "x",
    "y",
    "z",
    "transformVector",
    "j",
    "k",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "cx",
    "cy",
    "cz",
    "Math",
    "sqrt",
    "w",
    "_positionsUpdated",
    "VERTICES_UPDATED",
    "dispatchEvent",
    "_curvesUpdated",
    "_uvsUpdated",
    "POSITION_FORMAT",
    "CURVE_FORMAT",
    "UV_FORMAT",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/CurveSubMesh",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/events/SubGeometryEvent",
    "SubMeshBase",
    "subGeometry",
    "parentMesh",
    "material",
    "_pParentMesh",
    "_subGeometry",
    "CURVE_SUB_MESH",
    "_iCollectRenderable",
    "rendererPool",
    "applyCurveSubMesh",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "_pInvalidateBounds",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "_iTestCollision",
    "shortestCollisionDistance",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "GEOMETRY",
    "getSubGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/base/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/base/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "matrix",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "clear",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "radius",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "data",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IGraphicsData",
    "awayjs-display/lib/base/IMaterialOwner",
    "awayjs-display/lib/base/IRenderObjectOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/base/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "LIGHT",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/base/LineSubGeometry",
    "LineSubMesh",
    "TriangleSubGeometry",
    "LineSubGeometry",
    "_boundingPositionDirty",
    "_thicknessDirty",
    "_colorsDirty",
    "START_POSITION_DATA",
    "END_POSITION_DATA",
    "THICKNESS_DATA",
    "COLOR_DATA",
    "_startPositions",
    "_endPositions",
    "updateThickness",
    "_thickness",
    "updateColors",
    "_startColors",
    "_endColors",
    "_numSegments",
    "_boundingPositions",
    "startPositions",
    "endPositions",
    "startValues",
    "endValues",
    "floor",
    "notifyThicknessUpdate",
    "notifyColorsUpdate",
    "_thicknessUpdated",
    "_colorUpdated",
    "COLOR_FORMAT",
    "THICKNESS_FORMAT",
    "awayjs-display/lib/base/LineSubMesh",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "LINE_SUB_MESH",
    "applyLineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/base/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "_pConcatenateArrays",
    "updateVertices",
    "_numTriangles",
    "dataType",
    "_numIndices",
    "notifyIndicesUpdate",
    "console",
    "log",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "TriangleSubMesh",
    "_faceTangentsDirty",
    "_vertexTangentsDirty",
    "_autoDeriveTangents",
    "notifyJointIndicesUpdate",
    "_vertexNormals",
    "NORMAL_DATA",
    "_vertexTangents",
    "TANGENT_DATA",
    "_secondaryUVs",
    "SECONDARY_UV_DATA",
    "_jointIndices",
    "JOINT_INDEX_DATA",
    "_jointsPerVertex",
    "_jointWeights",
    "JOINT_WEIGHT_DATA",
    "notifyNormalsUpdate",
    "notifyTangentsUpdate",
    "updateVertexNormals",
    "updateVertexTangents",
    "updateSecondaryUVs",
    "updateJointIndices",
    "updateJointWeights",
    "updateFaceTangents",
    "_faceTangents",
    "_condensedJointIndices",
    "_numCondensedJoints",
    "normals",
    "f1",
    "f2",
    "f3",
    "lenI",
    "weight",
    "vx",
    "vy",
    "vz",
    "tangents",
    "notifySecondaryUVsUpdate",
    "jointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "jointWeights",
    "notifyJointWeightsUpdate",
    "jointsPerVertex",
    "bakeNormals",
    "bakeTangents",
    "transpose",
    "ni0",
    "ti0",
    "nStride",
    "tStride",
    "deltaTransformVector",
    "index1",
    "index2",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "_normalsUpdated",
    "_tangentsUpdated",
    "_secondaryUVsUpdated",
    "_jointIndicesUpdated",
    "_jointWeightsUpdated",
    "NORMAL_FORMAT",
    "TANGENT_FORMAT",
    "SECONDARY_UV_FORMAT",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TRIANGLE_SUB_MESH",
    "applyTriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "hx",
    "hy",
    "hz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "CONTAINER",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "event",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "onLoadError",
    "_iAddParseErrorHandler",
    "onParseError",
    "loadData",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/display/ContextMode",
    "ContextMode",
    "WEBGL",
    "FLASH",
    "NATIVE",
    "awayjs-display/lib/display/IContext",
    "awayjs-display/lib/entities/Billboard",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_animator",
    "BILLBOARD",
    "SIZE_CHANGED",
    "testBillboardCollision",
    "_iCollectRenderables",
    "applyBillboard",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "CAMERA",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "LINE_SEGMENT",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "applyLineSegment",
    "awayjs-display/lib/entities/Mesh",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "MESH",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "subMeshClass",
    "testMeshCollision",
    "_iInvalidateRenderableGeometries",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renderObjects",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRenderObject",
    "invalidateRenderObject",
    "invalidatePasses",
    "_cubeMap",
    "format",
    "SKYBOX",
    "_iAddRenderObject",
    "renderObject",
    "_iRemoveRenderObject",
    "getRenderObject",
    "renderablePool",
    "getSkyboxRenderObject",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/base/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "appendText",
    "newText",
    "newFormat",
    "curveData",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "this_subGeom",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "indices2",
    "positions2",
    "curveData2",
    "curve_sub_geom",
    "subMeshes",
    "closeParagraph",
    "construct_geometry",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "id",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "_textFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderObjectOwner",
    "_renderObjectOwner",
    "RENDER_OBJECT_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/events/StageEvent",
    "StageEvent",
    "CONTEXT_CREATED",
    "CONTEXT_DISPOSED",
    "CONTEXT_RECREATED",
    "_dataType",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapData",
    "BitmapTexture",
    "BasicMaterial",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "assetType",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapData",
    "createCheckeredBitmapData",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/base/BitmapData",
    "awayjs-core/lib/textures/BitmapTexture",
    "awayjs-display/lib/materials/BasicMaterial",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Texture2DBase",
    "MaterialBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "getMaterialRenderObject",
    "awayjs-core/lib/textures/Texture2DBase",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/CSSMaterialBase",
    "ImageTexture",
    "CSSMaterialBase",
    "_iMaterialId",
    "_imageElement",
    "_imageStyle",
    "_pTexture",
    "htmlImageElement",
    "node",
    "getElementsByTagName",
    "sheet",
    "styleSheets",
    "insertRule",
    "cssRules",
    "backgroundImage",
    "src",
    "backgroundSize",
    "transformOrigin",
    "_pHeight",
    "_pWidth",
    "_pNotifySizeChanged",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-display/lib/materials/CurveMaterial",
    "CurveMaterial",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "ColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "MATERIAL",
    "_colorTransform",
    "alphaMultiplier",
    "CHANGE",
    "_pInvalidatePasses",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "LIGHT_PICKER",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "Rectangle",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "PartialImplementationError",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "RenderTexture",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-core/lib/textures/RenderTexture",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "pickingCollisionVO",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "RaycastCollector",
    "findClosestCollision",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_findClosestCollision",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "pickingCollider",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/CSSBillboardRenderable",
    "CSSRenderableBase",
    "CSSBillboardRenderable",
    "billboard",
    "div",
    "onmousedown",
    "img",
    "className",
    "awayjs-display/lib/pool/CSSRenderableBase",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable",
    "CSSLineSegmentRenderable",
    "lineSegment",
    "invalidateIndexData",
    "invalidateVertexData",
    "awayjs-display/lib/pool/CSSSkyboxRenderable",
    "CSSSkyboxRenderable",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderObject",
    "awayjs-display/lib/pool/IRenderablePool",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRendererPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_numVertices",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGeometry",
    "numVertices",
    "vertexNormals",
    "vertexTangents",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "PRIMITIVE_PREFAB",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "mesh",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "nx",
    "ny",
    "nz",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/render/CSSDefaultRenderer",
    "CoordinateSystem",
    "CSSRendererBase",
    "CSSEntityCollector",
    "CSSDefaultRenderer",
    "_contextMatrix",
    "_skyboxProjection",
    "_container",
    "overflow",
    "_context",
    "_contextStyle",
    "transformStyle",
    "_pBackBufferInvalid",
    "pUpdateBackBuffer",
    "pDraw",
    "coordinateSystem",
    "RIGHT_HANDED",
    "drawRenderables",
    "_renderableHead",
    "_activeMaterial",
    "clip",
    "drawSkybox",
    "renderSceneTransform",
    "awayjs-core/lib/projections/CoordinateSystem",
    "awayjs-display/lib/render/CSSRendererBase",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "renderToTexture",
    "forceSoftware",
    "profile",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_depthTextureInvalid",
    "_viewPort",
    "_scissorRect",
    "_localPos",
    "_globalPos",
    "window",
    "innerWidth",
    "innerHeight",
    "updateGlobalPos",
    "notifyViewportUpdate",
    "notifyScissorUpdate",
    "surfaceSelector",
    "pExecuteRender",
    "scissorRects",
    "cameras",
    "pCollectRenderables",
    "lineSubMesh",
    "triangleSubMesh",
    "_applyRenderable",
    "materialId",
    "cascaded",
    "_iEntryPoint",
    "zIndex",
    "zOffset",
    "dotProduct",
    "_pCameraForward",
    "_scissorUpdated",
    "_viewPortUpdated",
    "awayjs-display/lib/render/IRenderer",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderObjectId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "FONT",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "TEXTFORMAT",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "CollectorBase",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "bitmapData",
    "HTMLImageElement",
    "imageElement",
    "draw",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,8CAAA,SAAAjB,EAAAkB,EAAAJ,SCIMK,0CAA0C,SAASnB,EAAQkB,EAAOJ,SAIlEM,wDAAwD,SAASpB,EAAQkB,EAAOJ,GACtF,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCbtB,IAAOG,GAAS9B,EAAc,oCAE9B,IAAO+B,GAAc/B,EAAa,yCDkBlC,ICbMgC,GAAiB,SAAAC,GAASZ,EAA1BW,EAAiBC,EAYtB,SAZKD,KAcJC,EAAAlB,KAAAO,MAVDY,OAAAC,eAAWH,EAAAH,UAAA,cDkBJO,IClBP,WAEC,MAAOd,MAAKe,cDmBNC,WAAY,KACZC,aAAc,MCNdP,GAAAH,UAAAW,QAAP,YAOAN,QAAAC,eAAWH,EAAAH,UAAA,aDUJO,ICVP,WAEC,MAAON,GAAUW,gBDWXH,WAAY,KACZC,aAAc,MCVtB,OAAAP,IA/BgCD,EAiChCb,GAA2BJ,QAAlBkB,IDeNU,oCAAoCC,UAAUC,yCAAyCD,YAAYE,yCAAyC,SAAS7C,EAAQkB,EAAOJ,GAIvK,GExDMgC,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,mBAA4B,mBAK5BD,GAAAE,YAAqB,OACpC,OAAAF,KAEA5B,GAAuBJ,QAAdgC,OF2DHG,qCAAqC,SAASjD,EAAQkB,EAAOJ,GAQnE,GG5EMoC,GAAS,WAAf,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,KAAc,MAMdF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAhC,GAAmBJ,QAAVoC,OH8EHI,4CAA4C,SAAStD,EAAQkB,EAAOJ,GAC1E,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GI9GtB,IAAO4B,GAAQvD,EAAe,gCAE9B,IAAOwD,GAAexD,EAAa,0CACnC,IAAOyD,GAAYzD,EAAiB,uCACpC,IAAO0D,GAAgB1D,EAAa,6CJmHpC,II9GM2D,GAAgB,SAAA1B,GAASZ,EAAzBsC,EAAgB1B,EA6QrB,SA7QK0B,GA6QOC,GAEX3B,EAAAlB,KAAAO,KAAMsC,EApQCtC,MAAAuC,gBAA0B,IAC1BvC,MAAAwC,aAAuB,IACvBxC,MAAAyC,kBAA4B,IACzBzC,MAAA0C,oBAA8B,IACjC1C,MAAA2C,UAAoB,IACpB3C,MAAA4C,mBAA6B,IAC7B5C,MAAA6C,mBAA6B,IAC7B7C,MAAA8C,mBAA6B,IAY7B9C,MAAA+C,mBAA6B,IAC7B/C,MAAAgD,mBAA6B,KAC7BhD,MAAAiD,gBAA0B,KACvBjD,MAAAkD,eAAyB,KAK5BlD,MAAAmD,QAAiB,CACjBnD,MAAAoD,QAAiB,CA0OxBpD,MAAKqD,eAAiBlB,EA/NvBvB,OAAAC,eAAWwB,EAAA9B,UAAA,UJuFJO,IIvFP,WAEC,MAAOd,MAAKmD,SJwFNnC,WAAY,KACZC,aAAc,MInFrBL,QAAAC,eAAWwB,EAAA9B,UAAA,UJyFJO,IIzFP,WAEC,MAAOd,MAAKoD,SJ0FNpC,WAAY,KACZC,aAAc,MInFrBL,QAAAC,eAAWwB,EAAA9B,UAAA,uBJ2FJO,II3FP,WAEC,MAAOd,MAAKsD,sBJ4FNC,IIzFP,SAA+BC,GAE9B,GAAIxD,KAAKsD,sBAAwBE,EAChC,MAEDxD,MAAKsD,qBAAuBE,GJyFtBxC,WAAY,KACZC,aAAc,MIvFdoB,GAAA9B,UAAAkD,qBAAP,WAEC,GAAIzD,KAAK+C,mBAAoB,CAC5B/C,KAAK0D,SAASrB,EAAiBsB,aAAe,CAG9C3D,MAAK0D,SAASrB,EAAiBuB,eAAiB,CAChD,IAAIC,GAAgB,CAEpB,IAAI7D,KAAK8D,SAAW,KAAM,CACzB9D,KAAK0D,SAASrB,EAAiB0B,YAAcF,CAC7CA,IAAU,EAGX,GAAI7D,KAAKgE,MAAQ,KAAM,CACtBhE,KAAK0D,SAASrB,EAAiB4B,SAAWJ,CAC1CA,IAAU,EAKX7D,KAAKkE,SAAS7B,EAAiBsB,aAAeE,CAC9C7D,MAAKkE,SAAS7B,EAAiBuB,eAAiBC,CAChD7D,MAAKkE,SAAS7B,EAAiB0B,YAAcF,CAC7C7D,MAAKkE,SAAS7B,EAAiB4B,SAAWJ,CAE1C,IAAIM,GAAanE,KAAKoE,cAAcP,CAEpC,IAAI7D,KAAKqE,YAAc,KACtBrE,KAAKqE,WAAa,GAAIC,OAAcH,OAChC,IAAInE,KAAKqE,WAAW3E,QAAUyE,EAClCnE,KAAKqE,WAAW3E,OAASyE,MAEpB,CACNnE,KAAK0D,SAASrB,EAAiBuB,eAAiB,CAChD5D,MAAK0D,SAASrB,EAAiB0B,YAAc,CAC7C/D,MAAK0D,SAASrB,EAAiB4B,SAAW,CAG1CjE,MAAKkE,SAAS7B,EAAiBuB,eAAiB,CAChD5D,MAAKkE,SAAS7B,EAAiB0B,YAAc,CAC7C/D,MAAKkE,SAAS7B,EAAiB4B,SAAW,EAG3CjE,KAAKuE,oBAAsB,MAU5B3D,QAAAC,eAAWwB,EAAA9B,UAAA,iBJ2EJO,II3EP,WAEC,MAAOd,MAAKkD,gBJ4ENK,IIzEP,SAAyBC,GAExB,GAAIxD,KAAKkD,gBAAkBM,EAC1B,MAEDxD,MAAKkD,eAAiBM,CAEtB,IAAIA,EACHxD,KAAKwE,mBJwEAxD,WAAY,KACZC,aAAc,MIlErBL,QAAAC,eAAWwB,EAAA9B,UAAA,qBJyEJO,IIzEP,WAEC,MAAOd,MAAKgD,oBJ2ENO,IIvEP,SAA6BC,GAE5B,GAAIxD,KAAKgD,oBAAsBQ,EAC9B,MAEDxD,MAAKgD,mBAAqBQ,GJuEpBxC,WAAY,KACZC,aAAc,MI/DrBL,QAAAC,eAAWwB,EAAA9B,UAAA,YJqEJO,IIrEP,WAEC,GAAId,KAAKuC,gBACRvC,KAAKyE,gBAAgBzE,KAAK0E,WAErB,IAAI1E,KAAKwC,aACLxC,KAAK2E,aAAa3E,KAAK8D,QAEjC,IAAI9D,KAAK2C,UACR3C,KAAK4E,UAAU5E,KAAKgE,KAErB,OAAOhE,MAAKqE,YJmENrD,WAAY,KACZC,aAAc,MI9DrBL,QAAAC,eAAWwB,EAAA9B,UAAA,aJoEJO,IIpEP,WAEC,GAAId,KAAKuC,gBACRvC,KAAKyE,gBAAgBzE,KAAK0E,WAE3B,OAAO1E,MAAK0E,YJoEN1D,WAAY,KACZC,aAAc,MI/DrBL,QAAAC,eAAWwB,EAAA9B,UAAA,UJqEJO,IIrEP,WAEC,GAAId,KAAKwC,aACRxC,KAAK2E,aAAa3E,KAAK8D,QAExB,OAAO9D,MAAK8D,SJqEN9C,WAAY,KACZC,aAAc,MI9DrBL,QAAAC,eAAWwB,EAAA9B,UAAA,eJoEJO,IIpEP,WAEC,GAAId,KAAKyC,kBACRzC,KAAK6E,mBAEN,OAAO7E,MAAK8E,cJoEN9D,WAAY,KACZC,aAAc,MI9DrBL,QAAAC,eAAWwB,EAAA9B,UAAA,OJoEJO,IIpEP,WAEC,GAAId,KAAK2C,UACR3C,KAAK4E,UAAU5E,KAAKgE,KAErB,OAAOhE,MAAKgE,MJoENhD,WAAY,KACZC,aAAc,MI5DrBL,QAAAC,eAAWwB,EAAA9B,UAAA,kBJkEJO,IIlEP,WAEC,MAAOd,MAAKiD,iBJmENM,IIhEP,SAA0BC,GAEzB,GAAIxD,KAAKiD,iBAAmBO,EAC3B,MAEDxD,MAAKiD,gBAAkBO,CAGvBxD,MAAKyC,kBAAoB,MJ8DnBzB,WAAY,KACZC,aAAc,MI3DrBL,QAAAC,eAAWwB,EAAA9B,UAAA,wBJ8DJO,II9DP,WAIC,MAAOd,MAAK+E,uBJ6DN/D,WAAY,KACZC,aAAc,MIjDdoB,GAAA9B,UAAAyE,qBAAP,WAEC,GAAIhF,KAAKuC,gBACRvC,KAAKyE,gBAAgBzE,KAAK0E,WAE3B,OAAO1E,MAAK0E,WAMNrC,GAAA9B,UAAAkE,gBAAP,SAAuBQ,GAEtB,GAAI9F,EACJ,IAAI+F,EACJ,IAAIrB,EACJ,IAAIsB,EAEJnF,MAAK0E,WAAaO,CAElB,IAAIjF,KAAK0E,YAAc,KACtB1E,KAAK0E,WAAa,GAAIJ,MAEvBtE,MAAKoE,cAAgBpE,KAAK0E,WAAWhF,OAAO,CAE5C,IAAIM,KAAK+C,mBAAoB,CAC5B,GAAIoB,GAAanE,KAAKoE,cAAcpE,KAAKoF,UAAU/C,EAAiBsB,YAEpE,IAAI3D,KAAKqE,YAAc,KACtBrE,KAAKqE,WAAa,GAAIC,OAAcH,OAChC,IAAInE,KAAKqE,WAAW3E,QAAUyE,EAClCnE,KAAKqE,WAAW3E,OAASyE,CAE1BhF,GAAI,CACJ+F,GAAQlF,KAAKqF,UAAUhD,EAAiBuB,cACxCC,GAAS7D,KAAKoF,UAAU/C,EAAiBuB,cACzCuB,GAAYnF,KAAKqE,UAEjB,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACzByF,EAAUD,GAASD,EAAO9F,IAC1BgG,GAAUD,EAAQ,GAAKD,EAAO9F,IAC9BgG,GAAUD,EAAQ,GAAKD,EAAO9F,IAC9B+F,IAASrB,GAIX7D,KAAKsF,mBAELtF,MAAKuF,uBAELvF,MAAKuC,gBAAkB,MAMjBF,GAAA9B,UAAAoE,aAAP,SAAoBM,GAEnB,GAAI9F,EACJ,IAAI+F,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAI4B,EAEJ,IAAI,KAAM,CACT,IAAKzF,KAAK8D,SAAW,MAAQmB,GAAU,QAAUjF,KAAK8D,SAAW,MAAQmB,GAAU,MAAO,CACzF,GAAIjF,KAAK+C,mBACR/C,KAAK0F,6BAEL1F,MAAKuE,oBAAsB,KAG7BvE,KAAK8D,QAAUmB,CAEf,IAAIA,GAAU,MAAQjF,KAAK+C,mBAAoB,CAC9C5D,EAAI,CACJ+F,GAAQlF,KAAKqF,UAAUhD,EAAiB0B,WACxCF,GAAS7D,KAAKoF,UAAU/C,EAAiB0B,WAC7B0B,GAASzF,KAAKqE,UAE1B,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACV+F,EAAOP,GAASD,EAAO9F,IACvBsG,GAAOP,EAAQ,GAAKD,EAAO9F,IAC1C+F,IAASrB,IAIZ7D,KAAK2F,oBAEL3F,MAAKwC,aAAe,MAQdH,GAAA9B,UAAAqE,UAAP,SAAiBK,GAEhB,GAAI9F,EACJ,IAAI+F,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAI+B,EAEJ,KAAK5F,KAAKkD,eAAgB,CACzB,IAAKlD,KAAKgE,MAAQ,MAAQiB,GAAU,QAAUjF,KAAKgE,MAAQ,MAAQiB,GAAU,MAAO,CACnF,GAAIjF,KAAK+C,mBACR/C,KAAK0F,6BAEL1F,MAAKuE,oBAAsB,KAG7BvE,KAAKgE,KAAOiB,CAEZ,IAAIA,GAAU,MAAQjF,KAAK+C,mBAAoB,CAC9C5D,EAAI,CACJ+F,GAAQlF,KAAKqF,UAAUhD,EAAiB4B,QACxCJ,GAAS7D,KAAKoF,UAAU/C,EAAiB4B,QACzC2B,GAAM5F,KAAKqE,UAEX,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACzBkG,EAAIV,GAASD,EAAO9F,IACpByG,GAAIV,EAAQ,GAAKD,EAAO9F,IACxB+F,IAASrB,QAIL,CACN,GAAI7D,KAAKgE,MAAQ,KAAM,CACtBhE,KAAKgE,KAAO,GAAIM,OAActE,KAAK0E,WAAWhF,OAAO,EAAE,EAEvD,IAAIM,KAAK+C,mBACR/C,KAAK0F,6BAEL1F,MAAKuE,oBAAsB,KAG7BiB,EAASxF,KAAKqF,UAAUhD,EAAiB4B,QACzCJ,GAAS7D,KAAKoF,UAAU/C,EAAiB4B,QAGzC2B,GAAM5F,KAAK+C,mBAAoB/C,KAAKqE,WAAarE,KAAKgE,IAEtD7E,GAAI,CACJ+F,GAAQM,CACR,IAAIK,GAAe,CJoBV,IIjBLC,GAAcF,EAAIlG,MACtB,OAAOwF,EAAQY,EAAM,CACpB,GAAI9F,KAAK+C,mBAAoB,CAC5B/C,KAAKgE,KAAK7E,KAAOyG,EAAIV,GAASW,EAAM,EACpC7F,MAAKgE,KAAK7E,KAAOyG,EAAIV,EAAQ,GAAK,GAAOW,EAAQ,OAC3C,CACND,EAAIV,GAASW,EAAM,EACnBD,GAAIV,EAAQ,GAAK,GAAOW,EAAQ,GAGjC,KAAMA,GAAS,EACdA,EAAQ,CAETX,IAASrB,GAIX7D,KAAKwE,iBAELxE,MAAK2C,UAAY,MAUXN,GAAA9B,UAAAW,QAAP,WAECP,EAAAJ,UAAMW,QAAOzB,KAAAO,KAEbA,MAAK0E,WAAa,IAClB1E,MAAK8D,QAAU,IACf9D,MAAKgE,KAAO,IAEZhE,MAAK8E,aAAe,IACpB9E,MAAK+F,aAAe,KAQd1D,GAAA9B,UAAAyF,cAAP,SAAqBC,GAEpBtF,EAAAJ,UAAMyF,cAAavG,KAAAO,KAACiG,EAEpBjG,MAAKyC,kBAAoB,IAEzB,IAAIzC,KAAKgD,mBACRhD,KAAK0C,oBAAsB,KAQtBL,GAAA9B,UAAA2F,MAAP,WAEC,GAAIA,GAAyB,GAAI7D,GAAiBrC,KAAK+C,mBACvDmD,GAAMF,cAAchG,KAAKmG,UAAUC,SACnCF,GAAMzB,gBAAgBzE,KAAK0E,WAAW0B,SAEtC,IAAIpG,KAAK8D,QACRoC,EAAMvB,aAAa3E,KAAK8D,QAAQsC,cAEhCF,GAAMvB,aAAa,KAEpB,IAAI3E,KAAKgE,OAAShE,KAAKkD,eACtBgD,EAAMtB,UAAU5E,KAAKgE,KAAKoC,cAE1BF,GAAMtB,UAAU,KAEjB,OAAOsB,GAGD7D,GAAA9B,UAAA8F,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAIrB,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAI+B,EAEJA,GAAM5F,KAAKgE,IAEX,IAAIwC,GAAgBF,EAAOtG,KAAKmD,OAChC,IAAIsD,GAAgBF,EAAOvG,KAAKoD,OAEhCpD,MAAKmD,QAAUmD,CACftG,MAAKoD,QAAUmD,CAEf,IAAIpC,GAAayB,EAAIlG,MAErB8F,GAAS,CACT3B,GAAS,CAETqB,GAAQM,CAER,OAAON,EAAQf,EAAK,CACnByB,EAAIV,IAAUsB,CACdZ,GAAIV,EAAQ,IAAMuB,CAClBvB,IAASrB,EAGV7D,KAAKwE,kBAOCnC,GAAA9B,UAAAmG,MAAP,SAAaA,GAEZ,GAAIvH,EACJ,IAAI+F,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAIsB,EAEJA,GAAYnF,KAAK0E,UAEjB,IAAIP,GAAagB,EAAUzF,MAE3B8F,GAAS,CACT3B,GAAS,CAET1E,GAAI,CACJ+F,GAAQM,CACR,OAAOrG,EAAIgF,EAAK,CACfgB,EAAUD,IAAUwB,CACpBvB,GAAUD,EAAQ,IAAMwB,CACxBvB,GAAUD,EAAQ,IAAMwB,CAExBvH,IAAK,CACL+F,IAASrB,EAGV7D,KAAKuF,wBAGClD,GAAA9B,UAAAoG,oBAAP,SAA2BC,GAE1B,GAAIzB,EAEJ,IAAInF,KAAK+C,mBAAoB,CAC5BoC,EAAYnF,KAAKqE,eACX,CACNc,EAAYnF,KAAK0E,WAGlB,GAAIP,GAAanE,KAAK0E,WAAWhF,OAAO,CACxC,IAAIP,EACJ,IAAI0H,EACJ,IAAIC,EACJ,IAAIC,GAAkB,GAAI9E,EAE1B,IAAI+E,EAIJ,IAAIC,GAAajH,KAAKqF,UAAUhD,EAAiBuB,cACjD,IAAIsD,GAAiBlH,KAAKoF,UAAU/C,EAAiBuB,cAErD,KAAKzE,EAAI,EAAGA,EAAIgF,IAAOhF,EAAG,CACzB0H,EAAKI,EAAM,CACXH,GAAKG,EAAM,CAGXF,GAAOI,EAAIhC,EAAU8B,EACrBF,GAAOK,EAAIjC,EAAU0B,EACrBE,GAAOM,EAAIlC,EAAU2B,EACrBC,GAASH,EAAUU,gBAAgBP,EACnC5B,GAAU8B,GAAOF,EAAOI,CACxBhC,GAAU0B,GAAME,EAAOK,CACvBjC,GAAU2B,GAAMC,EAAOM,CACvBJ,IAAOC,EAIRlH,KAAKuF,wBAQElD,GAAA9B,UAAAsE,kBAAR,WAEC,GAAI1F,GAAW,CACf,IAAIoI,GAAW,CACf,IAAIC,GAAW,CACf,IAAItC,EACJ,IAAIM,EACJ,IAAI3B,EAEJ,IAAI4D,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIzI,EAEJ,IAAIkF,GAA0BnF,KAAK0E,UAEnC,IAAIP,GAAanE,KAAKmG,UAAUzG,MAEhC,IAAIM,KAAK8E,cAAgB,KACxB9E,KAAK8E,aAAe,GAAIR,OAAcH,EAEvC,IAAInE,KAAKiD,iBAAmBjD,KAAK+F,cAAgB,KAChD/F,KAAK+F,aAAe,GAAIzB,OAAcH,EAAI,EAE3C,OAAOhF,EAAIgF,EAAK,CACfe,EAAQlF,KAAKmG,UAAUhH,KAAK,CAC5BsI,GAAKtC,EAAUD,EACf0C,GAAKzC,EAAUD,EAAQ,EACvB6C,GAAK5C,EAAUD,EAAQ,EACvBA,GAAQlF,KAAKmG,UAAUhH,KAAK,CAC5BuI,GAAKvC,EAAUD,EACf2C,GAAK1C,EAAUD,EAAQ,EACvB8C,GAAK7C,EAAUD,EAAQ,EACvBA,GAAQlF,KAAKmG,UAAUhH,KAAK,CAC5BwI,GAAKxC,EAAUD,EACf4C,GAAK3C,EAAUD,EAAQ,EACvB+C,GAAK9C,EAAUD,EAAQ,EACvBgD,GAAMP,EAAKF,CACXU,GAAML,EAAKF,CACXQ,GAAMH,EAAKF,CACXM,GAAMX,EAAKD,CACXa,GAAMT,EAAKD,CACXW,GAAMP,EAAKD,CACXS,GAAKJ,EAAIE,EAAMH,EAAII,CACnBE,GAAKP,EAAIK,EAAMH,EAAIC,CACnBK,GAAKP,EAAIE,EAAMH,EAAII,CACnBrI,GAAI0I,KAAKC,KAAKJ,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAGjC,IAAI1I,KAAKiD,gBAAiB,CACzB,GAAI4F,GAAW5I,EAAE,GAEjB,IAAI4I,EAAI,EACPA,EAAI,CAEL7I,MAAK+F,aAAayB,KAAOqB,EAG1B5I,EAAI,EAAEA,CAEND,MAAK8E,aAAayC,KAAOiB,EAAGvI,CAC5BD,MAAK8E,aAAayC,KAAOkB,EAAGxI,CAC5BD,MAAK8E,aAAayC,KAAOmB,EAAGzI,EAG7BD,KAAKyC,kBAAoB,MAGnBJ,GAAA9B,UAAAmF,uBAAP,WAEC1F,KAAKuE,oBAAsB,IAE3BvE,MAAKuF,uBACLvF,MAAK2F,oBACL3F,MAAKwE,kBAGEnC,GAAA9B,UAAAgF,sBAAR,WAEC,GAAIvF,KAAKuC,gBACR,MAEDvC,MAAKuC,gBAAkB,IAEvB,KAAKvC,KAAK8I,kBACT9I,KAAK8I,kBAAoB,GAAI1G,GAAiBA,EAAiB2G,iBAAkB1G,EAAiBuB,cAEnG5D,MAAKgJ,cAAchJ,KAAK8I,mBAGjBzG,GAAA9B,UAAAoF,mBAAR,WAEC,GAAI3F,KAAKwC,aACR,MAEDxC,MAAKwC,aAAe,IAEpB,KAAKxC,KAAKiJ,eACTjJ,KAAKiJ,eAAiB,GAAI7G,GAAiBA,EAAiB2G,iBAAkB1G,EAAiB0B,WAEhG/D,MAAKgJ,cAAchJ,KAAKiJ,gBAKjB5G,GAAA9B,UAAAiE,gBAAR,WACO,GAAIxE,KAAK2C,UACL,MAEJ3C,MAAK2C,UAAY,IAEjB,KAAK3C,KAAKkJ,YACNlJ,KAAKkJ,YAAc,GAAI9G,GAAiBA,EAAiB2G,iBAAkB1G,EAAiB4B,QAEhGjE,MAAKgJ,cAAchJ,KAAKkJ,aA3tBjB7G,GAAAuB,cAAuB,WACpBvB,GAAA0B,WAAoB,QACvB1B,GAAA4B,QAAiB,KAGjB5B,GAAA8G,gBAAyB,QACzB9G,GAAA+G,aAAsB,QACtB/G,GAAAgH,UAAmB,QAstBlC,OAAAhH,IA/tB+BH,EAiuBLtC,GAAAJ,QAAjB6C,IJxDNiH,gCAAgCjI,UAAUkI,uCAAuC,uCAAuCC,0CAA0C,0CAA0CC,6CAA6C,+CAA+CF,wCAAwC,SAAS7K,EAAQkB,EAAOJ,GAC3W,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GKxrBtB,IAAOG,GAAS9B,EAAc,oCAE9B,IAAOgL,GAAWhL,EAAc,sCLmsBhC,IKnrBMyD,GAAY,SAAAxB,GAASZ,EAArBoC,EAAYxB,EA0BjB,SA1BKwB,GA0BOwH,EAA8BC,EAAiBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE1DlJ,EAAAlB,KAAAO,KAEAA,MAAK8J,aAAeF,CACpB5J,MAAK+J,aAAeJ,CACpB3J,MAAK6J,SAAWA,EAzBjBjJ,OAAAC,eAAWsB,EAAA5B,UAAA,aL+rBJO,IK/rBP,WAEC,MAAON,GAAUwJ,gBLgsBXhJ,WAAY,KACZC,aAAc,MK3rBrBL,QAAAC,eAAWsB,EAAA5B,UAAA,eLisBJO,IKjsBP,WAEC,MAAOd,MAAK+J,cLksBN/I,WAAY,KACZC,aAAc,MK9qBdkB,GAAA5B,UAAAW,QAAP,WAECP,EAAAJ,UAAMW,QAAOzB,KAAAO,MAGPmC,GAAA5B,UAAA0J,oBAAP,SAA2BC,GAE1BA,EAAaC,kBAAkBnK,MAEjC,OAAAmC,IA/C2BuH,EAiD3B9J,GAAsBJ,QAAb2C,ILmrBNf,oCAAoCC,UAAU+I,sCAAsC,wCAAwCC,yCAAyC,SAAS3L,EAAQkB,EAAOJ,GAChM,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM1vBtB,IAAOiK,GAAG5L,EAAiB,2BAC3B,IAAO6L,GAAM7L,EAAgB,8BAC7B,IAAO8L,GAAU9L,EAAe,kCAChC,IAAO+L,GAAQ/L,EAAgB,gCAC/B,IAAOgM,GAAahM,EAAc,qCAClC,IAAOiM,GAAKjM,EAAgB,6BAE5B,IAAOuD,GAAQvD,EAAgB,gCAC/B,IAAO+B,GAAc/B,EAAc,yCACnC,IAAOkM,GAAmBlM,EAAa,6CAKvC,IAAO8C,GAAa9C,EAAc,wCAElC,IAAOmM,GAAenM,EAAc,0CAEpC,IAAOoM,GAASpM,EAAe,oCAI/B,IAAOqM,GAAkBrM,EAAa,6CAGtC,IAAOsM,GAAkBtM,EAAa,+CACtC,IAAOuM,GAAUvM,EAAe,uCNk3BhC,IM9uBMwM,GAAa,SAAAvK,GAASZ,EAAtBmL,EAAavK,EAunClB,SAvnCKuK,KAynCJvK,EAAAlB,KAAAO,KAjnCOA,MAAAmL,kBAA4B,IAE5BnL,MAAAoL,qBAA+B,IAKhCpL,MAAAqL,iBAA4B,GAAIZ,EAChCzK,MAAAsL,sBAAgC,IAS/BtL,MAAAuL,UAAqB,GAAId,EACzBzK,MAAAwL,eAAyB,IAEzBxL,MAAAyL,uBAAkC,GAAIhB,EACtCzK,MAAA0L,4BAAsC,IACtC1L,MAAA2L,eAA0B,GAAI1J,EAC9BjC,MAAA4L,oBAA8B,IAC9B5L,MAAA6L,oBAA8B,IAC/B7L,MAAA8L,qBAA+B,IAC9B9L,MAAA+L,sBAAgC,IACjC/L,MAAAgM,uBAAiC,IAIhChM,MAAAiM,eAAyB,IACzBjM,MAAAkM,eAAyB,IACzBlM,MAAAmM,YAAsB,IAMtBnM,MAAAoM,WAAoB,CACpBpM,MAAAqM,WAAoB,CACpBrM,MAAAsM,WAAoB,CACpBtM,MAAAuM,QAAmB,GAAItK,EACvBjC,MAAAwM,OAAkB,GAAI/B,EAKtBzK,MAAAyM,SAAkB,CAMnBzM,MAAA0M,SAAkB,CAClB1M,MAAA2M,SAAkB,CAClB3M,MAAA4M,SAAkB,CACjB5M,MAAA6M,GAAY,CACZ7M,MAAA8M,GAAY,CACZ9M,MAAA+M,GAAY,CACZ/M,MAAAgN,OAAkB,GAAI/K,EACtBjC,MAAAiN,YAAuB,GAAIhL,EAC3BjC,MAAAkN,mBAA8B,GAAIzC,EAClCzK,MAAAmN,WAAqB,IACrBnN,MAAAoN,YAAsB,IACtBpN,MAAAqN,KAAgB,GAAIpL,EACpBjC,MAAAsN,KAAgB,GAAIrL,EACpBjC,MAAAuN,KAAgB,GAAItL,EAGrBjC,MAAAwN,kBAA4B,KAU5BxN,MAAAyN,cAAmC,GAAInJ,MACtCtE,MAAA0N,aAAiC,GAAIpJ,MAOtCtE,MAAA2N,cAAuBnM,EAAcC,kBAwHrCzB,MAAA4N,aAAuB,IAyVvB5N,MAAA6N,gBAAyBhD,EAAgBiD,OA6kB/C9N,MAAK+N,qBAAuB,GAAIzJ,OAAgB,EAEhDtE,MAAK+N,qBAAqB,GAAK/N,KAAKqN,IACpCrN,MAAK+N,qBAAqB,GAAK/N,KAAKsN,IACpCtN,MAAK+N,qBAAqB,GAAK/N,KAAKuN,IAGpCvN,MAAKgO,WAAa,GAAIlD,GAAU9K,KAEhCA,MAAKuL,UAAU0C,UAEfjO,MAAKwM,OAAO0B,YAAY,GAAI,EAAG,GAlgChCtN,OAAAC,eAAWqK,EAAA3K,UAAA,cNirBJO,IMjrBP,WAEC,MAAOd,MAAKmO,aNkrBN5K,IM/qBP,SAAsBC,GAErB,GAAIxD,KAAKmO,aAAe3K,EACvB,MAEDxD,MAAKmO,YAAc3K,CAEnBxD,MAAKoO,oBAEL,IAAIjK,GAAanE,KAAK0N,aAAahO,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAK0N,aAAavO,GAAGkP,gBN6qBhBrN,WAAY,KACZC,aAAc,MMjmBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,SN8mBJO,IM9mBP,WAEC,MAAOd,MAAKsO,SAASC,MAAMvO,KAAK4M,UN+mB1BrJ,IM5mBP,SAAiBiL,GAEhB,GAAIxO,KAAKyO,QAAUD,EAClB,MAEDxO,MAAKyO,OAASD,CAEdxO,MAAK4M,SAAW4B,EAAIxO,KAAKsO,SAASC,KAElCvO,MAAK0O,mBN0mBC1N,WAAY,KACZC,aAAc,MMrmBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,UN2mBJO,IM3mBP,WAECd,KAAKuM,QAAQpF,EAAInH,KAAKoM,WAAW5B,EAAWmE,kBAC5C3O,MAAKuM,QAAQnF,EAAIpH,KAAKqM,WAAW7B,EAAWmE,kBAC5C3O,MAAKuM,QAAQlF,EAAIrH,KAAKsM,WAAW9B,EAAWmE,kBAE5C,OAAO3O,MAAKuM,SN2mBNhJ,IMxmBP,SAAkBC,GAEjBxD,KAAKoM,WAAa5I,EAAM2D,EAAEqD,EAAWoE,kBACrC5O,MAAKqM,WAAa7I,EAAM4D,EAAEoD,EAAWoE,kBACrC5O,MAAKsM,WAAa9I,EAAM6D,EAAEmD,EAAWoE,kBAErC5O,MAAK6O,sBNwmBC7N,WAAY,KACZC,aAAc,MMtgBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,UNmmBJO,IMnmBP,WAEC,MAAOd,MAAKsO,SAASQ,OAAO9O,KAAK2M,UNomB3BpJ,IMjmBP,SAAkBiL,GAEjB,GAAIxO,KAAK+O,SAAWP,EACnB,MAEDxO,MAAK+O,QAAUP,CAEfxO,MAAK2M,SAAW6B,EAAIxO,KAAKsO,SAASQ,MAElC9O,MAAK0O,mBN+lBC1N,WAAY,KACZC,aAAc,MMrlBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,SNgmBJO,IMhmBP,WAEC,GAAId,KAAKgP,SACR,MAAOhP,MAAKgP,SAASC,cAAcjP,KAEpC,OAAO,INgmBDgB,WAAY,KACZC,aAAc,MM3lBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,yBNimBJO,IMjmBP,WAEC,GAAId,KAAK0L,4BAA6B,CACrC1L,KAAKyL,uBAAuByD,SAASlP,KAAKmP,eAC1CnP,MAAKyL,uBAAuB2D,QAC5BpP,MAAK0L,4BAA8B,MAEpC,MAAO1L,MAAKyL,wBNkmBNzK,WAAY,KACZC,aAAc,MM7lBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,mBNmmBJO,IMnmBP,WAEC,MAAOd,MAAKwN,mBNomBNjK,IMjmBP,SAA2BC,GAE1B,GAAIxD,KAAKwN,mBAAqBhK,EAC7B,MAEDxD,MAAKwN,kBAAoBhK,CAEzB,IAAIA,EAAO,CACVxD,KAAKqL,iBAAiB4C,UACtBjO,MAAK2L,eAAe0D,MAAM,EAAG,EAAG,GAGjCrP,KAAKsP,6BN+lBCtO,WAAY,KACZC,aAAc,MM1lBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,YNgmBJO,IMhmBP,WAEC,MAAOd,MAAKuP,YNimBNvO,WAAY,KACZC,aAAc,MMllBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,cNkmBJO,IMlmBP,WAEC,MAAOd,MAAKwP,aNmmBNxO,WAAY,KACZC,aAAc,MMhjBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,gBNmkBJO,IMnkBP,WAEC,MAAOd,MAAK+L,uBNokBNxI,IMjkBP,SAAwBC,GAEvB,GAAIxD,KAAK+L,uBAAyBvI,EACjC,MAEDxD,MAAK+L,sBAAwBvI,CAE7BxD,MAAKyP,6BAA6BzP,KAAKgP,SAAUhP,KAAKgP,SAASU,cAAgB,ONgkBzE1O,WAAY,KACZC,aAAc,MMtjBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,UNgkBJO,IMhkBP,WAEC,MAAOd,MAAK2P,SNikBN3O,WAAY,KACZC,aAAc,MMxjBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,UNkkBJO,IMlkBP,WAEC,MAAOd,MAAK4P,SNmkBN5O,WAAY,KACZC,aAAc,MMliBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,UNmjBJO,IMnjBP,WAEC,MAAOd,MAAKgP,UNojBNhO,WAAY,KACZC,aAAc,MM/iBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,aNqjBJO,IMrjBP,WAEC,MAAOd,MAAK6P,oBNsjBNtM,IMnjBP,SAAqBC,GAEpB,GAAIxD,KAAK6P,oBAAsBrM,EAC9B,MAEDxD,MAAK6P,mBAAqBrM,CAE1BxD,MAAK8P,0BAA0B9P,KAAKgP,SAAUhP,KAAKgP,SAASe,oBAAsB,KAAM/P,KAAKgQ,UNkjBvFhP,WAAY,KACZC,aAAc,MM7iBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,mBNmjBJO,IMnjBP,WAEC,MAAOd,MAAKiQ,mBNojBN1M,IMjjBP,SAA2BC,GAE1BxD,KAAKiQ,kBAAoBzM,GNkjBnBxC,WAAY,KACZC,aAAc,MM7iBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,SNmjBJO,IMnjBP,WAEC,MAAOd,MAAKgN,QNojBNzJ,IMhjBP,SAAiB2M,GAEhBlQ,KAAKgN,OAASkD,EAAMhK,OAEpBlG,MAAKmQ,mBNgjBCnP,WAAY,KACZC,aAAc,MMphBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,QNijBJO,IMjjBP,WAEC,MAAOd,MAAKoQ,ONkjBNpP,WAAY,KACZC,aAAc,MM/hBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,aNyiBJO,IMziBP,WAEC,MAAOd,MAAKoM,WAAW5B,EAAWmE,oBN0iB5BpL,IMviBP,SAAqBiL,GAEpB,GAAIxO,KAAKqQ,WAAa7B,EACrB,MAEDxO,MAAKoM,WAAaoC,EAAIhE,EAAWoE,kBAEjC5O,MAAK6O,sBNsiBC7N,WAAY,KACZC,aAAc,MM7hBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,aNuiBJO,IMviBP,WAEC,MAAOd,MAAKqM,WAAW7B,EAAWmE,oBNwiB5BpL,IMriBP,SAAqBiL,GAEpB,GAAIxO,KAAKsQ,WAAa9B,EACrB,MAEDxO,MAAKqM,WAAamC,EAAIhE,EAAWoE,kBAEjC5O,MAAK6O,sBNoiBC7N,WAAY,KACZC,aAAc,MM3hBrBL,QAAAC,eAAWqK,EAAA3K,UAAA,aNqiBJO,IMriBP,WAEC,MAAOd,MAAKsM,WAAW9B,EAAWmE,oBNsiB5BpL,IMniBP,SAAqBiL,GAEpB,GAAIxO,KAAKuQ,WAAa/B,EACrB,MAEDxO,MAAKsM,WAAakC,EAAIhE,EAAWoE,kBAEjC5O,MAAK6O,sBNkiBC7N,WAAY,KACZC,aAAc,MMperBL,QAAAC,eAAWqK,EAAA3K,UAAA,UN+eJO,IM/eP,WAEC,MAAOd,MAAK0M,UNgfNnJ,IM7eP,SAAkBiL,GAGjBxO,KAAKwQ,OAAS,IAEd,IAAIxQ,KAAK0M,UAAY8B,EACpB,MAEDxO,MAAK0M,SAAW8B,CAEhBxO,MAAK0O,mBN2eC1N,WAAY,KACZC,aAAc,MMjerBL,QAAAC,eAAWqK,EAAA3K,UAAA,UN4eJO,IM5eP,WAEC,MAAOd,MAAK2M,UN6eNpJ,IM1eP,SAAkBiL,GAGjBxO,KAAK+O,QAAU,IAEf,IAAI/O,KAAK2M,UAAY6B,EACpB,MAEDxO,MAAK2M,SAAW6B,CAEhBxO,MAAK0O,mBNweC1N,WAAY,KACZC,aAAc,MM7drBL,QAAAC,eAAWqK,EAAA3K,UAAA,UNyeJO,IMzeP,WAEC,MAAOd,MAAK4M,UN0eNrJ,IMveP,SAAkBiL,GAGjBxO,KAAKyO,OAAS,IAEd,IAAIzO,KAAK4M,UAAY4B,EACpB,MAEDxO,MAAK4M,SAAW4B,CAEhBxO,MAAK0O,mBNqeC1N,WAAY,KACZC,aAAc,MMherBL,QAAAC,eAAWqK,EAAA3K,UAAA,SNseJO,IMteP,WAEC,MAAOd,MAAKgQ,SNueNhP,WAAY,KACZC,aAAc,MMlerBL,QAAAC,eAAWqK,EAAA3K,UAAA,iBNweJO,IMxeP,WAEC,GAAId,KAAK4L,oBAAqB,CAC7B,IAAK5L,KAAKmN,YAAcnN,KAAK2N,eAAiBnM,EAAcE,YAAa,CACxE1B,KAAK2L,eAAiB3L,KAAKmP,eAAe7H,gBAAgBtH,KAAKiN,iBAEzD,CACNjN,KAAKmP,eAAesB,aAAa,EAAGzQ,KAAK2L,gBAG1C3L,KAAK4L,oBAAsB,MAE5B,MAAO5L,MAAK2L,gBNweN3K,WAAY,KACZC,aAAc,MMterBL,QAAAC,eAAWqK,EAAA3K,UAAA,kBNyeJO,IMzeP,WAEC,GAAId,KAAKsL,sBACRtL,KAAK0Q,uBAEN,OAAO1Q,MAAKqL,kBNyeNrK,WAAY,KACZC,aAAc,MM5crBL,QAAAC,eAAWqK,EAAA3K,UAAA,wBNkdJO,IMldP,WAEC,MAAOd,MAAK2Q,uBNmdN3P,WAAY,KACZC,aAAc,MM9crBL,QAAAC,eAAWqK,EAAA3K,UAAA,gBNodJO,IMpdP,WAEC,MAAOd,MAAK4Q,eNqdNrN,IMldP,SAAwBC,GAEvB,GAAIA,GAASxD,KAAK4Q,cACjB,MAED5Q,MAAK4Q,cAAgBpN,CAErB,IAAIW,GAAanE,KAAK0N,aAAahO,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAK0N,aAAavO,GAAG0R,aAAe7Q,KAAK4Q,eNidpC5P,WAAY,KACZC,aAAc,MMzarBL,QAAAC,eAAWqK,EAAA3K,UAAA,aNkdJO,IMldP,WAEC,MAAOd,MAAKgO,YNmdNhN,WAAY,KACZC,aAAc,MM5crBL,QAAAC,eAAWqK,EAAA3K,UAAA,WNodJO,IMpdP,WAEC,MAAOd,MAAK6L,qBNqdNtI,IMldP,SAAmBC,GAElB,GAAIxD,KAAK6L,qBAAuBrI,EAC/B,MAEDxD,MAAK6L,oBAAsBrI,CAE3BxD,MAAK8Q,2BAA2B9Q,KAAKgP,SAAUhP,KAAKgP,SAAS+B,cAAgB,ONidvE/P,WAAY,KACZC,aAAc,MMrcrBL,QAAAC,eAAWqK,EAAA3K,UAAA,SNkdJO,IMldP,WAEC,MAAOd,MAAKsO,SAAS0C,MAAMhR,KAAK0M,UNmd1BnJ,IMhdP,SAAiBiL,GAEhB,GAAIxO,KAAKwQ,QAAUhC,EAClB,MAEDxO,MAAKwQ,OAAShC,CAEdxO,MAAK0M,SAAW8B,EAAIxO,KAAKsO,SAAS0C,KAElChR,MAAK0O,mBN8cC1N,WAAY,KACZC,aAAc,MMlcrBL,QAAAC,eAAWqK,EAAA3K,UAAA,KN+cJO,IM/cP,WAEC,MAAOd,MAAK6M,INgdNtJ,IM7cP,SAAaiL,GAEZ,GAAIxO,KAAK6M,IAAM2B,EACd,MAEDxO,MAAK6M,GAAK2B,CAEVxO,MAAKiR,sBN4cCjQ,WAAY,KACZC,aAAc,MMhcrBL,QAAAC,eAAWqK,EAAA3K,UAAA,KN6cJO,IM7cP,WAEC,MAAOd,MAAK8M,IN8cNvJ,IM3cP,SAAaiL,GAEZ,GAAIxO,KAAK8M,IAAM0B,EACd,MAEDxO,MAAK8M,GAAK0B,CAEVxO,MAAKiR,sBN0cCjQ,WAAY,KACZC,aAAc,MMrbrBL,QAAAC,eAAWqK,EAAA3K,UAAA,KN2cJO,IM3cP,WAEC,MAAOd,MAAK+M,IN4cNxJ,IMzcP,SAAaiL,GAEZ,GAAIxO,KAAK+M,IAAMyB,EACd,MAEDxO,MAAK+M,GAAKyB,CAEVxO,MAAKiR,sBNwcCjQ,WAAY,KACZC,aAAc,MMncrBL,QAAAC,eAAWqK,EAAA3K,UAAA,WNycJO,IMzcP,WAEC,MAAOd,MAAKyM,UN0cNlJ,IMvcP,SAAmBC,GAElBxD,KAAKyM,SAAWjJ,GNwcVxC,WAAY,KACZC,aAAc,MM3adiK,GAAA3K,UAAA2Q,iBAAP,SAAwBC,EAAaC,GAEpCzQ,EAAAJ,UAAM2Q,iBAAgBzR,KAAAO,KAACmR,EAAMC,EAE7B,QAAQD,GACP,IAAKnG,GAAmBqG,iBACvBrR,KAAKsR,yBAA2B,IAChC,MACD,KAAKtG,GAAmBuG,iBACvBvR,KAAKwR,yBAA2B,IAChC,MACD,KAAKxG,GAAmByG,cACvBzR,KAAK0R,sBAAwB,IAC7B,MACD,KAAK1G,GAAmB2G,cACvB3R,KAAK4R,sBAAwB,IAC7B,MACD,KAAK5G,GAAmB6G,uBACvB7R,KAAK8R,+BAAiC,IACtC,QAOI5G,GAAA3K,UAAA2F,MAAP,WAEC,GAAIA,GAAsB,GAAIgF,EAC9BhF,GAAMgK,MAAQlQ,KAAKkQ,KACnBhK,GAAM6L,WAAa/R,KAAK+R,UACxB7L,GAAM8L,KAAOA,IAGb,OAAO9L,GAMDgF,GAAA3K,UAAAW,QAAP,WAEC,GAAIlB,KAAKiS,OACRjS,KAAKiS,OAAOC,YAAYlS,KAEzB,OAAOA,KAAKyN,cAAc/N,OACzBM,KAAKyN,cAAc,GAAGvM,UAMjBgK,GAAA3K,UAAA4R,aAAP,WAECnS,KAAKkB,UA2BCgK,GAAA3K,UAAA6R,UAAP,SAAiBC,GAEhB,MAAOrS,MAAKsS,QAqBNpH,GAAA3K,UAAAgS,QAAP,SAAeF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEd,MAAOrS,MAAKsS,QAGNpH,GAAA3K,UAAA+N,OAAP,SAAc+D,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEb,GAAIrS,KAAKwS,eACRxS,KAAKwS,eAAeC,YAGrB,IAAIzS,KAAKmL,kBAAmB,CAC3BnL,KAAK0S,mBAEL,IAAI1S,KAAKwQ,QAAU,KAAM,CACxBxQ,KAAK0M,SAAW1M,KAAKwQ,OAAOxQ,KAAK2S,YAAY3B,KAC7ChR,MAAK0O,kBAIN,GAAI1O,KAAK+O,SAAW,KAAM,CACzB/O,KAAK2M,SAAW3M,KAAK+O,QAAQ/O,KAAK2S,YAAY7D,MAC9C9O,MAAK0O,kBAIN,GAAI1O,KAAKyO,QAAU,KAAM,CACxBzO,KAAK4M,SAAW5M,KAAKyO,OAAOzO,KAAK2S,YAAYpE,KAC7CvO,MAAK0O,mBAKP,MAAO1O,MAAK2S,YAGNzH,GAAA3K,UAAAqS,UAAP,SAAiBP,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEhB,GAAIrS,KAAKwS,eACRxS,KAAKwS,eAAeC,YAErB,IAAIzS,KAAKoL,qBAAsB,CAC9BpL,KAAK6S,uBAIN,MAAO7S,MAAK8S,eAoBN5H,GAAA3K,UAAAwS,cAAP,SAAqBC,GAEpB,MAAOA,GAqBD9H,GAAA3K,UAAA0S,gBAAP,SAAuBC,GAEtB,MAAOlT,MAAKmT,sBAAsB7L,gBAAgB4L,GAW5ChI,GAAA3K,UAAA6S,cAAP,SAAqBC,GAEpB,MAAO,OAmBDnI,GAAA3K,UAAA+S,aAAP,SAAoBnM,EAAUC,EAAUmM,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAEvC,MAAO,OASDrI,GAAA3K,UAAAiT,OAAP,SAAcC,EAAiBC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAG9B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIJ,GAAU,KACbA,EAASzR,EAAS8R,WAElBL,GAAOM,WAERJ,GAAQH,EAAOQ,SAASjU,KAAK+R,WAAWmB,SACxCU,GAAMI,WAENH,GAAQH,EAAOQ,aAAaN,EAC5BC,GAAMG,WAEN,IAAIH,EAAMnU,OAAS,IAAM,CACxBmU,EAAM1M,EAAIuM,EAAOtM,CACjByM,GAAMzM,EAAIsM,EAAOvM,CACjB0M,GAAMxM,EAAI,CACVwM,GAAMG,YAGPL,EAAQC,EAAMM,aAAaL,EAE3BC,GAAMpJ,EAAcyJ,kBAEpBL,GAAI,GAAKD,EAAM1M,CACf2M,GAAI,GAAKD,EAAMzM,CACf0M,GAAI,GAAKD,EAAMxM,CACfyM,GAAI,GAAK,CAETA,GAAI,GAAKH,EAAMxM,CACf2M,GAAI,GAAKH,EAAMvM,CACf0M,GAAI,GAAKH,EAAMtM,CACfyM,GAAI,GAAK,CAETA,GAAI,GAAKF,EAAMzM,CACf2M,GAAI,GAAKF,EAAMxM,CACf0M,GAAI,IAAMF,EAAMvM,CAChByM,GAAI,IAAM,CAEV,IAAIM,GAAa,GAAI3J,EACrB2J,GAAEC,gBAAgBP,EAElB,IAAIQ,GAAeF,EAAEG,YAAY,EAEjCvU,MAAKoM,WAAakI,EAAInN,CACtBnH,MAAKqM,WAAaiI,EAAIlN,CACtBpH,MAAKsM,WAAagI,EAAIjN,CAEtBrH,MAAK6O,qBA0BC3D,GAAA3K,UAAAiU,cAAP,SAAqBxB,GAEpB,MAAO,IAAIrI,GA4BLO,GAAA3K,UAAAkU,gBAAP,SAAuBvB,GAEtB,MAAOlT,MAAKmP,eAAe7H,gBAAgB4L,GAWrChI,GAAA3K,UAAAmU,OAAP,SAAcC,EAAWC,EAAWC,GAEnC,GAAI7U,KAAK6M,IAAM8H,GAAM3U,KAAK8M,IAAM8H,GAAM5U,KAAK+M,IAAM8H,EAChD,MAED7U,MAAK6M,GAAK8H,CACV3U,MAAK8M,GAAK8H,CACV5U,MAAK+M,GAAK8H,CAEV7U,MAAKiR,qBAUC/F,GAAA3K,UAAAuU,UAAP,SAAiBH,EAAWC,EAAWC,GAEtC,GAAI7U,KAAKgN,QAAU,KAClBhN,KAAKgN,OAAS,GAAI/K,EAEnBjC,MAAKgN,OAAO7F,GAAKwN,CACjB3U,MAAKgN,OAAO5F,GAAKwN,CACjB5U,MAAKgN,OAAO3F,GAAKwN,CAEjB7U,MAAKmQ,kBAQCjF,GAAA3K,UAAAwU,MAAP,SAAaC,GAEZhV,KAAKiV,OAAOhT,EAASiT,OAAQF,GAMvB9J,GAAA3K,UAAA4U,wBAAP,SAA+BC,GAE9B,GAAIpV,KAAK6N,iBAAmBhD,EAAgBwK,aAAc,CACzD,GAAIC,GAAwBF,EAAOjG,eAAeoF,WAClD,IAAI7N,GAAiB4O,EAAM,EAC3BA,GAAM,GAAKtV,KAAKuV,aAChB7O,GAAMS,EAAInH,KAAK0M,QACfhG,GAAMU,EAAIpH,KAAK2M,QACfjG,GAAMW,EAAIrH,KAAK4M,QACf5M,MAAKkN,mBAAmBsI,UAAUF,EAGlC,KAAKtV,KAAKmN,YAAcnN,KAAK2N,eAAiBnM,EAAcE,YAC3D1B,KAAKkN,mBAAmBuI,oBAAoBzV,KAAKgN,OAAO7F,EAAEnH,KAAK0M,UAAW1M,KAAKgN,OAAO5F,EAAEpH,KAAK2M,UAAW3M,KAAKgN,OAAO3F,EAAErH,KAAK4M,SAE5H,OAAO5M,MAAKkN,mBAGb,MAAOlN,MAAKmP,eAQNjE,GAAA3K,UAAAmV,KAAP,SAAYV,GAEXhV,KAAKiV,OAAOhT,EAAS0T,OAAQX,GASvB9J,GAAA3K,UAAA0U,OAAP,SAAcW,EAAeZ,GAE5B,GAAIZ,GAAa,GAAI3J,EACrB2J,GAAEyB,gBAAgBb,EAAOY,EAEzB,IAAItB,GAAeF,EAAEG,YAAY,EAEjCvU,MAAKoM,YAAckI,EAAInN,CACvBnH,MAAKqM,YAAciI,EAAIlN,CACvBpH,MAAKsM,YAAcgI,EAAIjN,CAEvBrH,MAAK6O,qBAUC3D,GAAA3K,UAAAuV,SAAP,SAAgBC,EAAWC,EAAWC,GAErCjW,KAAKoM,WAAa2J,EAAGvL,EAAWoE,kBAChC5O,MAAKqM,WAAa2J,EAAGxL,EAAWoE,kBAChC5O,MAAKsM,WAAa2J,EAAGzL,EAAWoE,kBAEhC5O,MAAK6O,qBAMC3D,GAAA3K,UAAA2V,oBAAP,SAA2B/E,EAAaC,GAEvCzQ,EAAAJ,UAAM2V,oBAAmBzW,KAAAO,KAACmR,EAAMC,EAEhC,IAAIpR,KAAKmW,iBAAiBhF,EAAMC,GAC/B,MAED,QAAQD,GACP,IAAKnG,GAAmBqG,iBACvBrR,KAAKsR,yBAA2B,KAChC,MAED,KAAKtG,GAAmBuG,iBACvBvR,KAAKwR,yBAA2B,KAChC,MAED,KAAKxG,GAAmByG,cACvBzR,KAAK0R,sBAAwB,KAC7B,QAUIxG,GAAA3K,UAAA6V,UAAP,SAAiBR,EAAeS,GAE/B,GAAIlP,GAAWyO,EAAKzO,EAAGC,EAAWwO,EAAKxO,EAAGC,EAAWuO,EAAKvO,CAC1D,IAAIlD,GAAakS,EAAS1N,KAAKC,KAAKzB,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,EAElDrH,MAAK6M,IAAM1F,EAAEhD,CACbnE,MAAK8M,IAAM1F,EAAEjD,CACbnE,MAAK+M,IAAM1F,EAAElD,CAEbnE,MAAKiR,qBASC/F,GAAA3K,UAAA+V,eAAP,SAAsBV,EAAeS,GAEpC,GAAIlP,GAAWyO,EAAKzO,EAAGC,EAAWwO,EAAKxO,EAAGC,EAAWuO,EAAKvO,CAC1D,IAAIlD,GAAakS,EAAS1N,KAAKC,KAAKzB,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,EAElDrH,MAAK+R,WAAW0D,mBAAmBtO,EAAEhD,EAAKiD,EAAEjD,EAAKkD,EAAElD,EAEnDnE,MAAKuL,UAAUkF,aAAa,EAAGzQ,KAAKqN,KAEpCrN,MAAK6M,GAAK7M,KAAKqN,KAAKlG,CACpBnH,MAAK8M,GAAK9M,KAAKqN,KAAKjG,CACpBpH,MAAK+M,GAAK/M,KAAKqN,KAAKhG,CAEpBrH,MAAKiR,qBAQC/F,GAAA3K,UAAAgW,IAAP,SAAWvB,GAEVhV,KAAKiV,OAAOhT,EAAS8R,OAAQiB,GAW9BpU,QAAAC,eAAWqK,EAAA3K,UAAA,uBN2UJO,IM3UP,WAEC,MAAOd,MAAKwW,qBN4UNxV,WAAY,KACZC,aAAc,MMrUrBL,QAAAC,eAAWqK,EAAA3K,UAAA,cN6UJO,IM7UP,WAEC,GAAId,KAAKwL,eACRxL,KAAKyW,kBAEN,OAAOzW,MAAKuL,WN6UNhI,IM1UP,SAAsBiL,GNsVX,GMxUNkI,GAA2BlI,EAAI+F,WACnC,IAAID,EAEJA,GAAMoC,EAAS,EAEf,IAAI1W,KAAK6M,IAAMyH,EAAInN,GAAKnH,KAAK8M,IAAMwH,EAAIlN,GAAKpH,KAAK+M,IAAMuH,EAAIjN,EAAG,CAC7DrH,KAAK6M,GAAKyH,EAAInN,CACdnH,MAAK8M,GAAKwH,EAAIlN,CACdpH,MAAK+M,GAAKuH,EAAIjN,CAEdrH,MAAKiR,qBAGNqD,EAAMoC,EAAS,EAEf,IAAI1W,KAAKoM,YAAckI,EAAInN,GAAKnH,KAAKqM,YAAciI,EAAIlN,GAAKpH,KAAKsM,YAAcgI,EAAIjN,EAAG,CACrFrH,KAAKoM,WAAakI,EAAInN,CACtBnH,MAAKqM,WAAaiI,EAAIlN,CACtBpH,MAAKsM,WAAagI,EAAIjN,CAEtBrH,MAAK6O,qBAGNyF,EAAMoC,EAAS,EAEf,IAAI1W,KAAK0M,UAAY4H,EAAInN,GAAKnH,KAAK2M,UAAY2H,EAAIlN,GAAKpH,KAAK4M,UAAY0H,EAAIjN,EAAG,CAC/ErH,KAAK0M,SAAW4H,EAAInN,CACpBnH,MAAK2M,SAAW2H,EAAIlN,CACpBpH,MAAK4M,SAAW0H,EAAIjN,CAEpBrH,MAAK0O,oBNkUA1N,WAAY,KACZC,aAAc,MM5TrBL,QAAAC,eAAWqK,EAAA3K,UAAA,wBNkUJO,IMlUP,WAEC,IAAKd,KAAK2W,qBACT3W,KAAK2W,qBAAuB,GAAI5L,GAAmB/K,KAEpD,OAAOA,MAAK2W,sBNkUN3V,WAAY,KACZC,aAAc,MM7TdiK,GAAA3K,UAAAqW,WAAP,SAAkBpT,GAEjBxD,KAAKgP,SAAWxL,CAEhB,IAAIA,EAAO,CACVxD,KAAKyP,6BAA6BjM,EAAMkM,cACxC1P,MAAK8Q,2BAA2BtN,EAAMuN,cACtC/Q,MAAK8P,0BAA0BtM,EAAMuM,oBAAqBvM,EAAMwM,aAC1D,CACNhQ,KAAKyP,6BAA6B,KAClCzP,MAAK8Q,2BAA2B,KAChC9Q,MAAK8P,0BAA0B,KAAM,OAOhC5E,GAAA3K,UAAA+O,0BAAP,WAECtP,KAAKsL,uBAAyBtL,KAAKwN,iBACnCxN,MAAK0L,6BAA+B1L,KAAKwN,iBACzCxN,MAAK4L,qBAAuB5L,KAAKwN,iBAEjC,IAAIxN,KAAK6W,SACR7W,KAAK8W,qBAEN,IAAI9W,KAAK8R,+BACR9R,KAAK+W,6BAMA7L,GAAA3K,UAAAkP,6BAAP,SAAoCjM,GAEnCxD,KAAKgM,uBAAyBhM,KAAK+L,uBAAyBvI,CAG5D,IAAIxD,KAAKgM,wBAA0BhM,KAAKgP,WAAahP,KAAKiQ,kBACzDjQ,KAAKiQ,kBAAqBjQ,KAAKgP,SAASiB,kBAMnC/E,GAAA3K,UAAAuP,0BAAP,SAAiCkH,EAAqBC,GAErD,GAAIC,GAAuBlX,KAAKgQ,SAAWiH,CAE3C,IAAIC,GAAgBlX,KAAKgQ,QACxBhQ,KAAKgQ,QAAQhH,cAAc,GAAIiC,GAAWA,EAAWkM,mBAAoBnX,MAE1E,IAAIA,KAAKgQ,SAAWhQ,KAAKwW,oBAAqB,CAE7CxW,KAAKgQ,QAAQoH,sBAAsBpX,KAAKwW,oBAGxC,IAAIxW,KAAKuP,WACRvP,KAAKqX,mBAAmBrX,KAAKwW,qBAI/BxW,KAAKwW,oBAAsBxW,KAAK6P,oBAAsBmH,CAGtD,IAAIE,EACHlX,KAAKgQ,QAAUiH,CAEhB,IAAIjX,KAAKgQ,SAAWhQ,KAAKwW,oBAAqB,CAE7CxW,KAAKgQ,QAAQsH,oBAAoBtX,KAAKwW,oBAGtC,IAAIxW,KAAKuP,WACRvP,KAAKuX,iBAAiBvX,KAAKwW,qBAG7B,GAAIU,GAAgBlX,KAAKgQ,QACxBhQ,KAAKgQ,QAAQhH,cAAc,GAAIiC,GAAWA,EAAWuM,eAAgBxX,MAEtE,IAAIkX,EAAc,CACjB,IAAKlX,KAAKsL,wBAA0BtL,KAAKwN,kBACxCxN,KAAKsP,2BAEN,IAAItP,KAAK4R,sBACR5R,KAAKyX,qBAODvM,GAAA3K,UAAAuQ,2BAAP,SAAkCtN,GAEjCxD,KAAK8L,qBAAuB9L,KAAK6L,qBAAuBrI,EAMlD0H,GAAA3K,UAAAkW,iBAAP,WAGCzW,KAAKqN,KAAKlG,EAAInH,KAAK6M,EACnB7M,MAAKqN,KAAKjG,EAAIpH,KAAK8M,EACnB9M,MAAKqN,KAAKhG,EAAIrH,KAAK+M,EAEnB/M,MAAKsN,KAAKnG,EAAInH,KAAKoM,UACnBpM,MAAKsN,KAAKlG,EAAIpH,KAAKqM,UACnBrM,MAAKsN,KAAKjG,EAAIrH,KAAKsM,UAEnBtM,MAAKuN,KAAKpG,EAAInH,KAAK0M,QACnB1M,MAAKuN,KAAKnG,EAAIpH,KAAK2M,QACnB3M,MAAKuN,KAAKlG,EAAIrH,KAAK4M,QAEnB5M,MAAKuL,UAAUiK,UAAUxV,KAAK+N,qBAE9B,KAAK/N,KAAKmN,WAAY,CACrBnN,KAAKiN,YAAY9F,EAAInH,KAAKgN,OAAO7F,EAAEnH,KAAK0M,QACxC1M,MAAKiN,YAAY7F,EAAIpH,KAAKgN,OAAO5F,EAAEpH,KAAK2M,QACxC3M,MAAKiN,YAAY5F,EAAIrH,KAAKgN,OAAO3F,EAAErH,KAAK4M,QACxC5M,MAAKuL,UAAUkK,oBAAoBzV,KAAKiN,YAAY9F,GAAInH,KAAKiN,YAAY7F,GAAIpH,KAAKiN,YAAY5F,EAC9F,IAAIrH,KAAK2N,eAAiBnM,EAAcE,YACvC1B,KAAKuL,UAAUmM,kBAAkB1X,KAAKgN,OAAO7F,EAAGnH,KAAKgN,OAAO5F,EAAGpH,KAAKgN,OAAO3F,GAG7ErH,KAAKwL,eAAiB,KACtBxL,MAAKiM,eAAiB,KACtBjM,MAAKkM,eAAiB,KACtBlM,MAAKmM,YAAc,KACnBnM,MAAKoN,YAAc,MAMblC,GAAA3K,UAAAmQ,sBAAP,WAEC,GAAI1Q,KAAKgP,WAAahP,KAAKgP,SAAS2I,SAAU,CAC7C3X,KAAKqL,iBAAiB6D,SAASlP,KAAKgP,SAASG,eAC7CnP,MAAKqL,iBAAiBuM,QAAQ5X,KAAK+R,gBAC7B,CACN/R,KAAKqL,iBAAiB6D,SAASlP,KAAK+R,YAGrC/R,KAAKsL,sBAAwB,MAGvBJ,GAAA3K,UAAAsX,gBAAP,SAAuBC,GAEtB9X,KAAKyN,cAAcsK,KAAKD,EAExB,OAAOA,GAID5M,GAAA3K,UAAAyX,mBAAP,SAA0BF,GAEzB,GAAI5S,GAAelF,KAAKyN,cAAcwK,QAAQH,EAE9C9X,MAAKyN,cAAcyK,OAAOhT,EAAO,EAEjC,OAAO4S,GAYD5M,GAAA3K,UAAA4X,gBAAP,SAAuBC,EAAkCC,GAExD,MAAO,OAMDnN,GAAA3K,UAAA+X,iBAAP,WAEC,GAAItY,KAAKuY,aACRvY,KAAKuY,aAAaC,SAMbtN,GAAA3K,UAAAwQ,YAAP,WAEC,MAAO/Q,MAAK8L,qBAMNZ,GAAA3K,UAAAkY,iBAAP,WAEC,MAAOzY,MAAKgM,uBAMNd,GAAA3K,UAAAmY,WAAP,SAAkBlV,GAEjB,GAAIxD,KAAKgQ,SAAWxM,EACnB,MAEDxD,MAAK8P,0BAA0B9P,KAAKgP,SAAUhP,KAAKgP,SAASe,oBAAsB,KAAMvM,GAMjF0H,GAAA3K,UAAAoY,sBAAR,WAEC,IAAK3Y,KAAK4Y,iBACT5Y,KAAK4Y,iBAAmB,GAAI5N,GAAmBA,EAAmBqG,iBAAkBrR,KAErFA,MAAKgJ,cAAchJ,KAAK4Y,kBAMjB1N,GAAA3K,UAAAsY,sBAAR,WAEC,IAAK7Y,KAAK8Y,iBACT9Y,KAAK8Y,iBAAmB,GAAI9N,GAAmBA,EAAmBuG,iBAAkBvR,KAErFA,MAAKgJ,cAAchJ,KAAK8Y,kBAMjB5N,GAAA3K,UAAAwY,mBAAR,WAEC,IAAK/Y,KAAKgZ,cACThZ,KAAKgZ,cAAgB,GAAIhO,GAAmBA,EAAmByG,cAAezR,KAE/EA,MAAKgJ,cAAchJ,KAAKgZ,eAMjB9N,GAAA3K,UAAAkX,kBAAR,WAEC,IAAKzX,KAAKiZ,cACTjZ,KAAKiZ,cAAgB,GAAIjO,GAAmBA,EAAmB2G,cAAe3R,KAE/EA,MAAKgJ,cAAchJ,KAAKiZ,eAMjB/N,GAAA3K,UAAAwW,2BAAR,WAEC,IAAK/W,KAAKkZ,uBACTlZ,KAAKkZ,uBAAyB,GAAIlO,GAAmBA,EAAmB6G,uBAAwB7R,KAEjGA,MAAKgJ,cAAchJ,KAAKkZ,wBAQjBhO,GAAA3K,UAAA4Y,mBAAR,WAEC,GAAInZ,KAAKwL,eACR,MAEDxL;KAAKwL,eAAiB,IAEtB,KAAKxL,KAAKsL,wBAA0BtL,KAAKwN,kBACxCxN,KAAKsP,4BAMApE,GAAA3K,UAAAuW,oBAAP,WAEC,GAAI3S,GAAanE,KAAK0N,aAAahO,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAK0N,aAAavO,GAAG2X,sBAMf5L,GAAA3K,UAAA4P,gBAAR,WAECnQ,KAAKmN,WAAcnN,KAAKgN,OAAO7F,GAAK,GAAOnH,KAAKgN,OAAO5F,GAAK,GAAOpH,KAAKgN,OAAO3F,GAAK,CAEpF,IAAIrH,KAAKoN,YACR,MAEDpN,MAAKoN,YAAc,IAEnBpN,MAAKmZ,qBAMEjO,GAAA3K,UAAA0Q,mBAAR,WAEC,GAAIjR,KAAKiM,eACR,MAEDjM,MAAKiM,eAAiB,IAEtBjM,MAAKmZ,oBAEL,IAAInZ,KAAKsR,yBACRtR,KAAK2Y,wBAMCzN,GAAA3K,UAAAsO,mBAAR,WAEC,GAAI7O,KAAKkM,eACR,MAEDlM,MAAKkM,eAAiB,IAEtBlM,MAAKmZ,oBAEL,IAAInZ,KAAKwR,yBACRxR,KAAK6Y,wBAMC3N,GAAA3K,UAAAmO,gBAAR,WAEC,GAAI1O,KAAKmM,YACR,MAEDnM,MAAKmM,YAAc,IAEnBnM,MAAKmZ,oBAEL,IAAInZ,KAAK0R,sBACR1R,KAAK+Y,qBAIA7N,GAAA3K,UAAA6Y,gBAAP,SAAuBC,GAEtBrZ,KAAK0N,aAAaqK,KAAKsB,EAEvB,OAAOA,GAIDnO,GAAA3K,UAAA+Y,mBAAP,SAA0BD,GAEzB,GAAInU,GAAelF,KAAK0N,aAAauK,QAAQoB,EAE7CrZ,MAAK0N,aAAawK,OAAOhT,EAAO,EAEhC,OAAOmU,GAGDnO,GAAA3K,UAAAgX,iBAAP,SAAwBP,GAEvB,KAAM,IAAIpM,GAGJM,GAAA3K,UAAA8W,mBAAP,SAA0BL,GAEzB,KAAM,IAAIpM,GAGJM,GAAA3K,UAAA6N,mBAAP,WAECpO,KAAKmL,kBAAoB,IACzBnL,MAAKoL,qBAAuB,IAE5B,IAAIpL,KAAK6W,SACR7W,KAAK8W,sBAGA5L,GAAA3K,UAAAmS,kBAAP,WAEC1S,KAAKmL,kBAAoB,KAEzB,IAAInL,KAAK2S,aAAe,KACvB3S,KAAK2S,YAAc,GAAIrI,GAGlBY,GAAA3K,UAAAsS,qBAAP,WAEC7S,KAAKoL,qBAAuB,KAE5B,IAAIpL,KAAK8S,gBAAkB,KAC1B9S,KAAK8S,eAAiB,GAAIvI,GAE7B,OAAAW,IAtqE4BzK,EAwqE5Bb,GAAuBJ,QAAd0L,INmNNqO,6CAA6ClY,UAAUmY,2BAA2BnY,UAAUoY,kCAAkCpY,UAAUqY,gCAAgCrY,UAAUsY,qCAAqCtY,UAAUuY,6BAA6BvY,UAAUwY,8BAA8BxY,UAAUiI,gCAAgCjI,UAAUC,yCAAyCD,UAAUE,wCAAwC,wCAAwCuY,0CAA0C,0CAA0CC,oCAAoC,oCAAoCC,+CAA+C,+CAA+CC,uCAAuC,uCAAuCC,6CAA6C,+CAA+CC,oCAAoC,SAASzb,EAAQkB,EAAOJ,GACh8B,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GO9hFtB,IAAOG,GAAS9B,EAAc,oCAE9B,IAAO+B,GAAc/B,EAAa,yCAGlC,IAAO0b,GAAa1b,EAAa,0CP4iFjC,IO5hFM2b,GAAQ,SAAA1Z,GAASZ,EAAjBsa,EAAQ1Z,EAyBb,SAzBK0Z,KA2BJ1Z,EAAAlB,KAAAO,KAEAA,MAAKsa,eAAiB,GAAIhW,OAzB3B1D,OAAAC,eAAWwZ,EAAA9Z,UAAA,aPkiFJO,IOliFP,WAEC,MAAON,GAAU+Z,UPmiFXvZ,WAAY,KACZC,aAAc,MO9hFrBL,QAAAC,eAAWwZ,EAAA9Z,UAAA,iBPoiFJO,IOpiFP,WAEC,MAAOd,MAAKsa,gBPqiFNtZ,WAAY,KACZC,aAAc,MOniFdoZ,GAAA9Z,UAAAia,iBAAP,WAEC,MAAOxa,MAAKsa,eAaND,GAAA9Z,UAAAoG,oBAAP,SAA2BC,GAE1B,GAAIzC,GAAanE,KAAKsa,eAAe5a,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjCa,KAAKsa,eAAenb,GAAGwH,oBAAoBC,GAOtCyT,GAAA9Z,UAAAka,eAAP,SAAsB9Q,GAErB3J,KAAKsa,eAAevC,KAAKpO,EAEzBA,GAAY+Q,eAAiB1a,IAE7B,IAAIA,KAAKmW,iBAAiBiE,EAAcO,oBACvC3a,KAAKgJ,cAAc,GAAIoR,GAAcA,EAAcO,mBAAoBhR,GAExE3J,MAAK4a,kBAAkBjR,GAOjB0Q,GAAA9Z,UAAAsa,kBAAP,SAAyBlR,GAExB3J,KAAKsa,eAAepC,OAAOlY,KAAKsa,eAAerC,QAAQtO,GAAc,EAErEA,GAAY+Q,eAAiB,IAE7B,IAAI1a,KAAKmW,iBAAiBiE,EAAcU,sBACvC9a,KAAKgJ,cAAc,GAAIoR,GAAcA,EAAcU,qBAAsBnR,GAE1E3J,MAAK4a,kBAAkBjR,GAOjB0Q,GAAA9Z,UAAA2F,MAAP,WAEC,GAAIA,GAAiB,GAAImU,EACzB,IAAIlW,GAAanE,KAAKsa,eAAe5a,MAErC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjC+G,EAAMuU,eAAeza,KAAKsa,eAAenb,GAAG+G,QAE7C,OAAOA,GAODmU,GAAA9Z,UAAAmG,MAAP,SAAaA,GAEZ,GAAIqU,GAAqB/a,KAAKsa,eAAe5a,MAC7C,KAAK,GAAIP,GAAW,EAAGA,EAAI4b,IAAe5b,EACzCa,KAAKsa,eAAenb,GAAGuH,MAAMA,GAMxB2T,GAAA9Z,UAAAW,QAAP,WAEC,GAAI6Z,GAAqB/a,KAAKsa,eAAe5a,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI4b,IAAe5b,EAAG,CAC5C,GAAI6b,GAA0Bhb,KAAKsa,eAAe,EAClDta,MAAK6a,kBAAkBG,EACvBA,GAAQ9Z,WASHmZ,GAAA9Z,UAAA8F,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAIwU,GAAqB/a,KAAKsa,eAAe5a,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI4b,IAAe5b,EACzCa,KAAKsa,eAAenb,GAAGkH,QAAQC,EAAQC,GAGlC8T,GAAA9Z,UAAAqa,kBAAP,SAAyBI,GAExB,GAAIhb,KAAKmW,iBAAiBiE,EAAca,gBACvCjb,KAAKgJ,cAAc,GAAIoR,GAAcA,EAAca,eAAgBD,IAEtE,OAAAX,IAjIuB5Z,EAmIvBb,GAAkBJ,QAAT6a,IPqgFNjZ,oCAAoCC,UAAUC,yCAAyCD,UAAU6Z,0CAA0C,4CAA4CC,wCAAwC,SAASzc,EAAQkB,EAAOJ,GAO1P,GQ/pFM4b,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,OAAgB,QAKhBD,GAAAE,OAAgB,QAC/B,OAAAF,KAEAxb,GAAsBJ,QAAb4b,ORkqFHG,+CAA+C,SAAS7c,EAAQkB,EAAOJ,GAW7E,GStrFMgc,GAAmB,WAAzB,QAAMA,MAESA,EAAAC,SAAkB,SAClBD,GAAAE,SAAkB,SACjC,OAAAF,KAEA5b,GAA6BJ,QAApBgc,OT0rFHG,oCAAoC,SAASjd,EAAQkB,EAAOJ,GAelE,GU9rFMoc,GAAQ,WAAd,QAAMA,MAuCEA,EAAArb,UAAAsb,gBAAP,SAAuBC,EAAmBC,EAAsBC,EAAuBC,GAA7C,GAAAF,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OAmBhFL,GAAArb,UAAA2b,UAAP,SAAiBC,EAAsBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,GAwFhCR,GAAArb,UAAA8b,kBAAP,SAAyBlL,EAAmBmL,EAA8BC,EAAsBC,EAA8BT,EAAsBU,EAA6BC,EAAoCC,GAAvF,GAAAZ,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAU,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAkC,CAAlCA,EAAA,MAAoC,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAiE9Mf,GAAArb,UAAAqc,MAAP,YAYOhB,GAAArb,UAAA2O,SAAP,SAAgB2N,IAuDTjB,GAAArb,UAAAuc,aAAP,SAAoBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAgBC,IAmCrGxB,GAAArb,UAAA8c,QAAP,SAAeC,EAAiBC,EAAiBJ,EAAgBC,IAoB1DxB,GAAArb,UAAAid,WAAP,SAAkBrW,EAAUC,EAAUqW,IAqB/B7B,GAAArb,UAAAmd,YAAP,SAAmBvW,EAAUC,EAAU4J,EAAclC,IAiB9C8M,GAAArb,UAAAod,iBAAP,SAAwBC,IAkDjBhC,GAAArb,UAAAsd,SAAP,SAAgBC,EAAgCC,EAAoBC,IAsB7DpC,GAAArb,UAAA0d,SAAP,SAAgB9W,EAAUC,EAAU4J,EAAclC,IA+B3C8M,GAAArb,UAAA2d,cAAP,SAAqB/W,EAAUC,EAAU4J,EAAclC,EAAeqP,EAAqBC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAAC,KAyBpFzC,GAAArb,UAAA+d,cAAP,SAAqBC,EAAwBtY,EAAsCuY,EAA8BC,GAApE,GAAAxY,QAAA,GAAoC,CAApCA,EAAA,KAAsC,GAAAuY,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,MAgB1G7C,GAAArb,UAAAme,QAAP,YAkCO9C,GAAArb,UAAAoe,gBAAP,SAAuB7C,EAAmBC,EAAsBC,EAAuBC,GAA7C,GAAAF,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OA2EhFL,GAAArb,UAAAqe,kBAAP,SAAyBzN,EAAmBmL,EAA8BC,EAAsBC,EAAsBT,EAAsBU,EAAkCC,EAAgDC,GAAxG,GAAAZ,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAU,QAAA,GAAgC,CAAhCA,EAAA,KAAkC,GAAAC,QAAA,GAA8C,CAA9CA,EAAA,KAAgD,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAgLvNf,GAAArb,UAAAse,UAAP,SAAiBC,EAAsB3C,EAA0BC,EAAkB2C,EAA8BC,EAAgCC,EAAuBC,EAA0BC,GAAjL,GAAAL,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA3C,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA2C,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAqB3LvD,GAAArb,UAAA6e,OAAP,SAAcjY,EAAUC,IAejBwU,GAAArb,UAAAmU,OAAP,SAAcvN,EAAUC,IAIzB,OAAAwU,KAEkBhc,GAAAJ,QAAToc,OV+pFHyD,2CAA2C,SAAS3gB,EAAQkB,EAAOJ,SAInE8f,yCAAyC,SAAS5gB,EAAQkB,EAAOJ,SAIjE+f,0CAA0C,SAAS7gB,EAAQkB,EAAOJ,SAIlEggB,8CAA8C,SAAS9gB,EAAQkB,EAAOJ,SAItEigB,4CAA4C,SAAS/gB,EAAQkB,EAAOJ,SAIpEkgB,yCAAyC,SAAShhB,EAAQkB,EAAOJ,SAIjEmgB,oCAAoC,SAASjhB,EAAQkB,EAAOJ,SAI5DogB,+CAA+C,SAASlhB,EAAQkB,EAAOJ,GAQ7E,GWjiHMqgB,GAAmB,WAAzB,QAAMA,MAeSA,EAAAC,WAAoB,WAcpBD,GAAAE,IAAa,KAC5B,OAAAF,KAEAjgB,GAA6BJ,QAApBqgB,OXmiHHG,sCAAsC,SAASthB,EAAQkB,EAAOJ,GASpE,GY3kHMygB,GAAU,WAAhB,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,MAAe,OAMfF,GAAApe,MAAe,OAC9B,OAAAoe,KAEoBrgB,GAAAJ,QAAXygB,OZ6kHHG,qCAAqC,SAAS1hB,EAAQkB,EAAOJ,GACnE,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Ga/mHtB,IAAOG,GAAS9B,EAAc,oCAE9B,IAAOkM,GAAmBlM,EAAY,6CAEtC,IAAO2hB,GAAsB3hB,EAAW,uDAGxC,IAAO4hB,GAAU5hB,EAAc,uCAG/B,IAAM6hB,GAAS,SAAA5f,GAASZ,EAAlBwgB,EAAS5f,EA2Bd,SA3BK4f,KA6BJ5f,EAAAlB,KAAAO,KA3BOA,MAAAwgB,OAAgB,QAChBxgB,MAAAygB,QAAiB,CACjBzgB,MAAA0gB,QAAiB,CACjB1gB,MAAA2gB,QAAiB,CAEjB3gB,MAAA4gB,cAAuB,QACvB5gB,MAAA6gB,SAAkB,CACnB7gB,MAAA8gB,WAAoB,CACpB9gB,MAAA+gB,WAAoB,CACpB/gB,MAAAghB,WAAoB,CAEnBhhB,MAAAihB,UAAmB,CACpBjhB,MAAAkhB,YAAqB,CACrBlhB,MAAAmhB,YAAqB,CACrBnhB,MAAAohB,YAAqB,CAEpBphB,MAAAqhB,SAAkB,CACnBrhB,MAAAshB,WAAoB,CACpBthB,MAAAuhB,WAAoB,CACpBvhB,MAAAwhB,WAAoB,CAEnBxhB,MAAAyhB,cAAwB,MAShC7gB,OAAAC,eAAW0f,EAAAhgB,UAAA,gBbmmHJO,IanmHP,WAEC,MAAOd,MAAKyhB,ebomHNle,IajmHP,SAAwBC,GAEvB,GAAIxD,KAAKyhB,eAAiBje,EACzB,MAEDxD,MAAKyhB,cAAgBje,CAErB,IAAIA,EAAO,CACV,GAAIxD,KAAK0hB,eAAiB,KACzB1hB,KAAK0hB,cAAgB1hB,KAAK2hB,qBAE3B3hB,MAAK0hB,cAAcE,MAAQ5hB,SACrB,CACNA,KAAK0hB,cAAcxgB,SACnBlB,MAAK0hB,cAAgB,KAGtB1hB,KAAKgJ,cAAc,GAAIsX,GAAWA,EAAWuB,uBbgmHvC7gB,WAAY,KACZC,aAAc,Ma9lHdsf,GAAAhgB,UAAAohB,oBAAP,WAEC,KAAM,IAAI/W,GAGXhK,QAAAC,eAAW0f,EAAAhgB,UAAA,Yb+lHJO,Ia/lHP,WAEC,MAAOd,MAAKihB,WbgmHN1d,Ia7lHP,SAAoBC,GAEnB,GAAIA,EAAQ,EACXA,EAAQ,CAETxD,MAAKihB,UAAYzd,CACjBxD,MAAK8hB,kBb6lHC9gB,WAAY,KACZC,aAAc,Ma3lHrBL,QAAAC,eAAW0f,EAAAhgB,UAAA,Wb8lHJO,Ia9lHP,WAEC,MAAOd,MAAKqhB,Ub+lHN9d,Ia5lHP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,CAETxD,MAAKqhB,SAAW7d,CAChBxD,MAAK+hB,iBb4lHC/gB,WAAY,KACZC,aAAc,Ma1lHrBL,QAAAC,eAAW0f,EAAAhgB,UAAA,Sb6lHJO,Ia7lHP,WAEC,MAAOd,MAAKwgB,Qb8lHNjd,Ia3lHP,SAAiBC,GAEhBxD,KAAKwgB,OAAShd,CACdxD,MAAKygB,SAAYzgB,KAAKwgB,QAAU,GAAM,KAAM,GAC5CxgB,MAAK0gB,SAAY1gB,KAAKwgB,QAAU,EAAK,KAAM,GAC3CxgB,MAAK2gB,SAAW3gB,KAAKwgB,OAAS,KAAM,GAEpCxgB,MAAK+hB,eACL/hB,MAAK8hB,kBb2lHC9gB,WAAY,KACZC,aAAc,MazlHrBL,QAAAC,eAAW0f,EAAAhgB,UAAA,Wb4lHJO,Ia5lHP,WAEC,MAAOd,MAAK6gB,Ub6lHNtd,Ia1lHP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAETxD,MAAK6gB,SAAWrd,CAChBxD,MAAKgiB,iBb0lHChhB,WAAY,KACZC,aAAc,MaxlHrBL,QAAAC,eAAW0f,EAAAhgB,UAAA,gBb2lHJO,Ia3lHP,WAEC,MAAOd,MAAK4gB,eb4lHNrd,IazlHP,SAAwBC,GAEvBxD,KAAK4gB,cAAgBpd,CACrBxD,MAAKgiB,iBb0lHChhB,WAAY,KACZC,aAAc,MaxlHbsf,GAAAhgB,UAAAyhB,cAAR,WAEChiB,KAAK8gB,YAAe9gB,KAAK4gB,eAAiB,GAAM,KAAM,IAAK5gB,KAAK6gB,QAChE7gB,MAAK+gB,YAAe/gB,KAAK4gB,eAAiB,EAAK,KAAM,IAAK5gB,KAAK6gB,QAC/D7gB,MAAKghB,YAAchhB,KAAK4gB,cAAgB,KAAM,IAAK5gB,KAAK6gB,SAGlDN,GAAAhgB,UAAA0hB,2BAAP,SAAkCC,EAAgB9M,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAI7I,GAIXhK,QAAAC,eAAW0f,EAAAhgB,UAAA,abwlHJO,IaxlHP,WAEC,MAAON,GAAU2hB,ObylHXnhB,WAAY,KACZC,aAAc,MavlHbsf,GAAAhgB,UAAAuhB,eAAR,WAEC9hB,KAAKkhB,YAAclhB,KAAKygB,QAAQzgB,KAAKihB,SACrCjhB,MAAKmhB,YAAcnhB,KAAK0gB,QAAQ1gB,KAAKihB,SACrCjhB,MAAKohB,YAAcphB,KAAK2gB,QAAQ3gB,KAAKihB,UAG9BV,GAAAhgB,UAAAwhB,cAAR,WAEC/hB,KAAKshB,WAAathB,KAAKygB,QAAQzgB,KAAKqhB,QACpCrhB,MAAKuhB,WAAavhB,KAAK0gB,QAAQ1gB,KAAKqhB,QACpCrhB,MAAKwhB,WAAaxhB,KAAK2gB,QAAQ3gB,KAAKqhB,SAGrCzgB,QAAAC,eAAW0f,EAAAhgB,UAAA,gBbslHJO,IatlHP,WAEC,MAAOd,MAAK0hB,ebulHNne,IaplHP,SAAwBC,GAEvBxD,KAAK0hB,cAAgBle,CACrBxD,MAAK0hB,cAAcE,MAAQ5hB,MbqlHrBgB,WAAY,KACZC,aAAc,MaplHtB,OAAAsf,IA/KwBF,EAiLxBzgB,GAAmBJ,QAAV+gB,IbylHNhH,6CAA6ClY,UAAUD,oCAAoCC,UAAU+gB,uDAAuD,uDAAuDC,uCAAuC,yCAAyCC,yCAAyC,SAAS5jB,EAAQkB,EAAOJ,GAKvW,GcrxHM+iB,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,WAAoB,YAMpBD,GAAAzgB,KAAc,MAOdygB,GAAAE,OAAgB,QAWhBF,GAAAG,SAAkB,UACjC,OAAAH,KAEuB3iB,GAAAJ,QAAd+iB,OdsxHHI,2CAA2C,SAASjkB,EAAQkB,EAAOJ,GACzE,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gen0HtB,IAAOuiB,GAAWlkB,EAAc,sCAChC,IAAOwD,GAAexD,EAAa,0CACnC,IAAOmkB,GAAmBnkB,EAAY,8CACtC,IAAO0D,GAAgB1D,EAAa,6Cfy0HpC,Iep0HMokB,GAAe,SAAAniB,GAASZ,EAAxB+iB,EAAeniB,EAmJpB,SAnJKmiB,KAqJJniB,EAAAlB,KAAAO,KAAM,KAxICA,MAAAuC,gBAA0B,IAC1BvC,MAAA+iB,uBAAyB,IACzB/iB,MAAAgjB,gBAA0B,IAC1BhjB,MAAAijB,aAAuB,IAuI9BjjB,MAAKqD,eAAiBuf,EAxHhBE,EAAAviB,UAAAkD,qBAAP,WAECzD,KAAK0D,SAASof,EAAgBnf,aAAe,CAE7C,IAAIE,GAAgB,CACpB7D,MAAK0D,SAASof,EAAgBI,qBAAuBrf,CACrDA,IAAU,CAEV7D,MAAK0D,SAASof,EAAgBK,mBAAqBtf,CACnDA,IAAU,CAEV7D,MAAK0D,SAASof,EAAgBM,gBAAkBvf,CAChDA,IAAU,CAEV7D,MAAK0D,SAASof,EAAgBO,YAAcxf,CAC5CA,IAAU,CAEV7D,MAAKkE,SAAS4e,EAAgBnf,aAAeE,CAC7C7D,MAAKkE,SAAS4e,EAAgBI,qBAAuBrf,CACrD7D,MAAKkE,SAAS4e,EAAgBK,mBAAqBtf,CACnD7D,MAAKkE,SAAS4e,EAAgBM,gBAAkBvf,CAChD7D,MAAKkE,SAAS4e,EAAgBO,YAAcxf,CAE5C,IAAIM,GAAanE,KAAKoE,cAAcP,CAEpC,IAAI7D,KAAKqE,YAAc,KACtBrE,KAAKqE,WAAa,GAAIC,OAAcH,OAChC,IAAInE,KAAKqE,WAAW3E,QAAUyE,EAClCnE,KAAKqE,WAAW3E,OAASyE,CAE1BnE,MAAKuE,oBAAsB,MAM5B3D,QAAAC,eAAWiiB,EAAAviB,UAAA,YfyyHJO,IezyHP,WAEC,GAAId,KAAKuC,gBACRvC,KAAKyE,gBAAgBzE,KAAKsjB,gBAAiBtjB,KAAKujB,cAEjD,IAAIvjB,KAAKgjB,gBACRhjB,KAAKwjB,gBAAgBxjB,KAAKyjB,WAE3B,IAAIzjB,KAAKijB,aACRjjB,KAAK0jB,aAAa1jB,KAAK2jB,aAAc3jB,KAAK4jB,WAE3C,OAAO5jB,MAAKqE,YfuyHNrD,WAAY,KACZC,aAAc,MelyHrBL,QAAAC,eAAWiiB,EAAAviB,UAAA,kBfwyHJO,IexyHP,WAEC,GAAId,KAAKuC,gBACRvC,KAAKyE,gBAAgBzE,KAAKsjB,gBAAiBtjB,KAAKujB,cAEjD,OAAOvjB,MAAKsjB,iBfwyHNtiB,WAAY,KACZC,aAAc,MenyHrBL,QAAAC,eAAWiiB,EAAAviB,UAAA,gBfyyHJO,IezyHP,WAEC,GAAId,KAAKuC,gBACRvC,KAAKyE,gBAAgBzE,KAAKsjB,gBAAiBtjB,KAAKujB,cAEjD,OAAOvjB,MAAKujB,efyyHNviB,WAAY,KACZC,aAAc,MepyHrBL,QAAAC,eAAWiiB,EAAAviB,UAAA,af0yHJO,Ie1yHP,WAEC,GAAId,KAAKgjB,gBACRhjB,KAAKwjB,gBAAgBxjB,KAAKyjB,WAE3B,OAAOzjB,MAAKyjB,Yf0yHNziB,WAAY,KACZC,aAAc,MeryHrBL,QAAAC,eAAWiiB,EAAAviB,UAAA,ef2yHJO,Ie3yHP,WAEC,GAAId,KAAKijB,aACRjjB,KAAK0jB,aAAa1jB,KAAK2jB,aAAc3jB,KAAK4jB,WAE3C,OAAO5jB,MAAK2jB,cf2yHN3iB,WAAY,KACZC,aAAc,MetyHrBL,QAAAC,eAAWiiB,EAAAviB,UAAA,af4yHJO,Ie5yHP,WAEC,GAAId,KAAKijB,aACRjjB,KAAK0jB,aAAa1jB,KAAK2jB,aAAc3jB,KAAK4jB,WAE3C,OAAO5jB,MAAK4jB,Yf4yHN5iB,WAAY,KACZC,aAAc,MevyHrBL,QAAAC,eAAWiiB,EAAAviB,UAAA,ef6yHJO,Ie7yHP,WAEC,MAAOd,MAAK6jB,cf8yHN7iB,WAAY,KACZC,aAAc,MelyHd6hB,GAAAviB,UAAAyE,qBAAP,WAEC,GAAIhF,KAAK+iB,uBACR/iB,KAAK8jB,mBAAqB9jB,KAAK+jB,eAAe3d,OAAOpG,KAAKgkB,aAE3D,OAAOhkB,MAAK8jB,mBAMNhB,GAAAviB,UAAAkE,gBAAP,SAAuBwf,EAA2BC,GAEjD,GAAI/kB,EACJ,IAAIoI,EACJ,IAAItC,EACJ,IAAIC,EACJ,IAAIrB,EACJ,IAAIsB,EACJ,IAAIc,EAEJjG,MAAKsjB,gBAAkBW,CAEvB,IAAIjkB,KAAKsjB,iBAAmB,KAC3BtjB,KAAKsjB,gBAAkB,GAAIhf,MAE5BtE,MAAKujB,cAAgBW,CAErB,IAAIlkB,KAAKujB,eAAiB,KACzBvjB,KAAKujB,cAAgB,GAAIjf,MAE1BtE,MAAK+iB,uBAAyB,IAE9B/iB,MAAK6jB,aAAe7jB,KAAKsjB,gBAAgB5jB,OAAO,CAEhDM,MAAKoE,cAAgBpE,KAAK6jB,aAAa,CAEvC,IAAI/d,GAAc9F,KAAKoE,cAAcpE,KAAKoF,UAAU0d,EAAgBnf,YAEpE,IAAI3D,KAAKqE,YAAc,KACtBrE,KAAKqE,WAAa,GAAIC,OAAcwB,OAChC,IAAI9F,KAAKqE,WAAW3E,QAAUoG,EAClC9F,KAAKqE,WAAW3E,OAASoG,CAE1B3G,GAAI,CACJoI,GAAI,CACJrC,GAAQlF,KAAKqF,UAAUyd,EAAgBI,oBACvCrf,GAAS7D,KAAKoF,UAAU0d,EAAgBI,oBACxC/d,GAAYnF,KAAKqE,UACjB4B,GAAU,GAAI3B,MAEd,OAAOnF,EAAI8kB,EAAYvkB,OAAQ,CAC9BuF,EAAUC,EAAMrB,EAAS,EAAIqgB,EAAYD,CACzC9e,GAAUD,GAASD,EAAO9F,EAC1BgG,GAAUD,EAAQ,GAAKD,EAAO9F,EAAI,EAClCgG,GAAUD,EAAQ,GAAKD,EAAO9F,EAAI,EAElC8F,GAAUC,EAAMrB,EAAS,EAAIogB,EAAcC,CAC3C/e,GAAUD,EAAQ,GAAKD,EAAO9F,EAC9BgG,GAAUD,EAAQ,GAAKD,EAAO9F,EAAI,EAClCgG,GAAUD,EAAQ,GAAKD,EAAO9F,EAAI,EAElC,MAAMoI,GAAK,EAAG,CACb,GAAIvI,GAAWkG,EAAMrB,EAAS,CAC9BoC,GAAQ8R,KAAK/Y,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAChDuI,GAAI,CACJpI,IAAK,EAGN+F,GAASrB,EAGV7D,KAAKgG,cAAcC,EAEnBjG,MAAKsF,mBAELtF,MAAKuF,uBAELvF,MAAKuC,gBAAkB,MAMjBugB,GAAAviB,UAAAijB,gBAAP,SAAuBve,GAEtB,GAAI9F,EACJ,IAAIoI,EACJ,IAAIrC,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAIib,EAEJ9e,MAAKyjB,WAAaxe,CAElB,IAAIA,GAAU,KAAM,CACnB9F,EAAI,CACJoI,GAAI,CACJ/B,GAASxF,KAAKqF,UAAUyd,EAAgBM,eACxCvf,GAAS7D,KAAKoF,UAAU0d,EAAgBM,eACxCtE,GAAY9e,KAAKqE,UAEjBa,GAAQM,CACR,OAAOrG,EAAI8F,EAAOvF,OAAQ,CACzBof,EAAU5Z,GAAUyD,KAAKwb,MAAM,IAAKjf,EAAQM,GAAQ3B,EAAS,IAAO,GAAKoB,EAAO9F,GAAK8F,EAAO9F,EAE5F,MAAMoI,GAAK,EAAG,CACbA,EAAI,CACJpI,KAED+F,GAASrB,GAIX7D,KAAKokB,uBAELpkB,MAAKgjB,gBAAkB,MAMjBF,GAAAviB,UAAAmjB,aAAP,SAAoBO,EAA2BC,GAE9C,GAAI/kB,EACJ,IAAIoI,EACJ,IAAItC,EACJ,IAAIC,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAIyY,EAEJtc,MAAK2jB,aAAeM,CAEpBjkB,MAAK4jB,WAAaM,CAGlB,IAAIlkB,KAAK2jB,cAAgB,KAAM,CAC9B3jB,KAAK2jB,aAAe,GAAIrf,OAAMtE,KAAK6jB,aAAa,EAEhD1kB,GAAI,CACJ,OAAOA,EAAIa,KAAK2jB,aAAajkB,OAC5BM,KAAK2jB,aAAaxkB,KAAO,EAG3B,GAAIa,KAAK4jB,YAAc,KAAM,CAC5B5jB,KAAK4jB,WAAa,GAAItf,OAAMtE,KAAK6jB,aAAa,EAE9C1kB,GAAI,CACJ,OAAOA,EAAIa,KAAK4jB,WAAWlkB,OAC1BM,KAAK4jB,WAAWzkB,KAAO,EAGzBA,EAAI,CACJoI,GAAI,CACJ/B,GAASxF,KAAKqF,UAAUyd,EAAgBO,WACxCxf,GAAS7D,KAAKoF,UAAU0d,EAAgBO,WACxC/G,GAAStc,KAAKqE,UAEda,GAAQM,CAER,OAAOrG,EAAIa,KAAK2jB,aAAajkB,OAAQ,CACpCuF,GAAWC,EAAQM,GAAQ3B,EAAS,EAAI7D,KAAK4jB,WAAa5jB,KAAK2jB,YAC/DrH,GAAOpX,GAASD,EAAO9F,EACvBmd,GAAOpX,EAAQ,GAAKD,EAAO9F,EAAI,EAC/Bmd,GAAOpX,EAAQ,GAAKD,EAAO9F,EAAI,EAC/Bmd,GAAOpX,EAAQ,GAAKD,EAAO9F,EAAI,EAE/B,MAAMoI,GAAK,EAAG,CACbA,EAAI,CACJpI,IAAK,EAGN+F,GAASrB,EAGV7D,KAAKqkB,oBAELrkB,MAAKijB,aAAe,MAMdH,GAAAviB,UAAAW,QAAP,WAECP,EAAAJ,UAAMW,QAAOzB,KAAAO,KAEbA,MAAKsjB,gBAAkB,IACvBtjB,MAAKujB,cAAgB,IACrBvjB,MAAKyjB,WAAa,IAClBzjB,MAAK2jB,aAAe,IACpB3jB,MAAK4jB,WAAa,KAMZd,GAAAviB,UAAA+E,kBAAP,WAEC,GAAItF,KAAK0a,eACR1a,KAAK0a,eAAeE,kBAAkB5a,MAcjC8iB,GAAAviB,UAAA2F,MAAP,WAEC,GAAIA,GAAwB,GAAI4c,EAChC5c,GAAMF,cAAchG,KAAKmG,UAAUC,SACnCF,GAAMzB,gBAAgBzE,KAAKsjB,gBAAgBld,SAAUpG,KAAKujB,cAAcnd,SACxEF,GAAMsd,gBAAgBxjB,KAAKyjB,WAAWrd,SACtCF,GAAMzB,gBAAgBzE,KAAKsjB,gBAAgBld,SAAUpG,KAAKujB,cAAcnd,SAExE,OAAOF,GAGD4c,GAAAviB,UAAAmF,uBAAP,WAEC1F,KAAKuE,oBAAsB,IAE3BvE,MAAKuF,uBACLvF,MAAKokB,uBACLpkB,MAAKqkB,qBAGEvB,GAAAviB,UAAAgF,sBAAR,WAEC,GAAIvF,KAAKuC,gBACR,MAEDvC,MAAKuC,gBAAkB,IAEvB,KAAKvC,KAAK8I,kBACT9I,KAAK8I,kBAAoB,GAAI1G,GAAiBA,EAAiB2G,iBAAkB8Z,EAAoBjf,cAEtG5D,MAAKgJ,cAAchJ,KAAK8I,mBAGjBga,GAAAviB,UAAA6jB,sBAAR,WAEC,GAAIpkB,KAAKgjB,gBACR,MAEDhjB,MAAKgjB,gBAAkB,IAEvB,KAAKhjB,KAAKskB,kBACTtkB,KAAKskB,kBAAoB,GAAIliB,GAAiBA,EAAiB2G,iBAAkB+Z,EAAgBM,eAElGpjB,MAAKgJ,cAAchJ,KAAKskB,mBAGjBxB,GAAAviB,UAAA8jB,mBAAR,WAEC,GAAIrkB,KAAKijB,aACR,MAEDjjB,MAAKijB,aAAe,IAEpB,KAAKjjB,KAAKukB,cACTvkB,KAAKukB,cAAgB,GAAIniB,GAAiBA,EAAiB2G,iBAAkB+Z,EAAgBO,WAE9FrjB,MAAKgJ,cAAchJ,KAAKukB,eAvaXzB,GAAAnf,YAAqB,UACrBmf,GAAAI,oBAA6B,gBAC7BJ,GAAAK,kBAA2B,cAC3BL,GAAAM,eAAwB,WACxBN,GAAAO,WAAoB,QAGpBP,GAAA3Z,gBAAyB,QACzB2Z,GAAA0B,aAAsB,QACtB1B,GAAA2B,iBAA0B,QAgazC,OAAA3B,IA3a8B5gB,EA6aLtC,GAAAJ,QAAhBsjB,IfkuHN4B,sCAAsC,sCAAsClb,0CAA0C,0CAA0Cmb,8CAA8C,8CAA8Clb,6CAA6C,+CAA+Cib,uCAAuC,SAAShmB,EAAQkB,EAAOJ,GAC1Z,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgB9pItB,IAAOG,GAAS9B,EAAc,oCAI9B,IAAOgL,GAAWhL,EAAc,sChBuqIhC,IgBzpIMkkB,GAAW,SAAAjiB,GAASZ,EAApB6iB,EAAWjiB,EA0BhB,SA1BKiiB,GA0BOjZ,EAA6BC,EAAiBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEzDlJ,EAAAlB,KAAAO,KAEAA,MAAK8J,aAAeF,CACpB5J,MAAK+J,aAAeJ,CACpB3J,MAAK6J,SAAWA,EAzBjBjJ,OAAAC,eAAW+hB,EAAAriB,UAAA,ahBqqIJO,IgBrqIP,WAEC,MAAON,GAAUokB,ehBsqIX5jB,WAAY,KACZC,aAAc,MgBjqIrBL,QAAAC,eAAW+hB,EAAAriB,UAAA,ehBuqIJO,IgBvqIP,WAEC,MAAOd,MAAK+J,chBwqIN/I,WAAY,KACZC,aAAc,MgBppId2hB,GAAAriB,UAAAW,QAAP,WAEClB,KAAK6J,SAAW,IAEhBlJ,GAAAJ,UAAMW,QAAOzB,KAAAO,MAGP4iB,GAAAriB,UAAA0J,oBAAP,SAA2BC,GAE1BA,EAAa2a,iBAAiB7kB,MAEhC,OAAA4iB,IAjD0BlZ,EAmD1B9J,GAAqBJ,QAAZojB,IhBwpINxhB,oCAAoCC,UAAU+I,sCAAsC,wCAAwC0a,sCAAsC,SAASpmB,EAAQkB,EAAOJ,GAC7L,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiBluItB,IAAO0kB,GAAermB,EAAa,yCjBs0InC,IiB/tIMsmB,GAAU,SAAArkB,GAASZ,EAAnBilB,EAAUrkB,EAAhB,SAAMqkB,KAAmBrkB,EAAAskB,MAAAjlB,KAAAklB,WAyBxBtkB,OAAAC,eAAWmkB,EAAAzkB,UAAA,SjB4tIJO,IiB5tIP,WAEC,MAAOd,MAAKmlB,QjB6tINnkB,WAAY,KACZC,aAAc,MiBvtIrBL,QAAAC,eAAWmkB,EAAAzkB,UAAA,ejB8tIJO,IiB9tIP,WAEC,MAAOd,MAAKolB,cjB+tINpkB,WAAY,KACZC,aAAc,MiBptIrBL,QAAAC,eAAWmkB,EAAAzkB,UAAA,cjBguIJO,IiBhuIP,WAEC,MAAOd,MAAKqlB,ajBiuINrkB,WAAY,KACZC,aAAc,MiB/sIrBL,QAAAC,eAAWmkB,EAAAzkB,UAAA,WjBkuIJO,IiBluIP,WAEC,MAAOd,MAAKslB,UjBmuINtkB,WAAY,KACZC,aAAc,MiBttIrBL,QAAAC,eAAWmkB,EAAAzkB,UAAA,ejBouIJO,IiBpuIP,WAEC,MAAOd,MAAKulB,cjBquINvkB,WAAY,KACZC,aAAc,MiBjtIrBL,QAAAC,eAAWmkB,EAAAzkB,UAAA,UjBsuIJO,IiBtuIP,WAEC,MAAOd,MAAKwlB,SjBuuINxkB,WAAY,KACZC,aAAc,MiBvtIrBL,QAAAC,eAAWmkB,EAAAzkB,UAAA,OjBwuIJO,IiBxuIP,WAEC,MAAOd,MAAKylB,MjByuINzkB,WAAY,KACZC,aAAc,MiBxuItB,OAAA+jB,IAnIyBD,EAqILnlB,GAAAJ,QAAXwlB,IjB6uINU,yCAAyCrkB,YAAYyY,2CAA2C,SAASpb,EAAQkB,EAAOJ,GkBz9I3H,GAAMqL,GAAe,WAArB,QAAMA,MAKSA,EAAAiD,QAAiB,SAKjBjD,GAAAwK,aAAsB,aAKtBxK,GAAA8a,gBAAyB,gBACxC,OAAA9a,KAEyBjL,GAAAJ,QAAhBqL,OlB49IH+a,yCAAyC,SAASlnB,EAAQkB,EAAOJ,GAMvE,GmB/+IMqmB,GAAa,WAAnB,QAAMA,MAOSA,EAAAC,OAAgB,QAWhBD,GAAAE,KAAc,MAMdF,GAAAG,MAAe,OAC9B,OAAAH,KAEAjmB,GAAuBJ,QAAdqmB,OnBi/IHI,wCAAwC,SAASvnB,EAAQkB,EAAOJ,GAStE,GoBlhJM0mB,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,IAAa,KAKbD,GAAAE,QAAiB,SAKjBF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAtmB,GAAsBJ,QAAb0mB,OpBohJH1c,2CAA2C,SAAS9K,EAAQkB,EAAOJ,GACzE,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqBnjJtB,IAAOI,GAAc/B,EAAa,yCAGlC,IAAOkM,GAAmBlM,EAAY,6CAItC,IAAO0D,GAAgB1D,EAAa,6CrBojJpC,IqB/iJMwD,GAAe,SAAAvB,GAASZ,EAAxBmC,EAAevB,EAuFpB,SAvFKuB,GAuFOI,GAEX3B,EAAAlB,KAAAO,KArFMA,MAAAuE,oBAA8B,IAS9BvE,MAAAsmB,oBAA8B,IAI9BtmB,MAAAkE,SAAkB,GAAItD,OACtBZ,MAAA0D,SAAkB,GAAI9C,OAyE5BZ,MAAKsmB,oBAAsBhkB,EAvErBJ,EAAA3B,UAAAkD,qBAAP,WAEC,KAAM,IAAImH,GAKXhK,QAAAC,eAAWqB,EAAA3B,UAAA,gBrBqiJJO,IqBriJP,WAEC,MAAOd,MAAKqD,gBrBsiJNrC,WAAY,KACZC,aAAc,MqBjiJrBL,QAAAC,eAAWqB,EAAA3B,UAAA,qBrBuiJJO,IqBviJP,WAEC,MAAOd,MAAKsmB,qBrBwiJN/iB,IqBriJP,SAA6BC,GAE5B,GAAIxD,KAAKsmB,qBAAuB9iB,EAC/B,MAEDxD,MAAKsmB,oBAAsB9iB,CAE3BxD,MAAKuE,oBAAsB,IAE3B,IAAIf,EACHxD,KAAK0F,0BrBmiJA1E,WAAY,KACZC,aAAc,MqB9hJrBL,QAAAC,eAAWqB,EAAA3B,UAAA,WrBoiJJO,IqBpiJP,WAEC,MAAOd,MAAKmG,WrBqiJNnF,WAAY,KACZC,aAAc,MqBhiJrBL,QAAAC,eAAWqB,EAAA3B,UAAA,YrBsiJJO,IqBtiJP,WAECd,KAAKumB,gBAEL,OAAOvmB,MAAKqE,YrBsiJNrD,WAAY,KACZC,aAAc,MqBjiJrBL,QAAAC,eAAWqB,EAAA3B,UAAA,gBrBuiJJO,IqBviJP,WAEC,MAAOd,MAAKwmB,erBwiJNxlB,WAAY,KACZC,aAAc,MqBtiJrBL,QAAAC,eAAWqB,EAAA3B,UAAA,erByiJJO,IqBziJP,WAEC,MAAOd,MAAKoE,erB0iJNpD,WAAY,KACZC,aAAc,MqB3hJdiB,GAAA3B,UAAA6E,UAAP,SAAiBqhB,GAEhB,GAAIzmB,KAAKuE,oBACRvE,KAAKyD,sBAEN,OAAOzD,MAAKkE,SAASuiB,GAMfvkB,GAAA3B,UAAA8E,UAAP,SAAiBohB,GAEhB,GAAIzmB,KAAKuE,oBACRvE,KAAKyD,sBAEN,OAAOzD,MAAK0D,SAAS+iB,GAGfvkB,GAAA3B,UAAAgmB,eAAP,WAEC,KAAM,IAAI3b,GAMJ1I,GAAA3B,UAAAW,QAAP,WAEClB,KAAKmG,UAAY,IACjBnG,MAAKqE,WAAa,KAQZnC,GAAA3B,UAAAyF,cAAP,SAAqBC,GAEpBjG,KAAKmG,UAAYF,CACjBjG,MAAK0mB,YAAczgB,EAAQvG,MAE3BM,MAAKwmB,cAAgBxmB,KAAK0mB,YAAY,CAEtC1mB,MAAK2mB,sBAMCzkB,GAAA3B,UAAA+E,kBAAP,WAEC,GAAItF,KAAK0a,eACR1a,KAAK0a,eAAeE,kBAAkB5a,MAcjCkC,GAAA3B,UAAA2F,MAAP,WAEC,KAAM,IAAI0E,GAGJ1I,GAAA3B,UAAAoG,oBAAP,SAA2BC,GAE3BggB,QAAQC,IAAI,SAOL3kB,GAAA3B,UAAAmG,MAAP,SAAaA,IAKNxE,GAAA3B,UAAA8F,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,GAK3BrE,GAAA3B,UAAAyE,qBAAP,WAEC,KAAM,IAAI4F,GAGH1I,GAAA3B,UAAAomB,oBAAR,WAEC,IAAK3mB,KAAK8mB,gBACT9mB,KAAK8mB,gBAAkB,GAAI1kB,GAAiBA,EAAiB2kB,gBAE9D/mB,MAAKgJ,cAAchJ,KAAK8mB,iBAGlB5kB,GAAA3B,UAAAmF,uBAAP,WAEC,KAAM,IAAIkF,GA1MG1I,GAAAyB,YAAqB,UA4MpC,OAAAzB,IA9M8BzB,EAgN9Bb,GAAyBJ,QAAhB0C,IrB+/INqX,6CAA6ClY,UAAUC,yCAAyCD,UAAUoI,6CAA6C,+CAA+CW,uCAAuC,SAAS1L,EAAQkB,EAAOJ,GACxQ,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsBhuJtB,IAAOuK,GAAmBlM,EAAa,6CAGvC,IAAO+B,GAAc/B,EAAc,yCtB0uJnC,IsBxtJMgL,GAAW,SAAA/I,GAASZ,EAApB2J,EAAW/I,EA4EhB,SA5EK+I,KA8EJ/I,EAAAlB,KAAAO,KAzEMA,MAAAgnB,QAAiB,CAGhBhnB,MAAAinB,aAAkC,GAAI3iB,OAY9C1D,OAAAC,eAAW6I,EAAAnJ,UAAA,YtBwtJJO,IsBxtJP,WAEC,MAAOd,MAAK8J,aAAaod,UtBytJnBlmB,WAAY,KACZC,aAAc,MsBptJrBL,QAAAC,eAAW6I,EAAAnJ,UAAA,YtB0tJJO,IsB1tJP,WAEC,MAAOd,MAAKmnB,WAAannB,KAAK8J,aAAaD,UtB2tJrCtG,IsBxtJP,SAAoBC,GAEnB,GAAIxD,KAAK6J,SACR7J,KAAK6J,SAASud,aAAapnB,KAE5BA,MAAKmnB,UAAY3jB,CAEjB,IAAIxD,KAAK6J,SACR7J,KAAK6J,SAASwd,UAAUrnB,OtButJnBgB,WAAY,KACZC,aAAc,MsBltJrBL,QAAAC,eAAW6I,EAAAnJ,UAAA,kBtBwtJJO,IsBxtJP,WAEC,MAAOd,MAAK8J,aAAaqF,gBtBytJnBnO,WAAY,KACZC,aAAc,MsBptJrBL,QAAAC,eAAW6I,EAAAnJ,UAAA,ctB0tJJO,IsB1tJP,WAEC,MAAOd,MAAK8J,ctB2tJN9I,WAAY,KACZC,aAAc,MsBttJrBL,QAAAC,eAAW6I,EAAAnJ,UAAA,etB4tJJO,IsB5tJP,WAEC,MAAOd,MAAKsnB,cAAgBtnB,KAAK8J,aAAayd,atB6tJxChkB,IsB1tJP,SAAuBC,GAEtBxD,KAAKsnB,aAAe9jB,GtB2tJdxC,WAAY,KACZC,aAAc,MsB9sJdyI,GAAAnJ,UAAAW,QAAP,WAEClB,KAAK6J,SAAW,IAEhB,IAAI1F,GAAanE,KAAKinB,aAAavnB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAKinB,aAAa9nB,GAAG+B,SAEtBlB,MAAKinB,aAAe,GAAI3iB,OAQlBoF,GAAAnJ,UAAA4U,wBAAP,SAA+BC,GAE9B,MAAOpV,MAAK8J,aAAaqL,wBAAwBC,GAG3C1L,GAAAnJ,UAAAsX,gBAAP,SAAuBC,GAEtB9X,KAAKinB,aAAalP,KAAKD,EAEvB,OAAOA,GAIDpO,GAAAnJ,UAAAyX,mBAAP,SAA0BF,GAEzB,GAAI5S,GAAelF,KAAKinB,aAAahP,QAAQH,EAE7C9X,MAAKinB,aAAa/O,OAAOhT,EAAO,EAEhC,OAAO4S,GAGDpO,GAAAnJ,UAAAinB,+BAAP,WAEC,GAAIrjB,GAAanE,KAAKinB,aAAavnB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAKinB,aAAa9nB,GAAGsoB,qBAGhB/d,GAAAnJ,UAAA0J,oBAAP,SAA2BC,GAE1B,KAAM,IAAIU,GAGJlB,GAAAnJ,UAAAmnB,sBAAP,WAEC,MAAO1nB,MAAKmnB,UAEd,OAAAzd,IA1I0BjJ,EA4I1Bb,GAAqBJ,QAAZkK,ItBmsJN6P,6CAA6ClY,UAAUC,yCAAyCD,YAAY0Y,qCAAqC,SAASrb,EAAQkB,EAAOJ,GuBl2J5K,GAAOiL,GAAQ/L,EAAe,gCAC9B,IAAOgM,GAAahM,EAAa,qCAEjC,IAAOuD,GAAQvD,EAAe,gCvBy5J9B,IuB91JMoM,GAAS,WA0Md,QA1MKA,GA0MO6c,GApML3nB,KAAA4nB,UAAqB,GAAI3lB,EAsM/BjC,MAAK6nB,eAAiBF,EAjMvB/mB,OAAAC,eAAWiK,EAAAvK,UAAA,cvB41JJO,IuB51JP,WAEC,GAAIgnB,GAAoBpd,EAAcqd,WAAW/nB,KAAK6nB,eAAe9V,WACrE+V,GAASE,QAET,OAAOF,IvB41JD9mB,WAAY,KACZC,aAAc,MuB30JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,8BvBq1JJO,IuBr1JP,WAEC,MAAOd,MAAKioB,6BvBs1JNjnB,WAAY,KACZC,aAAc,MuBz0JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,sBvBu1JJO,IuBv1JP,WAEC,MAAOd,MAAKkoB,qBvBw1JNlnB,WAAY,KACZC,aAAc,MuBn1JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,cvBy1JJO,IuBz1JP,WAEC,GAAIgnB,GAAoBpd,EAAcyd,MAAMnoB,KAAK6nB,eAAe9V,WAChE+V,GAASE,QAET,OAAOF,IvBy1JD9mB,WAAY,KACZC,aAAc,MuBp1JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,iBvB01JJO,IuB11JP,WAEC,MAAO4J,GAAcqd,WAAW/nB,KAAK6nB,eAAe9V,avB21J9C/Q,WAAY,KACZC,aAAc,MuBt1JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,cvB41JJO,IuB51JP,WAEC,GAAIgnB,GAAoBpd,EAAc0d,SAASpoB,KAAK6nB,eAAe9V,WACnE+V,GAASE,QAET,OAAOF,IvB41JD9mB,WAAY,KACZC,aAAc,MuBh0JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,YvB+0JJO,IuB/0JP,WAEC,MAAOd,MAAK6nB,eAAe9V,YvBg1JrBxO,IuB70JP,SAAoBiL,GAEnBxO,KAAK6nB,eAAe9V,WAAavD,GvB80J3BxN,WAAY,KACZC,aAAc,MuB7zJrBL,QAAAC,eAAWiK,EAAAvK,UAAA,evBo0JJO,IuBp0JP,WAEC,MAAOd,MAAKqoB,cvBq0JNrnB,WAAY,KACZC,aAAc,MuBh0JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,YvBs0JJO,IuBt0JP,WAEC,MAAOd,MAAK6nB,eAAe9V,WAAWmB,UvBu0JhC3P,IuBp0JP,SAAoBC,GAEnBxD,KAAK6nB,eAAe1gB,EAAI3D,EAAM2D,CAC9BnH,MAAK6nB,eAAezgB,EAAI5D,EAAM4D,CAC9BpH,MAAK6nB,eAAexgB,EAAI7D,EAAM6D,GvBq0JxBrG,WAAY,KACZC,aAAc,MuBh0JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,evBs0JJO,IuBt0JP,WAEC,MAAO4J,GAAc0d,SAASpoB,KAAK6nB,eAAe9V,avBu0J5C/Q,WAAY,KACZC,aAAc,MuBl0JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,YvBw0JJO,IuBx0JP,WAEC,MAAO,IAAImB,GAASjC,KAAK6nB,eAAexX,UAAWrQ,KAAK6nB,eAAevX,UAAWtQ,KAAK6nB,eAAetX,YvBy0JhGhN,IuBt0JP,SAAoBC,GAEnBxD,KAAK6nB,eAAexX,UAAY7M,EAAM2D,CACtCnH,MAAK6nB,eAAevX,UAAY9M,EAAM4D,CACtCpH,MAAK6nB,eAAetX,UAAY/M,EAAM6D,GvBu0JhCrG,WAAY,KACZC,aAAc,MuBl0JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,SvBw0JJO,IuBx0JP,WAEC,MAAO,IAAImB,GAASjC,KAAK6nB,eAAeS,OAAQtoB,KAAK6nB,eAAeU,OAAQvoB,KAAK6nB,eAAeW,SvBy0J1FjlB,IuBt0JP,SAAiBC,GAEhBxD,KAAK6nB,eAAeS,OAAS9kB,EAAM2D,CACnCnH,MAAK6nB,eAAeU,OAAS/kB,EAAM4D,CACnCpH,MAAK6nB,eAAeW,OAAShlB,EAAM6D,GvBu0J7BrG,WAAY,KACZC,aAAc,MuBl0JrBL,QAAAC,eAAWiK,EAAAvK,UAAA,YvBw0JJO,IuBx0JP,WAEC,MAAO4J,GAAcyd,MAAMnoB,KAAK6nB,eAAe9V,avBy0JzC/Q,WAAY,KACZC,aAAc,MuBhzJd6J,GAAAvK,UAAAkoB,oBAAP,SAA2BC,GAE1B,MAAO,IAAIje,GASLK,GAAAvK,UAAAooB,YAAP,SAAmBtS,GAElBrW,KAAK6nB,eAAevR,eAAerU,EAAS0T,OAAQU,GAQ9CvL,GAAAvK,UAAAqoB,aAAP,SAAoBvS,GAEnBrW,KAAK6nB,eAAevR,eAAerU,EAAS0T,QAASU,GAS/CvL,GAAAvK,UAAAsoB,SAAP,SAAgBxS,GAEfrW,KAAK6nB,eAAevR,eAAerU,EAASiT,QAASmB,GAQ/CvL,GAAAvK,UAAAuoB,UAAP,SAAiBzS,GAEhBrW,KAAK6nB,eAAevR,eAAerU,EAASiT,OAAQmB,GAQ9CvL,GAAAvK,UAAAwoB,OAAP,SAAc1S,GAEbrW,KAAK6nB,eAAevR,eAAerU,EAAS8R,OAAQsC,GAQ9CvL,GAAAvK,UAAAyoB,SAAP,SAAgB3S,GAEfrW,KAAK6nB,eAAevR,eAAerU,EAAS8R,QAASsC,GAEvD,OAAAvL,KAEmBlL,GAAAJ,QAAVsL,IvBwzJN4O,gCAAgCrY,UAAUsY,qCAAqCtY,UAAUiI,gCAAgCjI,YAAY4nB,2CAA2C,SAASvqB,EAAQkB,EAAOJ,GAsB3M,GwB9pKM0pB,GAAe,WAArB,QAAMA,MAKSA,EAAAC,SAAkB,UAKlBD,GAAApnB,KAAc,MAMdonB,GAAAE,SAAkB,UACjC,OAAAF,KAEAtpB,GAAyBJ,QAAhB0pB,OxBgqKHvE,+CAA+C,SAASjmB,EAAQkB,EAAOJ,GAC7E,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyB5sKtB,IAAO4B,GAAQvD,EAAe,gCAE9B,IAAOwD,GAAexD,EAAa,0CACnC,IAAO2qB,GAAe3qB,EAAa,0CACnC,IAAO0D,GAAgB1D,EAAa,6CzBitKpC,IyB5sKMmkB,GAAmB,SAAAliB,GAASZ,EAA5B8iB,EAAmBliB,EA+axB,SA/aKkiB,GA+aOvgB,GAEX3B,EAAAlB,KAAAO,KAAMsC,EAhaCtC,MAAAuC,gBAA0B,IAC1BvC,MAAAyC,kBAA4B,IAC5BzC,MAAAspB,mBAA6B,IAC7BtpB,MAAA0C,oBAA8B,IAC9B1C,MAAAupB,qBAA+B,IAC/BvpB,MAAA2C,UAAoB,IACpB3C,MAAA4C,mBAA6B,IAC7B5C,MAAA6C,mBAA6B,IAC7B7C,MAAA8C,mBAA6B,IAiB7B9C,MAAA+C,mBAA6B,IAC7B/C,MAAAgD,mBAA6B,IAC7BhD,MAAAwpB,oBAA8B,IAC9BxpB,MAAAkD,eAAyB,KACzBlD,MAAAiD,gBAA0B,KAM1BjD,MAAAmD,QAAiB,CACjBnD,MAAAoD,QAAiB,CA8XxBpD,MAAKqD,eAAiBgmB,EAjXvBzoB,OAAAC,eAAWgiB,EAAAtiB,UAAA,UzBuqKJO,IyBvqKP,WAEC,MAAOd,MAAKmD,SzBwqKNnC,WAAY,KACZC,aAAc,MyBnqKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,UzByqKJO,IyBzqKP,WAEC,MAAOd,MAAKoD,SzB0qKNpC,WAAY,KACZC,aAAc,MyBnqKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,uBzB2qKJO,IyB3qKP,WAEC,MAAOd,MAAKsD,sBzB4qKNC,IyBzqKP,SAA+BC,GAE9B,GAAIxD,KAAKsD,sBAAwBE,EAChC,MAEDxD,MAAKsD,qBAAuBE,CAE5BxD,MAAKypB,4BzBwqKCzoB,WAAY,KACZC,aAAc,MyBtqKd4hB,GAAAtiB,UAAAkD,qBAAP,WAEC,GAAIzD,KAAK+C,mBAAoB,CAC5B/C,KAAK0D,SAASmf,EAAoBlf,aAAe,CAGjD3D,MAAK0D,SAASmf,EAAoBjf,eAAiB,CACnD,IAAIC,GAAgB,CAEpB,IAAI7D,KAAK0pB,gBAAkB,KAAM,CAChC1pB,KAAK0D,SAASmf,EAAoB8G,aAAe9lB,CACjDA,IAAU,EAGX,GAAI7D,KAAK4pB,iBAAmB,KAAM,CACjC5pB,KAAK0D,SAASmf,EAAoBgH,cAAgBhmB,CAClDA,IAAU,EAGX,GAAI7D,KAAKgE,MAAQ,KAAM,CACtBhE,KAAK0D,SAASmf,EAAoB5e,SAAWJ,CAC7CA,IAAU,EAGX,GAAI7D,KAAK8pB,eAAiB,KAAM,CAC/B9pB,KAAK0D,SAASmf,EAAoBkH,mBAAqBlmB,CACvDA,IAAU,EAGX,GAAI7D,KAAKgqB,eAAiB,KAAM,CAC/BhqB,KAAK0D,SAASmf,EAAoBoH,kBAAoBpmB,CACtDA,IAAU7D,KAAKkqB,iBAGhB,GAAIlqB,KAAKmqB,eAAiB,KAAM,CAC/BnqB,KAAK0D,SAASmf,EAAoBuH,mBAAqBvmB,CACvDA,IAAU7D,KAAKkqB,iBAGhBlqB,KAAKkE,SAAS2e,EAAoBlf,aAAeE,CACjD7D,MAAKkE,SAAS2e,EAAoBjf,eAAiBC,CACnD7D,MAAKkE,SAAS2e,EAAoB8G,aAAe9lB,CACjD7D,MAAKkE,SAAS2e,EAAoBgH,cAAgBhmB,CAClD7D,MAAKkE,SAAS2e,EAAoB5e,SAAWJ,CAC7C7D,MAAKkE,SAAS2e,EAAoBkH,mBAAqBlmB,CACvD7D,MAAKkE,SAAS2e,EAAoBoH,kBAAoBpmB,CACtD7D,MAAKkE,SAAS2e,EAAoBuH,mBAAqBvmB,CAEvD,IAAIM,GAAanE,KAAKoE,cAAcP,CAEpC,IAAI7D,KAAKqE,YAAc,KACtBrE,KAAKqE,WAAa,GAAIC,OAAcH,OAChC,IAAInE,KAAKqE,WAAW3E,QAAUyE,EAClCnE,KAAKqE,WAAW3E,OAASyE,MAEpB,CACNnE,KAAK0D,SAASmf,EAAoBjf,eAAiB,CACnD5D;KAAK0D,SAASmf,EAAoB8G,aAAe,CACjD3pB,MAAK0D,SAASmf,EAAoBgH,cAAgB,CAClD7pB,MAAK0D,SAASmf,EAAoB5e,SAAW,CAC7CjE,MAAK0D,SAASmf,EAAoBkH,mBAAqB,CACvD/pB,MAAK0D,SAASmf,EAAoBoH,kBAAoB,CACtDjqB,MAAK0D,SAASmf,EAAoBuH,mBAAqB,CAEvDpqB,MAAKkE,SAAS2e,EAAoBjf,eAAiB,CACnD5D,MAAKkE,SAAS2e,EAAoB8G,aAAe,CACjD3pB,MAAKkE,SAAS2e,EAAoBgH,cAAgB,CAClD7pB,MAAKkE,SAAS2e,EAAoB5e,SAAW,CAC7CjE,MAAKkE,SAAS2e,EAAoBkH,mBAAqB,CACvD/pB,MAAKkE,SAAS2e,EAAoBoH,kBAAoBjqB,KAAKkqB,gBAC3DlqB,MAAKkE,SAAS2e,EAAoBuH,mBAAqBpqB,KAAKkqB,iBAG7DlqB,KAAKuE,oBAAsB,MAM5B3D,QAAAC,eAAWgiB,EAAAtiB,UAAA,mBzB2pKJO,IyB3pKP,WAEC,MAAOd,MAAKkqB,kBzB4pKN3mB,IyBzpKP,SAA2BC,GAE1B,GAAIxD,KAAKkqB,kBAAoB1mB,EAC5B,MAEDxD,MAAKkqB,iBAAmB1mB,CAExBxD,MAAKuE,oBAAsB,IAE3B,IAAIvE,KAAKsmB,oBACRtmB,KAAK0F,0BzBupKA1E,WAAY,KACZC,aAAc,MyBhpKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,iBzBwpKJO,IyBxpKP,WAEC,MAAOd,MAAKkD,gBzBypKNK,IyBtpKP,SAAyBC,GAExB,GAAIxD,KAAKkD,gBAAkBM,EAC1B,MAEDxD,MAAKkD,eAAiBM,CAEtB,IAAIA,EACHxD,KAAKwE,mBzBqpKAxD,WAAY,KACZC,aAAc,MyB/oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,qBzBspKJO,IyBtpKP,WAEC,MAAOd,MAAKgD,oBzBupKNO,IyBppKP,SAA6BC,GAE5B,GAAIxD,KAAKgD,oBAAsBQ,EAC9B,MAEDxD,MAAKgD,mBAAqBQ,CAE1B,IAAIA,EACHxD,KAAKqqB,uBzBmpKArpB,WAAY,KACZC,aAAc,MyB7oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,sBzBopKJO,IyBppKP,WAEC,MAAOd,MAAKwpB,qBzBqpKNjmB,IyBlpKP,SAA8BC,GAE7B,GAAIxD,KAAKwpB,qBAAuBhmB,EAC/B,MAEDxD,MAAKwpB,oBAAsBhmB,CAE3B,IAAIA,EACHxD,KAAKsqB,wBzBipKAtpB,WAAY,KACZC,aAAc,MyB5oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,YzBkpKJO,IyBlpKP,WAEC,GAAId,KAAKuC,gBACRvC,KAAKyE,gBAAgBzE,KAAK0E,WAE3B,IAAI1E,KAAK0C,oBACR1C,KAAKuqB,oBAAoBvqB,KAAK0pB,eAE/B,IAAI1pB,KAAKupB,qBACRvpB,KAAKwqB,qBAAqBxqB,KAAK4pB,gBAEhC,IAAI5pB,KAAK2C,UACR3C,KAAK4E,UAAU5E,KAAKgE,KAErB,IAAIhE,KAAK4C,mBACR5C,KAAKyqB,mBAAmBzqB,KAAK8pB,cAE9B,IAAI9pB,KAAK6C,mBACR7C,KAAK0qB,mBAAmB1qB,KAAKgqB,cAE9B,IAAIhqB,KAAK8C,mBACR9C,KAAK2qB,mBAAmB3qB,KAAKmqB,cAE9B,OAAOnqB,MAAKqE,YzB4oKNrD,WAAY,KACZC,aAAc,MyBvoKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,azB6oKJO,IyB7oKP,WAEC,GAAId,KAAKuC,gBACRvC,KAAKyE,gBAAgBzE,KAAK0E,WAE3B,OAAO1E,MAAK0E,YzB6oKN1D,WAAY,KACZC,aAAc,MyBxoKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,iBzB8oKJO,IyB9oKP,WAEC,GAAId,KAAK0C,oBACR1C,KAAKuqB,oBAAoBvqB,KAAK0pB,eAE/B,OAAO1pB,MAAK0pB,gBzB8oKN1oB,WAAY,KACZC,aAAc,MyBzoKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,kBzB+oKJO,IyB/oKP,WAEC,GAAId,KAAKupB,qBACRvpB,KAAKwqB,qBAAqBxqB,KAAK4pB,gBAEhC,OAAO5pB,MAAK4pB,iBzB+oKN5oB,WAAY,KACZC,aAAc,MyB1oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,ezBgpKJO,IyBhpKP,WAEC,GAAId,KAAKyC,kBACRzC,KAAK6E,mBAEN,OAAO7E,MAAK8E,czBgpKN9D,WAAY,KACZC,aAAc,MyB3oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,gBzBipKJO,IyBjpKP,WAEC,GAAId,KAAKspB,mBACRtpB,KAAK4qB,oBAEN,OAAO5qB,MAAK6qB,ezBipKN7pB,WAAY,KACZC,aAAc,MyB5oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,OzBkpKJO,IyBlpKP,WAEC,GAAId,KAAK2C,UACR3C,KAAK4E,UAAU5E,KAAKgE,KAErB,OAAOhE,MAAKgE,MzBkpKNhD,WAAY,KACZC,aAAc,MyB7oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,gBzBmpKJO,IyBnpKP,WAEC,GAAId,KAAK4C,mBACR5C,KAAKyqB,mBAAmBzqB,KAAK8pB,cAE9B,OAAO9pB,MAAK8pB,ezBmpKN9oB,WAAY,KACZC,aAAc,MyB9oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,gBzBopKJO,IyBppKP,WAEC,GAAId,KAAK6C,mBACR7C,KAAK0qB,mBAAmB1qB,KAAKgqB,cAE9B,IAAIhqB,KAAKsD,qBACR,MAAOtD,MAAK8qB,sBAEb,OAAO9qB,MAAKgqB,ezBmpKNhpB,WAAY,KACZC,aAAc,MyB9oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,gBzBopKJO,IyBppKP,WAEC,GAAId,KAAK8C,mBACR9C,KAAK2qB,mBAAmB3qB,KAAKmqB,cAE9B,OAAOnqB,MAAKmqB,ezBopKNnpB,WAAY,KACZC,aAAc,MyB/oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,kBzBqpKJO,IyBrpKP,WAEC,MAAOd,MAAKiD,iBzBspKNM,IyBnpKP,SAA0BC,GAEzB,GAAIxD,KAAKiD,iBAAmBO,EAC3B,MAEDxD,MAAKiD,gBAAkBO,CAEvB,IAAIxD,KAAKgD,mBACRhD,KAAKqqB,qBAEN,IAAIrqB,KAAKwpB,oBACRxpB,KAAKsqB,sBAENtqB,MAAKyC,kBAAoB,MzBgpKnBzB,WAAY,KACZC,aAAc,MyB9oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,sBzBipKJO,IyBjpKP,WAEC,GAAId,KAAK6C,mBACR7C,KAAK0qB,mBAAmB1qB,KAAKgqB,cAE9B,OAAOhqB,MAAK+qB,qBzBipKN/pB,WAAY,KACZC,aAAc,MyB/oKrBL,QAAAC,eAAWgiB,EAAAtiB,UAAA,wBzBkpKJO,IyBlpKP,WAEC,GAAId,KAAK6C,mBACR7C,KAAK0qB,mBAAmB1qB,KAAKgqB,cAE9B,OAAOhqB,MAAK+E,uBzBkpKN/D,WAAY,KACZC,aAAc,MyBtoKd4hB,GAAAtiB,UAAAyE,qBAAP,WAEC,GAAIhF,KAAKuC,gBACRvC,KAAKyE,gBAAgBzE,KAAK0E,WAE3B,OAAO1E,MAAK0E,WAMNme,GAAAtiB,UAAAkE,gBAAP,SAAuBQ,GAEtB,GAAI9F,EACJ,IAAI+F,EACJ,IAAIrB,EACJ,IAAIsB,EAEJnF,MAAK0E,WAAaO,CAElB,IAAIjF,KAAK0E,YAAc,KACtB1E,KAAK0E,WAAa,GAAIJ,MAEvBtE,MAAKoE,cAAgBpE,KAAK0E,WAAWhF,OAAO,CAE5C,IAAIM,KAAK+C,mBAAoB,CAC5B,GAAIoB,GAAanE,KAAKoE,cAAcpE,KAAKoF,UAAUyd,EAAoBlf,YAEvE,IAAI3D,KAAKqE,YAAc,KACtBrE,KAAKqE,WAAa,GAAIC,OAAcH,OAChC,IAAInE,KAAKqE,WAAW3E,QAAUyE,EAClCnE,KAAKqE,WAAW3E,OAASyE,CAE1BhF,GAAI,CACJ+F,GAAQlF,KAAKqF,UAAUwd,EAAoBjf,cAC3CC,GAAS7D,KAAKoF,UAAUyd,EAAoBjf,cAC5CuB,GAAYnF,KAAKqE,UAEjB,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACzByF,EAAUD,GAASD,EAAO9F,IAC1BgG,GAAUD,EAAQ,GAAKD,EAAO9F,IAC9BgG,GAAUD,EAAQ,GAAKD,EAAO9F,IAC9B+F,IAASrB,GAIX,GAAI7D,KAAKgD,mBACRhD,KAAKqqB,qBAEN,IAAIrqB,KAAKwpB,oBACRxpB,KAAKsqB,sBAEN,IAAItqB,KAAKkD,eACRlD,KAAKwE,iBAENxE,MAAKsF,mBAELtF,MAAKuF,uBAELvF,MAAKuC,gBAAkB,MAMjBsgB,GAAAtiB,UAAAgqB,oBAAP,SAA2BtlB,GAE1B,GAAI9F,EACJ,IAAI+F,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAImnB,EAEJ,KAAKhrB,KAAKgD,mBAAoB,CAC7B,IAAKhD,KAAK0pB,gBAAkB,MAAQzkB,GAAU,QAAUjF,KAAK0pB,gBAAkB,MAAQzkB,GAAU,MAAO,CACvG,GAAIjF,KAAK+C,mBACR/C,KAAK0F,6BAEL1F,MAAKuE,oBAAsB,KAG7BvE,KAAK0pB,eAAiBzkB,CAEtB,IAAIA,GAAU,MAAQjF,KAAK+C,mBAAoB,CAC9C5D,EAAI,CACJ+F,GAAQlF,KAAKqF,UAAUwd,EAAoB8G,YAC3C9lB,GAAS7D,KAAKoF,UAAUyd,EAAoB8G,YAC5CqB,GAAUhrB,KAAKqE,UAEf,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACzBsrB,EAAQ9lB,GAASD,EAAO9F,IACxB6rB,GAAQ9lB,EAAQ,GAAKD,EAAO9F,IAC5B6rB,GAAQ9lB,EAAQ,GAAKD,EAAO9F,IAC5B+F,IAASrB,QAGL,CACN,GAAI7D,KAAK0pB,gBAAkB,KAAM,CAChC1pB,KAAK0pB,eAAiB,GAAIplB,OAActE,KAAK0E,WAAWhF,OAExD,IAAIM,KAAK+C,mBACR/C,KAAK0F,6BAEL1F,MAAKuE,oBAAsB,KAG7B,GAAIvE,KAAKyC,kBACRzC,KAAK6E,mBAENW,GAASxF,KAAKqF,UAAUwd,EAAoB8G,YAC5C9lB,GAAS7D,KAAKoF,UAAUyd,EAAoB8G,YAG5CqB,GAAUhrB,KAAK+C,mBAAoB/C,KAAKqE,WAAarE,KAAK0pB,cAE1D,IAAIuB,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAEhBjmB,GAAQM,CzB8mKC,IyB3mKLM,GAAcklB,EAAQtrB,MAC1B,OAAOwF,EAAQY,EAAM,CACpBklB,EAAQ9lB,GAAS,CACjB8lB,GAAQ9lB,EAAQ,GAAK,CACrB8lB,GAAQ9lB,EAAQ,GAAK,CACrBA,IAASrB,EAGV,GAAI2D,GAAW,CACf,IAAI4jB,GAAcprB,KAAKmG,UAAUzG,MACjC,IAAI2rB,EAEJlsB,GAAI,CAGJ,OAAOA,EAAIisB,EAAM,CAChBC,EAASrrB,KAAKiD,gBAAiBjD,KAAK+F,aAAayB,KAAO,CACxDtC,GAAQM,EAASxF,KAAKmG,UAAUhH,KAAK0E,CACrCmnB,GAAQ9lB,IAAUlF,KAAK8E,aAAammB,GAAII,CACxCL,GAAQ9lB,EAAQ,IAAMlF,KAAK8E,aAAaomB,GAAIG,CAC5CL,GAAQ9lB,EAAQ,IAAMlF,KAAK8E,aAAaqmB,GAAIE,CAC5CnmB,GAAQM,EAASxF,KAAKmG,UAAUhH,KAAK0E,CACrCmnB,GAAQ9lB,IAAUlF,KAAK8E,aAAammB,GAAII,CACxCL,GAAQ9lB,EAAQ,IAAMlF,KAAK8E,aAAaomB,GAAIG,CAC5CL,GAAQ9lB,EAAQ,IAAMlF,KAAK8E,aAAaqmB,GAAIE,CAC5CnmB,GAAQM,EAASxF,KAAKmG,UAAUhH,KAAK0E,CACrCmnB,GAAQ9lB,IAAUlF,KAAK8E,aAAammB,GAAII,CACxCL,GAAQ9lB,EAAQ,IAAMlF,KAAK8E,aAAaomB,GAAIG,CAC5CL,GAAQ9lB,EAAQ,IAAMlF,KAAK8E,aAAaqmB,GAAIE,CAC5CJ,IAAM,CACNC,IAAM,CACNC,IAAM,EAGPhsB,EAAI,CACJ+F,GAAQM,CAGR,OAAON,EAAQY,EAAM,CACpB,GAAIwlB,GAAYN,EAAQ9lB,EACxB,IAAIqmB,GAAYP,EAAQ9lB,EAAQ,EAChC,IAAIsmB,GAAYR,EAAQ9lB,EAAQ,EAChC,IAAIjF,GAAW,EAAI0I,KAAKC,KAAK0iB,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAEhD,IAAIxrB,KAAK+C,mBAAoB,CAC5B/C,KAAK0pB,eAAevqB,KAAO6rB,EAAQ9lB,GAASomB,EAAGrrB,CAC/CD,MAAK0pB,eAAevqB,KAAO6rB,EAAQ9lB,EAAQ,GAAKqmB,EAAGtrB,CACnDD,MAAK0pB,eAAevqB,KAAO6rB,EAAQ9lB,EAAQ,GAAKsmB,EAAGvrB,MAC7C,CACN+qB,EAAQ9lB,GAASomB,EAAGrrB,CACpB+qB,GAAQ9lB,EAAQ,GAAKqmB,EAAGtrB,CACxB+qB,GAAQ9lB,EAAQ,GAAKsmB,EAAGvrB,EAGzBiF,GAASrB,GAIX7D,KAAKqqB,qBAELrqB,MAAK0C,oBAAsB,MAMrBmgB,GAAAtiB,UAAAiqB,qBAAP,SAA4BvlB,GAE3B,GAAI9F,EACJ,IAAI+F,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAI4nB,EAEJ,KAAKzrB,KAAKwpB,oBAAqB,CAC9B,IAAKxpB,KAAK4pB,iBAAmB,MAAQ3kB,GAAU,QAAUjF,KAAK4pB,iBAAmB,MAAQ3kB,GAAU,MAAO,CACzG,GAAIjF,KAAK+C,mBACR/C,KAAK0F,6BAEL1F,MAAKuE,oBAAsB,KAI7BvE,KAAK4pB,gBAAkB3kB,CAEvB,IAAIA,GAAU,MAAQjF,KAAK+C,mBAAoB,CAC9C5D,EAAI,CACJ+F,GAAQlF,KAAKqF,UAAUwd,EAAoBgH,aAC3ChmB,GAAS7D,KAAKoF,UAAUyd,EAAoBgH,aAC5C4B,GAAWzrB,KAAKqE,UAEhB,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACzB+rB,EAASvmB,GAASD,EAAO9F,IACzBssB,GAASvmB,EAAQ,GAAKD,EAAO9F,IAC7BssB,GAASvmB,EAAQ,GAAKD,EAAO9F,IAC7B+F,IAASrB,QAGL,CACN,GAAI7D,KAAK4pB,iBAAmB,KAAM,CACjC5pB,KAAK4pB,gBAAkB,GAAItlB,OAActE,KAAK0E,WAAWhF,OAEzD,IAAIM,KAAK+C,mBACR/C,KAAK0F,6BAEL1F,MAAKuE,oBAAsB,KAG7B,GAAIvE,KAAKspB,mBACRtpB,KAAK4qB,oBAENplB,GAASxF,KAAKqF,UAAUwd,EAAoBgH,aAC5ChmB,GAAS7D,KAAKoF,UAAUyd,EAAoBgH,aAG5C4B,GAAWzrB,KAAK+C,mBAAoB/C,KAAKqE,WAAarE,KAAK4pB,eAE3D1kB,GAAQM,CzBwlKC,IyBrlKLM,GAAc2lB,EAAS/rB,MAC3B,OAAOwF,EAAQY,EAAM,CACpB2lB,EAASvmB,GAAS,CAClBumB,GAASvmB,EAAQ,GAAK,CACtBumB,GAASvmB,EAAQ,GAAK,CAEtBA,IAASrB,EAGV,GAAI2D,GAAW,CACf,IAAI6jB,EACJ,IAAIJ,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAEhBhsB,GAAI,CzBolKK,IyBjlKLisB,GAAcprB,KAAKmG,UAAUzG,MACjC,OAAOP,EAAIisB,EAAM,CAChBC,EAASrrB,KAAKiD,gBAAiBjD,KAAK+F,aAAayB,KAAO,CACxDtC,GAAQM,EAASxF,KAAKmG,UAAUhH,KAAK0E,CACrC4nB,GAASvmB,MAAYlF,KAAK6qB,cAAcI,GAAII,CAC5CI,GAASvmB,MAAYlF,KAAK6qB,cAAcK,GAAIG,CAC5CI,GAASvmB,IAAUlF,KAAK6qB,cAAcM,GAAIE,CAC1CnmB,GAAQM,EAASxF,KAAKmG,UAAUhH,KAAK0E,CACrC4nB,GAASvmB,MAAYlF,KAAK6qB,cAAcI,GAAII,CAC5CI,GAASvmB,MAAYlF,KAAK6qB,cAAcK,GAAIG,CAC5CI,GAASvmB,IAAUlF,KAAK6qB,cAAcM,GAAIE,CAC1CnmB,GAAQM,EAASxF,KAAKmG,UAAUhH,KAAK0E,CACrC4nB,GAASvmB,MAAYlF,KAAK6qB,cAAcI,GAAII,CAC5CI,GAASvmB,MAAYlF,KAAK6qB,cAAcK,GAAIG,CAC5CI,GAASvmB,IAAUlF,KAAK6qB,cAAcM,GAAIE,CAC1CJ,IAAM,CACNC,IAAM,CACNC,IAAM,EAGPhsB,EAAI,CACJ+F,GAAQM,CAGR,OAAON,EAAQY,EAAM,CACpB,GAAIwlB,GAAYG,EAASvmB,EACzB,IAAIqmB,GAAYE,EAASvmB,EAAQ,EACjC,IAAIsmB,GAAYC,EAASvmB,EAAQ,EACjC,IAAIjF,GAAW,EAAI0I,KAAKC,KAAK0iB,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAEhD,IAAIxrB,KAAK+C,mBAAoB,CAC5B/C,KAAK4pB,gBAAgBzqB,KAAOssB,EAASvmB,GAASomB,EAAGrrB,CACjDD,MAAK4pB,gBAAgBzqB,KAAOssB,EAASvmB,EAAQ,GAAKqmB,EAAGtrB,CACrDD,MAAK4pB,gBAAgBzqB,KAAOssB,EAASvmB,EAAQ,GAAKsmB,EAAGvrB,MAC/C,CACNwrB,EAASvmB,GAASomB,EAAGrrB,CACrBwrB,GAASvmB,EAAQ,GAAKqmB,EAAGtrB,CACzBwrB,GAASvmB,EAAQ,GAAKsmB,EAAGvrB,EAG1BiF,GAASrB,GAIX7D,KAAKsqB,sBAELtqB,MAAKupB,qBAAuB,MAMtB1G,GAAAtiB,UAAAqE,UAAP,SAAiBK,GAEhB,GAAI9F,EACJ,IAAI+F,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAI+B,EAEJ,KAAK5F,KAAKkD,eAAgB,CACzB,IAAKlD,KAAKgE,MAAQ,MAAQiB,GAAU,QAAUjF,KAAKgE,MAAQ,MAAQiB,GAAU,MAAO,CACnF,GAAIjF,KAAK+C,mBACR/C,KAAK0F,6BAEL1F,MAAKuE,oBAAsB,KAG7BvE,KAAKgE,KAAOiB,CAEZ,IAAIA,GAAU,MAAQjF,KAAK+C,mBAAoB,CAC9C5D,EAAI,CACJ+F,GAAQlF,KAAKqF,UAAUwd,EAAoB5e,QAC3CJ,GAAS7D,KAAKoF,UAAUyd,EAAoB5e,QAC5C2B,GAAM5F,KAAKqE,UAEX,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACzBkG,EAAIV,GAASD,EAAO9F,IACpByG,GAAIV,EAAQ,GAAKD,EAAO9F,IACxB+F,IAASrB,QAIL,CACN,GAAI7D,KAAKgE,MAAQ,KAAM,CACtBhE,KAAKgE,KAAO,GAAIM,OAActE,KAAK0E,WAAWhF,OAAO,EAAE,EAEvD,IAAIM,KAAK+C,mBACR/C,KAAK0F,6BAEL1F,MAAKuE,oBAAsB,KAG7BiB,EAASxF,KAAKqF,UAAUwd,EAAoB5e,QAC5CJ,GAAS7D,KAAKoF,UAAUyd,EAAoB5e,QAG5C2B,GAAM5F,KAAK+C,mBAAoB/C,KAAKqE,WAAarE,KAAKgE,IAEtD7E,GAAI,CACJ+F,GAAQM,CACR,IAAIK,GAAe,CzBmkKV,IyBhkKLC,GAAcF,EAAIlG,MACtB,OAAOwF,EAAQY,EAAM,CACpB,GAAI9F,KAAK+C,mBAAoB,CAC5B/C,KAAKgE,KAAK7E,KAAOyG,EAAIV,GAASW,EAAM,EACpC7F,MAAKgE,KAAK7E,KAAOyG,EAAIV,EAAQ,GAAK,GAAOW,EAAQ,OAC3C,CACND,EAAIV,GAASW,EAAM,EACnBD,GAAIV,EAAQ,GAAK,GAAOW,EAAQ,GAGjC,KAAMA,GAAS,EACdA,EAAQ,CAETX,IAASrB,GAIX,GAAI7D,KAAKwpB,oBACRxpB,KAAKsqB,sBAENtqB,MAAKwE,iBAELxE,MAAK2C,UAAY,MAMXkgB,GAAAtiB,UAAAkqB,mBAAP,SAA0BxlB,GAEzB,GAAI9F,EACJ,IAAI+F,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAI+B,EAEJ,IAAI5F,KAAK+C,qBAAuB/C,KAAK8pB,eAAiB,MAAQ7kB,GAAU,QAAUjF,KAAK8pB,eAAiB,MAAQ7kB,GAAU,MACzHjF,KAAK0F,wBAEN1F,MAAK8pB,cAAgB7kB,CAErB,IAAIA,GAAU,MAAQjF,KAAK+C,mBAAoB,CAC9CyC,EAASxF,KAAKqF,UAAUwd,EAAoBkH,kBAC5ClmB,GAAS7D,KAAKoF,UAAUyd,EAAoBkH,kBAE5C5qB,GAAI,CACJ+F,GAAQM,CACRI,GAAM5F,KAAKqE,UAEX,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACzBkG,EAAIV,GAASD,EAAO9F,IACpByG,GAAIV,EAAQ,GAAKD,EAAO9F,IACxB+F,IAASrB,GAIX7D,KAAK0rB,0BAEL1rB,MAAK4C,mBAAqB,MAMpBigB,GAAAtiB,UAAAmqB,mBAAP,SAA0BzlB,GAEzB,GAAI9F,EACJ,IAAIoI,EACJ,IAAIrC,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAI8nB,EAEJ,IAAI3rB,KAAK+C,qBAAuB/C,KAAKgqB,eAAiB,MAAQ/kB,GAAU,QAAUjF,KAAKgqB,eAAiB,MAAQ/kB,GAAU,MACzHjF,KAAK0F,wBAEN1F,MAAKgqB,cAAgB/kB,CAErB,IAAIA,GAAU,KAAM,CACnBO,EAASxF,KAAKqF,UAAUwd,EAAoBoH,iBAC5CpmB,GAAS7D,KAAKoF,UAAUyd,EAAoBoH,iBAC5C,IAAIjqB,KAAKsD,qBAAsB,CAC9BnE,EAAI,CACJoI,GAAI,CACJrC,GAAQM,CACRmmB,GAAe3rB,KAAK+C,mBAAoB/C,KAAKqE,WAAarE,KAAK8qB,sBAC/D,IAAIc,EACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAa,GAAIlrB,OAErB,KAAKZ,KAAK+C,mBACT/C,KAAK8qB,uBAAyB,GAAIxmB,OAAcW,EAAOvF,OAExDM,MAAK+E,sBAAwB,GAAIT,MAEjC,OAAOnF,EAAI8F,EAAOvF,OAAQ,CACzB,IAAK6H,EAAI,EAAGA,EAAIvH,KAAKkqB,iBAAkB3iB,IAAK,CAC3CqkB,EAAW3mB,EAAO9F,IAGlB,IAAI2sB,EAAIF,IAAavqB,UAAW,CAC/ByqB,EAAIF,GAAYC,EAAS,CACzB7rB,MAAK+E,sBAAsB8mB,KAAcD,EAE1CD,EAAazmB,EAAQqC,GAAKukB,EAAIF,GAE/B1mB,GAASrB,EAEV7D,KAAK+qB,oBAAsBc,MACrB,IAAI7rB,KAAK+C,mBAAoB,CAEnC5D,EAAI,CACJ+F,GAAQM,CACRmmB,GAAe3rB,KAAKqE,UAEpB,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACzB6H,EAAI,CACJ,OAAOA,EAAIvH,KAAKkqB,iBACfyB,EAAazmB,EAAQqC,KAAOtC,EAAO9F,IACpC+F,IAASrB,IAKZ7D,KAAKypB,0BAELzpB,MAAK6C,mBAAqB,MAMpBggB,GAAAtiB,UAAAoqB,mBAAP,SAA0B1lB,GAEzB,GAAI9F,EACJ,IAAIoI,EACJ,IAAIrC,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAIkoB,EAEJ,IAAI/rB,KAAK+C,qBAAuB/C,KAAKmqB,eAAiB,MAAQllB,GAAU,QAAUjF,KAAKmqB,eAAiB,MAAQllB,GAAU,MACzHjF,KAAK0F,wBAEN1F,MAAKmqB,cAAgBllB,CAErB,IAAIA,GAAU,MAAQjF,KAAK+C,mBAAoB,CAC9CyC,EAASxF,KAAKqF,UAAUwd,EAAoBuH,kBAC5CvmB,GAAS7D,KAAKoF,UAAUyd,EAAoBuH,kBAE5CjrB,GAAI,CACJ+F,GAAQM,CACRumB,GAAe/rB,KAAKqE,UAEpB,OAAOlF,EAAI8F,EAAOvF,OAAQ,CACzB6H,EAAI,CACJ,OAAOA,EAAIvH,KAAKkqB,iBACf6B,EAAa7mB,EAAQqC,KAAOtC,EAAO9F,IACpC+F,IAASrB,GAIX7D,KAAKgsB,0BAELhsB,MAAK8C,mBAAqB,MAMpB+f,GAAAtiB,UAAAW,QAAP,WAECP,EAAAJ,UAAMW,QAAOzB,KAAAO,KAEbA,MAAK0E,WAAa,IAClB1E,MAAK0pB,eAAiB,IACtB1pB,MAAK4pB,gBAAkB,IACvB5pB,MAAKgE,KAAO,IACZhE,MAAK8pB,cAAgB,IACrB9pB,MAAKgqB,cAAgB,IACrBhqB,MAAKmqB,cAAgB,IAErBnqB,MAAK8E,aAAe,IACpB9E,MAAK+F,aAAe,IACpB/F,MAAK6qB,cAAgB,KAQfhI,GAAAtiB,UAAAyF,cAAP,SAAqBC,GAEpBtF,EAAAJ,UAAMyF,cAAavG,KAAAO,KAACiG,EAEpBjG,MAAKyC,kBAAoB,IAEzB,IAAIzC,KAAKgD,mBACRhD,KAAK0C,oBAAsB,IAE5B,IAAI1C,KAAKwpB,oBACRxpB,KAAKupB,qBAAuB,IAE7B,IAAIvpB,KAAKkD,eACRlD,KAAK2C,UAAY,KAOZkgB,GAAAtiB,UAAA2F,MAAP,WAEC,GAAIA,GAA4B,GAAI2c,GAAoB7iB,KAAK+C,mBAC7DmD,GAAMF,cAAchG,KAAKmG,UAAUC,SACnCF,GAAMzB,gBAAgBzE,KAAK0E,WAAW0B,SAEtC,IAAIpG,KAAK0pB,iBAAmB1pB,KAAKgD,mBAChCkD,EAAMqkB,oBAAoBvqB,KAAK0pB,eAAetjB,cAE9CF,GAAMqkB,oBAAoB,KAE3B,IAAIvqB,KAAKgE,OAAShE,KAAKkD,eACtBgD,EAAMtB,UAAU5E,KAAKgE,KAAKoC,cAE1BF,GAAMtB,UAAU,KAEjB,IAAI5E,KAAK4pB,kBAAoB5pB,KAAKwpB,oBACjCtjB,EAAMskB,qBAAqBxqB,KAAK4pB,gBAAgBxjB,cAEhDF,GAAMskB,qBAAqB,KAE5B,IAAIxqB,KAAK8pB,cACR5jB,EAAMukB,mBAAmBzqB,KAAK8pB,cAAc1jB,SAE7C,IAAIpG,KAAKgqB,cAAe,CACvB9jB,EAAM+lB,gBAAkBjsB,KAAKkqB,gBAC7BhkB,GAAMwkB,mBAAmB1qB,KAAKgqB,cAAc5jB,UAG7C,GAAIpG,KAAKmqB,cACRjkB,EAAMykB,mBAAmB3qB,KAAKmqB,cAAc/jB,SAE7C,OAAOF,GAGD2c,GAAAtiB,UAAA8F,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAIrB,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAI+B,EAEJA,GAAM5F,KAAKgE,IAEX,IAAIwC,GAAgBF,EAAOtG,KAAKmD,OAChC,IAAIsD,GAAgBF,EAAOvG,KAAKoD,OAEhCpD,MAAKmD,QAAUmD,CACftG,MAAKoD,QAAUmD,CAEf,IAAIpC,GAAayB,EAAIlG,MAErB8F,GAAS,CACT3B,GAAS,CAETqB,GAAQM,CAER,OAAON,EAAQf,EAAK,CACnByB,EAAIV,IAAUsB,CACdZ,GAAIV,EAAQ,IAAMuB,CAClBvB,IAASrB,EAGV7D,KAAKwE,kBAOCqe,GAAAtiB,UAAAmG,MAAP,SAAaA,GAEZ,GAAIvH,EACJ,IAAI+F,EACJ,IAAIM,EACJ,IAAI3B,EACJ,IAAIsB,EAEJA,GAAYnF,KAAK0E,UAEjB,IAAIP,GAAagB,EAAUzF,MAE3B8F,GAAS,CACT3B,GAAS,CAET1E,GAAI,CACJ+F,GAAQM,CACR,OAAOrG,EAAIgF,EAAK,CACfgB,EAAUD,IAAUwB,CACpBvB,GAAUD,EAAQ,IAAMwB,CACxBvB,GAAUD,EAAQ,IAAMwB,CAExBvH,IAAK,CACL+F,IAASrB,EAGV7D,KAAKuF,wBAGCsd,GAAAtiB,UAAAoG,oBAAP,SAA2BC,GAE1B,GAAIzB,EACJ,IAAI6lB,EACJ,IAAIS,EAEJ,IAAIzrB,KAAK+C,mBAAoB,CAC5BoC,EAAYnF,KAAKqE,UACjB2mB,GAAUhrB,KAAKqE,UACfonB,GAAWzrB,KAAKqE,eACV,CACNc,EAAYnF,KAAK0E,UACjBsmB,GAAUhrB,KAAK0pB,cACf+B,GAAWzrB,KAAK4pB,gBAGjB,GAAIzlB,GAAanE,KAAK0E,WAAWhF,OAAO,CACxC,IAAIP,EACJ,IAAI0H,EACJ,IAAIC,EACJ,IAAIC,GAAkB,GAAI9E,EAE1B,IAAIiqB,GAAsBlsB,KAAK0pB,gBAAkB,IACjD,IAAIyC,GAAuBnsB,KAAK4pB,iBAAmB,IACnD,IAAI5iB,EAEJ,IAAIklB,GAAeC,EAAc,CAChCnlB,EAAeJ,EAAUV,OACzBc,GAAaoI,QACbpI,GAAaolB,YAGd,GAAInlB,GAAajH,KAAKqF,UAAUwd,EAAoBjf,cACpD,IAAIyoB,GAAarsB,KAAKqF,UAAUwd,EAAoB8G,YACpD,IAAI2C,GAAatsB,KAAKqF,UAAUwd,EAAoBgH,aAEpD,IAAI3iB,GAAiBlH,KAAKoF,UAAUyd,EAAoBjf,cACxD,IAAI2oB,GAAiBvsB,KAAKoF,UAAUyd,EAAoB8G,YACxD,IAAI6C,GAAiBxsB,KAAKoF,UAAUyd,EAAoBgH,aAExD,KAAK1qB,EAAI,EAAGA,EAAIgF,IAAOhF,EAAG,CACzB0H,EAAKI,EAAM,CACXH,GAAKG,EAAM,CAGXF,GAAOI,EAAIhC,EAAU8B,EACrBF,GAAOK,EAAIjC,EAAU0B,EACrBE,GAAOM,EAAIlC,EAAU2B,EACrBC,GAASH,EAAUU,gBAAgBP,EACnC5B,GAAU8B,GAAOF,EAAOI,CACxBhC,GAAU0B,GAAME,EAAOK,CACvBjC,GAAU2B,GAAMC,EAAOM,CACvBJ,IAAOC,CAGP,IAAIglB,EAAa,CAChBrlB,EAAKwlB,EAAM,CACXvlB,GAAKulB,EAAM,CACXtlB,GAAOI,EAAI6jB,EAAQqB,EACnBtlB,GAAOK,EAAI4jB,EAAQnkB,EACnBE,GAAOM,EAAI2jB,EAAQlkB,EACnBC,GAASC,EAAaylB,qBAAqB1lB,EAC3CA,GAAOiN,WACPgX,GAAQqB,GAAOtlB,EAAOI,CACtB6jB,GAAQnkB,GAAME,EAAOK,CACrB4jB,GAAQlkB,GAAMC,EAAOM,CACrBglB,IAAOE,EAIR,GAAIJ,EAAc,CACjBtlB,EAAKylB,EAAM,CACXxlB,GAAKwlB,EAAM,CACXvlB,GAAOI,EAAIskB,EAASa,EACpBvlB,GAAOK,EAAIqkB,EAAS5kB,EACpBE,GAAOM,EAAIokB,EAAS3kB,EACpBC,GAASC,EAAaylB,qBAAqB1lB,EAC3CA,GAAOiN,WACPyX,GAASa,GAAOvlB,EAAOI,CACvBskB,GAAS5kB,GAAME,EAAOK,CACtBqkB,GAAS3kB,GAAMC,EAAOM,CACtBilB,IAAOE,GAITxsB,KAAKuF,uBACLvF,MAAKqqB,qBACLrqB,MAAKsqB,uBAMEzH,GAAAtiB,UAAAqqB,mBAAR,WAEC,GAAIzrB,GAAW,CACf,IAAIutB,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,CAC1B,IAAIllB,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAWC,CAE1B,IAAIvD,GAA0BnF,KAAK0E,UACnC,IAAIkB,GAAoB5F,KAAKgE,IAE7B,IAAIG,GAAanE,KAAKmG,UAAUzG,MAEhC,IAAIM,KAAK6qB,eAAiB,KACzB7qB,KAAK6qB,cAAgB,GAAIvmB,OAAcH,EAExC,OAAOhF,EAAIgF,EAAK,CACfuoB,EAAS1sB,KAAKmG,UAAUhH,EACxBwtB,GAAS3sB,KAAKmG,UAAUhH,EAAI,EAC5BytB,GAAS5sB,KAAKmG,UAAUhH,EAAI,EAE5B2tB,GAAKlnB,EAAI8mB,EAAO,EAAI,EACpBK,GAAMnnB,EAAI+mB,EAAO,EAAI,GAAKG,CAC1BE,GAAMpnB,EAAIgnB,EAAO,EAAI,GAAKE,CAE1BD,GAAKH,EAAO,CACZQ,GAAK/nB,EAAU0nB,EACfM,GAAKhoB,EAAU0nB,EAAK,EACpBO,GAAKjoB,EAAU0nB,EAAK,EACpBA,GAAKF,EAAO,CACZzkB,GAAM/C,EAAU0nB,GAAMK,CACtB/kB,GAAMhD,EAAU0nB,EAAK,GAAKM,CAC1B/kB,GAAMjD,EAAU0nB,EAAK,GAAKO,CAC1BP,GAAKD,EAAO,CACZvkB,GAAMlD,EAAU0nB,GAAMK,CACtB5kB,GAAMnD,EAAU0nB,EAAK,GAAKM,CAC1B5kB,GAAMpD,EAAU0nB,EAAK,GAAKO,CAE1B5kB,GAAKwkB,EAAI9kB,EAAM6kB,EAAI1kB,CACnBI,GAAKukB,EAAI7kB,EAAM4kB,EAAIzkB,CACnBI,GAAKskB,EAAI5kB,EAAM2kB,EAAIxkB,CACnB0kB,GAAQ,EAAEtkB,KAAKC,KAAKJ,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAEvC1I,MAAK6qB,cAAc1rB,KAAO8tB,EAAMzkB,CAChCxI,MAAK6qB,cAAc1rB,KAAO8tB,EAAMxkB,CAChCzI,MAAK6qB,cAAc1rB,KAAO8tB,EAAMvkB,EAGjC1I,KAAKspB,mBAAqB,MAMnBzG,GAAAtiB,UAAAsE,kBAAR,WAEC,GAAI1F,GAAW,CACf,IAAIoI,GAAW,CACf,IAAIC,GAAW,CACf,IAAItC,EACJ,IAAIM,EACJ,IAAI3B,EAEJ,IAAI4D,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIzI,EAEJ,IAAIkF,GAA0BnF,KAAK0E,UAEnC,IAAIP,GAAanE,KAAKmG,UAAUzG,MAEhC,IAAIM,KAAK8E,cAAgB,KACxB9E,KAAK8E,aAAe,GAAIR,OAAcH,EAEvC,IAAInE,KAAKiD,iBAAmBjD,KAAK+F,cAAgB,KAChD/F,KAAK+F,aAAe,GAAIzB,OAAcH,EAAI,EAE3C,OAAOhF,EAAIgF,EAAK,CACfe,EAAQlF,KAAKmG,UAAUhH,KAAK,CAC5BsI,GAAKtC,EAAUD,EACf0C,GAAKzC,EAAUD,EAAQ,EACvB6C,GAAK5C,EAAUD,EAAQ,EACvBA,GAAQlF,KAAKmG,UAAUhH,KAAK,CAC5BuI,GAAKvC,EAAUD,EACf2C,GAAK1C,EAAUD,EAAQ,EACvB8C,GAAK7C,EAAUD,EAAQ,EACvBA,GAAQlF,KAAKmG,UAAUhH,KAAK,CAC5BwI,GAAKxC,EAAUD,EACf4C,GAAK3C,EAAUD,EAAQ,EACvB+C,GAAK9C,EAAUD,EAAQ,EACvBgD,GAAMP,EAAKF,CACXU,GAAML,EAAKF,CACXQ,GAAMH,EAAKF,CACXM,GAAMX,EAAKD,CACXa,GAAMT,EAAKD,CACXW,GAAMP,EAAKD,CACXS,GAAKJ,EAAIE,EAAMH,EAAII,CACnBE,GAAKP,EAAIK,EAAMH,EAAIC,CACnBK,GAAKP,EAAIE,EAAMH,EAAII,CACnBrI,GAAI0I,KAAKC,KAAKJ,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAGjC,IAAI1I,KAAKiD,gBAAiB,CACzB,GAAI4F,GAAW5I,EAAE,GAEjB,IAAI4I,EAAI,EACPA,EAAI,CAEL7I,MAAK+F,aAAayB,KAAOqB,EAG1B5I,EAAI,EAAEA,CAEND,MAAK8E,aAAayC,KAAOiB,EAAGvI,CAC5BD,MAAK8E,aAAayC,KAAOkB,EAAGxI,CAC5BD,MAAK8E,aAAayC,KAAOmB,EAAGzI,EAG7BD,KAAKyC,kBAAoB,MAGnBogB,GAAAtiB,UAAAmF,uBAAP,WAEC1F,KAAKuE,oBAAsB,IAE3BvE,MAAKuF,uBACLvF,MAAKqqB,qBACLrqB,MAAKsqB,sBACLtqB,MAAKwE,iBACLxE,MAAK0rB,0BACL1rB,MAAKypB,0BACLzpB,MAAKgsB,2BAGEnJ,GAAAtiB,UAAAgF,sBAAR,WAEC,GAAIvF,KAAKuC,gBACR,MAEDvC,MAAKuC,gBAAkB,IAEvB,KAAKvC,KAAK8I,kBACT9I,KAAK8I,kBAAoB,GAAI1G,GAAiBA,EAAiB2G,iBAAkB8Z,EAAoBjf,cAEtG5D,MAAKgJ,cAAchJ,KAAK8I,mBAGjB+Z,GAAAtiB,UAAA8pB,oBAAR,WAEC,GAAIrqB,KAAK0C,oBACR,MAED1C,MAAK0C,oBAAsB,IAE3B,KAAK1C,KAAKqtB,gBACTrtB,KAAKqtB,gBAAkB,GAAIjrB,GAAiBA,EAAiB2G,iBAAkB8Z,EAAoB8G,YAEpG3pB,MAAKgJ,cAAchJ,KAAKqtB,iBAGjBxK,GAAAtiB,UAAA+pB,qBAAR,WAEC,GAAItqB,KAAKupB,qBACR,MAEDvpB,MAAKupB,qBAAuB,IAE5B,KAAKvpB,KAAKstB,iBACTttB,KAAKstB,iBAAmB,GAAIlrB,GAAiBA,EAAiB2G,iBAAkB8Z,EAAoBgH,aAErG7pB,MAAKgJ,cAAchJ,KAAKstB,kBAGjBzK,GAAAtiB,UAAAiE,gBAAR,WAEC,GAAIxE,KAAK2C,UACR,MAED3C,MAAK2C,UAAY,IAEjB,KAAK3C,KAAKkJ,YACTlJ,KAAKkJ,YAAc,GAAI9G,GAAiBA,EAAiB2G,iBAAkB8Z,EAAoB5e,QAEhGjE,MAAKgJ,cAAchJ,KAAKkJ,aAGjB2Z,GAAAtiB,UAAAmrB,yBAAR,WAEC,GAAI1rB,KAAK4C,mBACR,MAED5C,MAAK4C,mBAAqB,IAE1B,KAAK5C,KAAKutB,qBACTvtB,KAAKutB,qBAAuB,GAAInrB,GAAiBA,EAAiB2G,iBAAkB8Z,EAAoBkH,kBAEzG/pB,MAAKgJ,cAAchJ,KAAKutB,sBAGjB1K,GAAAtiB,UAAAkpB,yBAAR,WAEC,GAAIzpB,KAAK6C,mBACR,MAED7C,MAAK6C,mBAAqB,IAE1B,KAAK7C,KAAKwtB,qBACTxtB,KAAKwtB,qBAAuB,GAAIprB,GAAiBA,EAAiB2G,iBAAkB8Z,EAAoBoH,iBAEzGjqB,MAAKgJ,cAAchJ,KAAKwtB,sBAGjB3K,GAAAtiB,UAAAyrB,yBAAR,WAEC,GAAIhsB,KAAK8C,mBACR,MAED9C,MAAK8C,mBAAqB,IAE1B,KAAK9C,KAAKytB,qBACTztB,KAAKytB,qBAAuB,GAAIrrB,GAAiBA,EAAiB2G,iBAAkB8Z,EAAoBuH,kBAEzGpqB,MAAKgJ,cAAchJ,KAAKytB,sBA95CX5K,GAAAjf,cAAuB,WACvBif,GAAA8G,YAAqB,eACrB9G,GAAAgH,aAAsB,gBACtBhH,GAAA5e,QAAiB,KACjB4e,GAAAkH,kBAA2B,cAC3BlH,GAAAoH,iBAA0B,cAC1BpH,GAAAuH,kBAA2B,cAG3BvH,GAAA1Z,gBAAyB,QACzB0Z,GAAA6K,cAAuB,QACvB7K,GAAA8K,eAAwB,QACxB9K,GAAAxZ,UAAmB,QACnBwZ,GAAA+K,oBAA6B,QAm5C5C,OAAA/K,IAl6CkC3gB,EAo6ClCtC,GAA6BJ,QAApBqjB,IzBg8JNvZ,gCAAgCjI,UAAUmI,0CAA0C,0CAA0CqkB,0CAA0C,0CAA0CpkB,6CAA6C,+CAA+CokB,2CAA2C,SAASnvB,EAAQkB,EAAOJ,GACpX,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0Bn3MtB,IAAOG,GAAS9B,EAAc,oCAE9B,IAAOgL,GAAWhL,EAAc,sC1B83MhC,I0B92MM2qB,GAAe,SAAA1oB,GAASZ,EAAxBspB,EAAe1oB,EA0BpB,SA1BK0oB,GA0BO1f,EAAiCC,EAAiBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE7DlJ,EAAAlB,KAAAO,KAEAA,MAAK8J,aAAeF,CACpB5J,MAAK+J,aAAeJ,CACpB3J,MAAK6J,SAAWA,EAzBjBjJ,OAAAC,eAAWwoB,EAAA9oB,UAAA,a1B03MJO,I0B13MP,WAEC,MAAON,GAAUstB,mB1B23MX9sB,WAAY,KACZC,aAAc,M0Bt3MrBL,QAAAC,eAAWwoB,EAAA9oB,UAAA,e1B43MJO,I0B53MP,WAEC,MAAOd,MAAK+J,c1B63MN/I,WAAY,KACZC,aAAc,M0Bz2MdooB,GAAA9oB,UAAAW,QAAP,WAECP,EAAAJ,UAAMW,QAAOzB,KAAAO,MAGPqpB,GAAA9oB,UAAA0J,oBAAP,SAA2BC,GAE1BA,EAAa6jB,qBAAqB/tB,MAEpC,OAAAqpB,IA/C8B3f,EAiD9B9J,GAAyBJ,QAAhB6pB,I1B82MNjoB,oCAAoCC,UAAU+I,sCAAsC,wCAAwC4jB,oDAAoD,SAAStvB,EAAQkB,EAAOJ,GAC3M,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2Bp7MtB,IAAOqK,GAAahM,EAAc,qCAClC,IAAOuvB,GAAmBvvB,EAAa,2CAIvC,IAAOwvB,GAAkBxvB,EAAa,+CAGtC,IAAOyvB,GAAmBzvB,EAAa,iD3Bs7MvC,I2B/6MM0vB,GAAsB,SAAAztB,GAASZ,EAA/BquB,EAAsBztB,EAoB3B,SApBKytB,GAoBOlM,GAEXvhB,EAAAlB,KAAAO,KAAMkiB,EAnBCliB,MAAA6M,GAAY,CACZ7M,MAAA8M,GAAY,CACZ9M,MAAA+M,GAAY,CACZ/M,MAAAwQ,OAAgB,CAChBxQ,MAAA+O,QAAiB,CACjB/O,MAAAyO,OAAgB,CAChBzO,MAAAquB,SAAkB,CAClBruB,MAAAsuB,SAAkB,CAClBtuB,MAAAuuB,SAAkB,CAClBvuB,MAAAwuB,cAAuB,CACvBxuB,MAAAyuB,cAAuB,CACvBzuB,MAAA0uB,cAAuB,EAcxBN,EAAA7tB,UAAAouB,QAAP,WAEC3uB,KAAK6M,GAAK7M,KAAK8M,GAAK9M,KAAK+M,GAAK,CAC9B/M,MAAKwQ,OAASxQ,KAAK+O,QAAU/O,KAAKyO,OAAS,CAC3CzO,MAAKquB,SAAWruB,KAAKsuB,SAAWtuB,KAAKuuB,SAAW,CAChDvuB,MAAKwuB,cAAgBxuB,KAAKyuB,cAAgBzuB,KAAK0uB,cAAgB,EAMzDN,GAAA7tB,UAAAquB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAG9uB,KAAK+uB,cACP/uB,KAAKgvB,UAEN,KAAK,GAAI7vB,GAAW,EAAGA,EAAI2vB,IAAa3vB,EAAG,CAE1C,GAAI8vB,GAAgBJ,EAAO1vB,EAC3B,IAAID,GAAW+vB,EAAM/vB,CACrB,IAAIgB,GAAW+uB,EAAM/uB,CACrB,IAAIgvB,GAAWD,EAAMC,CACrB,IAAIC,GAAwBjwB,EAAI,GAAIc,KAAKwuB,cAAgBxuB,KAAKwuB,aAC9D,IAAIY,GAAwBlvB,EAAI,GAAIF,KAAKyuB,cAAgBzuB,KAAKyuB,aAC9D,IAAIY,GAAwBH,EAAI,GAAIlvB,KAAK0uB,cAAgB1uB,KAAK0uB,aAC9D,IAAIY,GAAkBpwB,GAAGc,KAAKquB,SAAWc,GAAkBjvB,GAAGF,KAAKsuB,SAAWc,GAAkBF,GAAGlvB,KAAKuuB,SAAWc,GAAkBJ,EAAMhvB,CAE3I,IAAIqvB,EAAW,EACd,MAAO,OAGT,MAAO,MAGDlB,GAAA7tB,UAAAgvB,gBAAP,SAAuBrc,EAAmBsc,EAAoBC,GAE7D,GAAGzvB,KAAK+uB,cACP/uB,KAAKgvB,UAEN,OAAOhvB,MAAK0vB,KAAKH,gBAAgBrc,EAAUsc,EAAWC,GAKhDrB,GAAA7tB,UAAAovB,gBAAP,SAAuBV,GAEtB,GAAI/vB,GAAW+vB,EAAM/vB,CACrB,IAAIgB,GAAW+uB,EAAM/uB,CACrB,IAAIgvB,GAAWD,EAAMC,CACrB,IAAIU,GAAwB1wB,EAAEc,KAAKquB,SAAWnuB,EAAEF,KAAKsuB,SAAWY,EAAElvB,KAAKuuB,SAAWU,EAAMhvB,CAExF,IAAIf,EAAI,EACPA,GAAKA,CAEN,IAAIgB,EAAI,EACPA,GAAKA,CAEN,IAAIgvB,EAAI,EACPA,GAAKA,CAEN,IAAIW,GAAqB3wB,EAAEc,KAAKwuB,cAAgBtuB,EAAEF,KAAKyuB,cAAgBS,EAAElvB,KAAK0uB,aAE9E,OAAOkB,GAAiBC,EAAa5B,EAAoB6B,MAAQF,GAAkBC,EAAa5B,EAAoB8B,KAAO9B,EAAoB+B,UAGzI5B,GAAA7tB,UAAAyuB,SAAP,WAECruB,EAAAJ,UAAMyuB,SAAQvvB,KAAAO,KAEdA,MAAK0vB,KAAO1vB,KAAKiwB,SAAS3hB,QAC1B,IAAIyN,GAAkB/b,KAAKiwB,SAAS9gB,cACpC,IAAI+gB,GAAYlwB,KAAK0vB,KAAK1e,MAAM,CAChC,IAAImf,GAAYnwB,KAAK0vB,KAAK5gB,OAAO,CACjC,IAAIshB,GAAYpwB,KAAK0vB,KAAKnhB,MAAM,CAChC,IAAI/F,GAAYxI,KAAK0vB,KAAKvoB,EAAI+oB,CAC9B,IAAIznB,GAAYzI,KAAK0vB,KAAKtoB,EAAI+oB,CAC9B,IAAIznB,GAAY1I,KAAK0vB,KAAKroB,EAAI+oB,CAC9B,IAAItc,GAAepJ,EAAcyJ,kBAEjC4H,GAAOsU,cAAcvc,EAErB,IAAIwc,GAAaxc,EAAI,GAAIyc,EAAazc,EAAI,GAAI0c,EAAa1c,EAAI,GAAI2c,EAAa3c,EAAI,GACpF,IAAI4c,GAAa5c,EAAI,GAAI6c,EAAa7c,EAAI,GAAI8c,EAAa9c,EAAI,GAAI+c,EAAa/c,EAAI,GACpF,IAAIgd,GAAahd,EAAI,GAAIid,EAAajd,EAAI,GAAIkd,EAAald,EAAI,IAAKmd,EAAand,EAAI,GAErF9T,MAAKquB,SAAW7lB,EAAG8nB,EAAM7nB,EAAG8nB,EAAM7nB,EAAG8nB,EAAMC,CAC3CzwB,MAAKsuB,SAAW9lB,EAAGkoB,EAAMjoB,EAAGkoB,EAAMjoB,EAAGkoB,EAAMC,CAC3C7wB,MAAKuuB,SAAW/lB,EAAGsoB,EAAMroB,EAAGsoB,EAAMroB,EAAGsoB,EAAMC,CAE3CjxB,MAAKwuB,cAAgB7lB,KAAKuoB,IAAIhB,EAAGI,EAAMH,EAAGI,EAAMH,EAAGI,EACnDxwB,MAAKyuB,cAAgB9lB,KAAKuoB,IAAIhB,EAAGQ,EAAMP,EAAGQ,EAAMP,EAAGQ,EACnD5wB,MAAK0uB,cAAgB/lB,KAAKuoB,IAAIhB,EAAGY,EAAMX,EAAGY,EAAMX,EAAGY,EAEnD,IAAIhxB,KAAKmxB,QAAS,CACjBnxB,KAAKmxB,QAAQngB,MAAQhR,KAAK0vB,KAAK1e,KAC/BhR,MAAKmxB,QAAQriB,OAAS9O,KAAK0vB,KAAK5gB,MAChC9O,MAAKmxB,QAAQ5iB,MAAQvO,KAAK0vB,KAAKnhB,KAC/BvO,MAAKoxB,kBAAkBxqB,UAAUyqB,SAAWtV,EAG7C/b,KAAKwQ,OAASxQ,KAAKwuB,cAAc,CACjCxuB,MAAK+O,QAAU/O,KAAKyuB,cAAc,CAClCzuB,MAAKyO,OAASzO,KAAK0uB,cAAc,CAEjC1uB,MAAK6M,GAAK7M,KAAKquB,SAAWruB,KAAKwuB,aAC/BxuB,MAAK8M,GAAK9M,KAAKsuB,SAAWtuB,KAAKyuB,aAC/BzuB,MAAK+M,GAAK/M,KAAKuuB,SAAWvuB,KAAK0uB,cAGzBN,GAAA7tB,UAAA+wB,wBAAP,WAECtxB,KAAKmxB,QAAU,GAAIhD,EACnBnuB,MAAKmxB,QAAQI,aAAe,iBAE5B,OAAcvxB,MAAKmxB,QAAQK,eAE7B,OAAApD,IAhJqCF,EAkJrCtuB,GAAgCJ,QAAvB4uB,I3B64MNzU,qCAAqCtY,UAAUowB,2CAA2CpwB,UAAUqwB,+CAA+C,+CAA+CC,iDAAiD,mDAAmDC,4CAA4C,SAASlzB,EAAQkB,EAAOJ,GAC7W,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4BnjNtB,IAAO4tB,GAAmBvvB,EAAa,2CAKvC,IAAOwvB,GAAkBxvB,EAAa,+CAGtC,IAAOmzB,GAAqBnzB,EAAY,mDAExC,IAAMozB,GAAc,SAAAnxB,GAASZ,EAAvB+xB,EAAcnxB,EASnB,SATKmxB,GASO5P,GAEXvhB,EAAAlB,KAAAO,KAAMkiB,EARCliB,MAAA+xB,QAAiB,CACjB/xB,MAAAquB,SAAkB,CAClBruB,MAAAsuB,SAAkB,CAClBtuB,MAAAuuB,SAAkB,EAQnBuD,EAAAvxB,UAAAouB,QAAP,WAEC3uB,KAAKquB,SAAWruB,KAAKsuB,SAAWtuB,KAAKuuB,SAAW,CAChDvuB,MAAK+xB,QAAU,EAGTD,GAAAvxB,UAAAquB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAG9uB,KAAK+uB,cACP/uB,KAAKgvB,UAEN,KAAK,GAAI7vB,GAAW,EAAGA,EAAI2vB,IAAa3vB,EAAG,CAC1C,GAAI8vB,GAAgBJ,EAAO1vB,EAC3B,IAAIgwB,GAAwBF,EAAM/vB,EAAI,GAAIc,KAAK+xB,QAAU/xB,KAAK+xB,OAC9D,IAAI3C,GAAwBH,EAAM/uB,EAAI,GAAIF,KAAK+xB,QAAU/xB,KAAK+xB,OAC9D,IAAI1C,GAAwBJ,EAAMC,EAAI,GAAIlvB,KAAK+xB,QAAU/xB,KAAK+xB,OAC9D,IAAIzC,GAAkBL,EAAM/vB,GAAIc,KAAKquB,SAAWc,GAAmBF,EAAM/uB,GAAIF,KAAKsuB,SAAWc,GAAkBH,EAAMC,GAAIlvB,KAAKuuB,SAAWc,GAAmBJ,EAAMhvB,CAClK,IAAIqvB,EAAW,EAAG,CACjB,MAAO,QAGT,MAAO,MAGDwC,GAAAvxB,UAAAgvB,gBAAP,SAAuBrc,EAAmBsc,EAAoBC,GAE7D,GAAGzvB,KAAK+uB,cACP/uB,KAAKgvB,UAEN,OAAOhvB,MAAKgyB,QAAQzC,gBAAgBrc,EAAUsc,EAAWC,GAInDqC,GAAAvxB,UAAAovB,gBAAP,SAAuBV,GAEtB,GAAI/vB,GAAW+vB,EAAM/vB,CACrB,IAAIgB,GAAW+uB,EAAM/uB,CACrB,IAAIgvB,GAAWD,EAAMC,CACrB,IAAI+C,GAAY/yB,EAAEc,KAAKquB,SAAWnuB,EAAEF,KAAKsuB,SAAWY,EAAElvB,KAAKuuB,SAAWU,EAAMhvB,CAE5E,IAAIf,EAAI,EACPA,GAAKA,CAEN,IAAIgB,EAAI,EACPA,GAAKA,CAEN,IAAIgvB,EAAI,EACPA,GAAKA,CAEN,IAAIgD,IAAahzB,EAAIgB,EAAIgvB,GAAGlvB,KAAK+xB,OAEjC,OAAOE,GAAKC,EAAIjE,EAAoB6B,MAAQmC,GAAMC,EAAIjE,EAAoB8B,KAAO9B,EAAoB+B,UAG/F8B,GAAAvxB,UAAAyuB,SAAP,WAECruB,EAAAJ,UAAMyuB,SAAQvvB,KAAAO,KAEdA,MAAKgyB,QAAUhyB,KAAKiwB,SAASrd,WAC7B,IAAImJ,GAAkB/b,KAAKiwB,SAAS9gB,cAEpC,IAAI3G,GAAYxI,KAAKgyB,QAAQ7qB,CAC7B,IAAIsB,GAAYzI,KAAKgyB,QAAQ5qB,CAC7B,IAAIsB,GAAY1I,KAAKgyB,QAAQ3qB,CAC7B,IAAIvI,GAAWkB,KAAKgyB,QAAQvU,MAE5B,IAAI3J,GAAoB,GAAIxP,OAAc,GAC1CyX,GAAOsU,cAAcvc,EAErB,IAAIwc,GAAaxc,EAAI,GAAIyc,EAAazc,EAAI,GAAI0c,EAAa1c,EAAI,GAAI2c,EAAa3c,EAAI,GACpF,IAAI4c,GAAa5c,EAAI,GAAI6c,EAAa7c,EAAI,GAAI8c,EAAa9c,EAAI,GAAI+c,EAAa/c,EAAI,GACpF,IAAIgd,GAAahd,EAAI,GAAIid,EAAajd,EAAI,GAAIkd,EAAald,EAAI,IAAKmd,EAAand,EAAI,GAErF9T,MAAKquB,SAAW7lB,EAAG8nB,EAAM7nB,EAAG8nB,EAAM7nB,EAAG8nB,EAAMC,CAC3CzwB,MAAKsuB,SAAW9lB,EAAGkoB,EAAMjoB,EAAGkoB,EAAMjoB,EAAGkoB,EAAMC,CAC3C7wB,MAAKuuB,SAAW/lB,EAAGsoB,EAAMroB,EAAGsoB,EAAMroB,EAAGsoB,EAAMC,CAE3C,IAAIkB,GAAY7B,EAAMC,EAAMC,CAC5B,IAAI4B,GAAY1B,EAAMC,EAAMC,CAC5B,IAAIyB,GAAYvB,EAAMC,EAAMC,CAC5BhxB,MAAK+xB,QAAUjzB,EAAE6J,KAAKC,MAAMupB,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,GAAI,EAEnD,IAAIryB,KAAKmxB,QAAS,CACjBnxB,KAAKmxB,QAAQ1T,OAAS3e,CACtBkB,MAAKoxB,kBAAkBjqB,EAAIqB,CAC3BxI,MAAKoxB,kBAAkBhqB,EAAIqB,CAC3BzI,MAAKoxB,kBAAkB/pB,EAAIqB,CAC3B1I,MAAKoxB,kBAAkBxqB,UAAUyqB,SAAWtV,GAIvC+V,GAAAvxB,UAAA+wB,wBAAP,WAECtxB,KAAKmxB,QAAU,GAAIU,EACnB7xB,MAAKmxB,QAAQI,aAAe,iBAE5B,OAAcvxB,MAAKmxB,QAAQK,eAE7B,OAAAM,IAhH6B5D,EAkH7BtuB,GAAwBJ,QAAfsyB,I5BkhNNL,2CAA2CpwB,UAAUqwB,+CAA+C,+CAA+CY,mDAAmD,qDAAqDZ,gDAAgD,SAAShzB,EAAQkB,EAAOJ,G6B5oNtU,GAAOoL,GAAmBlM,EAAa,6CAKvC,IAAMwvB,GAAkB,WAMvB,QANKA,GAMOhM,GAFLliB,KAAA+uB,cAAwB,IAI9B/uB,MAAKiwB,SAAW/N,EAGjBthB,OAAAC,eAAWqtB,EAAA3tB,UAAA,mB7BooNJO,I6BpoNP,WAEC,GAAId,KAAKoxB,mBAAqB,KAAM,CACnCpxB,KAAKoxB,kBAAoBpxB,KAAKsxB,yBAE9BtxB,MAAKgvB,WAGN,MAAOhvB,MAAKoxB,mB7BmoNNpwB,WAAY,KACZC,aAAc,M6BjoNditB,GAAA3tB,UAAAouB,QAAP,WAEC,KAAM,IAAI/jB,GAGJsjB,GAAA3tB,UAAAquB,YAAP,SAAmBC,EAAuBC,GAEzC,KAAM,IAAIlkB,GAGJsjB,GAAA3tB,UAAA2F,MAAP,WAEC,KAAM,IAAI0E,GAGJsjB,GAAA3tB,UAAAgvB,gBAAP,SAAuBrc,EAAmBsc,EAAoBC,GAE7D,OAAQ,EAGFvB,GAAA3tB,UAAAovB,gBAAP,SAAuBV,GAEtB,KAAM,IAAIrkB,GAGJsjB,GAAA3tB,UAAAyuB,SAAP,WAEChvB,KAAK+uB,cAAgB,MAGfb,GAAA3tB,UAAAgyB,WAAP,WAECvyB,KAAK+uB,cAAgB,KAGfb,GAAA3tB,UAAA+wB,wBAAP,WAEC,KAAM,IAAI1mB,GAEZ,OAAAsjB,KAE4BtuB,GAAAJ,QAAnB0uB,I7BunNN3U,6CAA6ClY,YAAYmxB,wCAAwC,SAAS9zB,EAAQkB,EAAOJ,GAI5H,G8BhsNMizB,GAAU,WAAhB,QAAMA,MAKSA,EAAAC,OAAgB,QAKhBD,GAAAE,iBAA0B,gBAK1BF,GAAAG,KAAc,MAC7B,OAAAH,KAEA7yB,GAAoBJ,QAAXizB,O9BksNHI,wCAAwC,SAASn0B,EAAQkB,EAAOJ,GACtE,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+B5tNtB,IAAO4tB,GAAmBvvB,EAAa,2CAGvC,IAAOwvB,GAAkBxvB,EAAa,+CAGtC,IAAMo0B,GAAU,SAAAnyB,GAASZ,EAAnB+yB,EAAUnyB,EAIf,SAJKmyB,GAIOC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEXpyB,EAAAlB,KAAAO,KAAM,KAENA,MAAKgzB,UAAYD,EAIXD,EAAAvyB,UAAA2F,MAAP,WAEC,MAAO,IAAI4sB,GAAW9yB,KAAKgzB,WAIrBF,GAAAvyB,UAAAquB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO9uB,MAAKgzB,UAGNF,GAAAvyB,UAAAovB,gBAAP,SAAuBV,GAEtB,MAAOhB,GAAoB+B,UAE7B,OAAA8C,IA3ByB5E,EA6BLtuB,GAAAJ,QAAXszB,I/BotNNrB,2CAA2CpwB,UAAUqwB,+CAA+C,iDAAiDtP,wDAAwD,SAAS1jB,EAAQkB,EAAOJ,GACxO,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgC3vNtB,IAAOG,GAAS9B,EAAe,oCAE/B,IAAOu0B,GAAav0B,EAAc,uCAClC,IAAOW,GAAKX,EAAgB,+BAC5B,IAAOw0B,GAAUx0B,EAAe,oCAEhC,IAAOwM,GAAaxM,EAAc,wChCixNlC,IgCxvNM2hB,GAAsB,SAAA1f,GAASZ,EAA/BsgB,EAAsB1f,EAmF3B,SAnFK0f,KAqFJ1f,EAAAlB,KAAAO,KAnFOA,MAAAmzB,eAAyB,IACzBnzB,MAAAozB,UAAiC,GAAI9uB,OAM7C1D,OAAAC,eAAWwf,EAAA9f,UAAA,ahCowNJO,IgCpwNP,WAEC,MAAON,GAAU6yB,WhCqwNXryB,WAAY,KACZC,aAAc,MgC9uNrBL,QAAAC,eAAWwf,EAAA9f,UAAA,iBhCswNJO,IgCtwNP,WAEC,MAAOd,MAAKmzB,gBhCuwNN5vB,IgCpwNP,SAAyBC,GAExB,GAAIxD,KAAKmzB,gBAAkB3vB,EAC1B,MAEDxD,MAAKmzB,eAAiB3vB,CAEtBxD,MAAKyP,6BAA6BzP,KAAKgP,SAAUhP,KAAKgP,SAASU,cAAgB,OhCmwNzE1O,WAAY,KACZC,aAAc,MgC9vNrBL,QAAAC,eAAWwf,EAAA9f,UAAA,ehCowNJO,IgCpwNP,WAEC,MAAOd,MAAKozB,UAAU1zB,QhCqwNhBsB,WAAY,KACZC,aAAc,MgCvsNdof,GAAA9f,UAAA+yB,SAAP,SAAgBC,GAEf,GAAIA,GAAS,KACZ,KAAM,IAAIl0B,GAAM,kCAGjB,IAAIk0B,EAAMvkB,SACTukB,EAAMvkB,SAASwkB,oBAAoBD,EAEpCA,GAAM3c,WAAW5W,KAEjBA,MAAKozB,UAAUrb,KAAKwb,EAEpB,OAAOA,GAiCDlT,GAAA9f,UAAAkzB,WAAP,SAAkBF,EAAqBruB,GAEtC,MAAOquB,GAGDlT,GAAA9f,UAAAmzB,YAAP,WAAmB,GAAAC,KhCguNZ,KgChuNY,GAAAC,GAAA,EAAAA,EAAA1O,UAAAxlB,OAAAk0B,IAAkC,CAAlCD,EAAAC,EAAA,GAAA1O,UAAA0O,GAElB,GAAIzvB,GAAawvB,EAAWj0B,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAKgF,EAAKhF,IAChCa,KAAKszB,SAASK,EAAWx0B,IAMpBkhB,GAAA9f,UAAA2F,MAAP,WAEC,GAAIA,GAA+B,GAAIma,EACvCna,GAAMgK,MAAQlQ,KAAKkQ,KACnBhK,GAAM6L,WAAa/R,KAAK+R,UACxB7L,GAAM8Q,UAAYhX,KAAKgX,SACvB9Q,GAAM8L,KAAOA,IAEb,IAAI7N,GAAanE,KAAKozB,UAAU1zB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjC+G,EAAMotB,SAAStzB,KAAKozB,UAAUj0B,GAAG+G,QAGlC,OAAOA,GAeDma,GAAA9f,UAAAszB,SAAP,SAAgBN,GAEf,MAAOvzB,MAAKozB,UAAUnb,QAAQsb,IAAU,EAMlClT,GAAA9f,UAAAuzB,oBAAP,WAEC9zB,KAAKkB,SAEL,OAAOlB,KAAK+zB,YAAc,EACzB/zB,KAAKg0B,WAAW,GAAG9yB,UAYdmf,GAAA9f,UAAAyzB,WAAP,SAAkB9uB,GAEjB,GAAIquB,GAAsBvzB,KAAKozB,UAAUluB,EAEzC,IAAIquB,GAAS,KACZ,KAAM,IAAIL,GAAW,uDAEtB,OAAOK,GAiBDlT,GAAA9f,UAAA0zB,eAAP,SAAsBjiB,GAErB,GAAI7N,GAAanE,KAAKozB,UAAU1zB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjC,GAAIa,KAAKozB,UAAUj0B,GAAG6S,MAAQA,EAC7B,MAAOhS,MAAKozB,UAAUj0B,EAExB,OAAO,MAWDkhB,GAAA9f,UAAA0O,cAAP,SAAqBskB,GAEpB,GAAIW,GAAoBl0B,KAAKozB,UAAUnb,QAAQsb,EAE/C,IAAIW,IAAe,EAClB,KAAM,IAAIjB,GAAc,+CAEzB,OAAOiB,GAsBD7T,GAAA9f,UAAA4zB,qBAAP,SAA4BnhB,GAE3B,MAAO,IAAI1O,OAsBL+b,GAAA9f,UAAA2R,YAAP,SAAmBqhB,GAElB,GAAIA,GAAS,KACZ,KAAM,IAAIl0B,GAAM,iCAEjBW,MAAKwzB,oBAAoBD,EAEzBA,GAAM3c,WAAW,KAEjB,OAAO2c,GAyBDlT,GAAA9f,UAAA6zB,cAAP,SAAqBlvB,GAEpB,MAAOlF,MAAKkS,YAAYlS,KAAKozB,UAAUluB,IAmBjCmb,GAAA9f,UAAA8zB,eAAP,SAAsBC,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAoC,CAApCA,EAAA,WAEpD,GAAID,EAAa,EAChB,KAAM,IAAIpB,GAAW,+CAEtB,IAAIqB,EAAWv0B,KAAKozB,UAAU1zB,OAC7B,KAAM,IAAIwzB,GAAW,6CAEtB,KAAI,GAAI/zB,GAAoBm1B,EAAYn1B,EAAIo1B,EAAUp1B,IACrDa,KAAKkS,YAAYlS,KAAKozB,UAAUj0B,IA+B3BkhB,GAAA9f,UAAAi0B,cAAP,SAAqBjB,EAAqBruB,IAenCmb,GAAA9f,UAAAk0B,aAAP,SAAoBC,EAAsBC,IAcnCtU,GAAA9f,UAAAq0B,eAAP,SAAsBlI,EAAuBC,IAQtCtM,GAAA9f,UAAA+O,0BAAP,WAEC3O,EAAAJ,UAAM+O,0BAAyB7P,KAAAO,KAE/B,IAAImE,GAAanE,KAAKozB,UAAU1zB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjCa,KAAKozB,UAAUj0B,GAAGmQ,4BAMb+Q,GAAA9f,UAAAkP,6BAAP,SAAoCjM,GAEnC7C,EAAAJ,UAAMkP,6BAA4BhQ,KAAAO,KAACwD,EAEnC,IAAIW,GAAanE,KAAKozB,UAAU1zB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjCa,KAAKozB,UAAUj0B,GAAGsQ,6BAA6BzP,KAAKmzB,gBAM/C9S,GAAA9f,UAAAuQ,2BAAP,SAAkCtN,GAEjC7C,EAAAJ,UAAMuQ,2BAA0BrR,KAAAO,KAACwD,EAEjC,IAAIW,GAAanE,KAAKozB,UAAU1zB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjCa,KAAKozB,UAAUj0B,GAAG2R,2BAA2B9Q,KAAK8L,sBAM7CuU,GAAA9f,UAAAuP,0BAAP,SAAiCtM,EAAiByT,GAEjDtW,EAAAJ,UAAMuP,0BAAyBrQ,KAAAO,KAACwD,EAAOyT,EAEvC,IAAI9S,GAAanE,KAAKozB,UAAU1zB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjCa,KAAKozB,UAAUj0B,GAAG2Q,0BAA0B9P,KAAKwW,oBAAqBS,GAQhEoJ,GAAA9f,UAAAizB,oBAAR,SAA4BD,GAE3BvzB,KAAKozB,UAAUlb,OAAOlY,KAAKiP,cAAcskB,GAAQ,EAEjD,OAAOA,GAET,OAAAlT,IAngBqCnV,EAqgBLtL,GAAAJ,QAAvB6gB,IhCgrNNwU,uCAAuCxzB,UAAUyzB,+BAA+BzzB,UAAU0zB,oCAAoC1zB,UAAUD,oCAAoCC,UAAUgJ,wCAAwC,0CAA0C2qB,wCAAwC,SAASt2B,EAAQkB,EAAOJ,GAC3U,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiC1tOtB,IAAO40B,GAAkBv2B,EAAa,6CACtC,IAAOw2B,GAAWx2B,EAAe,sCAIjC,IAAOy2B,GAAUz2B,EAAe,oCAEhC,IAAO02B,GAAY12B,EAAe,sCAClC,IAAO22B,GAAW32B,EAAe,qCACjC;GAAO42B,GAAW52B,EAAe,qCAGjC,IAAO2hB,GAAsB3hB,EAAY,uDjCsxOzC,IiCntOM62B,GAAM,SAAA50B,GAASZ,EAAfw1B,EAAM50B,EAsHX,SAtHK40B,GAsHOC,EAAgCC,GAtH7C,GAAAC,GAAA11B,IAsHa,IAAAw1B,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAE3C90B,EAAAlB,KAAAO,KAEAA,MAAK21B,iBAAmB,GAAIrxB,MAC5BtE,MAAK41B,aAAeJ,CACpBx1B,MAAK61B,YAAcJ,CAEnBz1B,MAAK81B,4BAA8B,SAACC,GAAsB,MAAAL,GAAKM,mBAAmBD,GAClF/1B,MAAKi2B,yBAA2B,SAACF,GAAqB,MAAAL,GAAKQ,gBAAgBH,IAnF5En1B,OAAAC,eAAW00B,EAAAh1B,UAAA,WjCsvOJO,IiCtvOP,WAEC,MAAOd,MAAKslB,UjCuvONtkB,WAAY,KACZC,aAAc,MiCruOrBL,QAAAC,eAAW00B,EAAAh1B,UAAA,qBjCwvOJO,IiCxvOP,WAEC,MAAOd,MAAKm2B,oBjCyvONn1B,WAAY,KACZC,aAAc,MiCtrOds0B,GAAAh1B,UAAA61B,MAAP,WAEC,GAAIp2B,KAAK41B,aAAc,CACtB,GAAIS,EACJA,GAAMpB,EAAmBqB,YAAYt2B,KAAK61B,YAC1CQ,GAAIE,wBACJv2B,MAAK21B,iBAAmB,IACxB,QAED,GAAIx2B,EACJ,IAAIO,GAAwBM,KAAK21B,iBAAiBj2B,MAClD,KAAKP,EAAI,EAAGA,EAAIO,EAAQP,IAAK,CAC5Ba,KAAKw2B,gBAAgBx2B,KAAK21B,iBAAiBx2B,GAC3Ca,MAAK21B,iBAAiBx2B,GAAGs3B,MACzBz2B,MAAK21B,iBAAiBx2B,GAAK,KAE5Ba,KAAK21B,iBAAmB,KA0KlBJ,GAAAh1B,UAAAm2B,KAAP,SAAYC,EAAoBC,EAAmCC,EAAkBC,GAArD,GAAAF,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAEpF,GAAIC,EAEJ,IAAI/2B,KAAK41B,aAAc,CACtB,GAAIS,EACJA,GAAMpB,EAAmBqB,YAAYt2B,KAAK61B,YAC1CkB,GAAQV,EAAIK,KAAKC,EAASC,EAASC,EAAIC,OACjC,CACN,GAAIE,GAAqB,GAAI9B,EAC7Bl1B,MAAK21B,iBAAiB5d,KAAKif,EAC3BD,GAAQC,EAAON,KAAKC,EAASC,EAASC,EAAIC,GAG3CC,EAAM7lB,iBAAiBmkB,EAAY4B,kBAAmBj3B,KAAK81B,4BAC3DiB,GAAM7lB,iBAAiBikB,EAAW+B,eAAgBl3B,KAAKi2B,yBAGvDc,GAAMI,SAASC,kBAAkBp3B,KAAKq3B,YACtCN,GAAMI,SAASG,uBAAuBt3B,KAAKu3B,aAE3C,OAAOR,GAyFDxB,GAAAh1B,UAAAi3B,SAAP,SAAgBzZ,EAAU6Y,EAAmCC,EAAkBC,GAArD,GAAAF,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAE9E,GAAIC,EAEJ,IAAI/2B,KAAK41B,aAAc,CACtB,GAAIS,EACJA,GAAMpB,EAAmBqB,YAAYt2B,KAAK61B,YAC1CkB,GAAQV,EAAImB,SAASzZ,EAAM6Y,EAASC,EAAIC,OAClC,CACN,GAAIE,GAAqB,GAAI9B,EAC7Bl1B,MAAK21B,iBAAiB5d,KAAKif,EAC3BD,GAAQC,EAAOQ,SAASzZ,EAAM,GAAI6Y,EAASC,EAAIC,GAGhDC,EAAM7lB,iBAAiBmkB,EAAY4B,kBAAmBj3B,KAAK81B,4BAC3DiB,GAAM7lB,iBAAiBikB,EAAW+B,eAAgBl3B,KAAKi2B,yBAGvDc,GAAMI,SAASC,kBAAkBp3B,KAAKq3B,YACtCN,GAAMI,SAASG,uBAAuBt3B,KAAKu3B,aAE3C,OAAOR,GA0BDxB,GAAAh1B,UAAAk3B,OAAP,YAcclC,GAAAmC,aAAd,SAA2BC,GAE1BzC,EAAYwC,aAAaC,GAYZpC,GAAAqC,cAAd,SAA4BC,GAE3B3C,EAAY0C,cAAcC,GAInBtC,GAAAh1B,UAAAi2B,gBAAR,SAAwBsB,GAEvBA,EAAW5hB,oBAAoBmf,EAAY4B,kBAAmBj3B,KAAK81B,4BACnEgC,GAAW5hB,oBAAoBif,EAAW+B,eAAgBl3B,KAAKi2B,0BAGxDV,GAAAh1B,UAAA21B,gBAAR,SAAwBH,GAEvB/1B,KAAKgJ,cAAc+sB,GAMZR,GAAAh1B,UAAA82B,YAAR,SAAoBtB,GAEnB,GAAI/1B,KAAKmW,iBAAiBif,EAAa2C,UAAW,CACjD/3B,KAAKgJ,cAAc+sB,EACnB,OAAO,UACD,CACN,MAAO,QAODR,GAAAh1B,UAAAg3B,aAAR,SAAqBxB,GAEpB,GAAI/1B,KAAKmW,iBAAiBmf,EAAY0C,aAAc,CACnDh4B,KAAKgJ,cAAc+sB,EACnB,OAAO,UACD,CACN,MAAO,QAODR,GAAAh1B,UAAAy1B,mBAAR,SAA2BD,GAE1B/1B,KAAKslB,SAA2ByQ,EAAMkC,OAEtC,IAAIj4B,KAAKslB,SACRtlB,KAAKszB,SAAStzB,KAAKslB,SAEpBtlB,MAAKgJ,cAAc+sB,GAErB,OAAAR,IAjjBqBlV,EAmjBrBzgB,GAAgBJ,QAAP+1B,IjC0qON2C,oCAAoC72B,UAAU82B,sCAAsC92B,UAAU+2B,qCAAqC/2B,UAAUg3B,qCAAqCh3B,UAAUi3B,6CAA6Cj3B,UAAUk3B,sCAAsCl3B,UAAU+gB,uDAAuD,yDAAyDoW,uCAAuC,SAAS95B,EAAQkB,EAAOJ,GACrd,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkCjzPtB,IAAO0kB,GAAermB,EAAc,yCAGpC,IAAO2hB,GAAsB3hB,EAAY,uDACzC,IAAOuM,GAAUvM,EAAe,uCAChC,IAAO+5B,GAAQ/5B,EAAgB,wCAC/B,IAAOg6B,GAASh6B,EAAe,yCAG/B,IAAMi6B,GAAK,SAAAh4B,GAASZ,EAAd44B,EAAKh4B,EASV,SATKg4B,KAWJh4B,EAAAlB,KAAAO,KATOA,MAAA44B,oBAAuC,GAAIt0B,MAC3CtE,MAAA64B,YAA+B,GAAIv0B,MAIpCtE,MAAA84B,iBAAmB,CAMzB94B,MAAK+4B,WAAa,GAAIL,GAAU,GAAID,GAEpCz4B,MAAKg5B,iBAAmB,GAAI3Y,EAE5BrgB,MAAKg5B,iBAAiBtgB,WAAW1Y,KACjCA,MAAKg5B,iBAAiBrhB,SAAW,IACjC3X,MAAKg5B,iBAAiBhiB,UAAYhX,KAAK+4B,WAGjCJ,EAAAp4B,UAAA04B,mBAAP,SAA0BC,GAEzB,GAAI/5B,GAAW,CACf,IAAIgF,GAAanE,KAAK64B,YAAYn5B,MAElCw5B,GAAUjiB,MAAQjX,IAElBA,MAAK84B,kBAEL,OAAO35B,EAAIgF,EACVnE,KAAK64B,YAAY15B,KAAKg6B,SAASD,GAGjCt4B,QAAAC,eAAW83B,EAAAp4B,UAAA,alCkyPJO,IkClyPP,WAEC,MAAOd,MAAKg5B,iBAAiBhiB,WlCmyPvBzT,IkChyPP,SAAqBC,GAEpBxD,KAAKg5B,iBAAiBhiB,UAAYxT,CAElCxD,MAAKgJ,cAAc,GAAIiC,GAAWA,EAAWmuB,kBAAmBp5B,KAAKg5B,oBlCgyP/Dh4B,WAAY,KACZC,aAAc,MkC9xPd03B,GAAAp4B,UAAAszB,SAAP,SAAgBN,GAEf,MAAOvzB,MAAKg5B,iBAAiBnF,SAASN,GAGhCoF,GAAAp4B,UAAA+yB,SAAP,SAAgBC,GAEf,MAAOvzB,MAAKg5B,iBAAiB1F,SAASC,GAGhCoF,GAAAp4B,UAAA2R,YAAP,SAAmBqhB,GAElBvzB,KAAKg5B,iBAAiB9mB,YAAYqhB,GAG5BoF,GAAAp4B,UAAA6zB,cAAP,SAAqBlvB,GAEpBlF,KAAKg5B,iBAAiB5E,cAAclvB,GAI9ByzB,GAAAp4B,UAAAyzB,WAAP,SAAkB9uB,GAEjB,MAAOlF,MAAKg5B,iBAAiBhF,WAAW9uB,GAGzCtE,QAAAC,eAAW83B,EAAAp4B,UAAA,elCsxPJO,IkCtxPP,WAEC,MAAOd,MAAKg5B,iBAAiBjF,alCuxPvB/yB,WAAY,KACZC,aAAc,MkClxPd03B,GAAAp4B,UAAA+W,oBAAP,SAA2BN,GAE1BhX,KAAK44B,oBAAoB7gB,KAAKf,EAG9B,IAAIhX,KAAK64B,YAAY5gB,QAAQjB,KAAe,EAC3ChX,KAAK64B,YAAY9gB,KAAKf,GAMjB2hB,GAAAp4B,UAAA6W,sBAAP,SAA6BJ,GAE5BhX,KAAK44B,oBAAoB1gB,OAAOlY,KAAK44B,oBAAoB3gB,QAAQjB,GAAY,EAG7E,IAAIhX,KAAK44B,oBAAoB3gB,QAAQjB,KAAe,EACnDhX,KAAK64B,YAAY3gB,OAAOlY,KAAK64B,YAAY5gB,QAAQjB,GAAY,GAEhE,OAAA2hB,IArGoB5T,EAuGLnlB,GAAAJ,QAANm5B,IlCqxPNjT,yCAAyCrkB,UAAU+gB,uDAAuD,uDAAuDnI,uCAAuC,uCAAuCof,wCAAwC,wCAAwCC,yCAAyC,2CAA2CC,sCAAsC,SAAS76B,EAAQkB,EAAOJ,GmCj4Ppd,GAAOg6B,GAAQ96B,EAAgB,iCAE/B,IAAOi6B,GAAKj6B,EAAgB,sCAG5B,IAAO+6B,GAAa/6B,EAAc,wCAIlC,IAAOg7B,GAAMh7B,EAAgB,qCAC7B,IAAOi7B,GAAWj7B,EAAe,wCACjC,IAAOuM,GAAUvM,EAAe,uCAChC,IAAOk7B,GAAal7B,EAAc,0CAClC,IAAOm7B,GAAYn7B,EAAe,2CAElC,IAAMo7B,GAAI,WA0DT,QA1DKA,GA0DOC,EAAoB9iB,EAAoB7B,GA1DrD,GAAAsgB,GAAA11B,IA0DiC,IAAAiX,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAA7B,QAAA,GAAoB,CAApBA,EAAA,KAjC5CpV,KAAAwQ,OAAgB,CAChBxQ,MAAA+O,QAAiB,CAEjB/O,MAAAg6B,MAAe,CACfh6B,MAAAi6B,WAAoB,CACpBj6B,MAAAk6B,iBAA0B,CAC1Bl6B,MAAAm6B,iBAA0B,CAE1Bn6B,MAAAo6B,eAAyB,IACzBp6B,MAAAq6B,cAAwB,IAOxBr6B,MAAAs6B,aAAuB,GAAIb,EAmBlCz5B,MAAKu6B,iCAAmC,SAACxE,GAAqB,MAAAL,GAAK8E,wBAAwBzE,GAC3F/1B,MAAKy6B,6BAA+B,SAAC1E,GAAsB,MAAAL,GAAKgF,oBAAoB3E,GACpF/1B,MAAK26B,2BAA6B,SAAC5E,GAAwB,MAAAL,GAAKkF,kBAAkB7E,GAClF/1B,MAAK66B,0BAA4B,SAAC9E,GAAwB,MAAAL,GAAKoF,iBAAiB/E,GAEhF/1B,MAAKiX,MAAQA,GAAS,GAAI0hB,EAC1B34B,MAAKoV,OAASA,GAAU,GAAIskB,EAC5B15B,MAAK+5B,SAAWA,CAGhBgB,UAASC,KAAKC,MAAMC,OAAS,KAE7Bl7B,MAAKm7B,aAAeJ,SAASK,cAAc,MAC3Cp7B,MAAKm7B,aAAaF,MAAM/nB,SAAW,UAEnC6nB,UAASC,KAAKK,YAAYr7B,KAAKm7B,aAE/Bn7B,MAAKs7B,cAAgBzB,EAAavD,aAClCt2B,MAAKs7B,cAAcC,aAAav7B,MAUzB85B,EAAAv5B,UAAAi6B,wBAAR,SAAgCzE,GAE/B,GAAI/1B,KAAKw7B,SACRx7B,KAAKgQ,QAAQgH,UAAUykB,iBAAiBz7B,KAAKw7B,UAK/C56B,QAAAC,eAAWi5B,EAAAv5B,UAAA,UnC60PJO,ImC70PP,WAEC,MAAOd,MAAK07B,UnC80PN16B,WAAY,KACZC,aAAc,MmC50PrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,UnC+0PJO,ImC/0PP,WAEC,MAAOd,MAAK27B,UnCg1PN36B,WAAY,KACZC,aAAc,MmC30PrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,enCi1PJO,ImCj1PP,WAEC,MAAOd,MAAKm7B,cnCk1PNn6B,WAAY,KACZC,aAAc,MmC90PrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,YnCo1PJO,ImCp1PP,WAEC,MAAOd,MAAK47B,YnCq1PNr4B,ImCl1PP,SAAoBC,GAEnB,GAAIxD,KAAK47B,YAAcp4B,EACtB,MAED,IAAIxD,KAAK47B,WAAY,CACpB57B,KAAK47B,WAAW16B,SAChBlB,MAAK47B,WAAW1lB,oBAAoB0jB,EAAciC,iBAAkB77B,KAAK26B,2BACzE36B,MAAK47B,WAAW1lB,oBAAoB0jB,EAAckC,gBAAiB97B,KAAK66B,2BAGzE76B,KAAK47B,WAAap4B,CAElBxD,MAAK47B,WAAW1qB,iBAAiB0oB,EAAciC,iBAAkB77B,KAAK26B,2BACtE36B,MAAK47B,WAAW1qB,iBAAiB0oB,EAAckC,gBAAiB97B,KAAK66B,0BAGrE76B,MAAK+7B,kBAAoB/7B,KAAK47B,WAAWI,yBAEzC,IAAIh8B,KAAKw7B,SACRx7B,KAAK+7B,kBAAkB3mB,OAASpV,KAAKw7B,QAGtCx7B,MAAK47B,WAAWK,eAAkBj8B,KAAKk6B,kBAAoB,GAAM,KAAM,GACvEl6B,MAAK47B,WAAWM,eAAkBl8B,KAAKk6B,kBAAoB,EAAK,KAAM,GACtEl6B,MAAK47B,WAAWO,eAAiBn8B,KAAKk6B,iBAAmB,KAAM,GAC/Dl6B,MAAK47B,WAAWQ,kBAAoBp8B,KAAKm6B,gBACzCn6B,MAAK47B,WAAW5qB,MAAQhR,KAAKwQ,MAC7BxQ,MAAK47B,WAAW9sB,OAAS9O,KAAK+O,OAC9B/O,MAAK47B,WAAWS,aAAer8B,KAAKs8B,enC60P9Bt7B,WAAY,KACZC,aAAc,MmCx0PrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,gBnC80PJO,ImC90PP,WAEC,MAAOd,MAAKs8B,enC+0PN/4B,ImC50PP,SAAwBC,GAEvB,GAAIxD,KAAKs8B,eAAiB94B,EACzB,MAEDxD,MAAKs8B,cAAgB94B,CAErB,IAAIxD,KAAK47B,WACR57B,KAAK47B,WAAWS,aAAer8B,KAAKs8B,enC20P/Bt7B,WAAY,KACZC,aAAc,MmCt0PrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,mBnC40PJO,ImC50PP,WAEC,MAAOd,MAAKk6B,kBnC60PN32B,ImC10PP,SAA2BC,GAE1B,GAAIxD,KAAKk6B,kBAAoB12B,EAC5B,MAEDxD,MAAKk6B,iBAAmB12B,CAExBxD,MAAK47B,WAAWK,eAAkBz4B,GAAS,GAAM,KAAM,GACvDxD,MAAK47B,WAAWM,eAAkB14B,GAAS,EAAK,KAAM,GACtDxD,MAAK47B,WAAWO,eAAiB34B,EAAQ,KAAM,KnCy0PzCxC,WAAY,KACZC,aAAc,MmCn0PrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,mBnC00PJO,ImC10PP,WAEC,MAAOd,MAAKm6B,kBnC+0PN52B,ImCx0PP,SAA2BC,GAE1B,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIxD,KAAKm6B,kBAAoB32B,EAC5B,MAEDxD,MAAK47B,WAAWQ,kBAAoBp8B,KAAKm6B,iBAAmB32B,GnCu0PtDxC,WAAY,KACZC,aAAc,MmCj0PrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,UnCw0PJO,ImCx0PP,WAEC,MAAOd,MAAKw7B,UnC40PNj4B,ImCt0PP,SAAkBC,GAEjB,GAAIxD,KAAKw7B,UAAYh4B,EACpB,MAED,IAAIxD,KAAKw7B,SACRx7B,KAAKw7B,SAAStlB,oBAAoByjB,EAAY4C,mBAAoBv8B,KAAKy6B,6BAExEz6B,MAAKw7B,SAAWh4B,CAEhB,IAAIxD,KAAK+7B,kBACR/7B,KAAK+7B,kBAAkB3mB,OAASpV,KAAKw7B,QAEtC,IAAIx7B,KAAKgQ,QACRhQ,KAAKgQ,QAAQgH,UAAUykB,iBAAiBz7B,KAAKw7B,SAE9Cx7B,MAAKw7B,SAAStqB,iBAAiByoB,EAAY4C,mBAAoBv8B,KAAKy6B,6BACpEz6B,MAAKq6B,cAAgB,IACrBr6B,MAAKo6B,eAAiB,MnCk0PhBp5B,WAAY,KACZC,aAAc,MmC5zPrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,SnCm0PJO,ImCn0PP,WAEC,MAAOd,MAAKgQ,SnCu0PNzM,ImCj0PP,SAAiBC,GAEhB,GAAIxD,KAAKgQ,SAAWxM,EACnB,MAED,IAAIxD,KAAKgQ,QACRhQ,KAAKgQ,QAAQkG,oBAAoBjL,EAAWmuB,kBAAmBp5B,KAAKu6B,iCAErEv6B,MAAKgQ,QAAUxM,CAEfxD,MAAKgQ,QAAQkB,iBAAiBjG,EAAWmuB,kBAAmBp5B,KAAKu6B,iCAEjE,IAAIv6B,KAAKw7B,SACRx7B,KAAKgQ,QAAQgH,UAAUykB,iBAAiBz7B,KAAKw7B,WnC8zPxCx6B,WAAY,KACZC,aAAc,MmCxzPrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,anC+zPJO,ImC/zPP,WAEC,MAAOd,MAAKi6B,YnCg0PNj5B,WAAY,KACZC,aAAc,MmC3zPrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,SnCi0PJO,ImCj0PP,WAEC,MAAOd,MAAKwQ,QnCk0PNjN,ImC/zPP,SAAiBC,GAEhB,GAAIxD,KAAKwQ,QAAUhN,EAClB,MAEDxD,MAAKwQ,OAAShN,CACdxD,MAAKw8B,aAAex8B,KAAKwQ,OAAOxQ,KAAK+O,OACrC/O,MAAKw7B,SAASiB,WAAWC,cAAgB18B,KAAKw8B,YAC9Cx8B,MAAK47B,WAAW5qB,MAAQxN,CACxBxD,MAAKm7B,aAAaF,MAAMjqB,MAAQxN,EAAQ,MnC+zPlCxC,WAAY,KACZC,aAAc,MmC1zPrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,UnCg0PJO,ImCh0PP,WAEC,MAAOd,MAAK+O,SnCi0PNxL,ImC9zPP,SAAkBC,GAEjB,GAAIxD,KAAK+O,SAAWvL,EACnB,MAEDxD,MAAK+O,QAAUvL,CACfxD,MAAKw8B,aAAex8B,KAAKwQ,OAAOxQ,KAAK+O,OACrC/O,MAAKw7B,SAASiB,WAAWC,cAAgB18B,KAAKw8B,YAC9Cx8B,MAAK47B,WAAW9sB,OAAStL,CACzBxD,MAAKm7B,aAAaF,MAAMnsB,OAAStL,EAAQ,MnC8zPnCxC,WAAY,KACZC,aAAc,MmCzzPrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,enC+zPJO,ImC/zPP,WAEC,MAAOd,MAAKs6B,cnCg0PN/2B,ImC7zPP,SAAuBC,GAEtB,GAAIxD,KAAKs6B,cAAgB92B,EACxB,MAED,IAAIA,GAAS,KACZxD,KAAKs6B,aAAe,GAAIb,OAExBz5B,MAAKs6B,aAAe92B,GnC6zPfxC,WAAY,KACZC,aAAc,MmCxzPrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,KnC8zPJO,ImC9zPP,WAEC,MAAOd,MAAK47B,WAAWz0B,GnC+zPjB5D,ImC5zPP,SAAaC,GAEZ,GAAIxD,KAAK47B,WAAWz0B,GAAK3D,EACxB,MAEDxD,MAAK47B,WAAWz0B,GAAK3D,CACrBxD,MAAKm7B,aAAaF,MAAM0B,KAAOn5B,EAAQ,MnC4zPjCxC,WAAY,KACZC,aAAc,MmCvzPrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,KnC6zPJO,ImC7zPP,WAEC,MAAOd,MAAK47B,WAAWx0B,GnC8zPjB7D,ImC3zPP,SAAaC,GAEZ,GAAIxD,KAAK47B,WAAWx0B,GAAK5D,EACxB,MAEDxD,MAAK47B,WAAWx0B,GAAK5D,CACrBxD,MAAKm7B,aAAaF,MAAM2B,IAAMp5B,EAAQ,MnC2zPhCxC,WAAY,KACZC,aAAc,MmCtzPrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,WnC4zPJO,ImC5zPP,WAEC,MAAQd,MAAKm7B,aAAaF,MAAM4B,YAAc,WnC6zPxCt5B,ImC1zPP,SAAmBC,GAElBxD,KAAKm7B,aAAaF,MAAM4B,WAAar5B,EAAO,UAAY,UnC4zPlDxC,WAAY,KACZC,aAAc,MmCrzPrBL,QAAAC,eAAWi5B,EAAAv5B,UAAA,sBnC4zPJO,ImC5zPP,WAEC,MAAO,InC8zPDE,WAAY,KACZC,aAAc,MmCxzPd64B,GAAAv5B,UAAAu8B,OAAP,WAEC98B,KAAK+8B,aAGL/8B,MAAKw7B,SAASiB,WAAWC,cAAgB18B,KAAKw8B,YAE9C,IAAIx8B,KAAKq6B,cAAe,CACvBr6B,KAAKq6B,cAAgB,KACrBr6B,MAAKw7B,SAASiB,WAAWO,oBAAoBh9B,KAAK47B,WAAWqB,YAAY91B,EAAGnH,KAAK47B,WAAWqB,YAAY71B,EAAGpH,KAAK47B,WAAWqB,YAAYjsB,MAAOhR,KAAK47B,WAAWqB,YAAYnuB,QAG3K,GAAI9O,KAAKo6B,eAAgB,CACxBp6B,KAAKo6B,eAAiB,KACtBp6B,MAAKw7B,SAASiB,WAAWS,iBAAiBl9B,KAAK47B,WAAWuB,SAASh2B,EAAGnH,KAAK47B,WAAWuB,SAAS/1B,EAAGpH,KAAK47B,WAAWuB,SAASnsB,MAAOhR,KAAK47B,WAAWuB,SAASruB,QAI5J,IAAK9O,KAAKs8B,cAAe,CACxB,GAAIt8B,KAAKo9B,gBAAkBp9B,KAAKm7B,cAAgBn7B,KAAKs7B,cAAc+B,cAAgBr9B,KAAKs7B,cAAcgC,cACrGt9B,KAAKs7B,cAAciC,kBAAoBv9B,KAAKw9B,YAAYC,iBAAiBz9B,KAAK07B,SAAU17B,KAAK27B,SAAU37B,KAExGA,MAAKs7B,cAAcoC,gBAAgB19B,KAAKo9B,gBAMzCp9B,KAAK+7B,kBAAkBnf,OAGvB5c,MAAKgQ,QAAQipB,mBAAmBj5B,KAAK+7B,kBAGrC/7B,MAAK47B,WAAWkB,OAAO98B,KAAK+7B,mBAMtBjC,GAAAv5B,UAAAw8B,YAAP,WAEC,GAAIY,GAAcnE,GAElB,IAAIx5B,KAAKg6B,OAAS,EACjBh6B,KAAKg6B,MAAQ2D,CAEd39B,MAAKi6B,WAAa0D,EAAO39B,KAAKg6B,KAC9Bh6B,MAAKg6B,MAAQ2D,EAMP7D,GAAAv5B,UAAAW,QAAP,WAEClB,KAAK47B,WAAW16B,SAGhBlB,MAAKs7B,cAAcsC,eAAe59B,KAKlCA,MAAKs7B,cAAgB,IAGrBt7B,MAAK47B,WAAa,IAClB57B,MAAK+7B,kBAAoB,KAM1Bn7B,QAAAC,eAAWi5B,EAAAv5B,UAAA,oBnCyyPJO,ImCzyPP,WAEC,MAAOd,MAAK+7B,mBnC0yPN/6B,WAAY,KACZC,aAAc,MmCryPb64B,GAAAv5B,UAAAm6B,oBAAR,SAA4B3E,GAE3B/1B,KAAKq6B,cAAgB,IACrBr6B,MAAKo6B,eAAiB,KAMfN,GAAAv5B,UAAAq6B,kBAAR,SAA0B7E,GAEzB/1B,KAAKo6B,eAAiB,KAMfN,GAAAv5B,UAAAu6B,iBAAR,SAAyB/E,GAExB/1B,KAAKq6B,cAAgB,KAGfP,GAAAv5B,UAAAs9B,QAAP,SAAeC,GAEd,GAAIC,GAAa/9B,KAAKw7B,SAASqC,QAAQC,EACvCC,GAAE52B,EAAI42B,EAAE52B,EAAEnH,KAAK47B,WAAWuB,SAASnsB,MAAM,EAAIhR,KAAKwQ,OAAOxQ,KAAKw7B,SAASiB,WAAWuB,OAClFD,GAAE32B,EAAI22B,EAAE32B,EAAEpH,KAAK47B,WAAWuB,SAASruB,OAAO,EAAI9O,KAAK+O,QAAQ/O,KAAKw7B,SAASiB,WAAWwB,OAEpF,OAAOF,GAGDjE,GAAAv5B,UAAA29B,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,MAAOr+B,MAAKw7B,SAAS0C,UAAU,GAAGC,EAAKn+B,KAAKwQ,OAAOxQ,KAAKw7B,SAASiB,WAAWuB,SAASh+B,KAAK47B,WAAWuB,SAASnsB,MAAO,GAAGotB,EAAKp+B,KAAK+O,QAAQ/O,KAAKw7B,SAASiB,WAAWwB,SAASj+B,KAAK47B,WAAWuB,SAASruB,OAAQuvB,GAIvMvE,GAAAv5B,UAAA+9B,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,MAAOr+B,MAAKw7B,SAAS8C,QAAQH,EAAG,EAAIn+B,KAAKwQ,QAAQxQ,KAAKwQ,QAAS4tB,EAAG,EAAIp+B,KAAK+O,SAAS/O,KAAK+O,QAASsvB,GAiC5FvE,GAAAv5B,UAAAg+B,eAAP,WAEC,IAAKv+B,KAAKs8B,cAAe,CACxB,GAAIt8B,KAAKm7B,cAAgBn7B,KAAKs7B,cAAc+B,YAC3Cr9B,KAAKs7B,cAAciC,kBAAoBv9B,KAAKw9B,YAAYC,iBAAiBz9B,KAAK07B,SAAU17B,KAAK27B,SAAU37B,UAClG,CACN,GAAIw+B,GAAqCx+B,KAAKw9B,YAAYC,iBAAiBz9B,KAAK07B,SAAU17B,KAAK27B,SAAU37B,KAEzG,IAAIA,KAAKy+B,aAAez+B,KAAKs7B,cAAciC,mBAAqB,MAAQiB,EAAgBE,iBAAmB1+B,KAAKs7B,cAAciC,kBAAkBmB,iBAC/I1+B,KAAKs7B,cAAciC,kBAAoBiB,GAG3C,OAAA1E,KAEcl6B,GAAAJ,QAALs6B,InC8wPN6E,iCAAiCt9B,UAAUm3B,sCAAsC,sCAAsCoG,qCAAqC,qCAAqCC,wCAAwC,wCAAwCC,0CAA0C,0CAA0C7kB,uCAAuC,uCAAuC8kB,2CAA2C,2CAA2CC,wCAAwC,0CAA0CC,iDAAiD,SAASvgC,EAAQkB,EAAOJ,GoCj2QvqB,GAAOoL,GAAmBlM,EAAY,6CAItC,IAAMwgC,GAAc,WAMnB,QANKA,GAMOC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAHLn/B,KAAAo/B,aAAuB,IAK7Bp/B,MAAKm/B,aAAeA,EAGdD,EAAA3+B,UAAA8+B,cAAP,WAEC,GAAIr/B,KAAKs/B,gBAAkBt/B,KAAKo/B,aAAc,CAC7Cp/B,KAAKs/B,eAAexoB,uBAItBlW,QAAAC,eAAWq+B,EAAA3+B,UAAA,gBpCy1QJO,IoCz1QP,WAEC,MAAOd,MAAKs/B,gBpC01QN/7B,IoCv1QP,SAAwBiL,GAEvB,GAAIxO,KAAKs/B,gBAAkB9wB,EAAK,CAC/B,OAGD,GAAIxO,KAAKs/B,gBAAkBt/B,KAAKo/B,aAAc,CAC7Cp/B,KAAKs/B,eAAe/mB,aAAe,KAEpCvY,KAAKs/B,eAAiB9wB,CAEtB,IAAIxO,KAAKs/B,gBAAkBt/B,KAAKo/B,aAAc,CAC7Cp/B,KAAKs/B,eAAe/mB,aAAevY,KAEpCA,KAAKq/B,iBpCs1QCr+B,WAAY,KACZC,aAAc,MoCp1QrBL,QAAAC,eAAWq+B,EAAA3+B,UAAA,cpCu1QJO,IoCv1QP,WAEC,MAAOd,MAAKo/B,cpCw1QN77B,IoCr1QP,SAAsBiL,GAErB,GAAIxO,KAAKo/B,cAAgB5wB,EAAK,CAC7B,OAEDxO,KAAKo/B,aAAe5wB,CAEpB,IAAIxO,KAAKs/B,eAAgB,CACxB,GAAIt/B,KAAKs/B,eAAgB,CACxBt/B,KAAKs/B,eAAe/mB,aAAevY,SAC7B,CACNA,KAAKs/B,eAAe/mB,aAAe,QpCw1Q/BvX,WAAY,KACZC,aAAc,MoCp1Qdi+B,GAAA3+B,UAAAiY,OAAP,SAAc+mB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,KAAM,IAAI30B,GAEZ,OAAAs0B,KAEwBt/B,GAAAJ,QAAf0/B,IpCy1QN3lB,6CAA6ClY,YAAYm+B,wDAAwD,SAAS9gC,EAAQkB,EAAOJ,GAC5I,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqCr6QtB,IAAOmK,GAAU9L,EAAc,kCAE/B,IAAOwgC,GAAcxgC,EAAa,gDrC46QlC,IqCp6QM+gC,GAAqB,SAAA9+B,GAASZ,EAA9B0/B,EAAqB9+B,EA6I1B,SA7IK8+B,GA6ION,EAAmCO,EAAqBC,EAAuBC,EAA2BC,EAA0BC,EAAkBC,GAAtJ,GAAAZ,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAO,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,MAEjKp/B,EAAAlB,KAAAO,KAAMm/B,EA7IAn/B,MAAAggC,kBAA2B,CAC1BhgC,MAAAigC,mBAA4B,EAE5BjgC,MAAAkgC,UAAmB,CACnBlgC,MAAAmgC,WAAoB,EACpBngC,MAAAogC,eAAwB,EACxBpgC,MAAAqgC,cAAuB,EACvBrgC,MAAAsgC,OAAgB,CAChBtgC,MAAAugC,eAAwB,CACxBvgC,MAAAwgC,iBAA0B,CAC1BxgC,MAAAygC,cAAwB,KAEzBzgC,MAAA0gC,IAAc,KAmIpB1gC,MAAK0/B,SAAWA,CAChB1/B,MAAK2/B,UAAYA,CACjB3/B,MAAK4/B,aAAeA,CACpB5/B,MAAK6/B,aAAeA,CACpB7/B,MAAK8/B,MAAQA,CACb9/B,MAAK+/B,aAAeA,CAGpB//B,MAAKggC,kBAAoBhgC,KAAKkgC,SAC9BlgC,MAAKigC,mBAAqBjgC,KAAKmgC,WAlIhCv/B,OAAAC,eAAW4+B,EAAAl/B,UAAA,SrCw7QJO,IqCx7QP,WAEC,MAAOd,MAAKsgC,QrCy7QN/8B,IqCt7QP,SAAiBiL,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAIxO,KAAKsgC,QAAU9xB,EAClB,MAEDxO,MAAKsgC,OAAS9xB,CAEdxO,MAAKq/B,iBrCo7QCr+B,WAAY,KACZC,aAAc,MqC/6QrBL,QAAAC,eAAW4+B,EAAAl/B,UAAA,YrCq7QJO,IqCr7QP,WAEC,MAAOd,MAAKkgC,WrCs7QN38B,IqCn7QP,SAAoBiL,GAEnB,GAAIxO,KAAKkgC,WAAa1xB,EACrB,MAEDxO,MAAKkgC,UAAY1xB,CAEjBxO,MAAKq/B,iBrCk7QCr+B,WAAY,KACZC,aAAc,MqC76QrBL,QAAAC,eAAW4+B,EAAAl/B,UAAA,arCm7QJO,IqCn7QP,WAEC,MAAOd,MAAKmgC,YrCo7QN58B,IqCj7QP,SAAqBiL,GAEpBA,EAAM7F,KAAKg4B,IAAI3gC,KAAKogC,cAAez3B,KAAKi4B,IAAI5gC,KAAKqgC,cAAe7xB,GAEhE,IAAIxO,KAAKmgC,YAAc3xB,EACtB,MAEDxO,MAAKmgC,WAAa3xB,CAElBxO,MAAKq/B,iBrC+6QCr+B,WAAY,KACZC,aAAc,MqCx6QrBL,QAAAC,eAAW4+B,EAAAl/B,UAAA,gBrCg7QJO,IqCh7QP,WAEC,MAAOd,MAAKogC,erCi7QN78B,IqC96QP,SAAwBiL,GAEvB,GAAIxO,KAAKogC,eAAiB5xB,EACzB,MAEDxO,MAAKogC,cAAgB5xB,CAErBxO,MAAK2/B,UAAYh3B,KAAKg4B,IAAI3gC,KAAKogC,cAAez3B,KAAKi4B,IAAI5gC,KAAKqgC,cAAergC,KAAKmgC,crC66Q1En/B,WAAY,KACZC,aAAc,MqCt6QrBL,QAAAC,eAAW4+B,EAAAl/B,UAAA,gBrC86QJO,IqC96QP,WAEC,MAAOd,MAAKqgC,erC+6QN98B,IqC56QP,SAAwBiL,GAEvB,GAAIxO,KAAKqgC,eAAiB7xB,EACzB,MAEDxO,MAAKqgC,cAAgB7xB,CAErBxO,MAAK2/B,UAAYh3B,KAAKg4B,IAAI3gC,KAAKogC,cAAez3B,KAAKi4B,IAAI5gC,KAAKqgC,cAAergC,KAAKmgC,crC26Q1En/B,WAAY,KACZC,aAAc,MqCr6QrBL,QAAAC,eAAW4+B,EAAAl/B,UAAA,gBrC26QJO,IqC36QP,WAEC,MAAOd,MAAKygC,erC46QNl9B,IqCz6QP,SAAwBiL,GAEvB,GAAIxO,KAAKygC,eAAiBjyB,EACzB,MAEDxO,MAAKygC,cAAgBjyB,CAErBxO,MAAKq/B,iBrCw6QCr+B,WAAY,KACZC,aAAc,MqCx4Qdw+B,GAAAl/B,UAAAiY,OAAP,SAAc+mB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIv/B,KAAKmgC,YAAcngC,KAAKigC,oBAAsBjgC,KAAKkgC,WAAalgC,KAAKggC,kBAAmB,CAE3FhgC,KAAKq/B,eAEL,IAAIr/B,KAAKygC,cAAe,CACvB,GAAIzgC,KAAKkgC,UAAY,EAAG,CACvBlgC,KAAKggC,mBAAqBhgC,KAAKkgC,UAAU,IAAM,IAAMlgC,KAAKkgC,SAC1DlgC,MAAKkgC,UAAYlgC,KAAKkgC,UAAU,IAAM,QAChC,CACNlgC,KAAKggC,mBAAqBhgC,KAAKkgC,UAAU,IAAMlgC,KAAKkgC,SACpDlgC,MAAKkgC,UAAYlgC,KAAKkgC,UAAU,IAGjC,MAAOlgC,KAAKkgC,UAAYlgC,KAAKggC,mBAAqB,IACjDhgC,KAAKggC,mBAAqB,GAE3B,OAAOhgC,KAAKkgC,UAAYlgC,KAAKggC,kBAAoB,IAChDhgC,KAAKggC,mBAAqB,IAG5B,GAAIT,EAAa,CAChBv/B,KAAKigC,qBAAuBjgC,KAAKmgC,WAAangC,KAAKigC,qBAAqBjgC,KAAK8/B,MAAQ,EACrF9/B,MAAKggC,oBAAsBhgC,KAAKkgC,UAAYlgC,KAAKggC,oBAAoBhgC,KAAK8/B,MAAQ,OAC5E,CACN9/B,KAAKigC,mBAAqBjgC,KAAKmgC,UAC/BngC,MAAKggC,kBAAoBhgC,KAAKkgC,UAI/B,GAAKv3B,KAAKuoB,IAAIlxB,KAAK2/B,UAAY3/B,KAAKigC,oBAAsB,KAAUt3B,KAAKuoB,IAAIlxB,KAAKkgC,UAAYlgC,KAAKggC,mBAAqB,IAAO,CAC9HhgC,KAAKigC,mBAAqBjgC,KAAKmgC,UAC/BngC,MAAKggC,kBAAoBhgC,KAAKkgC,WAIhClgC,KAAKm/B,aAAa9uB,UAAYrQ,KAAKigC,kBACnCjgC,MAAKm/B,aAAa7uB,UAAYtQ,KAAKggC,iBAEnC,IAAIhgC,KAAKugC,eAAgB,CACxB,GAAIvgC,KAAK0gC,IAAK,CACb1gC,KAAKm/B,aAAav4B,UAAU+hB,YAAY3oB,KAAKugC,oBACvC,CACNvgC,KAAKm/B,aAAah4B,GAAKnH,KAAKugC,eAAe53B,KAAKk4B,IAAI7gC,KAAKkgC,UAAU11B,EAAWoE,mBAC9E5O,MAAKm/B,aAAa93B,GAAKrH,KAAKugC,eAAe53B,KAAKm4B,IAAI9gC,KAAKkgC,UAAU11B,EAAWoE,oBAE/E5O,KAAKugC,eAAiB,EAGvB,GAAIvgC,KAAKwgC,iBAAkB,CAC1BxgC,KAAKm/B,aAAav4B,UAAUkiB,UAAU9oB,KAAKwgC,iBAC3CxgC,MAAKwgC,iBAAmB,GAKnBf,GAAAl/B,UAAAwgC,cAAP,SAAqBvyB,GAEpB,GAAIA,GAAO,EACV,MAEDxO,MAAKugC,gBAAkB/xB,CAEvBxO,MAAKq/B,gBAGCI,GAAAl/B,UAAAygC,gBAAP,SAAuBxyB,GAEtB,GAAIA,GAAO,EACV,MAEDxO,MAAKwgC,kBAAoBhyB,CAEzBxO,MAAKq/B,gBAGP,OAAAI,IArPoCP,EAuPLt/B,GAAAJ,QAAtBigC,IrCw4QNhmB,kCAAkCpY,UAAU49B,gDAAgD,kDAAkDgC,mDAAmD,SAASviC,EAAQkB,EAAOJ,GAC5N,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsC7oRtB,IAAO6gC,GAAexiC,EAAa,iDtCspRnC,IsC9oRMyiC,GAAgB,SAAAxgC,GAASZ,EAAzBohC,EAAgBxgC,EAErB,SAFKwgC,GAEOhC,EAAmCiC,EAAmCzB,EAAuBtpB,GAA7F,GAAA8oB,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAiC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAzB,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAtpB,QAAA,GAAqB,CAArBA,EAAA,IAExG1V,EAAAlB,KAAAO,KAAMm/B,EAAciC,EAAc,EAAGzB,EAAWtpB,GAG1C8qB,EAAA5gC,UAAAiY,OAAP,SAAc+mB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEbA,EAAcA,CAEd,KAAKv/B,KAAKohC,aACT,MAEDphC,MAAK0/B,SAAW1/B,KAAKqhC,eAAe/wB,UAAY,GAChD3P,GAAAJ,UAAMiY,OAAM/Y,KAAAO,MAEd,OAAAmhC,IAjB+BD,EAmBLthC,GAAAJ,QAAjB2hC,ItCipRNG,iDAAiD,mDAAmDA,kDAAkD,SAAS5iC,EAAQkB,EAAOJ,GACjL,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuClrRtB,IAAOmK,GAAU9L,EAAc,kCAC/B,IAAOuD,GAAQvD,EAAe,gCAG9B,IAAO6iC,GAAgB7iC,EAAa,kDvCwrRpC,IuCjrRMwiC,GAAe,SAAAvgC,GAASZ,EAAxBmhC,EAAevgC,EA6NpB,SA7NKugC,GA6NO/B,EAAmCiC,EAAmC1B,EAAqBC,EAAuBtpB,EAAwBupB,EAA2BC,EAA0B2B,EAA2BC,EAA2B3B,EAAkB4B,EAAoB3B,GAA3R,GAAAZ,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAiC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA1B,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAtpB,QAAA,GAAsB,CAAtBA,EAAA,IAAwB,GAAAupB,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAA2B,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAA3B,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA4B,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAA3B,QAAA,GAA4B,CAA5BA,EAAA,MAEtSp/B,EAAAlB,KAAAO,KAAMm/B,EAAciC,EA7NdphC,MAAAggC,kBAA2B,CAC3BhgC,MAAAigC,mBAA4B,EAE3BjgC,MAAAkgC,UAAmB,CACnBlgC,MAAAmgC,WAAoB,EACpBngC,MAAA2hC,UAAmB,GACnB3hC,MAAA4hC,cAAuBC,QACvB7hC,MAAA8hC,aAAsBD,QACtB7hC,MAAAogC,eAAwB,EACxBpgC,MAAAqgC,cAAuB,EACvBrgC,MAAAsgC,OAAgB,CAChBtgC,MAAA+hC,SAAkB,CAClB/hC,MAAAygC,cAAwB,KACxBzgC,MAAAgiC,QAAmB,GAAI//B,EAkN9BjC,MAAKqW,SAAWA,CAChBrW,MAAK0/B,SAAWA,CAChB1/B,MAAK2/B,UAAYA,CACjB3/B,MAAKwhC,YAAgBA,GAAe,KAAQA,GAAeK,QAC3D7hC,MAAKyhC,YAAgBA,GAAe,KAAQA,EAAcI,QAC1D7hC,MAAK4/B,aAAeA,CACpB5/B,MAAK6/B,aAAeA,CACpB7/B,MAAK8/B,MAAQA,CACb9/B,MAAK0hC,QAAUA,CACf1hC,MAAK+/B,aAAeA,CAGpB//B,MAAKggC,kBAAoBhgC,KAAKkgC,SAC9BlgC,MAAKigC,mBAAqBjgC,KAAKmgC,WArNhCv/B,OAAAC,eAAWqgC,EAAA3gC,UAAA,SvC+sRJO,IuC/sRP,WAEC,MAAOd,MAAKsgC,QvCgtRN/8B,IuC7sRP,SAAiBiL,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAIxO,KAAKsgC,QAAU9xB,EAClB,MAEDxO,MAAKsgC,OAAS9xB,CAEdxO,MAAKq/B,iBvC2sRCr+B,WAAY,KACZC,aAAc,MuCtsRrBL,QAAAC,eAAWqgC,EAAA3gC,UAAA,YvC4sRJO,IuC5sRP,WAEC,MAAOd,MAAKkgC,WvC6sRN38B,IuC1sRP,SAAoBiL,GAEnBA,EAAM7F,KAAKg4B,IAAI3gC,KAAK4hC,aAAcj5B,KAAKi4B,IAAI5gC,KAAK8hC,aAActzB,GAE9D,IAAIxO,KAAKkgC,WAAa1xB,EACrB,MAEDxO,MAAKkgC,UAAY1xB,CAEjBxO,MAAKq/B,iBvCwsRCr+B,WAAY,KACZC,aAAc,MuCnsRrBL,QAAAC,eAAWqgC,EAAA3gC,UAAA,avCysRJO,IuCzsRP,WAEC,MAAOd,MAAKmgC,YvC0sRN58B,IuCvsRP,SAAqBiL,GAEpBA,EAAM7F,KAAKg4B,IAAI3gC,KAAKogC,cAAez3B,KAAKi4B,IAAI5gC,KAAKqgC,cAAe7xB,GAEhE,IAAIxO,KAAKmgC,YAAc3xB,EACtB,MAEDxO,MAAKmgC,WAAa3xB,CAElBxO,MAAKq/B,iBvCqsRCr+B,WAAY,KACZC,aAAc,MuChsRrBL,QAAAC,eAAWqgC,EAAA3gC,UAAA,YvCssRJO,IuCtsRP,WAEC,MAAOd,MAAK2hC,WvCusRNp+B,IuCpsRP,SAAoBiL,GAEnB,GAAIxO,KAAK2hC,WAAanzB,EACrB,MAEDxO,MAAK2hC,UAAYnzB,CAEjBxO,MAAKq/B,iBvCmsRCr+B,WAAY,KACZC,aAAc,MuC5rRrBL,QAAAC,eAAWqgC,EAAA3gC,UAAA,evCosRJO,IuCpsRP,WAEC,MAAOd,MAAK4hC,cvCqsRNr+B,IuClsRP,SAAuBiL,GAEtB,GAAIxO,KAAK4hC,cAAgBpzB,EACxB,MAEDxO,MAAK4hC,aAAepzB,CAEpBxO,MAAK0/B,SAAW/2B,KAAKg4B,IAAI3gC,KAAK4hC,aAAcj5B,KAAKi4B,IAAI5gC,KAAK8hC,aAAc9hC,KAAKkgC,avCisRvEl/B,WAAY,KACZC,aAAc,MuC1rRrBL,QAAAC,eAAWqgC,EAAA3gC,UAAA,evCksRJO,IuClsRP,WAEC,MAAOd,MAAK8hC,cvCmsRNv+B,IuChsRP,SAAuBiL,GAEtB,GAAIxO,KAAK8hC,cAAgBtzB,EACxB,MAEDxO,MAAK8hC,aAAetzB,CAEpBxO,MAAK0/B,SAAW/2B,KAAKg4B,IAAI3gC,KAAK4hC,aAAcj5B,KAAKi4B,IAAI5gC,KAAK8hC,aAAc9hC,KAAKkgC,avC+rRvEl/B,WAAY,KACZC,aAAc,MuCxrRrBL,QAAAC,eAAWqgC,EAAA3gC,UAAA,gBvCgsRJO,IuChsRP,WAEC,MAAOd,MAAKogC,evCisRN78B,IuC9rRP,SAAwBiL,GAEvB,GAAIxO,KAAKogC,eAAiB5xB,EACzB,MAEDxO,MAAKogC,cAAgB5xB,CAErBxO,MAAK2/B,UAAYh3B,KAAKg4B,IAAI3gC,KAAKogC,cAAez3B,KAAKi4B,IAAI5gC,KAAKqgC,cAAergC,KAAKmgC,cvC6rR1En/B,WAAY,KACZC,aAAc,MuCtrRrBL,QAAAC,eAAWqgC,EAAA3gC,UAAA,gBvC8rRJO,IuC9rRP,WAEC,MAAOd,MAAKqgC,evC+rRN98B,IuC5rRP,SAAwBiL,GAEvB,GAAIxO,KAAKqgC,eAAiB7xB,EACzB,MAEDxO,MAAKqgC,cAAgB7xB,CAErBxO,MAAK2/B,UAAYh3B,KAAKg4B,IAAI3gC,KAAKogC,cAAez3B,KAAKi4B,IAAI5gC,KAAKqgC,cAAergC,KAAKmgC,cvC2rR1En/B,WAAY,KACZC,aAAc,MuCprRrBL,QAAAC,eAAWqgC,EAAA3gC,UAAA,WvC4rRJO,IuC5rRP,WAEC,MAAOd,MAAK+hC,UvC6rRNx+B,IuC1rRP,SAAmBiL,GAElB,GAAIxO,KAAK+hC,UAAYvzB,EACpB,MAEDxO,MAAK+hC,SAAWvzB,CAEhBxO,MAAKq/B,iBvCyrRCr+B,WAAY,KACZC,aAAc,MuCprRrBL,QAAAC,eAAWqgC,EAAA3gC,UAAA,gBvC0rRJO,IuC1rRP,WAEC,MAAOd,MAAKygC,evC2rRNl9B,IuCxrRP,SAAwBiL,GAEvB,GAAIxO,KAAKygC,eAAiBjyB,EACzB,MAEDxO,MAAKygC,cAAgBjyB,CAErBxO,MAAKq/B,iBvCurRCr+B,WAAY,KACZC,aAAc,MuCnpRdigC,GAAA3gC,UAAAiY,OAAP,SAAc+mB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIv/B,KAAKmgC,YAAcngC,KAAKigC,oBAAsBjgC,KAAKkgC,WAAalgC,KAAKggC,kBAAmB,CAE3FhgC,KAAKq/B,eAEL,IAAIr/B,KAAKygC,cAAe,CACvB,GAAIzgC,KAAKkgC,UAAY,EAAG,CACvBlgC,KAAKggC,mBAAqBhgC,KAAKkgC,UAAU,IAAM,IAAMlgC,KAAKkgC,SAC1DlgC,MAAKkgC,UAAYlgC,KAAKkgC,UAAU,IAAM,QAChC,CACNlgC,KAAKggC,mBAAqBhgC,KAAKkgC,UAAU,IAAMlgC,KAAKkgC,SACpDlgC,MAAKkgC,UAAYlgC,KAAKkgC,UAAU,IAGjC,MAAOlgC,KAAKkgC,UAAYlgC,KAAKggC,mBAAqB,IACjDhgC,KAAKggC,mBAAqB,GAE3B,OAAOhgC,KAAKkgC,UAAYlgC,KAAKggC,kBAAoB,IAChDhgC,KAAKggC,mBAAqB,IAG5B,GAAIT,EAAa,CAChBv/B,KAAKigC,qBAAuBjgC,KAAKmgC,WAAangC,KAAKigC,qBAAqBjgC,KAAK8/B,MAAQ,EACrF9/B,MAAKggC,oBAAsBhgC,KAAKkgC,UAAYlgC,KAAKggC,oBAAoBhgC,KAAK8/B,MAAQ,OAC5E,CACN9/B,KAAKggC,kBAAoBhgC,KAAKkgC,SAC9BlgC,MAAKigC,mBAAqBjgC,KAAKmgC,WAIhC,GAAKx3B,KAAKuoB,IAAIlxB,KAAK2/B,UAAY3/B,KAAKigC,oBAAsB,KAAUt3B,KAAKuoB,IAAIlxB,KAAKkgC,UAAYlgC,KAAKggC,mBAAqB,IAAO,CAC9HhgC,KAAKigC,mBAAqBjgC,KAAKmgC,UAC/BngC,MAAKggC,kBAAoBhgC,KAAKkgC,WAIhC,GAAI+B,GAAgBjiC,KAAiB,aAAGA,KAAKohC,aAAax6B,UAAUsM,SAAYlT,KAAmB,eAAGA,KAAKkiC,eAAiBliC,KAAKmiC,QACjIniC,MAAKm/B,aAAah4B,EAAI86B,EAAI96B,EAAInH,KAAKqW,SAAS1N,KAAKk4B,IAAI7gC,KAAKggC,kBAAkBx1B,EAAWoE,oBAAoBjG,KAAKm4B,IAAI9gC,KAAKigC,mBAAmBz1B,EAAWoE,mBACvJ5O,MAAKm/B,aAAa/3B,EAAI66B,EAAI76B,EAAIpH,KAAKqW,SAAS1N,KAAKk4B,IAAI7gC,KAAKigC,mBAAmBz1B,EAAWoE,oBAAoB5O,KAAK0hC,OACjH1hC,MAAKm/B,aAAa93B,EAAI46B,EAAI56B,EAAIrH,KAAKqW,SAAS1N,KAAKm4B,IAAI9gC,KAAKggC,kBAAkBx1B,EAAWoE,oBAAoBjG,KAAKm4B,IAAI9gC,KAAKigC,mBAAmBz1B,EAAWoE,mBAEvJ5O,MAAKgiC,QAAQ76B,GAAKwB,KAAKk4B,IAAI7gC,KAAKggC,kBAAkBx1B,EAAWoE,oBAAoBjG,KAAKk4B,IAAI7gC,KAAKigC,mBAAmBz1B,EAAWoE,mBAC7H5O,MAAKgiC,QAAQ56B,EAAIuB,KAAKm4B,IAAI9gC,KAAKigC,mBAAmBz1B,EAAWoE,mBAC7D5O,MAAKgiC,QAAQ36B,GAAKsB,KAAKm4B,IAAI9gC,KAAKggC,kBAAkBx1B,EAAWoE,oBAAoBjG,KAAKk4B,IAAI7gC,KAAKigC,mBAAmBz1B,EAAWoE,mBAE7H,IAAI5O,KAAKs/B,eAAgB,CACxB,GAAIt/B,KAAKoiC,iBACRpiC,KAAKs/B,eAAe9rB,OAAOxT,KAAKoiC,iBAAkBpiC,KAAKgiC,aACnD,IAAIhiC,KAAKqhC,eACbrhC,KAAKs/B,eAAe9rB,OAAOxT,KAAKqhC,eAAepqB,MAAOjX,KAAKqhC,eAAe9rB,cAAgBvV,KAAKqhC,eAAez6B,UAAUsM,SAAUlT,KAAKgiC,UAG3I,OAAAd,IAjT8BK,EAmT9B3hC,GAAyBJ,QAAhB0hC,IvC4pRNznB,kCAAkCpY,UAAUiI,gCAAgCjI,UAAUghC,kDAAkD,oDAAoDA,mDAAmD,SAAS3jC,EAAQkB,EAAOJ,GAC1Q,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwC/9RtB,IAAO4B,GAAQvD,EAAe,gCAG9B,IAAOwgC,GAAcxgC,EAAa,gDAClC,IAAOsM,GAAkBtM,EAAY,+CAErC,IAAM6iC,GAAgB,SAAA5gC,GAASZ,EAAzBwhC,EAAgB5gC,EAQrB,SARK4gC,GAQOpC,EAAmCiC,GARhD,GAAA1L,GAAA11B,IAQa,IAAAm/B,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAiC,QAAA,GAAiC,CAAjCA,EAAA,KAE9CzgC,EAAAlB,KAAAO,KAAMm/B,EANAn/B,MAAAmiC,SAAoB,GAAIlgC,GAAS,EAAK,EAAK,EAQjDjC,MAAKsiC,+BAAiC,SAACvM,GAA6B,MAAAL,GAAK6M,sBAAsBxM,GAE/F,IAAIqL,EACHphC,KAAKohC,aAAeA,MAEpBphC,MAAKkiC,eAAiB,GAAIjgC,GAG5BrB,OAAAC,eAAW0gC,EAAAhhC,UAAA,kBxCy9RJO,IwCz9RP,WAEC,MAAOd,MAAKoiC,kBxC09RN7+B,IwCv9RP,SAA0BiL,GAEzB,GAAIxO,KAAKqhC,eAAgB,CACxBrhC,KAAKqhC,eAAenrB,oBAAoBlL,EAAmB6G,uBAAwB7R,KAAKsiC,+BACxFtiC,MAAKqhC,eAAiB,KAGvBrhC,KAAKoiC,iBAAmB5zB,CACxBxO,MAAKq/B,iBxCu9RCr+B,WAAY,KACZC,aAAc,MwCr9RrBL,QAAAC,eAAW0gC,EAAAhhC,UAAA,gBxCw9RJO,IwCx9RP,WAEC,MAAOd,MAAKqhC,gBxCy9RN99B,IwCt9RP,SAAwBiL,GAEvB,GAAIxO,KAAKoiC,iBACRpiC,KAAKoiC,iBAAmB,IAEzB,IAAIpiC,KAAKqhC,gBAAkB7yB,EAC1B,MAED,IAAIxO,KAAKqhC,eACRrhC,KAAKqhC,eAAenrB,oBAAoBlL,EAAmB6G,uBAAwB7R,KAAKsiC,+BAEzFtiC,MAAKqhC,eAAiB7yB,CAEtB,IAAIxO,KAAKqhC,eACRrhC,KAAKqhC,eAAenwB,iBAAiBlG,EAAmB6G,uBAAwB7R,KAAKsiC,+BAEtFtiC,MAAKq/B,iBxCk9RCr+B,WAAY,KACZC,aAAc,MwC/8RdsgC,GAAAhhC,UAAAiY,OAAP,SAAc+mB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIv/B,KAAKs/B,eAAgB,CACxB,GAAIt/B,KAAKoiC,iBACRpiC,KAAKs/B,eAAe9rB,OAAOxT,KAAKoiC,sBAC5B,IAAIpiC,KAAKqhC,eACbrhC,KAAKs/B,eAAe9rB,OAAOxT,KAAKqhC,eAAepqB,MAAOjX,KAAKqhC,eAAe9rB,cAAgBvV,KAAKqhC,eAAez6B,UAAUsM,WAInHquB,GAAAhhC,UAAAgiC,sBAAR,SAA8BxM,GAE7B/1B,KAAKq/B,gBAEP,OAAAkC,IA3E+BrC,EA6E/Bt/B,GAA0BJ,QAAjB+hC,IxCm9RNj4B,gCAAgCjI,UAAU49B,gDAAgD,gDAAgDjlB,+CAA+C,iDAAiDwoB,mDAAmD,SAAS9jC,EAAQkB,EAAOJ,GACxT,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyC3iStB,IAAO4B,GAAQvD,EAAe,gCAG9B,IAAO6iC,GAAgB7iC,EAAa,kDzCijSpC,IyC1iSM+jC,GAAgB,SAAA9hC,GAASZ,EAAzB0iC,EAAgB9hC,EA+BrB,SA/BK8hC,GA+BOtD,EAAmCiC,EAAmCsB,EAAsBC,EAAkBC,GAA9G,GAAAzD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAiC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAsB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAEzHjiC,EAAAlB,KAAAO,KAAMm/B,EAAciC,EAJdphC,MAAA6iC,eAA0B,GAAI5gC,GAAS,EAAG,KAAM,IAMtDjC,MAAK0iC,UAAYA,CACjB1iC,MAAK4iC,QAAUA,CACf5iC,MAAK2iC,KAAOA,CAEZ3iC,MAAK8iC,UAAY,GAAI7gC,EACrBjC,MAAK+iC,IAAM,GAAI9gC,EACfjC,MAAKgjC,SAAW,GAAI/gC,EACpBjC,MAAKijC,OAAS,GAAIhhC,EAClBjC,MAAKkjC,cAAgB,GAAIjhC,EACzBjC,MAAKmjC,iBAAmB,GAAIlhC,GAItBwgC,EAAAliC,UAAAiY,OAAP,SAAc+mB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI6D,EAEJ,KAAKpjC,KAAKqhC,iBAAmBrhC,KAAKs/B,eACjC,MAED8D,GAAOpjC,KAAKqhC,eAAez6B,UAAUyqB,SAAS5E,qBAAqBzsB,KAAK6iC,eACxE7iC,MAAKmjC,iBAAiBh8B,EAAInH,KAAKqhC,eAAel6B,EAAIi8B,EAAKj8B,CACvDnH,MAAKmjC,iBAAiB/7B,EAAIpH,KAAKqhC,eAAej6B,EAAIg8B,EAAKh8B,CACvDpH,MAAKmjC,iBAAiB97B,EAAIrH,KAAKqhC,eAAeh6B,EAAI+7B,EAAK/7B,CAEvDrH,MAAKgjC,SAAWhjC,KAAKs/B,eAAe14B,UAAUsM,SAASmwB,IAAIrjC,KAAKmjC,iBAChEnjC,MAAKgjC,SAASM,SAAStjC,KAAK0iC,UAE5B1iC,MAAK+iC,IAAI7zB,SAASlP,KAAK8iC,UACvB9iC,MAAK+iC,IAAIO,QAAQtjC,KAAK4iC,QAEtB5iC,MAAKijC,OAAO97B,EAAInH,KAAKgjC,SAAS77B,EAAInH,KAAK+iC,IAAI57B,CAC3CnH,MAAKijC,OAAO77B,EAAIpH,KAAKgjC,SAAS57B,EAAIpH,KAAK+iC,IAAI37B,CAC3CpH,MAAKijC,OAAO57B,EAAIrH,KAAKgjC,SAAS37B,EAAIrH,KAAK+iC,IAAI17B,CAE3CrH,MAAKkjC,cAAch0B,SAASlP,KAAKijC,OACjCjjC,MAAKkjC,cAAcI,QAAQ,EAAEtjC,KAAK2iC,KAElC3iC,MAAK8iC,UAAUS,YAAYvjC,KAAKkjC,cAEhCljC,MAAKs/B,eAAe14B,UAAUsM,SAAWlT,KAAKs/B,eAAe14B,UAAUsM,SAASmwB,IAAIrjC,KAAK8iC,UAEzFniC,GAAAJ,UAAMiY,OAAM/Y,KAAAO,MAEd,OAAAyiC,IA/E+BlB,EAiF/B3hC,GAA0BJ,QAAjBijC,IzC2gSNn5B,gCAAgCjI,UAAUghC,kDAAkD,oDAAoDmB,0CAA0C,SAAS9kC,EAAQkB,EAAOJ,G0CtmSrN,GAAMikC,GAAW,WAAjB,QAAMA,MAEEA,EAAA1d,KAAc,MACd0d;EAAAC,MAAe,OACfD,GAAAE,MAAe,OACfF,GAAAG,OAAgB,QACxB,OAAAH,KAEqB7jC,GAAAJ,QAAZikC,O1C2mSHI,uCAAuC,SAASnlC,EAAQkB,EAAOJ,SAI/DskC,yCAAyC,SAASplC,EAAQkB,EAAOJ,GACvE,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2CznStB,IAAOG,GAAS9B,EAAe,oCAG/B,IAAOwM,GAAaxM,EAAc,wCAElC,IAAO+zB,GAAU/zB,EAAe,uCAKhC,IAAOqlC,GAAarlC,EAAc,0C3CupSlC,I2CjnSMslC,GAAS,SAAArjC,GAASZ,EAAlBikC,EAASrjC,EAgHd,SAhHKqjC,GAgHOn6B,EAAuBo6B,EAA+BC,GAhHnE,GAAAxO,GAAA11B,IAgHoC,IAAAikC,QAAA,GAA6B,CAA7BA,EAAA,OAA+B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEjEvjC,EAAAlB,KAAAO,KAEAA,MAAKuP,WAAa,IAElBvP,MAAKmkC,sBAAwB,SAACpO,GAAwB,MAAAL,GAAK0O,cAAcrO,GAEzE/1B,MAAK6J,SAAWA,CAEhB7J,MAAKqkC,gBAAkBx6B,EAASmH,KAChChR,MAAKskC,iBAAmBz6B,EAASiF,MAGjC9O,MAAKmO,YAAcskB,EAAWE,iBAjH/B/xB,OAAAC,eAAWmjC,EAAAzjC,UAAA,Y3CunSJO,I2CvnSP,WAEC,MAAOd,MAAKukC,W3CwnSNvjC,WAAY,KACZC,aAAc,M2CnnSrBL,QAAAC,eAAWmjC,EAAAzjC,UAAA,a3CynSJO,I2CznSP,WAEC,MAAON,GAAUgkC,W3C0nSXxjC,WAAY,KACZC,aAAc,M2ChnSrBL,QAAAC,eAAWmjC,EAAAzjC,UAAA,mB3CsnSJO,I2CtnSP,WAEC,MAAOd,MAAKskC,kB3CunSNtjC,WAAY,KACZC,aAAc,M2ClnSrBL,QAAAC,eAAWmjC,EAAAzjC,UAAA,kB3CwnSJO,I2CxnSP,WAEC,MAAOd,MAAKqkC,iB3CynSNrjC,WAAY,KACZC,aAAc,M2CpnSrBL,QAAAC,eAAWmjC,EAAAzjC,UAAA,Y3C0nSJO,I2C1nSP,WAEC,MAAOd,MAAKmnB,W3C2nSN5jB,I2CxnSP,SAAoBC,GAEnB,GAAIA,GAASxD,KAAKmnB,UACjB,MAED,IAAInnB,KAAKmnB,UAAW,CACnBnnB,KAAKmnB,UAAUC,aAAapnB,KAC5BA,MAAKmnB,UAAUjR,oBAAoB6tB,EAAcU,aAAczkC,KAAKmkC,uBAIrEnkC,KAAKmnB,UAAY3jB,CAEjB,IAAIxD,KAAKmnB,UAAW,CACnBnnB,KAAKmnB,UAAUE,UAAUrnB,KACzBA,MAAKmnB,UAAUjW,iBAAiB6yB,EAAcU,aAAczkC,KAAKmkC,yB3CsnS5DnjC,WAAY,KACZC,aAAc,M2CvlSrBL,QAAAC,eAAWmjC,EAAAzjC,UAAA,e3C6lSJO,I2C7lSP,WAEC,MAAOd,MAAKsnB,c3C8lSN/jB,I2C3lSP,SAAuBC,GAEtBxD,KAAKsnB,aAAe9jB,G3C4lSdxC,WAAY,KACZC,aAAc,M2CtkSd+iC,GAAAzjC,UAAAmS,kBAAP,WAEC/R,EAAAJ,UAAMmS,kBAAiBjT,KAAAO,KAEvBA,MAAK2S,YAAY3B,MAAQhR,KAAKqkC,eAC9BrkC,MAAK2S,YAAY7D,OAAS9O,KAAKskC,iBAYzBN,GAAAzjC,UAAA4X,gBAAP,SAAuBC,EAAkCC,GAExD,MAAOrY,MAAKiQ,kBAAkBy0B,uBAAuB1kC,KAAMA,KAAK2W,qBAAsByB,GAM/E4rB,GAAAzjC,UAAA6jC,cAAR,SAAsBrO,GAErB/1B,KAAKqkC,gBAAkBrkC,KAAKmnB,UAAUnW,KACtChR,MAAKskC,iBAAmBtkC,KAAKmnB,UAAUrY,MAEvC9O,MAAKoO,oBAEL,IAAIjK,GAAanE,KAAKyN,cAAc/N,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAKyN,cAActO,GAAGsoB,qBAGjBuc,GAAAzjC,UAAAokC,qBAAP,SAA4Bz6B,GAK3B,GAAIlK,KAAKwS,eACRxS,KAAKwS,eAAeC,YAErBzS,MAAKiK,oBAAoBC,GAGnB85B,GAAAzjC,UAAA0J,oBAAP,SAA2BC,GAE1BA,EAAa06B,eAAe5kC,MAGtBgkC,GAAAzjC,UAAAgX,iBAAP,SAAwBP,GAEvBA,EAAU6tB,iBAAiB7kC,MAGrBgkC,GAAAzjC,UAAA8W,mBAAP,SAA0BL,GAEzBA,EAAU8tB,mBAAmB9kC,MAE/B,OAAAgkC,IAlMwB94B,EAoMLtL,GAAAJ,QAAVwkC,I3C6jSN5iC,oCAAoCC,UAAUgJ,wCAAwC,wCAAwCmoB,uCAAuC,uCAAuCuS,0CAA0C,4CAA4CnG,sCAAsC,SAASlgC,EAAQkB,EAAOJ,GACnW,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4CzzStB,IAAOoK,GAAQ/L,EAAgB,gCAC/B,IAAOsmC,GAAOtmC,EAAgB,+BAE9B,IAAO8B,GAAS9B,EAAe,oCAC/B,IAAOumC,GAAevmC,EAAc,yCAEpC,IAAOwmC,GAAqBxmC,EAAY,oDAExC,IAAO+zB,GAAU/zB,EAAe,uCAChC,IAAO2hB,GAAsB3hB,EAAY,uDAGzC,IAAOi7B,GAAWj7B,EAAe,wCAMjC,IAAMg7B,GAAM,SAAA/4B,GAASZ,EAAf25B,EAAM/4B,EASX,SATK+4B,GASO+C,GATb,GAAA/G,GAAA11B,IASa,IAAAy8B,QAAA,GAA6B,CAA7BA,EAAA,KAEX97B,EAAAlB,KAAAO,KATOA,MAAAmlC,gBAA2B,GAAI16B,EAC/BzK,MAAAolC,qBAA+B,IAG/BplC,MAAAqlC,oBAA8B,IAOrCrlC,MAAKuP,WAAa,IAElBvP,MAAKslC,mCAAqC,SAACvP,GAA0B,MAAAL,GAAK6P,0BAA0BxP,GAEpG/1B,MAAKwlC,YAAc/I,GAAc,GAAIyI,EACrCllC,MAAKwlC,YAAYt0B,iBAAiB+zB,EAAgBQ,eAAgBzlC,KAAKslC,mCAEvEtlC,MAAK0lC,iBAEL,KAAK,GAAIvmC,GAAW,EAAGA,EAAI,IAAKA,EAC/Ba,KAAK0lC,eAAevmC,GAAK,GAAI6lC,EAE9BhlC,MAAKqH,GAAK,GAGVrH,MAAKmO,YAAcskB,EAAWG,KAI/BhyB,OAAAC,eAAW64B,EAAAn5B,UAAA,a5CuySJO,I4CvySP,WAEC,MAAON,GAAUmlC,Q5CwySX3kC,WAAY,KACZC,aAAc,M4CtySby4B,GAAAn5B,UAAAglC,0BAAR,SAAkCxP,GAEjC/1B,KAAKolC,qBAAuB,IAC5BplC,MAAKqlC,oBAAsB,IAC3BrlC,MAAKgJ,cAAc+sB,GAGpBn1B,QAAAC,eAAW64B,EAAAn5B,UAAA,iB5CuySJO,I4CvySP,WAEC,GAAId,KAAKqlC,oBACRrlC,KAAK4lC,eAEN,OAAO5lC,MAAK0lC,gB5CuySN1kC,WAAY,KACZC,aAAc,M4CrySby4B,GAAAn5B,UAAAqlC,cAAR,WAEC,GAAI1mC,GAAUgB,EAAUgvB,C5CwySlB,I4CtySF2W,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIzmC,EACJ,IAAI2T,GAAe,GAAIxP,OAAc,GAErC,IAAIuiC,EACJ7mC,MAAK8mC,eAAezW,cAAcvc,EAElC+xB,GAAM/xB,EAAI,EACVgyB,GAAMhyB,EAAI,EACViyB,GAAMjyB,EAAI,EACVkyB,GAAMlyB,EAAI,GACVmyB,GAAMnyB,EAAI,EACVoyB,GAAMpyB,EAAI,EACVqyB,GAAMryB,EAAI,EACVsyB,GAAMtyB,EAAI,GACVuyB,GAAMvyB,EAAI,EACVwyB,GAAMxyB,EAAI,EACVyyB,GAAMzyB,EAAI,GACV0yB,GAAM1yB,EAAI,GACV2yB,GAAM3yB,EAAI,EACV4yB,GAAM5yB,EAAI,EACV6yB,GAAM7yB,EAAI,GACV8yB,GAAM9yB,EAAI,GAGV3T,GAAIH,KAAK0lC,eAAe,EACxBxmC,GAAIunC,EAAMZ,CACV3lC,GAAIwmC,EAAMZ,CACV5W,GAAIyX,EAAMZ,CACVc,GAAS,EAAEl+B,KAAKC,KAAK1J,EAAEA,EAAIgB,EAAEA,EAAIgvB,EAAEA,EACnC/uB,GAAEjB,EAAIA,EAAE2nC,CACR1mC,GAAED,EAAIA,EAAE2mC,CACR1mC,GAAE+uB,EAAIA,EAAE2X,CACR1mC,GAAEF,IAAM2mC,EAAMZ,GAAKa,CAGnB1mC,GAAIH,KAAK0lC,eAAe,EACxBxmC,GAAIunC,EAAMZ,CACV3lC,GAAIwmC,EAAMZ,CACV5W,GAAIyX,EAAMZ,CACVc,GAAS,EAAEl+B,KAAKC,KAAK1J,EAAEA,EAAIgB,EAAEA,EAAIgvB,EAAEA,EACnC/uB,GAAEjB,EAAIA,EAAE2nC,CACR1mC,GAAED,EAAIA,EAAE2mC,CACR1mC,GAAE+uB,EAAIA,EAAE2X,CACR1mC,GAAEF,GAAK+lC,EAAMY,GAAKC,CAGlB1mC,GAAIH,KAAK0lC,eAAe,EACxBxmC,GAAIunC,EAAMR,CACV/lC,GAAIwmC,EAAMR,CACVhX,GAAIyX,EAAMR,CACVU,GAAS,EAAEl+B,KAAKC,KAAK1J,EAAEA,EAAIgB,EAAEA,EAAIgvB,EAAEA,EACnC/uB,GAAEjB,EAAIA,EAAE2nC,CACR1mC,GAAED,EAAIA,EAAE2mC,CACR1mC,GAAE+uB,EAAIA,EAAE2X,CACR1mC,GAAEF,IAAM2mC,EAAMR,GAAKS,CAGnB1mC,GAAIH,KAAK0lC,eAAe,EACxBxmC,GAAIunC,EAAMR,CACV/lC,GAAIwmC,EAAMR,CACVhX,GAAIyX,EAAMR,CACVU,GAAS,EAAEl+B,KAAKC,KAAK1J,EAAEA,EAAIgB,EAAEA,EAAIgvB,EAAEA,EACnC/uB,GAAEjB,EAAIA,EAAE2nC,CACR1mC,GAAED,EAAIA,EAAE2mC,CACR1mC,GAAE+uB,EAAIA,EAAE2X,CACR1mC,GAAEF,GAAKmmC,EAAMQ,GAAKC,CAGlB1mC,GAAIH,KAAK0lC,eAAe,EACxBxmC,GAAImnC,CACJnmC,GAAIomC,CACJpX,GAAIqX,CACJM,GAAS,EAAEl+B,KAAKC,KAAK1J,EAAEA,EAAIgB,EAAEA,EAAIgvB,EAAEA,EACnC/uB,GAAEjB,EAAIA,EAAE2nC,CACR1mC,GAAED,EAAIA,EAAE2mC,CACR1mC,GAAE+uB,EAAIA,EAAE2X,CACR1mC,GAAEF,GAAKumC,EAAIK,CAGX1mC,GAAIH,KAAK0lC,eAAe,EACxBxmC,GAAIunC,EAAMJ,CACVnmC,GAAIwmC,EAAMJ,CACVpX,GAAIyX,EAAMJ,CACVM,GAAS,EAAEl+B,KAAKC,KAAK1J,EAAEA,EAAIgB,EAAEA,EAAIgvB,EAAEA,EACnC/uB,GAAEjB,EAAIA,EAAE2nC,CACR1mC,GAAED,EAAIA,EAAE2mC,CACR1mC,GAAE+uB,EAAIA,EAAE2X,CACR1mC,GAAEF,GAAKumC,EAAMI,GAAKC,CAElB7mC,MAAKqlC,oBAAsB,MAOrB3L,GAAAn5B,UAAA+O,0BAAP,WAEC3O,EAAAJ,UAAM+O,0BAAyB7P,KAAAO,KAE/BA,MAAKolC,qBAAuB,IAC5BplC,MAAKqlC,oBAAsB,KAM5BzkC,QAAAC,eAAW64B,EAAAn5B,UAAA,c5C0xSJO,I4C1xSP,WAEC,MAAOd,MAAKwlC,a5C2xSNjiC,I4CxxSP,SAAsBC,GAErB,GAAIxD,KAAKwlC,aAAehiC,EACvB,MAED,KAAKA,EACJ,KAAM,IAAInE,OAAM,6BAEjBW,MAAKwlC,YAAYtvB,oBAAoB+uB,EAAgBQ,eAAgBzlC,KAAKslC,mCAC1EtlC,MAAKwlC,YAAchiC,CACnBxD,MAAKwlC,YAAYt0B,iBAAiB+zB,EAAgBQ,eAAgBzlC,KAAKslC,mCACvEtlC,MAAKgJ,cAAc,GAAI2wB,GAAYA,EAAY4C,mBAAoBv8B,Q5CuxS7DgB,WAAY,KACZC,aAAc,M4ClxSrBL,QAAAC,eAAW64B,EAAAn5B,UAAA,kB5CwxSJO,I4CxxSP,WAEC,GAAId,KAAKolC,qBAAsB,CAC9BplC,KAAKmlC,gBAAgBj2B,SAASlP,KAAKmT,sBACnCnT,MAAKmlC,gBAAgB4B,OAAO/mC,KAAKwlC,YAAYzpB,OAC7C/b,MAAKolC,qBAAuB,MAG7B,MAAOplC,MAAKmlC,iB5CwxSNnkC,WAAY,KACZC,aAAc,M4C9wSdy4B,GAAAn5B,UAAA+9B,OAAP,SAAc0I,EAAWC,EAAW5I,GAEnC,MAAOr+B,MAAKmP,eAAesd,qBAAqBzsB,KAAKwlC,YAAYtH,UAAU8I,EAAIC,EAAI5I,IAS7E3E,GAAAn5B,UAAAs9B,QAAP,SAAeC,GAEd,MAAO99B,MAAKwlC,YAAY3H,QAAQ79B,KAAKmT,sBAAsB7L,gBAAgBw2B,IAWrEpE,GAAAn5B,UAAA29B,UAAP,SAAiB8I,EAAWC,EAAW5I,GAEtC,MAAOr+B,MAAKmP,eAAe7H,gBAAgBtH,KAAKwlC,YAAYtH,UAAU8I,EAAIC,EAAI5I,IAGxE3E,GAAAn5B,UAAAokC,qBAAP,SAA4Bz6B,GAK3B,GAAIlK,KAAKwS,eACRxS,KAAKwS,eAAeC,YAErBzS,MAAKiK,oBAAoBC,GAGnBwvB,GAAAn5B,UAAA0J,oBAAP,SAA2BC,IAKpBwvB,GAAAn5B,UAAAgX,iBAAP,SAAwBP,GAEvBA,EAAUykB,iBAAiBz7B,MAGrB05B,GAAAn5B,UAAA8W,mBAAP,SAA0BL,GAEzBA,EAAUkwB,mBAAmBlnC,MAE/B,OAAA05B,IAtQqBrZ,EAwQLzgB,GAAAJ,QAAPk6B,I5C6wSNyN,yCAAyC9lC,UAAUqY,gCAAgCrY,UAAU+lC,+BAA+B/lC,UAAUD,oCAAoCC,UAAUgmC,oDAAoDhmC,UAAUmxB,uCAAuC,uCAAuCpQ,uDAAuD,uDAAuDyc,wCAAwC,0CAA0CyI,gDAAgD,SAAS5oC,EAAQkB,EAAOJ,GAC3kB,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6C5iTtB,IAAOoK,GAAQ/L,EAAgB,gCAC/B,IAAOuD,GAAQvD,EAAgB,gCAE/B,IAAO6hB,GAAS7hB,EAAe,oCAC/B,IAAO+zB,GAAU/zB,EAAe,uCAOhC,IAAO6oC,GAAuB7oC,EAAY,qEAE1C,IAAM8oC,GAAgB,SAAA7mC,GAASZ,EAAzBynC,EAAgB7mC,EAQrB,SARK6mC,GAQOC,EAAiBC,EAAkBC,GAAnC,GAAAF,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,GAAe,EAAG,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE9ChnC,EAAAlB,KAAAO,KALOA,MAAA4nC,aAA6B,GAAItjC,OAAc,GAOtDtE,MAAKuP,WAAa,IAElBvP,MAAKwvB,UAAY,GAAIvtB,GAASwlC,EAAMC,EAAMC,EAE1C3nC,MAAK6nC,gBAAkB,GAAI5lC,EAG3BjC,MAAKmO,YAAcskB,EAAWG,KAG/BhyB,OAAAC,eAAW2mC,EAAAjnC,UAAA,kB7C+hTJO,I6C/hTP,WAEC,GAAId,KAAKsL,sBACRtL,KAAK0Q,uBAEN,OAAO1Q,MAAK6nC,iB7C+hTN7mC,WAAY,KACZC,aAAc,M6C7hTrBL,QAAAC,eAAW2mC,EAAAjnC,UAAA,a7CgiTJO,I6ChiTP,WAEC,MAAOd,MAAK8nC,Y7CiiTNvkC,I6C9hTP,SAAqBC,GAEpBxD,KAAK8nC,WAAatkC,CAElB,KAAKxD,KAAK+nC,WACT/nC,KAAK+nC,WAAa,GAAI9lC,EAEvBjC,MAAK+nC,WAAW5gC,EAAInH,KAAKmH,EAAInH,KAAK8nC,WAAW3gC,CAC7CnH,MAAK+nC,WAAW3gC,EAAIpH,KAAKoH,EAAIpH,KAAK8nC,WAAW1gC,CAC7CpH,MAAK+nC,WAAW1gC,EAAIrH,KAAKqH,EAAIrH,KAAK8nC,WAAWzgC,CAE7CrH,MAAKwT,OAAOxT,KAAK+nC,a7C4hTX/mC,WAAY,KACZC,aAAc,M6CzhTdumC,GAAAjnC,UAAAmQ,sBAAP,WAEC/P,EAAAJ,UAAMmQ,sBAAqBjR,KAAAO,KAC3BA,MAAKmP,eAAesB,aAAa,EAAGzQ,KAAK6nC,gBACzC7nC,MAAK6nC,gBAAgB7zB,YAIfwzB,GAAAjnC,UAAAohB,oBAAP,WAEC,MAAO,IAAI4lB,GAILC,GAAAjnC,UAAA0hB,2BAAP,SAAkCC,EAAgB9M,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIK,GAAoB,GAAIxP,MAC5B,IAAI8P,GAAa,GAAI3J,EAErB2J,GAAElF,SAASgT,EAAO/M,wBAAwBC,GAC1ChB,GAAE2yB,OAAO/mC,KAAKmT,sBAEd,KAAKnT,KAAKgoC,gBACThoC,KAAKgoC,kBAEN5zB,GAAE6zB,iBAAiBjoC,KAAK4nC,aAAc5nC,KAAKgoC,gBAE3C,IAAIE,GAAcrG,SAAUsG,GAAetG,QAC3C,IAAIuG,GAAcvG,SAAUwG,GAAexG,QAC3C,IAAIyG,GAAczG,SAAU0G,GAAe1G,QAC3C,IAAI5hC,EACJ,KAAK,GAAId,GAAW,EAAGA,EAAI,IAAK,CAC/Bc,EAAID,KAAKgoC,gBAAgB7oC,IAEzB,IAAIc,EAAIioC,EACPA,EAAOjoC,CAER,IAAIA,EAAIkoC,EACPA,EAAOloC,CAERA,GAAID,KAAKgoC,gBAAgB7oC,IAEzB,IAAIc,EAAImoC,EACPA,EAAOnoC,CAER,IAAIA,EAAIooC,EACPA,EAAOpoC,CAERA,GAAID,KAAKgoC,gBAAgB7oC,IAEzB,IAAIc,EAAIqoC,EACPA,EAAOroC,CAER,IAAIA,EAAIsoC,EACPA,EAAOtoC,EAGT,GAAIuoC,GAAmB,GAAGL,EAAOD,EACjC,IAAIO,GAAmB,GAAGJ,EAAOD,EACjC,IAAIM,GAAmB,GAAGH,EAAOD,EACjCx0B,GAAI,GAAK,EAAE00B,CACX10B,GAAI,GAAK,EAAE20B,CACX30B,GAAI,IAAM40B,CACV50B,GAAI,MAAQq0B,EAAOD,GAAMM,CACzB10B,GAAI,MAAQu0B,EAAOD,GAAMK,CACzB30B,GAAI,KAAOw0B,EAAKI,CAChB50B,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,CAEV,KAAKL,EACJA,EAAS,GAAIhJ,EAEdgJ,GAAOY,gBAAgBP,EACvBL,GAAOmE,QAAQxD,EAEf,OAAOX,GAGD+zB,GAAAjnC,UAAAokC,qBAAP,SAA4Bz6B,IAKrBs9B,GAAAjnC,UAAAgX,iBAAP,SAAwBP,GAEvBA,EAAU2xB,2BAA2B3oC,MAG/BwnC,GAAAjnC,UAAA8W,mBAAP,SAA0BL,GAEzBA,EAAU4xB,6BAA6B5oC,MASjCwnC,GAAAjnC,UAAAmS,kBAAP,WAEC/R,EAAAJ,UAAMmS,kBAAiBjT,KAAAO,K7CigTjB,I6C9/SF6oC,GAAc7oC,KAAK2S,YAAYxL,CACnC,IAAI2hC,GAAc9oC,KAAK2S,YAAYvL,EAAIpH,KAAK2S,YAAY7D,MACxD,IAAIi6B,GAAc/oC,KAAK2S,YAAYtL,CACnC,IAAI2hC,GAAchpC,KAAK2S,YAAYxL,EAAInH,KAAK2S,YAAY3B,KACxD,IAAIi4B,GAAcjpC,KAAK2S,YAAYvL,CACnC,IAAI8hC,GAAclpC,KAAK2S,YAAYtL,EAAIrH,KAAK2S,YAAYpE,KAExDvO,MAAK4nC,aAAa,GAAKiB,CACvB7oC,MAAK4nC,aAAa,GAAKkB,CACvB9oC,MAAK4nC,aAAa,GAAKmB,CACvB/oC,MAAK4nC,aAAa,GAAKoB,CACvBhpC,MAAK4nC,aAAa,GAAKkB,CACvB9oC,MAAK4nC,aAAa,GAAKmB,CACvB/oC,MAAK4nC,aAAa,GAAKiB,CACvB7oC,MAAK4nC,aAAa,GAAKqB,CACvBjpC,MAAK4nC,aAAa,GAAKmB,CACvB/oC,MAAK4nC,aAAa,GAAKoB,CACvBhpC,MAAK4nC,aAAa,IAAMqB,CACxBjpC,MAAK4nC,aAAa,IAAMmB,CACxB/oC,MAAK4nC,aAAa,IAAMiB,CACxB7oC,MAAK4nC,aAAa,IAAMkB,CACxB9oC,MAAK4nC,aAAa,IAAMsB,CACxBlpC,MAAK4nC,aAAa,IAAMoB,CACxBhpC,MAAK4nC,aAAa,IAAMkB,CACxB9oC,MAAK4nC,aAAa,IAAMsB,CACxBlpC,MAAK4nC,aAAa,IAAMiB,CACxB7oC,MAAK4nC,aAAa,IAAMqB,CACxBjpC,MAAK4nC,aAAa,IAAMsB,CACxBlpC,MAAK4nC,aAAa,IAAMoB,CACxBhpC,MAAK4nC,aAAa,IAAMqB,CACxBjpC,MAAK4nC,aAAa,IAAMsB,EAE1B,OAAA1B,IA1L+BjnB,EA4L/B3gB,GAA0BJ,QAAjBgoC,I7CggTN9tB,gCAAgCrY,UAAUiI,gCAAgCjI,UAAU+e,oCAAoC,oCAAoCoS,uCAAuC,uCAAuC2W,qEAAqE,uEAAuEC,uCAAuC,SAAS1qC,EAAQkB,EAAOJ,SAIlb6pC,0CAA0C,SAAS3qC,EAAQkB,EAAOJ,GACxE,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8ChtTtB,IAAOhB,GAAKX,EAAgB,+BAE5B,IAAO6hB,GAAS7hB,EAAe,oCAC/B,IAAO+zB,GAAU/zB,EAAe,uCAShC,IAAM4qC,GAAU,SAAA3oC,GAASZ,EAAnBupC,EAAU3oC,EAKf,SALK2oC,GAKOC,EAA4BC,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAEvC7oC,EAAAlB,KAAAO,KAEAA,MAAKuP,WAAa,IAElBvP,MAAKypC,YAAcF,CACnBvpC,MAAK0pC,aAAeF,CAGpBxpC,MAAKmO,YAAcskB,EAAWG,KAG/BhyB,OAAAC,eAAWyoC,EAAA/oC,UAAA,c9CmsTJO,I8CnsTP,WAEC,MAAOd,MAAKypC,a9CosTNlmC,I8CjsTP,SAAsBC,GAErBxD,KAAKypC,YAAcjmC,G9CksTbxC,WAAY,KACZC,aAAc,M8ChsTrBL,QAAAC,eAAWyoC,EAAA/oC,UAAA,e9CmsTJO,I8CnsTP,WAEC,MAAOd,MAAK0pC,c9CosTNnmC,I8CjsTP,SAAuBC,GAEtBxD,KAAK0pC,aAAelmC,G9CksTdxC,WAAY,KACZC,aAAc,M8C/rTdqoC,GAAA/oC,UAAA0hB,2BAAP,SAAkCC,EAAgB9M,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAIpU,GAAM,wEAGViqC,GAAA/oC,UAAAokC,qBAAP,SAA4Bz6B,IAKrBo/B,GAAA/oC,UAAAgX,iBAAP,SAAwBP,GAEvBA,EAAU2yB,qBAAqB3pC,MAGzBspC,GAAA/oC,UAAA8W,mBAAP,SAA0BL,GAEzBA,EAAU4yB,uBAAuB5pC,MAEnC,OAAAspC,IA1DyB/oB,EA4DzB3gB,GAAoBJ,QAAX8pC,I9C+rTNxU,+BAA+BzzB,UAAU+e,oCAAoC,oCAAoCoS,uCAAuC,yCAAyCqX,2CAA2C,SAASnrC,EAAQkB,EAAOJ,GACvQ,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+C3wTtB,IAAOG,GAAS9B,EAAe,oCAG/B,IAAOwM,GAAaxM,EAAc,wCAElC,IAAO+zB,GAAU/zB,EAAe,uC/C8wThC,I+CnwTMorC,GAAW,SAAAnpC,GAASZ,EAApB+pC,EAAWnpC,EAwHhB,SAxHKmpC,GAwHOjgC,EAAuBkgC,EAAwBC,EAAsBlrB,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhFne,EAAAlB,KAAAO,KAEAA,MAAKuP,WAAa,IAElBvP,MAAK6J,SAAWA,CAEhB7J,MAAKiqC,eAAiBF,CACtB/pC,MAAKkqC,aAAeF,CACpBhqC,MAAKmqC,eAAiBrrB,EAAU,EAGhC9e,MAAKmO,YAAcskB,EAAWE,iBAvH/B/xB,OAAAC,eAAWipC,EAAAvpC,UAAA,Y/C6wTJO,I+C7wTP,WAEC,MAAOd,MAAKukC,W/C8wTNvjC,WAAY,KACZC,aAAc,M+CzwTrBL,QAAAC,eAAWipC,EAAAvpC,UAAA,a/C+wTJO,I+C/wTP,WAEC,MAAON,GAAU4pC,c/CgxTXppC,WAAY,KACZC,aAAc,M+C3wTrBL,QAAAC,eAAWipC,EAAAvpC,UAAA,gB/CixTJO,I+CjxTP,WAEC,MAAOd,MAAKiqC,gB/CkxTNjpC,WAAY,KACZC,aAAc,M+ChxTrBL,QAAAC,eAAWipC,EAAAvpC,UAAA,iB/CmxTJgD,I+CnxTP,SAAyBC,GAExB,GAAIxD,KAAKiqC,gBAAkBzmC,EAC1B,MAEDxD,MAAKiqC,eAAiBzmC,CAEtBxD,MAAKqqC,0B/CkxTCrpC,WAAY,KACZC,aAAc,M+C7wTrBL,QAAAC,eAAWipC,EAAAvpC,UAAA,e/CmxTJO,I+CnxTP,WAEC,MAAOd,MAAKkqC,c/CoxTN3mC,I+CjxTP,SAAuBC,GAEtB,GAAIxD,KAAKkqC,cAAgB1mC,EACxB,MAEDxD,MAAKkqC,aAAe1mC,CAEpBxD,MAAKqqC,0B/CgxTCrpC,WAAY,KACZC,aAAc,M+C3wTrBL,QAAAC,eAAWipC,EAAAvpC,UAAA,Y/CixTJO,I+CjxTP,WAEC,MAAOd,MAAKmnB,W/CkxTN5jB,I+C/wTP,SAAoBC,GAEnB,GAAIxD,KAAK6J,SACR7J,KAAK6J,SAASud,aAAapnB,KAE5BA,MAAKmnB,UAAY3jB,CAEjB,IAAIxD,KAAK6J,SACR7J,KAAK6J,SAASwd,UAAUrnB,O/C8wTnBgB,WAAY,KACZC,aAAc,M+CzwTrBL,QAAAC,eAAWipC,EAAAvpC,UAAA,a/C+wTJO,I+C/wTP,WAEC,MAAOd,MAAKmqC,eAAe,G/CgxTrB5mC,I+C7wTP,SAAqBC,GAEpB,GAAIxD,KAAKmqC,gBAAkB3mC,EAC1B,MAEDxD,MAAKmqC,eAAiB3mC,EAAM,EAE5BxD,MAAKqqC,0B/C4wTCrpC,WAAY,KACZC,aAAc,M+CvwTrBL,QAAAC,eAAWipC,EAAAvpC,UAAA,e/C6wTJO,I+C7wTP,WAEC,MAAOd,MAAKsnB,c/C8wTN/jB,I+C3wTP,SAAuBC,GAEtBxD,KAAKsnB,aAAe9jB,G/C4wTdxC,WAAY,KACZC,aAAc,M+CnvTd6oC,GAAAvpC,UAAAW,QAAP,WAEClB,KAAKiqC,eAAiB,IACtBjqC,MAAKkqC,aAAe,KAMdJ,GAAAvpC,UAAAmS,kBAAP,WAEC/R,EAAAJ,UAAMmS,kBAAiBjT,KAAAO,KAEvBA,MAAK2S,YAAYxL,EAAIwB,KAAKi4B,IAAI5gC,KAAKiqC,eAAe9iC,EAAGnH,KAAKkqC,aAAa/iC,EACvEnH,MAAK2S,YAAYvL,EAAIuB,KAAKi4B,IAAI5gC,KAAKiqC,eAAe7iC,EAAGpH,KAAKkqC,aAAa9iC,EACvEpH,MAAK2S,YAAYtL,EAAIsB,KAAKi4B,IAAI5gC,KAAKiqC,eAAe5iC,EAAGrH,KAAKkqC,aAAa7iC,EACvErH,MAAK2S,YAAY3B,MAAQrI,KAAKuoB,IAAIlxB,KAAKiqC,eAAe9iC,EAAInH,KAAKkqC,aAAa/iC,EAC5EnH,MAAK2S,YAAY7D,OAASnG,KAAKuoB,IAAIlxB,KAAKiqC,eAAe7iC,EAAIpH,KAAKkqC,aAAa9iC,EAC7EpH,MAAK2S,YAAYpE,MAAQ5F,KAAKuoB,IAAIlxB,KAAKiqC,eAAe5iC,EAAIrH,KAAKkqC,aAAa7iC,GAGtEyiC,GAAAvpC,UAAAsS,qBAAP,WAEClS,EAAAJ,UAAMsS,qBAAoBpT,KAAAO,KAE1BA,MAAK0S,mBAEL,IAAI43B,IAAoBtqC,KAAKkqC,aAAa/iC,EAAInH,KAAKiqC,eAAe9iC,GAAG,CACrE,IAAIojC,IAAqBvqC,KAAKkqC,aAAa9iC,EAAIpH,KAAKiqC,eAAe7iC,GAAG,CACtE,IAAIojC,IAAoBxqC,KAAKkqC,aAAa7iC,EAAIrH,KAAKiqC,eAAe5iC,GAAG,CACrErH,MAAK8S,eAAe3L,EAAInH,KAAKiqC,eAAe9iC,EAAImjC,CAChDtqC,MAAK8S,eAAe1L,EAAIpH,KAAKiqC,eAAe7iC,EAAImjC,CAChDvqC,MAAK8S,eAAezL,EAAIrH,KAAKiqC,eAAe5iC,EAAImjC,CAChDxqC,MAAK8S,eAAe2K,OAAS9U,KAAKC,KAAK0hC,EAAUA,EAAYC,EAAWA,EAAaC,EAAUA,GAMxFV,GAAAvpC,UAAA8pC,uBAAR,WAEC,GAAIlmC,GAAanE,KAAKyN,cAAc/N,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAKyN,cAActO,GAAGsoB,qBAGjBqiB,GAAAvpC,UAAAokC,qBAAP,SAA4Bz6B,GAK3B,GAAIlK,KAAKwS,eACRxS,KAAKwS,eAAeC,YAErBzS,MAAKiK,oBAAoBC,GAGnB4/B,GAAAvpC,UAAA0J,oBAAP,SAA2BC,GAE1BA,EAAaugC,iBAAiBzqC,MAGxB8pC,GAAAvpC,UAAAgX,iBAAP,SAAwBP,GAEvBA,EAAU6tB,iBAAiB7kC,MAGrB8pC,GAAAvpC,UAAA8W,mBAAP,SAA0BL,GAEzBA,EAAU8tB,mBAAmB9kC,MAE/B,OAAA8pC,IA/M0B5+B,EAiN1BtL,GAAqBJ,QAAZsqC,I/CquTN1oC,oCAAoCC,UAAUgJ,wCAAwC,wCAAwCmoB,uCAAuC,yCAAyCkY,oCAAoC,SAAShsC,EAAQkB,EAAOJ,GAC7Q,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgD58TtB,IAAOG,GAAS9B,EAAe,oCAI/B,IAAO2b,GAAQ3b,EAAgB,mCAK/B,IAAO+zB,GAAU/zB,EAAe,uCAChC,IAAO2hB,GAAsB3hB,EAAY,uDAIzC,IAAO0b,GAAa1b,EAAc,0ChD08TlC,IgDj8TMisC,GAAI,SAAAhqC,GAASZ,EAAb4qC,EAAIhqC,EA2LT,SA3LKgqC,GA2LOC,EAAmB/gC,GA3LhC,GAAA6rB,GAAA11B,IA2LgC,IAAA6J,QAAA,GAA4B,CAA5BA,EAAA,KAE9BlJ,EAAAlB,KAAAO,KArLOA,MAAAyhB,cAAwB,IACxBzhB,MAAA6qC,wBAAkC,IAsLzC7qC,MAAKuP,WAAa,IAElBvP,MAAK8qC,WAAa,GAAIxmC,MAEtBtE,MAAK+qC,iCAAmC,SAAChV,GAAwB,MAAAL,GAAKsV,wBAAwBjV,GAC9F/1B,MAAKirC,4BAA8B,SAAClV,GAAwB,MAAAL,GAAKwV,mBAAmBnV,GACpF/1B,MAAKmrC,8BAAgC,SAACpV,GAAwB,MAAAL,GAAK0V,qBAAqBrV,GAGxF/1B,MAAK4qC,SAAWA,GAAY,GAAIvwB,EAEhCra,MAAK6J,SAAWA,CAGhB7J,MAAKmO,YAAcskB,EAAWE,iBA3L/B/xB,OAAAC,eAAW8pC,EAAApqC,UAAA,YhD48TJO,IgD58TP,WAEC,MAAOd,MAAKukC,WhD68TNhhC,IgD18TP,SAAoBC,GAEnB,GAAIxD,KAAKukC,UACRvkC,KAAKukC,UAAU8G,YAAYrrC,KAE5BA,MAAKukC,UAAY/gC,CAEjB,IAAIW,GAAanE,KAAK8qC,WAAWprC,MACjC,IAAI4rC,EAEJ,KAAK,GAAInsC,GAAW,EAAGA,EAAIgF,IAAOhF,EAAG,CACpCmsC,EAAUtrC,KAAK8qC,WAAW3rC,EAG1B,IAAImsC,EAAQzhC,SAAU,CACrByhC,EAAQzhC,SAASud,aAAakkB,EAC9BA,GAAQzhC,SAASwd,UAAUikB,GAI5BA,EAAQ9jB,iCAGT,GAAIxnB,KAAKukC,UACRvkC,KAAKukC,UAAUgH,SAASvrC,OhDq8TnBgB,WAAY,KACZC,aAAc,MgDh8TrBL,QAAAC,eAAW8pC,EAAApqC,UAAA,ahDs8TJO,IgDt8TP,WAEC,MAAON,GAAUgrC,MhDu8TXxqC,WAAY,KACZC,aAAc,MgDl8TrBL,QAAAC,eAAW8pC,EAAApqC,UAAA,gBhDw8TJO,IgDx8TP,WAEC,MAAOd,MAAKyhB,ehDy8TNle,IgDt8TP,SAAwBC,GAEvBxD,KAAKyhB,cAAgBje,GhDu8TfxC,WAAY,KACZC,aAAc,MgDl8TrBL,QAAAC,eAAW8pC,EAAApqC,UAAA,YhDw8TJO,IgDx8TP,WAEC,GAAId,KAAKwS,eACRxS,KAAKwS,eAAeC,YAErB,OAAOzS,MAAKyrC,WhDw8TNloC,IgDr8TP,SAAoBC,GAEnB,GAAIrE,EAEJ,IAAIa,KAAKyrC,UAAW,CACnBzrC,KAAKyrC,UAAUv1B,oBAAoBkE,EAAca,eAAgBjb,KAAK+qC,iCACtE/qC,MAAKyrC,UAAUv1B,oBAAoBkE,EAAcO,mBAAoB3a,KAAKirC,4BAC1EjrC,MAAKyrC,UAAUv1B,oBAAoBkE,EAAcU,qBAAsB9a,KAAKmrC,8BAE5E,KAAKhsC,EAAI,EAAGA,EAAIa,KAAK8qC,WAAWprC,SAAUP,EACzCa,KAAK8qC,WAAW3rC,GAAG+B,SAEpBlB,MAAK8qC,WAAWprC,OAAS,EAG1BM,KAAKyrC,UAAYjoC,CAEjB,IAAIxD,KAAKyrC,UAAW,CAEnBzrC,KAAKyrC,UAAUv6B,iBAAiBkJ,EAAca,eAAgBjb,KAAK+qC,iCACnE/qC,MAAKyrC,UAAUv6B,iBAAiBkJ,EAAcO,mBAAoB3a,KAAKirC,4BACvEjrC,MAAKyrC,UAAUv6B,iBAAiBkJ,EAAcU,qBAAsB9a,KAAKmrC,8BAEzE,IAAIO,GAAkC1rC,KAAKyrC,UAAUE,aAErD,KAAKxsC,EAAI,EAAGA,EAAIusC,EAAShsC,SAAUP,EAClCa,KAAK4rC,WAAWF,EAASvsC,MhD+7TrB6B,WAAY,KACZC,aAAc,MgDz7TrBL,QAAAC,eAAW8pC,EAAApqC,UAAA,YhD+7TJO,IgD/7TP,WAEC,MAAOd,MAAKmnB,WhDg8TN5jB,IgD77TP,SAAoBC,GAEnB,GAAIA,GAASxD,KAAKmnB,UACjB,MAED,IAAIhoB,EACJ,IAAIgF,GAAanE,KAAK8qC,WAAWprC,MACjC,IAAI4rC,EAEJ,KAAKnsC,EAAI,EAAGA,EAAIgF,EAAKhF,IACpB,GAAIa,KAAKmnB,YAAcmkB,EAAUtrC,KAAK8qC,WAAW3rC,IAAI0K,UAAY7J,KAAKmnB,UACrEnnB,KAAKmnB,UAAUC,aAAakkB,EAE9BtrC,MAAKmnB,UAAY3jB,CAEjB,KAAKrE,EAAI,EAAGA,EAAIgF,EAAKhF,IACpB,GAAIa,KAAKmnB,YAAcmkB,EAAUtrC,KAAK8qC,WAAW3rC,IAAI0K,UAAY7J,KAAKmnB,UACrEnnB,KAAKmnB,UAAUE,UAAUikB,IhD07TrBtqC,WAAY,KACZC,aAAc,MgDr7TrBL,QAAAC,eAAW8pC,EAAApqC,UAAA,0BhD27TJO,IgD37TP,WAEC,MAAOd,MAAK6qC,yBhD47TNtnC,IgDz7TP,SAAkCC,GAEjCxD,KAAK6qC,wBAA0BrnC,GhD07TzBxC,WAAY,KACZC,aAAc,MgDp7TrBL,QAAAC,eAAW8pC,EAAApqC,UAAA,ahD27TJO,IgD37TP,WAKC,GAAId,KAAKwS,eACRxS,KAAKwS,eAAeC,YAErB,OAAOzS,MAAK8qC,YhD27TN9pC,WAAY,KACZC,aAAc,MgDt7TrBL,QAAAC,eAAW8pC,EAAApqC,UAAA,ehD47TJO,IgD57TP,WAEC,MAAOd,MAAKsnB,chD67TN/jB,IgD17TP,SAAuBC,GAEtBxD,KAAKsnB,aAAe9jB,GhD27TdxC,WAAY,KACZC,aAAc,MgD35Td0pC,GAAApqC,UAAAsrC,oBAAP,WAEC7rC,KAAK4qC,SAASjkC,oBAAoB3G,KAAK+R,WACvC/R,MAAK+R,WAAW9D,WAMV08B,GAAApqC,UAAAW,QAAP,WAECP,EAAAJ,UAAMW,QAAOzB,KAAAO,KAEbA,MAAK6J,SAAW,IAChB7J,MAAK4qC,SAAW,KAOVD,GAAApqC,UAAAurC,+BAAP,WAEC9rC,KAAK8zB,qBAEJ,IAAI9zB,KAAKukC,UACTvkC,KAAKukC,UAAUrjC,UAmBVypC,GAAApqC,UAAA2F,MAAP,WAEC,GAAIA,GAAa,GAAIykC,GAAK3qC,KAAKyrC,UAAWzrC,KAAKmnB,UAE/CjhB,GAAM6L,WAAa/R,KAAK+R,UACxB7L,GAAMgK,MAAQlQ,KAAKkQ,KACnBhK,GAAM8Q,UAAYhX,KAAKgX,SACvB9Q,GAAM6lC,WAAa/rC,KAAK+rC,UAGxB7lC,GAAM8L,KAAOhS,KAAKgS,IAClB9L,GAAM0H,aAAe5N,KAAK4N,YAC1B1H,GAAM8lC,uBAAyBhsC,KAAKgsC,sBACpC9lC,GAAM+lC,aAAejsC,KAAKisC,YAC1B/lC,GAAMwJ,cAAgB1P,KAAK0P,aAG3BxJ,GAAMgmC,MAAQlsC,KAAKksC,KAEnB,IAAI/nC,GAAanE,KAAK8qC,WAAWprC,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjC+G,EAAM4kC,WAAW3rC,GAAG0K,SAAW7J,KAAK8qC,WAAW3rC,GAAGuoB,uBAGnDvjB,GAAMnE,KAAK+zB,WACX,IAAI1gB,EAEJ,KAAKlU,EAAI,EAAGA,EAAIgF,IAAOhF,EAAG,CACzBkU,EAAMrT,KAAKg0B,WAAW70B,GAAG+G,OACzBA,GAAMotB,SAAkCjgB,GAGzC,GAAIrT,KAAKukC,UACRr+B,EAAMghB,SAAWlnB,KAAKukC,UAAUr+B,OAEjC,OAAOA,GASDykC,GAAApqC,UAAA4rC,0BAAP,SAAiCxiC,GAEhC,MAAO3J,MAAK8qC,WAAW9qC,KAAKyrC,UAAUE,cAAc1zB,QAAQtO,IAQtDghC,GAAApqC,UAAAmS,kBAAP,WAEC/R,EAAAJ,UAAMmS,kBAAiBjT,KAAAO,KAEvB,IAAIb,GAAUoI,EAAUpH,EAAUgE,CAClC,IAAIunC,GAAkC1rC,KAAKyrC,UAAUE,aACrD,IAAI3wB,EACJ,IAAIoxB,EACJ,IAAIrxB,GAAqB2wB,EAAShsC,MAClC,IAAImpC,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAE9B,IAAInuB,EAAc,EAAG,CACpB5b,EAAI,CACJ6b,GAAU0wB,EAAS,EACnBU,GAAoBpxB,EAAQhW,sBAC5B6jC,GAAOG,EAAOoD,EAAkBjtC,EAChC2pC,GAAOG,EAAOmD,EAAkBjtC,EAAI,EACpC4pC,GAAOG,EAAOkD,EAAkBjtC,EAAI,EAEpC,KAAKoI,EAAI,EAAGA,EAAIwT,EAAaxT,IAAK,CACjCyT,EAAU0wB,EAASnkC,EACnB6kC,GAAoBpxB,EAAQhW,sBAC5Bb,GAAMioC,EAAkB1sC,MAExB,KAAKP,EAAI,EAAGA,EAAIgF,EAAKhF,GAAG,EAAG,CAC1BgB,EAAIisC,EAAkBjtC,EACtB,IAAIgB,EAAI0oC,EACPA,EAAO1oC,MACH,IAAIA,EAAI6oC,EACZA,EAAO7oC,CAERA,GAAIisC,EAAkBjtC,EAAI,EAE1B,IAAIgB,EAAI2oC,EACPA,EAAO3oC,MACH,IAAIA,EAAI8oC,EACZA,EAAO9oC,CAERA,GAAIisC,EAAkBjtC,EAAI,EAE1B,IAAIgB,EAAI4oC,EACPA,EAAO5oC,MACH,IAAIA,EAAI+oC,EACZA,EAAO/oC,GAIVH,KAAK2S,YAAY3B,MAAQg4B,GAAQhpC,KAAK2S,YAAYxL,EAAI0hC,EACtD7oC,MAAK2S,YAAY7D,OAASm6B,GAAQjpC,KAAK2S,YAAYvL,EAAI0hC,EACvD9oC,MAAK2S,YAAYpE,MAAQ26B,GAAQlpC,KAAK2S,YAAYtL,EAAI0hC,OAChD,CACN/oC,KAAK2S,YAAY05B,YAKZ1B,GAAApqC,UAAAsS,qBAAP,WAEClS,EAAAJ,UAAMsS,qBAAoBpT,KAAAO,KAE1B,IAAIssC,GAAUtsC,KAAKsO,QACnB,IAAIi+B,GAAiBD,EAAInlC,EAAImlC,EAAIt7B,MAAM,CACvC,IAAIw7B,GAAiBF,EAAIllC,EAAIklC,EAAIx9B,OAAO,CACxC,IAAI29B,GAAiBH,EAAIjlC,EAAIilC,EAAI/9B,MAAM,CAEvC,IAAIpP,GAAUoI,EAAUpH,EAAUgE,CAClC,IAAIunC,GAAkC1rC,KAAKyrC,UAAUE,aACrD,IAAI3wB,EACJ,IAAIoxB,EACJ,IAAIrxB,GAAqB2wB,EAAShsC,MAClC,IAAIgtC,GAA0B,CAC9B,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAI/xB,EAAc,EAAG,CACpB5b,EAAI,CACJ6b,GAAU0wB,EAAS,EACnBU,GAAoBpxB,EAAQhW,sBAC5B,KAAKuC,EAAI,EAAGA,EAAIwT,EAAaxT,IAAK,CACjCyT,EAAU0wB,EAASnkC,EACnB6kC,GAAoBpxB,EAAQhW,sBAC5Bb,GAAMioC,EAAkB1sC,MAExB,KAAKP,EAAI,EAAGA,EAAIgF,EAAKhF,GAAK,EAAG,CAC5BytC,EAAYR,EAAkBjtC,GAAKotC,CACnCM,GAAYT,EAAkBjtC,EAAI,GAAKqtC,CACvCM,GAAYV,EAAkBjtC,EAAI,GAAKstC,CACvCE,GAAgBC,EAAUA,EAAYC,EAAUA,EAAYC,EAAUA,CAEtE,IAAIJ,EAAmBC,EACtBD,EAAmBC,IAKvB3sC,KAAK8S,eAAe3L,EAAIolC,CACxBvsC,MAAK8S,eAAe1L,EAAIolC,CACxBxsC,MAAK8S,eAAezL,EAAIolC,CACxBzsC,MAAK8S,eAAe2K,OAAS9U,KAAKC,KAAK8jC,GAQhC/B,GAAApqC,UAAAyqC,wBAAR,SAAgCjV,GAE/B/1B,KAAKoO,qBAQEu8B,GAAApqC,UAAA2qC,mBAAR,SAA2BnV,GAE1B/1B,KAAK4rC,WAAW7V,EAAMpsB,aAQfghC,GAAApqC,UAAA6qC,qBAAR,SAA6BrV,GAE5B,GAAIuV,EACJ,IAAItwB,GAA0B+a,EAAMpsB,WACpC,IAAIxF,GAAanE,KAAK8qC,WAAWprC,MACjC,IAAIP,EAMJ,KAAKA,EAAI,EAAGA,EAAIgF,IAAOhF,EAAG,CAEzBmsC,EAAUtrC,KAAK8qC,WAAW3rC,EAE1B,IAAImsC,EAAQ3hC,aAAeqR,EAAS,CACnCswB,EAAQpqC,SAERlB,MAAK8qC,WAAW5yB,OAAO/Y,EAAG,EAE1B,UAIAgF,CACF,MAAOhF,EAAIgF,IAAOhF,EACjBa,KAAK8qC,WAAW3rC,GAAG6nB,QAAU7nB,EAQvBwrC,GAAApqC,UAAAqrC,WAAR,SAAmBjiC,GAElB,GAAIojC,GAA6BpjC,EAAYqjC,YAE7C,IAAI1B,GAAmB,GAAIyB,GAAapjC,EAAa3J,KAAM,KAC3D,IAAImE,GAAanE,KAAK8qC,WAAWprC,MAEjC4rC,GAAQtkB,QAAU7iB,CAElBnE,MAAK8qC,WAAW3mC,GAAOmnC,CAEvBtrC,MAAKoO,qBAYCu8B,GAAApqC,UAAA4X,gBAAP,SAAuBC,EAAkCC,GAExD,MAAOrY,MAAKiQ,kBAAkBg9B,kBAAkBjtC,KAAMA,KAAK2W,qBAAsByB,EAA2BC,GAStGsyB,GAAApqC,UAAAokC,qBAAP,SAA4Bz6B,GAK3B,GAAIlK,KAAKwS,eACRxS,KAAKwS,eAAeC,YAErB,IAAItO,GAAsBnE,KAAK8qC,WAAWprC,MAC1C,KAAK,GAAIP,GAAoB,EAAGA,EAAIgF,EAAKhF,IACxCa,KAAK8qC,WAAW3rC,GAAG8K,oBAAoBC,GAGlCygC,GAAApqC,UAAA2sC,iCAAP,WAEC,GAAI/oC,GAAanE,KAAK8qC,WAAWprC,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjCa,KAAK8qC,WAAW3rC,GAAGqoB,iCAGdmjB,GAAApqC,UAAAgX,iBAAP,SAAwBP,GAEvBA,EAAU6tB,iBAAiB7kC,MAGrB2qC,GAAApqC,UAAA8W,mBAAP,SAA0BL,GAEzBA,EAAU8tB,mBAAmB9kC,MAE/B,OAAA2qC,IAxhBmBtqB,EA0hBnBzgB,GAAcJ,QAALmrC,IhD21TNvpC,oCAAoCC,UAAU8Y,mCAAmC,mCAAmCqY,uCAAuC,uCAAuCpQ,uDAAuD,uDAAuDlH,0CAA0C,4CAA4CiyB,0CAA0C,SAASzuC,EAAQkB,EAAOJ,GAC3c,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiDl5UtB,IAAOoK,GAAQ/L,EAAgB,gCAC/B,IAAOuD,GAAQvD,EAAgB,gCAE/B,IAAO6hB,GAAS7hB,EAAe,oCAC/B,IAAO+zB,GAAU/zB,EAAe,uCAOhC,IAAO0uC,GAAmB1uC,EAAa,iEAEvC,IAAM2uC,GAAU,SAAA1sC,GAASZ,EAAnBstC,EAAU1sC,EAMf,SANK0sC,KAQJ1sC,EAAAlB,KAAAO,KANMA,MAAAstC,SAAkB,GAClBttC,MAAAutC,UAAmB,GAOzBvtC,MAAKuP,WAAa,IAElBvP,MAAKwtC,gBAAkB,GAAGxtC,KAAKutC,UAAUvtC,KAAKutC,UAAYvtC,KAAKstC,SAASttC,KAAKstC,SAG7EttC,MAAKmO,YAAcskB,EAAWC,OAGxB2a,EAAA9sC,UAAAohB,oBAAP,WAEC,MAAO,IAAIyrB,GAGZxsC,QAAAC,eAAWwsC,EAAA9sC,UAAA,UjDo4UJO,IiDp4UP,WAEC,MAAOd,MAAKstC,UjDq4UN/pC,IiDl4UP,SAAkBC,GAEjBxD,KAAKstC,SAAW9pC,CAEhB,IAAIxD,KAAKstC,SAAW,EAAG,CACtBttC,KAAKstC,SAAW,MACV,IAAIttC,KAAKstC,SAAWttC,KAAKutC,UAAW,CAC1CvtC,KAAKutC,UAAYvtC,KAAKstC,QACtBttC,MAAKoO,qBAENpO,KAAKwtC,gBAAkB,GAAIxtC,KAAKutC,UAAUvtC,KAAKutC,UAAYvtC,KAAKstC,SAASttC,KAAKstC,WjDm4UxEtsC,WAAY,KACZC,aAAc,MiDj4UdosC,GAAA9sC,UAAAktC,eAAP,WAEC,MAAOztC,MAAKwtC,gBAGb5sC,QAAAC,eAAWwsC,EAAA9sC,UAAA,WjDk4UJO,IiDl4UP,WAEC,MAAOd,MAAKutC,WjDm4UNhqC,IiDh4UP,SAAmBC,GAElBxD,KAAKutC,UAAY/pC,CAEjB,IAAIxD,KAAKutC,UAAY,EACpBvtC,KAAKutC,UAAY,CAElB,IAAIvtC,KAAKutC,UAAYvtC,KAAKstC,SACzBttC,KAAKstC,SAAWttC,KAAKutC,SAEtBvtC,MAAKwtC,gBAAkB,GAAIxtC,KAAKutC,UAAUvtC,KAAKutC,UAAYvtC,KAAKstC,SAASttC,KAAKstC,SAC9EttC,MAAKoO,sBjD83UCpN,WAAY,KACZC,aAAc,MiD53UdosC,GAAA9sC,UAAAsS,qBAAP,WAEClS,EAAAJ,UAAMsS,qBAAoBpT,KAAAO,KAE1BA,MAAK8S,eAAe2K,OAASzd,KAAKutC,UAG5BF,GAAA9sC,UAAA0hB,2BAAP,SAAkCC,EAAgB9M,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIK,GAAe,GAAIxP,OAAc,GACrC,IAAI8P,GAAa,GAAI3J,EAGrB2J,GAAElF,SAASgT,EAAO/M,wBAAwBC,GAC1ChB,GAAE2yB,OAAO/mC,KAAKgP,SAASmE,sBACvBnT,MAAKwT,OAAOY,EAAElB,SAEdkB,GAAElF,SAASgT,EAAO/M,wBAAwBC,GAC1ChB,GAAE2yB,OAAO/mC,KAAKmT,sBAEd,IAAIm5B,GAAUpqB,EAAO5T,QACrB,IAAIo/B,GAAct5B,EAAEqY,qBAAqB,GAAIxqB,GAASqqC,EAAI3P,KAAM2P,EAAIqB,OAAQrB,EAAIsB,OAChF,IAAIC,GAAcz5B,EAAEqY,qBAAqB,GAAIxqB,GAASqqC,EAAIwB,MAAOxB,EAAI1P,IAAK0P,EAAIyB,MAC9E,IAAIC,GAAYN,EAAGvmC,EAAEumC,EAAGvmC,EAAIumC,EAAGtmC,EAAEsmC,EAAGtmC,EAAIsmC,EAAGrmC,EAAEqmC,EAAGrmC,CAChD,IAAI4mC,GAAYJ,EAAG1mC,EAAE0mC,EAAG1mC,EAAI0mC,EAAGzmC,EAAEymC,EAAGzmC,EAAIymC,EAAGxmC,EAAEwmC,EAAGxmC,CAChD,IAAIpH,GAAW0I,KAAKC,KAAKolC,EAAKC,EAAID,EAAKC,EACvC,IAAI3F,EACJ,IAAIC,EAEJ,IAAIlhC,GAAW+M,EAAE85B,QAAQ,GACzB5F,GAAOjhC,EAAIpH,CACXsoC,GAAOlhC,EAAIpH,CAEX6T,GAAI,GAAKA,EAAI,GAAKw0B,EAAKroC,CACvB6T,GAAI,IAAMy0B,GAAMA,EAAOD,EACvBx0B,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,KAAOw0B,EAAKx0B,EAAI,GAEpB,KAAKL,EACJA,EAAS,GAAIhJ,EAEdgJ,GAAOY,gBAAgBP,EACvBL,GAAOmE,QAAQxD,EAEf,OAAOX,GAGD45B,GAAA9sC,UAAAokC,qBAAP,SAA4Bz6B,IAKrBmjC,GAAA9sC,UAAAgX,iBAAP,SAAwBP,GAEvBA,EAAUm3B,qBAAqBnuC,MAGzBqtC,GAAA9sC,UAAA8W,mBAAP,SAA0BL,GAEzBA,EAAUo3B,uBAAuBpuC,MAEnC,OAAAqtC,IA/HyB9sB,EAiIzB3gB,GAAoBJ,QAAX6tC,IjDg3UN3zB,gCAAgCrY,UAAUiI,gCAAgCjI,UAAU+e,oCAAoC,oCAAoCoS,uCAAuC,uCAAuC6b,iEAAiE,mEAAmEC,qCAAqC,SAAS5vC,EAAQkB,EAAOJ,GAC9a,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkDpgVtB,IAAO6K,GAAaxM,EAAc,wClDqhVlC,IkDpgVM6vC,GAAK,SAAA5tC,GAASZ,EAAdwuC,EAAK5tC,EAgBV,SAhBK4tC,KAkBJ5tC,EAAAlB,KAAAO,MAVDY,OAAAC,eAAI0tC,EAAAhuC,UAAA,YlDygVGO,IkDzgVP,WAEC,MAAOd,MAAKwuC,WlD0gVNxtC,WAAY,KACZC,aAAc,MkDjgVtB,OAAAstC,IApBoBrjC,EAsBpBtL,GAAeJ,QAAN+uC,IlDsgVNlkC,wCAAwC,0CAA0CokC,sCAAsC,SAAS/vC,EAAQkB,EAAOJ,GACnJ,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmDljVtB,IAAOquC,GAAShwC,EAAe,iCAE/B,IAAO8B,GAAS9B,EAAe,oCAK/B,IAAOwM,GAAaxM,EAAc,wCAGlC,IAAO+zB,GAAU/zB,EAAe,uCnDmjVhC,ImDniVMiwC,GAAM,SAAAhuC,GAASZ,EAAf4uC,EAAMhuC,EA8LX,SA9LKguC,GA8LOC,GAAA,GAAAA,QAAA,GAA8B,CAA9BA,EAAA,KAEXjuC,EAAAlB,KAAAO,KA7LMA,MAAA6uC,iBAA0B,CAG1B7uC,MAAA8uC,YAAqBJ,EAAUjsB,MAC9BziB,MAAA+uC,eAAsC,GAAIzqC,MAC1CtE,MAAAinB,aAAkC,GAAI3iB,MAGtCtE,MAAAgvC,QAAkB,KAClBhvC,MAAAivC,QAAkB,IAsLzBjvC,MAAKuP,WAAa,IAClBvP,MAAKkvC,QAAU,GAAI5qC,OAAwBtE,KAE3CA,MAAK4uC,QAAUA,CAGf5uC,MAAKmO,YAAcskB,EAAWG,KAlL/BhyB,OAAAC,eAAW8tC,EAAApuC,UAAA,kBnDyiVJO,ImDziVP,WAEC,MAAOd,MAAK6uC,kBnD0iVNtrC,ImDviVP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIxD,KAAK6uC,kBAAoBrrC,EAC5B,MAEDxD,MAAK6uC,iBAAmBrrC,CAExBxD,MAAKmvC,uBnDqiVCnuC,WAAY,KACZC,aAAc,MmDhiVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,UnDsiVJO,ImDtiVP,WAEC,MAAOd,MAAKgvC,SnDuiVNzrC,ImDpiVP,SAAkBC,GAEjB,GAAIxD,KAAKgvC,SAAWxrC,EACnB,MAEDxD,MAAKgvC,QAAUxrC,CAEfxD,MAAKmvC,uBnDmiVCnuC,WAAY,KACZC,aAAc,MmD9hVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,UnDoiVJO,ImDpiVP,WAEC,MAAOd,MAAKivC,SnDqiVN1rC,ImDliVP,SAAkBC,GAEjB,GAAIxD,KAAKivC,SAAWzrC,EACnB,MAEDxD,MAAKivC,QAAUzrC,CAEfxD,MAAKmvC,uBnDiiVCnuC,WAAY,KACZC,aAAc,MmDzhVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,enDkiVJO,ImDliVP,WAEC,MAAOd,MAAKovC,enDmiVNpuC,WAAY,KACZC,aAAc,MmD9hVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,gBnDoiVJO,ImDpiVP,WAEC,MAAOd,MAAKqvC,enDqiVNruC,WAAY,KACZC,aAAc,MmDzhVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,anDsiVJO,ImDtiVP,WAEC,MAAOd,MAAK8uC,anDuiVNvrC,ImDpiVP,SAAqBC,GAEpB,GAAIxD,KAAK8uC,aAAetrC,EACvB,MAEDxD,MAAK8uC,YAActrC,CAEnBxD,MAAKsvC,4BnDmiVCtuC,WAAY,KACZC,aAAc,MmDjiVd0tC,GAAApuC,UAAA+uC,yBAAP,WAEC,GAAInrC,GAAanE,KAAK+uC,eAAervC,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAK+uC,eAAe5vC,GAAGowC,yBAQlBZ,GAAApuC,UAAA4uC,oBAAP,WAEC,GAAIhrC,GAAanE,KAAK+uC,eAAervC,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAK+uC,eAAe5vC,GAAGqwC,mBAQzB5uC,QAAAC,eAAW8tC,EAAApuC,UAAA,WnDgiVJO,ImDhiVP,WAEC,MAAOd,MAAKkvC,SnDiiVNluC,WAAY,KACZC,aAAc,MmD/hVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,YnDkiVJO,ImDliVP,WAEC,MAAOd,MAAKukC,WnDmiVNvjC,WAAY,KACZC,aAAc,MmD9hVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,enDoiVJO,ImDpiVP,WAEC,MAAOd,MAAKsnB,cnDqiVN/jB,ImDliVP,SAAuBC,GAEtBxD,KAAKsnB,aAAe9jB,GnDmiVdxC,WAAY,KACZC,aAAc,MmD9hVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,WnDoiVJO,ImDpiVP,WAEC,MAAOd,MAAKyvC,UnDqiVNlsC,ImDliVP,SAAmBC,GAElB,GAAIA,GAASxD,KAAKyvC,UAAajsC,EAAMksC,QAAU1vC,KAAKyvC,SAASC,OAC5D1vC,KAAKsvC,0BAENtvC,MAAKyvC,SAAWjsC,GnDkiVVxC,WAAY,KACZC,aAAc,MmD9gVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,anDihVJO,ImDjhVP,WAEC,MAAON,GAAUmvC,QnDkhVX3uC,WAAY,KACZC,aAAc,MmDhhVrBL,QAAAC,eAAW8tC,EAAApuC,UAAA,gBnDmhVJO,ImDnhVP,WAEC,MAAO,QnDohVDE,WAAY,KACZC,aAAc,MmD9gVd0tC,GAAApuC,UAAAW,QAAP,WAEC,GAAI/B,EACJ,IAAIgF,EAEJA,GAAMnE,KAAK+uC,eAAervC,MAC1B,KAAKP,EAAI,EAAGA,EAAIgF,EAAKhF,IACpBa,KAAK+uC,eAAe5vC,GAAG+B,SAExBlB,MAAK+uC,eAAiB,GAAIzqC,MAE1B,IAAIH,GAAanE,KAAKinB,aAAavnB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAKinB,aAAa9nB,GAAG+B,SAEtBlB,MAAKinB,aAAe,GAAI3iB,OAGlBqqC,GAAApuC,UAAAokC,qBAAP,SAA4Bz6B,IAKrBykC,GAAApuC,UAAA0J,oBAAP,SAA2BC,IAKpBykC,GAAApuC,UAAAqvC,kBAAP,SAAyBC,GAExB7vC,KAAK+uC,eAAeh3B,KAAK83B,EAEzB,OAAOA,GAGDlB,GAAApuC,UAAAuvC,qBAAP,SAA4BD,GAE3B7vC,KAAK+uC,eAAe72B,OAAOlY,KAAK+uC,eAAe92B,QAAQ43B,GAAe,EAEtE,OAAOA,GAGDlB,GAAApuC,UAAAsX,gBAAP,SAAuBC,GAEtB9X,KAAKinB,aAAalP,KAAKD,EAEvB,OAAOA,GAID62B,GAAApuC,UAAAyX,mBAAP,SAA0BF,GAEzB,GAAI5S,GAAelF,KAAKinB,aAAahP,QAAQH,EAE7C9X,MAAKinB,aAAa/O,OAAOhT,EAAO,EAEhC,OAAO4S,GASD62B,GAAApuC,UAAAwvC,gBAAP,SAAuBC,GAEtB,MAAOA,GAAeC,sBAAsBjwC,MAGtC2uC,GAAApuC,UAAAgX,iBAAP,SAAwBP,GAEvBA,EAAUk5B,iBAAiBlwC,MAGrB2uC,GAAApuC,UAAA8W,mBAAP,SAA0BL,GAEzBA,EAAUm5B,mBAAmBnwC,MAE/B,OAAA2uC,IAxSqBzjC,EA0SrBtL,GAAgBJ,QAAPmvC,InDy/UNyB,iCAAiC/uC,UAAUD,oCAAoCC,UAAUgJ,wCAAwC,wCAAwCmoB,uCAAuC,yCAAyC6d,yCAAyC,SAAS3xC,EAAQkB,EAAOJ,GAC7T,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoDxzVtB,IAAOsqC,GAAIjsC,EAAiB,mCAC5B,IAAO2b,GAAQ3b,EAAgB,mCAE/B,IAAO2D,GAAgB3D,EAAe,2CpDy4VtC,IoDtzVM4xC,GAAS,SAAA3vC,GAASZ,EAAlBuwC,EAAS3vC,EAqlBd,SArlBK2vC,KAulBJ3vC,EAAAlB,KAAAO,KAAM,GAAIqa,GA7kBHra,MAAAuwC,MAAe,GAiIvB3vC,OAAAC,eAAWyvC,EAAA/vC,UAAA,iBpDmsVJO,IoDnsVP,WAEC,MAAOd,MAAKwwC,gBpDosVNxvC,WAAY,KACZC,aAAc,MoDzrVrBL,QAAAC,eAAWyvC,EAAA/vC,UAAA,cpDqsVJO,IoDrsVP,WAEC,MAAOd,MAAKywC,apDssVNzvC,WAAY,KACZC,aAAc,MoD3lVrBL,QAAAC,eAAWyvC,EAAA/vC,UAAA,UpDkmVJO,IoDlmVP,WAEC,MAAOd,MAAK0wC,SpDmmVN1vC,WAAY,KACZC,aAAc,MoDnlVdqvC,GAAA/vC,UAAAowC,WAAP,WAEC,MAAO3wC,MAAK4wC,YAMNN,GAAA/vC,UAAAswC,WAAP,WAEC,MAAO7wC,MAAK8wC,YA+BblwC,QAAAC,eAAWyvC,EAAA/vC,UAAA,YpD8jVJO,IoD9jVP,WAEC,MAAOd,MAAK+wC,WpD+jVN/vC,WAAY,KACZC,aAAc,MoDj9UrBL,QAAAC,eAAWyvC,EAAA/vC,UAAA,uBpD09UJO,IoD19UP,WAEC,MAAOd,MAAKgxC,sBpD29UNhwC,WAAY,KACZC,aAAc,MoDn9UrBL,QAAAC,eAAWyvC,EAAA/vC,UAAA,qBpD49UJO,IoD59UP,WAEC,MAAOd,MAAKixC,oBpD69UNjwC,WAAY,KACZC,aAAc,MoDn7UrBL,QAAAC,eAAWyvC,EAAA/vC,UAAA,QpD87UJO,IoD97UP,WAEC,MAAOd,MAAKuwC,OpD+7UNhtC,IoD57UP,SAAgBC,GAEf,GAAIxD,KAAKuwC,OAAS/sC,EACjB,MAEDxD,MAAKuwC,MAAQ/sC,GpD47UPxC,WAAY,KACZC,aAAc,MoD56UrBL,QAAAC,eAAWyvC,EAAA/vC,UAAA,cpDk7UJO,IoDl7UP,WAEC,MAAOd,MAAKkxC,apDm7UNlwC,WAAY,KACZC,aAAc,MoDz6UrBL,QAAAC,eAAWyvC,EAAA/vC,UAAA,uBpDo7UJO,IoDp7UP,WAEC,MAAOd,MAAKmxC,sBpDq7UNnwC,WAAY,KACZC,aAAc,MoDh7UrBL,QAAAC,eAAWyvC,EAAA/vC,UAAA,apDs7UJO,IoDt7UP,WAEC,MAAOd,MAAKoxC,YpDu7UNpwC,WAAY,KACZC,aAAc,MoDn3UdqvC,GAAA/vC,UAAA8wC,WAAP,SAAkBC,EAAgBC,GAEjC,GAAItrC,GAAwB,GAAI3B,MAChC,IAAIa,GAA0B,GAAIb,MAClC,IAAIktC,GAA0B,GAAIltC,MAClC,IAAIsB,GAAoB,GAAItB,MAE5B,IAAImtC,GAAkBF,EAAUG,KAAKH,EAAUI,WAAWC,kBAC1D,IAAIC,GAAsB,CAC1B,IAAIC,GAAe,CACnB,IAAIC,GAAgB,CACpB,IAAIC,GAAgB,CACpB,KAAK,GAAI7yC,GAAI,EAAGA,EAAImyC,EAAQ5xC,OAAQP,IAAK,CACxC,GAAI8yC,GAAmDV,EAAUI,WAAWO,oBAAoBZ,EAAQa,WAAWhzC,GAAGizC,WACtH,IAAIH,GAAgB,KAAM,CACzBH,EAAQ,CACR,IAAIO,GAAyBJ,EAAahsC,OAC1C,IAAIqsC,GAA2BL,EAAa9sC,SAC5C,IAAIotC,GAA2BN,EAAaxsC,MAC5C,KAAK,GAAIs4B,GAAI,EAAGA,EAAIsU,EAAS3yC,OAAQq+B,IAAK,CACzC93B,EAAQ8R,KAAKs6B,EAAStU,GAAG8T,EACzBC,KAEDD,GAAgBC,CAChB,KAAK/T,EAAI,EAAGA,EAAIuU,EAAW5yC,OAAO,EAAGq+B,IAAK,CACzC54B,EAAU4S,KAAMu6B,EAAWvU,EAAE,GAAG0T,EAAYM,EAC5C5sC,GAAU4S,KAAMu6B,EAAWvU,EAAE,EAAE,GAAG0T,GAAY,EAAGO,EACjD7sC,GAAU4S,KAAKu6B,EAAWvU,EAAE,EAAE,GAC9ByT,GAAUz5B,KAAKw6B,EAAWxU,EAAE,GAC5ByT,GAAUz5B,KAAKw6B,EAAWxU,EAAE,EAAE,GAC9Bn4B,GAAImS,KAAK,EACTnS,GAAImS,KAAK,GAEVg6B,GAAUR,EAAUI,WAAWC,mBAAmBH,CAElD7qB,SAAQC,IAAIkrB,IAId,GAAIS,GAAkC,GAAInwC,GAAiB,KAC3DmwC,GAAexsC,cAAcC,EAC7BusC,GAAe/tC,gBAAgBU,EAC/BqtC,GAAe7tC,aAAa6sC,EAC5BgB,GAAe5tC,UAAUgB,EACzB5F,MAAK4qC,SAASnwB,eAAe+3B,EAC7BxyC,MAAKyyC,UAAU,GAAG5oC,SAAS0nC,EAAU1nC,SAQ/BymC,GAAA/vC,UAAAmyC,eAAP,YAQOpC,GAAA/vC,UAAAoyC,mBAAP,YAcOrC,GAAA/vC,UAAAqyC,kBAAP,SAAyBC,GAExB,MAAO7yC,MAAK8yC,gBAaNxC,GAAA/vC,UAAAwyC,oBAAP,SAA2B5rC,EAAUC,GAEpC,MAAOpH,MAAKgzC,kBAcN1C,GAAA/vC,UAAA0yC,wBAAP,SAA+BJ,GAE9B,MAAO7yC,MAAKkzC,sBAuBN5C,GAAA/vC,UAAA4yC,kBAAP,SAAyBC,GAExB,MAAOpzC,MAAKqzC,gBAaN/C,GAAA/vC,UAAA+yC,oBAAP,SAA2BnsC,EAAUC,GAEpC,MAAOpH,MAAKuzC,kBAaNjD,GAAA/vC,UAAAizC,mBAAP,SAA0BX,GAEzB,MAAO7yC,MAAKyzC,iBAUNnD,GAAA/vC,UAAAmzC,cAAP,SAAqBC,GAEpB,MAAO3zC,MAAK4zC,YAUNtD,GAAA/vC,UAAAszC,eAAP,SAAsBF,GAErB,MAAO3zC,MAAK8zC,aAYNxD,GAAA/vC,UAAAwzC,cAAP,SAAqBJ,GAEpB,MAAO3zC,MAAKg0C,YAYN1D,GAAA/vC,UAAA0zC,YAAP,SAAmBN,GAElB,MAAO3zC,MAAKk0C,UAeN5D,GAAA/vC,UAAA4zC,mBAAP,SAA0BtB,GAEzB,MAAO7yC,MAAKo0C,iBAqBN9D,GAAA/vC,UAAA8zC,cAAP,SAAqB/f,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,EAE/E,MAAOv0B,MAAKs0C,YAoBNhE,GAAA/vC,UAAAg0C,oBAAP,SAA2B/wC,IAuBpB8sC,GAAA/vC,UAAAi0C,YAAP,SAAmBlgB,EAA2BC,EAAyB+c,IAkBhEhB,GAAA/vC,UAAAk0C,aAAP,SAAoBngB,EAA2BC,IAkDxC+b,GAAA/vC,UAAAm0C,cAAP,SAAqBhF,EAAmBpb,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,GAkCrF+b,GAAAqE,iBAAd,SAA+BC,EAAiBC,GAE/C,MAAO,OAET,OAAAvE,IAv/BwB3F,EAy/BL/qC,GAAAJ,QAAV8wC,IpDw1UNtuC,2CAA2C,2CAA2CmY,mCAAmC,mCAAmCuwB,mCAAmC,qCAAqCoK,uCAAuC,SAASp2C,EAAQkB,EAAOJ,GACtS,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqDt7WtB,IAAOhB,GAAKX,EAAe,+BAE3B,IAAMq2C,GAAS,SAAAp0C,GAASZ,EAAlBg1C,EAASp0C,EAEd,SAFKo0C,GAEOC,GAEXr0C,EAAAlB,KAAAO,KAAMg1C,GAER,MAAAD,IANwB11C,EAQxBO,GAAmBJ,QAAVu1C,IrDy7WNjgB,+BAA+BzzB,YAAYw9B,yCAAyC,SAASngC,EAAQkB,EAAOJ,GAC/G,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsDx8WtB,IAAO40C,GAAKv2C,EAAe,+BtD88W3B,IsDv8WMi7B,GAAW,SAAAh5B,GAASZ,EAApB45B,EAAWh5B,EAMhB,SANKg5B,GAMOxoB,EAAaiE,GAExBzU,EAAAlB,KAAAO,KAAMmR,EAENnR,MAAKk1C,QAAU9/B,EAGhBxU,OAAAC,eAAW84B,EAAAp5B,UAAA,UtDi8WJO,IsDj8WP,WAEC,MAAOd,MAAKk1C,StDk8WNl0C,WAAY,KACZC,aAAc,MsDh9WP04B,GAAA4C,mBAA4B,mBAe3C,OAAA5C,IAjB0Bsb,EAmB1Br1C,GAAqBJ,QAAZm6B,ItDu8WNwb,+BAA+B9zC,YAAY2Y,gDAAgD,SAAStb,EAAQkB,EAAOJ,GACtH,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuDt+WtB,IAAO40C,GAAKv2C,EAAe,+BAI3B,IAAMsM,GAAkB,SAAArK,GAASZ,EAA3BiL,EAAkBrK,EAWvB,SAXKqK,GAWOmG,EAAaikC,GAExBz0C,EAAAlB,KAAAO,KAAMmR,EACNnR,MAAKo1C,OAASA,EAZDpqC,EAAAqqC,kBAA2B,kBAC3BrqC,GAAA6G,uBAAgC,uBAChC7G,GAAA2G,cAAuB,cACvB3G,GAAAqG,iBAA0B,iBAC1BrG,GAAAuG,iBAA0B,iBAC1BvG,GAAAyG,cAAuB,cAStC,OAAAzG,IAhBiCiqC,EAkBLr1C,GAAAJ,QAAnBwL,IvDo+WNmqC,+BAA+B9zC,YAAY6Z,2CAA2C,SAASxc,EAAQkB,EAAOJ,GACjH,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwD//WtB,IAAO40C,GAAKv2C,EAAe,+BxDwgX3B,IwD9/WM0b,GAAa,SAAAzZ,GAASZ,EAAtBqa,EAAazZ,EAqBlB,SArBKyZ,GAqBOjJ,EAAaxH,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAExBhJ,EAAAlB,KAAAO,KAAMmR,EAENnR,MAAK+J,aAAeJ,EAMrB/I,OAAAC,eAAWuZ,EAAA7Z,UAAA,exD++WJO,IwD/+WP,WAEC,MAAOd,MAAK+J,cxDg/WN/I,WAAY,KACZC,aAAc,MwD1+WdmZ,GAAA7Z,UAAA2F,MAAP,WAEC,MAAO,IAAIkU,GAAcpa,KAAKmR,KAAMnR,KAAK+J,cArC5BqQ,GAAAO,mBAA4B,kBAK5BP,GAAAU,qBAA8B,oBAE9BV,GAAAa,eAAwB,eAgCvC,OAAAb,IA5C4B66B,EA8CLr1C,GAAAJ,QAAd4a,IxD2/WN+6B,+BAA+B9zC,YAAYghB,wCAAwC,SAAS3jB,EAAQkB,EAAOJ,GAC9G,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyDxjXtB,IAAO40C,GAAKv2C,EAAe,+BAE3B,IAAM4hB,GAAU,SAAA3f,GAASZ,EAAnBugB,EAAU3f,EAKf,SALK2f,GAKOnP,GAEXxQ,EAAAlB,KAAAO,KAAMmR,GAIAmP,EAAA/f,UAAA2F,MAAP,WAEC,MAAO,IAAIoa,GAAWtgB,KAAKmR,MAVdmP,GAAAuB,oBAA6B,mBAY5C,OAAAvB,IAfyB20B,EAiBzBr1C,GAAoBJ,QAAX8gB,IzDujXN60B,+BAA+B9zC,YAAY0jC,2CAA2C,SAASrmC,EAAQkB,EAAOJ,GACjH,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0D/kXtB,IAAO40C,GAAKv2C,EAAe,+BAE3B,IAAMqlC,GAAa,SAAApjC,GAASZ,EAAtBgkC,EAAapjC,EAIlB,SAJKojC,GAIO5yB,GAEXxQ,EAAAlB,KAAAO,KAAMmR,GAJO4yB,EAAAU,aAAsB,aAMrC,OAAAV,IAR4BkR,EAULr1C,GAAAJ,QAAdukC,I1DilXNoR,+BAA+B9zC,YAAYi0C,wCAAwC,SAAS52C,EAAQkB,EAAOJ,GAC9G,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2DhmXtB,IAAO40C,GAAKv2C,EAAe,+B3DumX3B,I2D5lXM62C,GAAU,SAAA50C,GAASZ,EAAnBw1C,EAAU50C,EAuIf,SAvIK40C,GAuIOpkC,GAEXxQ,EAAAlB,KAAAO,KAAMmR,EAtIAnR,MAAAw1C,qBAA+B,KA4ItC50C,OAAAC,eAAW00C,EAAAh1C,UAAA,W3D49WJO,I2D59WP,WAEC,GAAI20C,GAAqBz1C,KAAKw1C,oBAC9Bx1C,MAAKw1C,qBAAuB,IAG5B,OAAOC,I3D49WDz0C,WAAY,KACZC,aAAc,M2Dv9Wds0C,GAAAh1C,UAAAm1C,gBAAP,WAEC11C,KAAKw1C,qBAAuB,KAE5B,IAAIx1C,KAAK21C,cACR31C,KAAK21C,cAAcD,kBAMdH,GAAAh1C,UAAAq1C,yBAAP,WAEC51C,KAAKw1C,qBAAuB,KAE5B,IAAIx1C,KAAK21C,cACR31C,KAAK21C,cAAcC,2BAMdL,GAAAh1C,UAAA2F,MAAP,WAEC,GAAI2vC,GAAoB,GAAIN,GAAWv1C,KAAKmR,KAO5C0kC,GAAOC,QAAU91C,KAAK81C,OACtBD,GAAOE,QAAU/1C,KAAK+1C,OAEtBF,GAAOG,KAAOh2C,KAAKg2C,IACnBH,GAAOT,OAASp1C,KAAKo1C,MACrBS,GAAOI,gBAAkBj2C,KAAKi2C,eAC9BJ,GAAOhsC,SAAW7J,KAAK6J,QACvBgsC,GAAOK,GAAKl2C,KAAKk2C,EACjBL,GAAOM,cAAgBn2C,KAAKm2C,aAC5BN,GAAOO,YAAcp2C,KAAKo2C,WAC1BP,GAAO3wC,MAAQlF,KAAKkF,KACpB2wC,GAAOQ,iBAAmBr2C,KAAKq2C,gBAC/BR,GAAOS,MAAQt2C,KAAKs2C,KAEpBT,GAAOU,QAAUv2C,KAAKu2C,OACtBV,GAAOW,SAAWx2C,KAAKw2C,QAEvBX,GAAOF,cAAgB31C,IACvB61C,GAAOL,qBAAuBx1C,KAAKw1C,oBAEnC,OAAOK,GAMRj1C,QAAAC,eAAW00C,EAAAh1C,UAAA,iB3D+8WJO,I2D/8WP,WAEC,MAAOd,MAAKo1C,OAAOjmC,eAAe7H,gBAAgBtH,KAAKm2C,gB3Dg9WjDn1C,WAAY,KACZC,aAAc,M2D38WrBL,QAAAC,eAAW00C,EAAAh1C,UAAA,e3Di9WJO,I2Dj9WP,WAEC,GAAI21C,GAAuBz2C,KAAKo1C,OAAOjmC,eAAesd,qBAAqBzsB,KAAKo2C,YAChFK,GAAYziC,WAEZ,OAAOyiC,I3Di9WDz1C,WAAY,KACZC,aAAc,M2D1qXPs0C,GAAAmB,WAAoB,aAKpBnB,GAAAoB,UAAmB,YAKnBpB,GAAAqB,SAAkB,WAKlBrB,GAAAsB,WAAoB,aAKpBtB,GAAAuB,WAAoB,aAepBvB,GAAAwB,MAAe,SAKfxB,GAAAyB,aAAsB,eAKtBzB,GAAA0B,YAAqB,cA6KpC,OAAA1B,IAnOyBN,EAqOzBr1C,GAAoBJ,QAAX+1C,I3D6/WNJ,+BAA+B9zC,YAAY61C,kDAAkD,SAASx4C,EAAQkB,EAAOJ,GACxH,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4DpvXtB,IAAO40C,GAAKv2C,EAAgB,+B5D6vX5B,I4DnvXMy4C,GAAoB,SAAAx2C,GAASZ,EAA7Bo3C,EAAoBx2C,EAczB,SAdKw2C,GAcOhmC,EAAaimC,GAExBz2C,EAAAlB,KAAAO,KAAMmR,EAENnR,MAAKq3C,mBAAqBD,EAM3Bx2C,OAAAC,eAAWs2C,EAAA52C,UAAA,qB5D0uXJO,I4D1uXP,WAEC,MAAOd,MAAKq3C,oB5D2uXNr2C,WAAY,KACZC,aAAc,M4DpuXdk2C,GAAA52C,UAAA2F,MAAP,WAEC,MAAO,IAAIixC,GAAqBn3C,KAAKmR,KAAMnR,KAAKq3C,oBA/BnCF,GAAAG,4BAAqC,0BAiCpD,OAAAH,IAtCmClC,EAwCLr1C,GAAAJ,QAArB23C,I5DivXNhC,+BAA+B9zC,YAAYy9B,2CAA2C,SAASpgC,EAAQkB,EAAOJ,GACjH,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6DxyXtB,IAAO40C,GAAKv2C,EAAe,+BAE3B,IAAMk7B,GAAa,SAAAj5B,GAASZ,EAAtB65B,EAAaj5B,EAKlB,SALKi5B,GAKOzoB,GAEXxQ,EAAAlB,KAAAO,KAAMmR,GALOyoB,EAAAiC,iBAA0B,iBAC1BjC,GAAAkC,gBAAyB,gBAMxC,OAAAlC,IAT4Bqb,EAW5Br1C,GAAuBJ,QAAdo6B,I7D0yXNub,+BAA+B9zC,YAAYk2C,yCAAyC,SAAS74C,EAAQkB,EAAOJ,GAC/G,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8D5zXtB,IAAO40C,GAAKv2C,EAAe,+BAE3B,IAAM84C,GAAW,SAAA72C,GAASZ,EAApBy3C,EAAW72C,EAOhB,SAPK62C,GAOOrmC,EAAasmC,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAAp5B,IAAwB,GAAAq5B,QAAA,GAAqB,CAArBA,EAAAr5B,IAEhD1d,EAAAlB,KAAAO,KAAMmR,EAENnR,MAAK23C,WAAaF,CAClBz3C,MAAK43C,UAAYF,EAGlB92C,OAAAC,eAAW22C,EAAAj3C,UAAA,a9DwzXJO,I8DxzXP,WAEC,MAAOd,MAAK23C,Y9DyzXN32C,WAAY,KACZC,aAAc,M8DvzXrBL,QAAAC,eAAW22C,EAAAj3C,UAAA,Y9D0zXJO,I8D1zXP,WAEC,MAAOd,MAAK43C,W9D2zXN52C,WAAY,KACZC,aAAc,M8Dh1XPu2C,GAAAK,OAAgB,QAsB/B,OAAAL,IAxB0BvC,EA0B1Br1C,GAAqBJ,QAAZg4C,I9Dg0XNrC,+BAA+B9zC,YAAY4Y,wCAAwC,SAASvb,EAAQkB,EAAOJ,GAC9G,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+Dj2XtB,IAAO40C,GAAKv2C,EAAe,+BAI3B,IAAMuM,GAAU,SAAAtK,GAASZ,EAAnBkL,EAAUtK,EAsBf,SAtBKsK,GAsBOkG,EAAawW,GAExBhnB,EAAAlB,KAAAO,KAAMmR,EAENnR,MAAK2nB,cAAgBA,EArBR1c,EAAAuM,eAAwB,cAKxBvM,GAAAkM,mBAA4B,kBAK5BlM,GAAAmuB,kBAA2B,kBAa1C,OAAAnuB,IA5ByBgqC,EA8BLr1C,GAAAJ,QAAXyL,I/Dy1XNkqC,+BAA+B9zC,YAAYy2C,wCAAwC,SAASp5C,EAAQkB,EAAOJ,GAC9G,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgEh4XtB,IAAO40C,GAAKv2C,EAAe,+BAE3B,IAAMq5C,GAAU,SAAAp3C,GAASZ,EAAnBg4C,EAAUp3C,EAOf,SAPKo3C,GAOO5mC,GAEXxQ,EAAAlB,KAAAO,KAAMmR,GAPO4mC,EAAAC,gBAAyB,gBACzBD,GAAAE,iBAA0B,iBAC1BF,GAAAG,kBAA2B,kBAC3BH,GAAAlc,iBAA0B,iBAMzC,OAAAkc,IAXyB9C,EAazBr1C,GAAoBJ,QAAXu4C,IhEk4XN5C,+BAA+B9zC,YAAYoI,8CAA8C,SAAS/K,EAAQkB,EAAOJ,GACpH,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiEt5XtB,IAAO40C,GAAKv2C,EAAe,+BjE+5X3B,IiEv5XM0D,GAAgB,SAAAzB,GAASZ,EAAzBqC,EAAgBzB,EAmBrB,SAnBKyB,GAmBO+O,EAAasV,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,GAExB9lB,EAAAlB,KAAAO,KAAMmR,EAENnR,MAAKm4C,UAAY1xB,EAMlB7lB,OAAAC,eAAWuB,EAAA7B,UAAA,YjE04XJO,IiE14XP,WAEC,MAAOd,MAAKm4C,WjE24XNn3C,WAAY,KACZC,aAAc,MiEp4XdmB,GAAA7B,UAAA2F,MAAP,WAEC,MAAO,IAAI9D,GAAiBpC,KAAKmR,KAAMnR,KAAKm4C,WApC/B/1C,GAAA2kB,gBAAyB,gBAKzB3kB,GAAA2G,iBAA0B,iBAiCzC,OAAA3G,IA3C+B6yC,EA6C/Br1C,GAA0BJ,QAAjB4C,IjEq5XN+yC,+BAA+B9zC,YAAY+2C,sDAAsD,SAAS15C,EAAQkB,EAAOJ,GkE18X5H,GAAO64C,GAAU35C,EAAe,kCAChC,IAAO8B,GAAS9B,EAAe,oCAC/B,IAAO45C,GAAa55C,EAAc,yCAIlC,IAAO65C,GAAa75C,EAAc,6CAElC,IAAM85C,GAAsB,WAA5B,QAAMA,MAOSA,EAAAC,mBAAd,SAAiCxC,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAEhC,GAAIA,GAAmB,MAAQA,EAAgByC,WAAal4C,EAAUokB,cAAe,CACpF,IAAK4zB,EAAuBG,qBAC3BH,EAAuBI,2BAExB,OAAOJ,GAAuBG,yBACxB,CACN,IAAKH,EAAuBK,yBAC3BL,EAAuBM,+BAExB,OAAON,GAAuBK,0BAIlBL,GAAAO,kBAAd,SAAgC9C,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAE/B,IAAKuC,EAAuBQ,gBAC3BR,EAAuBS,sBAExB,OAAOT,GAAuBQ,gBAGhBR,GAAAS,qBAAf,WAECT,EAAuBU,mBAAqBV,EAAuBW,2BACnEX,GAAuBQ,gBAAkB,GAAIV,GAAcE,EAAuBU,mBAClFV,GAAuBQ,gBAAgBhnC,KAAO,iBAGjCwmC,GAAAW,0BAAd,WAEC,GAAIj5C,GAAe,GAAIm4C,GAAW,EAAG,EAAG,MAAO,ElE87XzC,IkE37XFl5C,GAAUoI,CACd,KAAKpI,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,IAAKoI,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,GAAKA,EAAI,EAAMpI,EAAI,EAAI,CACtBe,EAAEk5C,SAASj6C,EAAGoI,EAAG,YAKpB,MAAOrH,GAGOs4C,GAAAM,8BAAf,WAEC,IAAKN,EAAuBQ,gBAC3BR,EAAuBS,sBAExBT,GAAuBK,yBAA2B,GAAIN,GAAcC,EAAuBQ,gBAC3FR,GAAuBK,yBAAyBQ,OAAS,KACzDb,GAAuBK,yBAAyB58B,OAAS,KACzDu8B,GAAuBK,yBAAyB7mC,KAAO,0BAGzCwmC,GAAAI,0BAAf,WAECJ,EAAuBG,qBAAuB,GAAIJ,EAClDC,GAAuBG,qBAAqB3mC,KAAO,sBAErD,OAAAwmC,KAEA54C,GAAgCJ,QAAvBg5C,IlEw7XNc,kCAAkCj4C,UAAUD,oCAAoCC,UAAUk4C,yCAAyCl4C,UAAUm4C,6CAA6C,+CAA+Cza,4CAA4C,SAASrgC,EAAQkB,EAAOJ,GmExgYhT,GAAOyC,GAAQvD,EAAgB,gCAK/B,IAAO+6C,GAAc/6C,EAAc,uCnE0gYnC,ImEpgYMm7B,GAAY,WAqCjB,QArCKA,KAAN,GAAAnE,GAAA11B,IAISA,MAAA05C,YAA0B,GAAIp1C,MAM9BtE,MAAA25C,YAAuB,GAAI13C,EAE3BjC,MAAA45C,cAAsC,GAAIt1C,MAI1CtE,MAAA65C,SAA0B,GAAIJ,GAAeA,EAAe7C,SAC5D52C,MAAA85C,YAA6B,GAAIL,GAAeA,EAAe1C,MAC/D/2C,MAAA+5C,UAA2B,GAAIN,GAAeA,EAAe9C,UAC7D32C,MAAAg6C,WAA4B,GAAIP,GAAeA,EAAe5C,WAC9D72C,MAAAi6C,WAA4B,GAAIR,GAAeA,EAAe3C,WAC9D92C,MAAAk6C,WAA4B,GAAIT,GAAeA,EAAe/C,WAC9D12C,MAAAm6C,YAA6B,GAAIV,GAAeA,EAAexC,YAC/Dj3C,MAAAo6C,kBAAmC,GAAIX,GAAeA,EAAezC,aAgB5Eh3C,MAAKq6C,gBAAkB,SAACtkB,GAAqB,MAAAL,GAAK4kB,QAAQvkB,GAC1D/1B,MAAKu6C,sBAAwB,SAACxkB,GAAqB,MAAAL,GAAK8kB,cAAczkB,GACtE/1B,MAAKy6C,oBAAsB,SAAC1kB,GAAqB,MAAAL,GAAKglB,YAAY3kB,GAClE/1B,MAAK26C,oBAAsB,SAAC5kB,GAAqB,MAAAL,GAAKklB,YAAY7kB,GAClE/1B,MAAK66C,kBAAoB,SAAC9kB,GAAqB,MAAAL,GAAKolB,UAAU/kB,GAC9D/1B,MAAK+6C,qBAAuB,SAAChlB,GAAqB,MAAAL,GAAKslB,aAAajlB,GACpE/1B,MAAKi7C,oBAAsB,SAACllB,GAAqB,MAAAL,GAAKwlB,YAAYnlB,GAClE/1B,MAAKm7C,mBAAqB,SAACplB,GAAqB,MAAAL,GAAK0lB,WAAWrlB,IAGnD8D,EAAAvD,YAAd,WAEC,GAAIt2B,KAAKq7C,UACR,MAAOr7C,MAAKq7C,SAEb,OAAQr7C,MAAKq7C,UAAY,GAAIxhB,GAGvBA,GAAAt5B,UAAAm9B,gBAAP,SAAuBN,GAGtB,GAAIp9B,KAAKu9B,mBAAqBv9B,KAAKs7C,yBAA0B,CAC5D,GAAIt7C,KAAKs7C,yBACRt7C,KAAKu7C,cAAcv7C,KAAK+5C,UAAW/5C,KAAKw7C,gBAAiBx7C,KAAKs7C,yBAE/D,IAAIt7C,KAAKu9B,kBACRv9B,KAAKu7C,cAAcv7C,KAAKk6C,WAAYl6C,KAAKw7C,iBAI3C,GAAIpe,GAAkBp9B,KAAKu9B,kBAC1Bv9B,KAAKu7C,cAAev7C,KAAKi6C,WAAYj6C,KAAKw7C,gBAE3C,IAAIzlB,EACJ,IAAI+B,EnEw+XE,ImEr+XF3zB,GAAanE,KAAK45C,cAAcl6C,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EAAG,CAEpC42B,EAAQ/1B,KAAK45C,cAAcz6C,EAC3B24B,GAAa/B,EAAMqf,MAEnB,OAAOtd,IAAeA,EAAWrf,mBAChCqf,EAAaA,EAAW7lB,MAEzB,IAAI6lB,EACHA,EAAW9uB,cAAc+sB,GAG3B/1B,KAAK45C,cAAcl6C,OAAS,CAE5BM,MAAKs7C,yBAA2Bt7C,KAAKu9B,iBAErCv9B,MAAKs9B,cAAgB,MAmBfzD,GAAAt5B,UAAAg7B,aAAP,SAAoBya,GAEnBA,EAAKyF,YAAYvqC,iBAAiB,QAASlR,KAAKq6C,gBAChDrE,GAAKyF,YAAYvqC,iBAAiB,WAAYlR,KAAKu6C,sBACnDvE,GAAKyF,YAAYvqC,iBAAiB,YAAalR,KAAKy6C,oBACpDzE,GAAKyF,YAAYvqC,iBAAiB,YAAalR,KAAK26C,oBACpD3E,GAAKyF,YAAYvqC,iBAAiB,UAAWlR,KAAK66C,kBAClD7E,GAAKyF,YAAYvqC,iBAAiB,aAAclR,KAAK+6C,qBACrD/E,GAAKyF,YAAYvqC,iBAAiB,YAAalR,KAAKi7C,oBACpDjF,GAAKyF,YAAYvqC,iBAAiB,WAAYlR,KAAKm7C,mBAEnDn7C,MAAK05C,YAAY3hC,KAAKi+B,GAGhBnc,GAAAt5B,UAAAq9B,eAAP,SAAsBoY,GAErBA,EAAKyF,YAAYvlC,oBAAoB,QAASlW,KAAKq6C,gBACnDrE,GAAKyF,YAAYvlC,oBAAoB,WAAYlW,KAAKu6C,sBACtDvE,GAAKyF,YAAYvlC,oBAAoB,YAAalW,KAAKy6C,oBACvDzE,GAAKyF,YAAYvlC,oBAAoB,YAAalW,KAAK26C,oBACvD3E,GAAKyF,YAAYvlC,oBAAoB,UAAWlW,KAAK66C,kBACrD7E,GAAKyF,YAAYvlC,oBAAoB,aAAclW,KAAK+6C,qBACxD/E,GAAKyF,YAAYvlC,oBAAoB,YAAalW,KAAKi7C,oBACvDjF,GAAKyF,YAAYvlC,oBAAoB,WAAYlW,KAAKm7C,mBAEtDn7C,MAAK05C,YAAYgC,MAAM17C,KAAK05C,YAAYzhC,QAAQ+9B,GAAO,GAOhDnc,GAAAt5B,UAAAg7C,cAAR,SAAsBxlB,EAAsB4lB,EAAwBC,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAGnE,GAAID,EAAa,CAChB5lB,EAAMwgB,QAAUoF,EAAYpF,OAC5BxgB,GAAM8lB,OAASF,EAAYE,MAC3B9lB,GAAMygB,SAAWmF,EAAYnF,QAC7BzgB,GAAM+f,QAAU6F,EAAYG,OAC5B/lB,GAAMggB,QAAU4F,EAAYI,QAG7B,GAAIH,GAAY,KACfA,EAAW57C,KAAKu9B,iBAGjB,IAAIqe,EAAU,CAEb7lB,EAAMqf,OAASwG,EAASj0B,aACxBoO,GAAMkgB,gBAAkB2F,EAAS3F,eAEjClgB,GAAMmgB,GAAK0F,EAAS1F,EAEpBngB,GAAMogB,cAAgByF,EAASzF,cAAeyF,EAASzF,cAAcjwC,QAAU,IAE/E6vB,GAAMqgB,YAAcwF,EAASxF,YAAawF,EAASxF,YAAYlwC,QAAU,IAEzE6vB,GAAM7wB,MAAQ02C,EAAS12C,UACjB,CAEN6wB,EAAMmgB,GAAK,IACXngB,GAAMqf,OAAS,IACfrf,GAAMogB,cAAgBn2C,KAAK25C,WAC3B5jB,GAAMqgB,YAAcp2C,KAAK25C,WACzB5jB,GAAM7wB,MAAQ,CACd6wB,GAAMsgB,iBAAmB,EAI1Br2C,KAAK45C,cAAc7hC,KAAKge,GAOjB8D,GAAAt5B,UAAAq6C,YAAR,SAAoB7kB,GAEnB/1B,KAAKg8C,gBAAgBjmB,EAErB,IAAI/1B,KAAKu9B,kBACRv9B,KAAKu7C,cAAcv7C,KAAKi6C,WAAYj6C,KAAKw7C,gBAAkBzlB,GAGrD8D,GAAAt5B,UAAA66C,WAAR,SAAmBrlB,GAElB/1B,KAAKq9B,YAAc,IAEnBr9B,MAAKg8C,gBAAgBjmB,EAErB,IAAI/1B,KAAKu9B,kBACRv9B,KAAKu7C,cAAcv7C,KAAK+5C,UAAWhkB,GAG7B8D,GAAAt5B,UAAA26C,YAAR,SAAoBnlB,GAEnB/1B,KAAKq9B,YAA+BtH,EAAMtiB,MAE1CzT,MAAKg8C,gBAAgBjmB,EAErB,IAAI/1B,KAAKu9B,kBACRv9B,KAAKu7C,cAAev7C,KAAKk6C,WAAYnkB,GAG/B8D,GAAAt5B,UAAA+5C,QAAR,SAAgBvkB,GAEf/1B,KAAKg8C,gBAAgBjmB,EAErB,IAAI/1B,KAAKu9B,kBACRv9B,KAAKu7C,cAAcv7C,KAAK85C,YAAa/jB,GAG/B8D,GAAAt5B,UAAAi6C,cAAR,SAAsBzkB,GAErB/1B,KAAKg8C,gBAAgBjmB,EAErB,IAAI/1B,KAAKu9B,kBACRv9B,KAAKu7C,cAAcv7C,KAAKo6C,kBAAmBrkB,GAGrC8D,GAAAt5B,UAAAm6C,YAAR,SAAoB3kB,GAEnB/1B,KAAKq9B,YAA+BtH,EAAMtiB,MAE1CzT,MAAKg8C,gBAAgBjmB,EAErB,IAAI/1B,KAAKu9B,kBACRv9B,KAAKu7C,cAAcv7C,KAAKg6C,WAAYjkB,GAG9B8D,GAAAt5B,UAAAu6C,UAAR,SAAkB/kB,GAEjB/1B,KAAKg8C,gBAAgBjmB,EAErB,IAAI/1B,KAAKu9B,kBACRv9B,KAAKu7C,cAAcv7C,KAAK65C,SAAW9jB,GAG7B8D,GAAAt5B,UAAAy6C,aAAR,SAAqBjlB,GAEpB/1B,KAAKg8C,gBAAgBjmB,EAErB,IAAI/1B,KAAKu9B,kBACRv9B,KAAKu7C,cAAcv7C,KAAKm6C,YAAapkB,GAI/B8D,GAAAt5B,UAAAy7C,gBAAR,SAAwBjmB,GAEvB,GAAI/1B,KAAKs9B,cACR,MAED,IAAI0Y,EACJ,IAAIiG,EACJ,IAAIC,GAAgBnmB,EAAM+lB,OAC1B,IAAIK,GAAgBpmB,EAAMgmB,OAC1B,IAAI53C,GAAanE,KAAK05C,YAAYh6C,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAAK,CACpC62C,EAAOh2C,KAAK05C,YAAYv6C,EACxB88C,GAASjG,EAAKyF,YAAYW,uBAC1B,IAAIF,EAASD,EAAOtf,MAAQuf,EAASD,EAAOnO,OAASqO,EAASF,EAAOrf,KAAOuf,EAASF,EAAOtO,OAAQ,CACnGqI,EAAKta,SAAW,IAChBsa,GAAKra,SAAW,SACV,CACNqa,EAAKta,SAAWwgB,EAASD,EAAOtf,IAChCqZ,GAAKra,SAAWwgB,EAASF,EAAOrf,GAChCoZ,GAAKzX,gBAEL,IAAIyX,EAAKvX,aAAez+B,KAAKu9B,kBAC5B,OAIHv9B,KAAKs9B,cAAgB,KAEvB,OAAAzD,KAEsBj6B,GAAAJ,QAAbq6B,InEu7XNvwB,gCAAgCjI,UAAUi0C,uCAAuC,yCAAyCkE,8CAA8C,SAAS96C,EAAQkB,EAAOJ,GACnM,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoEzuYtB,IAAOg8C,GAAa39C,EAAc,yCAGlC,IAAO49C,GAAY59C,EAAe,4CpE8uYlC,IoEtuYM65C,GAAa,SAAA53C,GAASZ,EAAtBw4C,EAAa53C,EAalB,SAbK43C,GAaOgE,EAAyBC,EAAwBxgC,EAAwBq9B,GAAzE,GAAAkD,QAAA,GAAuB,CAAvBA,EAAA,KAAyB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,KAAwB,GAAAxgC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAq9B,QAAA,GAAsB,CAAtBA,EAAA,MAEpF14C,EAAAlB,KAAAO,KAbUA,MAAAy8C,eAAyB,KAenC,IAAIF,YAAwBF,GAAe,CAC1Cr8C,KAAK08C,QAA0BH,CAE/Bv8C,MAAKic,OAAUugC,GAAe,KAAO,KAAO,KAC5Cx8C,MAAKgc,OAASA,CACdhc,MAAKq5C,OAASA,MACR,CACNr5C,KAAKmc,MAAQogC,EAAcI,OAAOJ,GAAgB,QAClDv8C,MAAKoc,MAASogC,GAAe,KAAO,EAAIG,OAAOH,IAM9C57C,OAAAC,eAAW03C,EAAAh4C,UAAA,iBpE+tYPO,IoE/tYJ,WAEI,MAAOd,MAAKy8C,gBpEguYZl5C,IoE9tYJ,SAAyBC,GAErB,GAAIxD,KAAKy8C,gBAAkBj5C,EACvB,MACJxD,MAAKy8C,eAAiBj5C,CACtBxD,MAAKsvC,4BpE+tYLtuC,WAAY,KACZC,aAAc,MoEvtYds3C,GAAAh4C,UAAAwvC,gBAAP,SAAuBC,GAEtB,MAAOA,GAAe4M,wBAAwB58C,MAEhD,OAAAu4C,IArD4B+D,EAuD5B18C,GAAuBJ,QAAd+4C,IpEiuYNsE,yCAAyCx7C,UAAUy7C,4CAA4C,8CAA8CC,gDAAgD,SAASr+C,EAAQkB,EAAOJ,GACxN,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqExyYtB,IAAOi8C,GAAY59C,EAAe,4CAClC,IAAOs+C,GAAYt+C,EAAe,wCrEszYlC,IqExyYMu+C,GAAe,SAAAt8C,GAASZ,EAAxBk9C,EAAet8C,EA+DpB,SA/DKs8C,GA+DOP,EAA8BzgC,EAAuBD,GAArD,GAAA0gC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAzgC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAD,QAAA,GAAsB,CAAtBA,EAAA,MAEhErb,EAAAlB,KAAAO,KAEAA,MAAKk9C,aAAeP,OAAO38C,KAAKozC,GAEhCpzC,MAAK08C,QAAUA,CAEf18C,MAAKic,OAASA,CACdjc,MAAKgc,OAASA,EAlEfpb,OAAAC,eAAWo8C,EAAA18C,UAAA,gBrEkzYJO,IqElzYP,WAEC,MAAOd,MAAKm9C,erEmzYNn8C,WAAY,KACZC,aAAc,MqEjzYrBL,QAAAC,eAAWo8C,EAAA18C,UAAA,crEozYJO,IqEpzYP,WAEC,MAAOd,MAAKo9C,arEqzYNp8C,WAAY,KACZC,aAAc,MqEhzYrBL,QAAAC,eAAWo8C,EAAA18C,UAAA,WrEszYJO,IqEtzYP,WAEC,MAAOd,MAAKq9C,WrEuzYN95C,IqEpzYP,SAAmBC,GAElB,GAAIxD,KAAKq9C,WAAa75C,EACrB,MAEDxD,MAAKq9C,UAAY75C,CAEjB,IAAIA,YAAiBw5C,GAAc,CAClCh9C,KAAKm9C,cAAgC35C,EAAO85C,gBAE5C,IAAIC,GAAwBxiB,SAASK,cAAc,QACnDmiB,GAAKpsC,KAAO,UACZ4pB,UAASyiB,qBAAqB,QAAQ,GAAGniB,YAAYkiB,EAErD,IAAIE,GAAsC1iB,SAAS2iB,YAAY3iB,SAAS2iB,YAAYh+C,OAAS,EAC7F+9C,GAAME,WAAW,YAAc39C,KAAKozC,GAAK,MAAO,EAChD,IAAInY,GAA6CwiB,EAAMG,SAAS,GAAI3iB,KAEpEA,GAAM4iB,gBAAkB,OAAS79C,KAAKm9C,cAAcW,IAAM,GAC1D7iB,GAAM8iB,eAAiB,WACvB9iB,GAAM/nB,SAAW,UACjB+nB,GAAMjqB,MAAQhR,KAAKm9C,cAAcnsC,MAAQ,IACzCiqB,GAAMnsB,OAAS9O,KAAKm9C,cAAcruC,OAAS,IAC3CmsB,GAAM+iB,gBACH/iB,EAAM,4BACNA,EAAM,yBACNA,EAAM,uBACNA,EAAM,wBAA0B,OAEnCj7B,MAAKi+C,SAAWj+C,KAAKm9C,cAAcruC,MACnC9O,MAAKk+C,QAAUl+C,KAAKm9C,cAAcnsC,KAElChR,MAAKm+C,wBrE2yYAn9C,WAAY,KACZC,aAAc,MqE1xYtB,OAAAg8C,IA1E8BX,EA4E9B18C,GAAyBJ,QAAhBy9C,IrE+xYNmB,wCAAwC/8C,UAAUy7C,4CAA4C,8CAA8CuB,8CAA8C,SAAS3/C,EAAQkB,EAAOJ,GACrN,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsE/3YtB,IAAOg8C,GAAa39C,EAAc,yCAGlC,IAAO49C,GAAY59C,EAAe,4CtEo4YlC,IsE53YM4/C,GAAa,SAAA39C,GAASZ,EAAtBu+C,EAAa39C,EAalB,SAbK29C,GAaO/B,EAAyBC,EAAwBxgC,EAAwBq9B,GAAzE,GAAAkD,QAAA,GAAuB,CAAvBA,EAAA,KAAyB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,KAAwB,GAAAxgC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAq9B,QAAA,GAAsB,CAAtBA,EAAA,MAEpF14C,EAAAlB,KAAAO,KAbUA,MAAAy8C,eAAyB,KAenC,IAAIF,YAAwBF,GAAe,CAC1Cr8C,KAAK08C,QAA0BH,CAE/Bv8C,MAAKic,OAAUugC,GAAe,KAAO,KAAO,KAC5Cx8C,MAAKgc,OAASA,CACdhc,MAAKq5C,OAASA,MACR,CACNr5C,KAAKmc,MAAQogC,EAAcI,OAAOJ,GAAgB,QAClDv8C,MAAKoc,MAASogC,GAAe,KAAO,EAAIG,OAAOH,IAM9C57C,OAAAC,eAAWy9C,EAAA/9C,UAAA,iBtEq3YPO,IsEr3YJ,WAEI,MAAOd,MAAKy8C,gBtEs3YZl5C,IsEp3YJ,SAAyBC,GAErB,GAAIxD,KAAKy8C,gBAAkBj5C,EACvB,MACJxD,MAAKy8C,eAAiBj5C,CACtBxD,MAAKsvC,4BtEq3YLtuC,WAAY,KACZC,aAAc,MsE72Ydq9C,GAAA/9C,UAAAwvC,gBAAP,SAAuBC,GAEtB,MAAOA,GAAe4M,wBAAwB58C,MAEhD,OAAAs+C,IArD4BhC,EAuD5B18C,GAAuBJ,QAAd8+C,ItEu3YNzB,yCAAyCx7C,UAAUy7C,4CAA4C,8CAA8CyB,6CAA6C,SAAS7/C,EAAQkB,EAAOJ,GAYrN,GuE17YMg/C,GAAY,WAAlB,QAAMA,MAMSA,EAAAC,OAAgB,CAMhBD,GAAAE,OAAgB,CAMhBF,GAAAG,IAAa,CAC5B,OAAAH,KAEA5+C,GAAsBJ,QAAbg/C,OvE47YH1B,6CAA6C,SAASp+C,EAAQkB,EAAOJ,GAC3E,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwEj+YtB,IAAOquC,GAAShwC,EAAe,iCAC/B,IAAOkgD,GAAclgD,EAAc,sCAEnC,IAAOkM,GAAmBlM,EAAa,6CACvC,IAAOu2C,GAAKv2C,EAAgB,+BAC5B,IAAO8B,GAAS9B,EAAe,oCAE/B,IAAO+B,GAAc/B,EAAc,yCAUnC,IAAOqlC,GAAarlC,EAAc,0CAClC,IAAOy4C,GAAoBz4C,EAAa,iDxEo+YxC,IwEp9YM49C,GAAY,SAAA37C,GAASZ,EAArBu8C,EAAY37C,EA4EjB,SA5EK27C,KAAN,GAAA5mB,GAAA11B,IA8EEW,GAAAlB,KAAAO,KA3EOA,MAAA6+C,eAAyB,KACzB7+C,MAAA8+C,OAAgB,CAGhB9+C,MAAA+uC,eAAsC,GAAIzqC,MAE3CtE,MAAA6uC,iBAA0B,CAC1B7uC,MAAA++C,aAAuB,KACtB/+C,MAAAg/C,oBAA8B,IAC9Bh/C,MAAAi/C,sBAA+B,CAC/Bj/C,MAAAk/C,qBAA8B,CAsB/Bl/C,MAAAk9C,aAAsB,CAEtBl9C,MAAAm/C,sBAA+B,CAE9Bn/C,MAAAo/C,WAAqB,KAUtBp/C,MAAA8uC,YAAqBJ,EAAUjsB,MAE9BziB,MAAAgvC,QAAkB,IAClBhvC,MAAAivC,QAAkB,IAClBjvC,MAAAq/C,QAAkB,KAClBr/C,MAAAwgB,OAAgB,QAKjBxgB,MAAAi+C,SAAkB,CAClBj+C,MAAAk+C,QAAiB,CAoBvBl+C,MAAKk9C,aAAeP,OAAO38C,KAAKozC,GAEhCpzC,MAAKkvC,QAAU,GAAI5qC,MAEnBtE,MAAKs/C,uBAAyB,SAACvpB,GAAgB,MAAAL,GAAK6pB,eAAexpB,GAEnE/1B,MAAKw/C,mBAAqB,MAlB3B5+C,OAAAC,eAAWy7C,EAAA/7C,UAAA,axEw7YJO,IwEx7YP,WAEC,MAAON,GAAUi/C,UxE07YXz+C,WAAY,KACZC,aAAc,MwEr6YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,SxE26YJO,IwE36YP,WAEC,MAAOd,MAAK8+C,QxE46YNv7C,IwEz6YP,SAAiBC,GAEhB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIxD,KAAK8+C,QAAUt7C,EAClB,MAEDxD,MAAK8+C,OAASt7C,CAEd,IAAIxD,KAAK0/C,iBAAmB,KAC3B1/C,KAAK0/C,gBAAkB,GAAId,EAE5B5+C,MAAK0/C,gBAAgBC,gBAAkBn8C,CAEvCxD,MAAKsvC,4BxEq6YCtuC,WAAY,KACZC,aAAc,MwEh6YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,kBxEs6YJO,IwEt6YP,WAEC,MAAOd,MAAK0/C,iBxEu6YNn8C,IwEp6YP,SAA0BC,GAEzBxD,KAAK0/C,gBAAkBl8C,CAEvBxD,MAAKsvC,4BxEo6YCtuC,WAAY,KACZC,aAAc,MwE95YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,iBxEq6YJO,IwEr6YP,WAEC,MAAOd,MAAK6+C,gBxEs6YNt7C,IwEn6YP,SAAyBC,GAExB,GAAIxD,KAAK6+C,gBAAkBr7C,EAC1B,MAEDxD,MAAK6+C,eAAiBr7C,CAEtBxD,MAAKsvC,4BxEk6YCtuC,WAAY,KACZC,aAAc,MwE75YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,UxEm6YJO,IwEn6YP,WAEC,MAAOd,MAAKi+C,UxEo6YNj9C,WAAY,KACZC,aAAc,MwE/5YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,gBxEq6YJO,IwEr6YP,WAEC,MAAOd,MAAKqvC,exEs6YNruC,WAAY,KACZC,aAAc,MwE75YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,exEs6YJO,IwEt6YP,WAEC,MAAOd,MAAKovC,exEu6YN7rC,IwEp6YP,SAAuBC,GAEtB,GAAIxD,KAAKovC,eAAiB5rC,EACzB,MAED,IAAIxD,KAAKovC,cACRpvC,KAAKovC,cAAcl5B,oBAAoB++B,EAAM2K,OAAQ5/C,KAAKs/C,uBAE3Dt/C,MAAKovC,cAAgB5rC,CAErB,IAAIxD,KAAKovC,cACRpvC,KAAKovC,cAAcl+B,iBAAiB+jC,EAAM2K,OAAQ5/C,KAAKs/C,uBAExDt/C,MAAKsvC,4BxEi6YCtuC,WAAY,KACZC,aAAc,MwE55YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,UxEk6YJO,IwEl6YP,WAEC,MAAOd,MAAKgvC,SxEm6YNzrC,IwEh6YP,SAAkBC,GAEjB,GAAIxD,KAAKgvC,SAAWxrC,EACnB,MAEDxD,MAAKgvC,QAAUxrC,CAEfxD,MAAK6/C,sBxE+5YC7+C,WAAY,KACZC,aAAc,MwE15YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,UxEg6YJO,IwEh6YP,WAEC,MAAOd,MAAKivC,SxEi6YN1rC,IwE95YP,SAAkBC,GAEjB,GAAIxD,KAAKivC,SAAWzrC,EACnB,MAEDxD,MAAKivC,QAAUzrC,CAEfxD,MAAK6/C,sBxE65YC7+C,WAAY,KACZC,aAAc,MwEv5YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,UxE85YJO,IwE95YP,WAEC,MAAOd,MAAKq/C,SxE+5YN97C,IwE55YP,SAAkBC,GAEjB,GAAIxD,KAAKq/C,SAAW77C,EACnB,MAEDxD,MAAKq/C,QAAU77C,CAEfxD,MAAK6/C,sBxE25YC7+C,WAAY,KACZC,aAAc,MwEt5YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,SxE45YJO,IwE55YP,WAEC,MAAOd,MAAKwgB,QxE65YNjd,IwE15YP,SAAiBC,GAEhB,GAAIxD,KAAKwgB,QAAUhd,EAClB,MAEDxD,MAAKwgB,OAAShd,CAEdxD,MAAK6/C,sBxEy5YC7+C,WAAY,KACZC,aAAc,MwEp5YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,WxE05YJO,IwE15YP,WAEC,MAAOd,MAAKq9C,WxE25YN95C,IwEx5YP,SAAmBC,GAElB,GAAIxD,KAAKq9C,WAAa75C,EACrB,MAEDxD,MAAKq9C,UAAY75C,CAEjBxD,MAAK6/C,oBAEL7/C,MAAKi+C,SAAWj+C,KAAKq9C,UAAUvuC,MAC/B9O,MAAKk+C,QAAUl+C,KAAKq9C,UAAUrsC,KAE9BhR,MAAKm+C,uBxEq5YCn9C,WAAY,KACZC,aAAc,MwEh5YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,cxEs5YJO,IwEt5YP,WAEC,MAAOd,MAAK++C,cxEu5YNx7C,IwEp5YP,SAAsBC,GAErB,GAAIxD,KAAK++C,cAAgBv7C,EACxB,MAEDxD,MAAK++C,aAAev7C,CAEpBxD,MAAK6/C,sBxEm5YC7+C,WAAY,KACZC,aAAc,MwE74YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,sBxEo5YJO,IwEp5YP,WAEC,MAAOd,MAAKg/C,qBxEq5YNz7C,IwEl5YP,SAA8BC,GAE7B,GAAIxD,KAAKg/C,qBAAuBx7C,EAC/B,MAEDxD,MAAKg/C,oBAAsBx7C,CAE3BxD,MAAK6/C,sBxEi5YC7+C,WAAY,KACZC,aAAc,MwEz4YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,uBxEk5YJO,IwEl5YP,WAEC,MAAOd,MAAKk/C,sBxEm5YN37C,IwEh5YP,SAA+BC,GAE9B,GAAIxD,KAAKk/C,sBAAwB17C,EAChC,MAEDxD,MAAKk/C,qBAAuB17C,CAE5BxD,MAAK6/C,sBxE+4YC7+C,WAAY,KACZC,aAAc,MwEv4YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,wBxEg5YJO,IwEh5YP,WAEC,MAAOd,MAAKi/C,uBxEi5YN17C,IwE94YP,SAAgCC,GAE/B,GAAIxD,KAAKi/C,uBAAyBz7C,EACjC,MAEDxD,MAAKi/C,sBAAwBz7C,CAE7BxD,MAAK6/C,sBxE64YC7+C,WAAY,KACZC,aAAc,MwEv4Ydq7C,GAAA/7C,UAAAW,QAAP,WAEC,GAAI/B,EACJ,IAAIgF,EAEJA,GAAMnE,KAAK+uC,eAAervC,MAC1B,KAAKP,EAAI,EAAGA,EAAIgF,EAAKhF,IACpBa,KAAK+uC,eAAe5vC,GAAG+B,SAExBlB,MAAK+uC,eAAiB,GAAIzqC,OAM3B1D,QAAAC,eAAWy7C,EAAA/7C,UAAA,axE04YJO,IwE14YP,WAEC,MAAOd,MAAKo/C,YxE24YN77C,IwEx4YP,SAAqBC,GAEpB,GAAIxD,KAAKo/C,WAAa57C,EACrB,MAEDxD,MAAKo/C,WAAa57C,CAElBxD,MAAK6/C,sBxEu4YC7+C,WAAY,KACZC,aAAc,MwE33YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,axEw4YJO,IwEx4YP,WAEC,MAAOd,MAAK8uC,axEy4YNvrC,IwEt4YP,SAAqBC,GAEpB,GAAIxD,KAAK8uC,aAAetrC,EACvB,MAEDxD,MAAK8uC,YAActrC,CAEnBxD,MAAKsvC,4BxEq4YCtuC,WAAY,KACZC,aAAc,MwE93YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,sBxEs4YJO,IwEt4YP,WAEC,MAAOd,MAAK8/C,qBxEu4YNv8C,IwEp4YP,SAA8BC,GAE7B,GAAIxD,KAAK8/C,qBAAuBt8C,EAC/B,MAEDxD,MAAK8/C,oBAAsBt8C,CAE3BxD,MAAK6/C,sBxEm4YC7+C,WAAY,KACZC,aAAc,MwE53YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,kBxEo4YJO,IwEp4YP,WAEC,MAAOd,MAAK6uC,kBxEq4YNtrC,IwEl4YP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIxD,KAAK6uC,kBAAoBrrC,EAC5B,MAEDxD,MAAK6uC,iBAAmBrrC,CAExBxD,MAAK6/C,sBxEg4YC7+C,WAAY,KACZC,aAAc,MwE33YrBL,QAAAC,eAAWy7C,EAAA/7C,UAAA,SxEi4YJO,IwEj4YP,WAEC,MAAOd,MAAKk+C,SxEk4YNl9C,WAAY,KACZC,aAAc,MwEp3Ydq7C,GAAA/7C,UAAA8mB,UAAP,SAAiB04B,GAEhB//C,KAAKkvC,QAAQn3B,KAAKgoC,EAElB,IAAIC,EACJ,IAAI94B,GAAiC64B,EAAM74B,QAE3C,IAAIA,EACH84B,EAA+B94B,EAAS84B,YAEzC,IAAID,EAAM74B,SAAU,CACnB,GAAIlnB,KAAKqvC,eAAiB2Q,GAAgBhgD,KAAKqvC,cAAe,CAC7D,KAAM,IAAIhwC,OAAM,iGACV,CACN,GAAIW,KAAKqvC,eAAiB2Q,EAAc,CAEvChgD,KAAKqvC,cAAgB2Q,CAErBhgD,MAAKigD,wBAKRF,EAAM/2C,cAAc,GAAImuC,GAAqBA,EAAqBG,4BAA6Bt3C,OASzFs8C,GAAA/7C,UAAA6mB,aAAP,SAAoB24B,GAEnB//C,KAAKkvC,QAAQh3B,OAAOlY,KAAKkvC,QAAQj3B,QAAQ8nC,GAAQ,EAEjD,IAAI//C,KAAKkvC,QAAQxvC,QAAU,EAAG,CAC7BM,KAAKqvC,cAAgB,IAErBrvC,MAAKigD,sBAGNF,EAAM/2C,cAAc,GAAImuC,GAAqBA,EAAqBG,4BAA6Bt3C,OAQhGY,QAAAC,eAAWy7C,EAAA/7C,UAAA,WxEu3YJO,IwEv3YP,WAEC,MAAOd,MAAKkvC,SxEw3YNluC,WAAY,KACZC,aAAc,MwEj3Ydq7C,GAAA/7C,UAAAs/C,mBAAP,WAEC,GAAI17C,GAAanE,KAAK+uC,eAAervC,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAK+uC,eAAe5vC,GAAGqwC,mBAGjB8M,GAAA/7C,UAAA0/C,oBAAR,WAEC,GAAI97C,GAAanE,KAAK+uC,eAAervC,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAK+uC,eAAe5vC,GAAG8gD,sBAGlB3D,GAAA/7C,UAAA+uC,yBAAP,WAEC,GAAInrC,GAAanE,KAAK+uC,eAAervC,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/Ba,KAAK+uC,eAAe5vC,GAAGowC,yBAMjB+M,GAAA/7C,UAAAg/C,eAAR,SAAuBxpB,GAEtB/1B,KAAKsvC,2BAGCgN,GAAA/7C,UAAA49C,oBAAP,WAEC,IAAKn+C,KAAKkgD,aACTlgD,KAAKkgD,aAAe,GAAInc,GAAcA,EAAcU,aAErDzkC,MAAKgJ,cAAchJ,KAAKkgD,cAGlB5D,GAAA/7C,UAAAqvC,kBAAP,SAAyBC,GAExB7vC,KAAK+uC,eAAeh3B,KAAK83B,EAEzB,OAAOA,GAGDyM,GAAA/7C,UAAAuvC,qBAAP,SAA4BD,GAE3B7vC,KAAK+uC,eAAe72B,OAAOlY,KAAK+uC,eAAe92B,QAAQ43B,GAAe,EAEtE,OAAOA,GASDyM,GAAA/7C,UAAAwvC,gBAAP,SAAuBC,GAEtB,KAAM,IAAIplC,GAEZ,OAAA0xC,IAvmB2B77C,EAymB3Bb,GAAsBJ,QAAb88C,IxEy2YNlM,iCAAiC/uC,UAAUkY,6CAA6ClY,UAAU8zC,+BAA+B9zC,UAAU8+C,sCAAsC9+C,UAAUD,oCAAoCC,UAAUC,yCAAyCD,UAAU0jC,0CAA0C,0CAA0CmS,iDAAiD,mDAAmDkJ,6DAA6D,SAAS1hD,EAAQkB,EAAOJ,GAC5iB,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyEx/ZtB,IAAOG,GAAS9B,EAAe,oCAC/B,IAAO+B,GAAc/B,EAAc,yCzEkganC,IyEj/ZM2hD,GAAe,SAAA1/C,GAASZ,EAAxBsgD,EAAe1/C,EAmBpB,SAnBK0/C,KAqBJ1/C,EAAAlB,KAAAO,KAnBMA,MAAAsgD,iBAA0B,CAC1BtgD,MAAAugD,uBAAgC,CAChCvgD,MAAAwgD,wBAAiC,CACjCxgD,MAAAygD,8BAAuC,CACvCzgD,MAAA0gD,iBAA0B,EAqB1BL,EAAA9/C,UAAAW,QAAP,YAOAN,QAAAC,eAAWw/C,EAAA9/C,UAAA,azEq+ZJO,IyEr+ZP,WAEC,MAAON,GAAUmgD,czEs+ZX3/C,WAAY,KACZC,aAAc,MyEj+ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,wBzEu+ZJO,IyEv+ZP,WAEC,MAAOd,MAAKugD,wBzEw+ZNv/C,WAAY,KACZC,aAAc,MyEn+ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,kBzEy+ZJO,IyEz+ZP,WAEC,MAAOd,MAAKsgD,kBzE0+ZNt/C,WAAY,KACZC,aAAc,MyEr+ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,+BzE2+ZJO,IyE3+ZP,WAEC,MAAOd,MAAKygD,+BzE4+ZNz/C,WAAY,KACZC,aAAc,MyEv+ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,yBzE6+ZJO,IyE7+ZP,WAEC,MAAOd,MAAKwgD,yBzE8+ZNx/C,WAAY,KACZC,aAAc,MyEz+ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,kBzE++ZJO,IyE/+ZP,WAEC,MAAOd,MAAK0gD,kBzEg/ZN1/C,WAAY,KACZC,aAAc,MyE3+ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,ezEi/ZJO,IyEj/ZP,WAEC,MAAOd,MAAK4gD,ezEk/ZN5/C,WAAY,KACZC,aAAc,MyE7+ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,qBzEm/ZJO,IyEn/ZP,WAEC,MAAOd,MAAK6gD,qBzEo/ZN7/C,WAAY,KACZC,aAAc,MyE/+ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,sBzEq/ZJO,IyEr/ZP,WAEC,MAAOd,MAAK8gD,sBzEs/ZN9/C,WAAY,KACZC,aAAc,MyEj/ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,4BzEu/ZJO,IyEv/ZP,WAEC,MAAOd,MAAK+gD,4BzEw/ZN//C,WAAY,KACZC,aAAc,MyEn/ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,ezEy/ZJO,IyEz/ZP,WAEC,MAAOd,MAAKghD,ezE0/ZNhgD,WAAY,KACZC,aAAc,MyEr/ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,qBzE2/ZJO,IyE3/ZP,WAEC,MAAOd,MAAKihD,qBzE4/ZNjgD,WAAY,KACZC,aAAc,MyEv/ZrBL,QAAAC,eAAWw/C,EAAA9/C,UAAA,mBzE6/ZJO,IyE7/ZP,WAEC,MAAOd,MAAKkhD,mBzE8/ZNlgD,WAAY,KACZC,aAAc,MyEz/Zdo/C,GAAA9/C,UAAA4gD,cAAP,SAAqBrpC,GAEpB9X,KAAKohD,mBAAmBtpC,GAOjBuoC,GAAA9/C,UAAA6gD,mBAAR,SAA2BtpC,GzE8/ZpB,GyE3/ZFupC,GAAqBvpC,EAAWwpC,aAAa/rC,aACjD,IAAIgsC,EAEJ,IAAIpvB,GAAYkvB,EAAUl6C,EAAGirB,EAAYivB,EAAUj6C,EAAGirB,EAAYgvB,EAAUh6C,CAC5E,IAAIsN,GAAWC,EAAWC,CAC1B,IAAIhM,GAAU24C,EAAe,CAC7B,IAAIriD,EAGJ,KAAKA,EAAI,EAAGA,EAAIa,KAAK0gD,mBAAoBvhD,EAAG,CAE3CoiD,EAAWvhD,KAAKghD,cAAc7hD,GAAGoW,aACjCZ,GAAKwd,EAAKovB,EAASp6C,CACnByN,GAAKwd,EAAKmvB,EAASn6C,CACnByN,GAAKwd,EAAKkvB,EAASl6C,CAEnBwB,GAAI8L,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,CAGvBhM,GAAIA,EAAI,KAAQ,EAAEA,EAAI,GACtB7I,MAAKihD,oBAAoB9hD,GAAK0J,CAC9B24C,IAAS34C,EAIV24C,EAAQ,EAAEA,CAEV,KAAKriD,EAAI,EAAGA,EAAIa,KAAK0gD,mBAAoBvhD,EACxCa,KAAKihD,oBAAoB9hD,IAAMqiD,EAElC,OAAAnB,IApL8B5/C,EAsL9Bb,GAAyBJ,QAAhB6gD,IzEu/ZNj/C,oCAAoCC,UAAUC,yCAAyCD,YAAYogD,+DAA+D,SAAS/iD,EAAQkB,EAAOJ,GAC7L,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0ErsatB,IAAO40C,GAAKv2C,EAAgB,+BAG5B,IAAO8oC,GAAgB9oC,EAAc,+CACrC,IAAO4qC,GAAU5qC,EAAe,yCAChC,IAAO2uC,GAAU3uC,EAAe,yCAChC,IAAO4hB,GAAU5hB,EAAe,uCAChC,IAAO2hD,GAAe3hD,EAAc,4D1E2sapC,I0EpsaMgjD,GAAiB,SAAA/gD,GAASZ,EAA1B2hD,EAAiB/gD,EAStB,SATK+gD,GASOC,GATb,GAAAjsB,GAAA11B,IAWEW,GAAAlB,KAAAO,KAEAA,MAAK4hD,4BAA8B,SAAC7rB,GAAqB,MAAAL,GAAKmsB,mBAAmB9rB,GAEjF/1B,MAAK2hD,OAASA,EAMf/gD,OAAAC,eAAW6gD,EAAAnhD,UAAA,U1E+raJO,I0E/raP,WAEC,MAAOd,MAAK8hD,S1EgsaNv+C,I0E7raP,SAAkBC,GAEjB,GAAIu+C,GAAwB,CAC5B,IAAIC,GAA8B,CAClC,IAAIC,GAA+B,CACnC,IAAIC,GAAqC,CACzC,IAAIC,GAAwB,CAC5B,IAAIvgC,EAEJ,IAAI5hB,KAAK8hD,QACR9hD,KAAKoiD,gBAENpiD,MAAK8hD,QAAUt+C,CACfxD,MAAKkhD,kBAAoB19C,CACzBxD,MAAK4gD,cAAgB,GAAIt8C,MACzBtE,MAAK8gD,qBAAuB,GAAIx8C,MAChCtE,MAAK6gD,oBAAsB,GAAIv8C,MAC/BtE,MAAK+gD,2BAA6B,GAAIz8C,MACtCtE,MAAKghD,cAAgB,GAAI18C,MAEzB,IAAIH,GAAaX,EAAM9D,MAEvB,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EAAG,CACpCyiB,EAAQpe,EAAMrE,EACdyiB,GAAM1Q,iBAAiBoP,EAAWuB,oBAAqB7hB,KAAK4hD,4BAE5D,IAAIhgC,YAAiByrB,GAAY,CAChC,GAAIzrB,EAAMhU,aACT5N,KAAK8gD,qBAAqBmB,KAAwCrgC,MAElE5hB,MAAK4gD,cAAcmB,KAAiCngC,MAE/C,IAAIA,YAAiB4lB,GAAkB,CAC7C,GAAI5lB,EAAMhU,aACT5N,KAAK+gD,2BAA2BmB,KAAoDtgC,MAEpF5hB,MAAK6gD,oBAAoBmB,KAA6CpgC,MAEjE,IAAIA,YAAiB0nB,GAAY,CACvCtpC,KAAKghD,cAAcmB,KAAiCvgC,GAItD,GAAI5hB,KAAKugD,wBAA0ByB,GAAwBhiD,KAAKsgD,kBAAoByB,GAAkB/hD,KAAK0gD,kBAAoByB,GAAkBniD,KAAKwgD,yBAA2ByB,GAAyBjiD,KAAKygD,+BAAiCyB,EAC/O,MAEDliD,MAAKugD,uBAAyByB,CAC9BhiD,MAAKygD,8BAAgCyB,CACrCliD,MAAKsgD,iBAAmByB,CACxB/hD,MAAKwgD,wBAA0ByB,CAC/BjiD,MAAK0gD,iBAAmByB,CAGxBniD,MAAKihD,oBAAsB,GAAI38C,OAAcqE,KAAK05C,KAAKF,EAAe,GAAG,EAGzEniD,MAAKgJ,cAAc,GAAIisC,GAAMA,EAAM2K,U1Eqra7B5+C,WAAY,KACZC,aAAc,M0E/qabygD,GAAAnhD,UAAA6hD,eAAR,WAEC,GAAIj+C,GAAanE,KAAK8hD,QAAQpiD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EACjCa,KAAK8hD,QAAQ3iD,GAAG+W,oBAAoBoK,EAAWuB,oBAAqB7hB,KAAK4hD,6BAMnEF,GAAAnhD,UAAAshD,mBAAR,SAA2B9rB,GAK1B,GAAInU,GAA8BmU,EAAMtiB,MAExC,IAAImO,YAAiByrB,GACpBrtC,KAAKsiD,mBAAgC1gC,OACjC,IAAIA,YAAiB4lB,GACzBxnC,KAAKuiD,yBAA4C3gC,EAElD5hB,MAAKgJ,cAAc,GAAIisC,GAAMA,EAAM2K,SAM5B8B,GAAAnhD,UAAAgiD,yBAAR,SAAiC3gC,GAEhC,GAAI4gC,GAAyC5gC,CAE7C,IAAIA,EAAMhU,aAAc,GACrB5N,KAAKugD,yBACLvgD,KAAKygD,6BAGPzgD,MAAK6gD,oBAAoB3oC,OAAOlY,KAAK6gD,oBAAoB5oC,QAAQuqC,GAAK,EACtExiD,MAAK+gD,2BAA2BhpC,KAAK6J,OAE/B,GACJ5hB,KAAKugD,yBACLvgD,KAAKygD,6BAEPzgD,MAAK+gD,2BAA2B7oC,OAAOlY,KAAK+gD,2BAA2B9oC,QAAQuqC,GAAK,EACpFxiD,MAAK6gD,oBAAoB9oC,KAAK6J,IAOxB8/B,GAAAnhD,UAAA+hD,mBAAR,SAA2B1gC,GAE1B,GAAI6gC,GAA6B7gC,CAEjC,IAAIA,EAAMhU,aAAc,GACrB5N,KAAKsgD,mBACLtgD,KAAKwgD,uBACPxgD,MAAK4gD,cAAc1oC,OAAOlY,KAAK4gD,cAAc3oC,QAAQwqC,GAAK,EAC1DziD,MAAK8gD,qBAAqB/oC,KAAK6J,OACzB,GACJ5hB,KAAKsgD,mBACLtgD,KAAKwgD,uBAEPxgD,MAAK8gD,qBAAqB5oC,OAAOlY,KAAK8gD,qBAAqB7oC,QAAQwqC,GAAK,EACxEziD,MAAK4gD,cAAc7oC,KAAK6J,IAG3B,OAAA8/B,IA9JgCrB,EAgKhCzgD,GAA2BJ,QAAlBkiD,I1EwqaNvM,+BAA+B9zC,UAAUimC,+CAA+C,+CAA+C+B,yCAAyC,yCAAyC8D,yCAAyC,yCAAyC9qB,uCAAuC,uCAAuC+9B,4DAA4D,8DAA8DsC,kEAAkE,SAAShkD,EAAQkB,EAAOJ,GAChlB,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2E11atB,IAAOqK,GAAahM,EAAc,qCAClC,IAAOikD,GAASjkD,EAAe,iCAC/B,IAAOu2C,GAAKv2C,EAAgB,+BAC5B,IAAOqmB,GAAermB,EAAc,yCAEpC,IAAOkkD,GAAoBlkD,EAAa,mDAKxC,IAAOg7B,GAAMh7B,EAAgB,qCAC7B,IAAO6oC,GAAuB7oC,EAAY,qEAI1C,IAAMmkD,GAAmB,SAAAliD,GAASZ,EAA5B8iD,EAAmBliD,EAgBxB,SAhBKkiD,GAgBOC,GAAA,GAAAA,QAAA,GAA+B,CAA/BA,EAAA,EAEXniD,EAAAlB,KAAAO,KAfOA,MAAA+iD,sBAAgC,IAiBvC,IAAID,EAAc,GAAKA,EAAc,EACpC,KAAM,IAAIzjD,OAAM,iDAEjBW,MAAKgjD,aAAeF,CACpB9iD,MAAKijD,kBAAoB,GAAIl+B,GAAgB/kB,KAC7CA,MAAKkjD,OAGCL,EAAAtiD,UAAA4iD,cAAP,SAAqBj+C,GAEpB,MAAOlF,MAAKojD,aAAal+C,GAGnB29C,GAAAtiD,UAAA8iD,cAAP,SAAqBn+C,EAAuB1B,GAE3C,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI0B,GAASlF,KAAKgjD,aACjB,KAAM,IAAI3jD,OAAM,qDAEjBW,MAAKojD,aAAal+C,GAAS1B,EAGrBq/C,GAAAtiD,UAAA+iD,oBAAP,SAA2BtsC,GAE1B,MAAOhX,MAAKujD,cAAcvsC,GAAW8vB,eAG9B+b,GAAAtiD,UAAA2iD,KAAR,WAECljD,KAAKojD,aAAe,GAAI9+C,OAActE,KAAKgjD,aAC3ChjD,MAAKwjD,oBAAsB,GAAIl/C,OAActE,KAAKgjD,aAElD,IAAIjkD,GAAW,CACf,KAAK,GAAII,GAAmBa,KAAKgjD,aAAe,EAAG7jD,GAAK,IAAKA,EAAG,CAC/Da,KAAKojD,aAAajkD,GAAKJ,CACvBA,IAAK,GAGNiB,KAAKyjD,aAAen/C,OAAe,EAAG,GAAI,EAAG,EAC7CtE,MAAK0jD,aAAep/C,MAAc,EAAG,GAAI,GAAI,EAC7CtE,MAAK2jD,eAAiB,GAAIr/C,OAAiB,EAC3CtE,MAAK4jD,aAAe,GAAIt/C,MACxBtE,MAAKujD,cAAgB,GAAIj/C,MAEzB,KAAKnF,EAAI,EAAGA,EAAIa,KAAKgjD,eAAgB7jD,EAAG,CACvCa,KAAK4jD,aAAazkD,GAAK,GAAIyjD,EAC3B5iD,MAAKujD,cAAcpkD,GAAK,GAAIu6B,GAAO15B,KAAK4jD,aAAazkD,KAIhD0jD,GAAAtiD,UAAAsjD,kBAAP,SAAyBrgD,GAExB7C,EAAAJ,UAAMsjD,kBAAiBpkD,KAAAO,KAACwD,EAExBxD,MAAK8jD,yBAGEjB,GAAAtiD,UAAAujD,uBAAR,WAEC9jD,KAAK+iD,sBAAwB,KAG9BniD,QAAAC,eAAWgiD,EAAAtiD,UAAA,e3EmzaJO,I2EnzaP,WAEC,MAAOd,MAAKgjD,c3EozaNz/C,I2EjzaP,SAAuBC,GAEtB,GAAIA,GAASxD,KAAKgjD,aACjB,MAED,IAAIx/C,EAAQ,GAAKA,EAAQ,EACxB,KAAM,IAAInE,OAAM,iDAEjBW,MAAKgjD,aAAex/C,CACpBxD,MAAK8jD,wBACL9jD,MAAKkjD,MACLljD,MAAKgJ,cAAc,GAAIisC,GAAMA,EAAM2K,U3Egza7B5+C,WAAY,KACZC,aAAc,M2E9yad4hD,GAAAtiD,UAAAwjD,cAAP,SAAqBtwC,EAAsBwD,EAAa8iB,GAEvD,GAAI/5B,KAAK+iD,sBACR/iD,KAAKgkD,oBAENhkD,MAAKikD,kBAAkBC,WAAalkD,KAAKmkD,YACzCnkD,MAAKikD,kBAAkB7uC,OAASpV,KAAKokD,oBACrCpkD,MAAKikD,kBAAkBrnC,OACvB3F,GAAMgiB,mBAAmBj5B,KAAKikD,kBAE9BlqB,GAASsqB,iBAAiBrkD,KAAKikD,kBAAmBxwC,EAAQzT,KAAKgjD,aAAchjD,KAAK2jD,eAAgB3jD,KAAKujD,eAGhGV,GAAAtiD,UAAAyjD,mBAAR,WAEC,GAAIM,GAActkD,KAAKukD,eAAe,EAEtCvkD,MAAK2jD,eAAe,GAAK,GAAIhB,GAAU,EAAG,EAAG2B,EAAMA,EACnDtkD,MAAK2jD,eAAe,GAAK,GAAIhB,GAAU2B,EAAM,EAAGA,EAAMA,EACtDtkD,MAAK2jD,eAAe,GAAK,GAAIhB,GAAU,EAAG2B,EAAMA,EAAMA,EACtDtkD,MAAK2jD,eAAe,GAAK,GAAIhB,GAAU2B,EAAMA,EAAMA,EAAMA,EAEzDtkD,MAAK+iD,sBAAwB,MAGvBF,GAAAtiD,UAAAikD,uBAAP,SAA8BC,GAE7B,GAAI1oC,EACJ,IAAI0gB,GAAyBgoB,EAAWhoB,UACxC,IAAIioB,GAAwBjoB,EAAWkoB,IACvC,IAAIC,GAAyBnoB,EAAWooB,IAAMH,CAE9C1kD,MAAK8kD,oCAAoCL,EAAYA,EAAWhoB,WAAWsoB,eAAgB/kD,KAAKglD,SAChGhlD,MAAKglD,SAAS92C,YAAY,IAAK,IAAK,EACpClO,MAAKilD,yBAAyBlpC,OAAS/b,KAAKglD,QAC5ChlD,MAAKklD,kBAAkBT,EAEvB,KAAK,GAAItlD,GAAmB,EAAGA,EAAIa,KAAKgjD,eAAgB7jD,EAAG,CAC1D4c,EAAS/b,KAAK4jD,aAAazkD,GAAG4c,MAE9B/b,MAAKwjD,oBAAoBrkD,GAAKulD,EAAiB1kD,KAAKojD,aAAajkD,GAAGylD,CACpE5kD,MAAKujD,cAAcpkD,GAAGyH,UAAY5G,KAAKokD,qBAAqBx9C,SAE5D5G,MAAKmlD,0BAA0BppC,EAAQ/b,KAAKojD,aAAajkD,GAAIa,KAAKyjD,aAAatkD,GAAIa,KAAK0jD,aAAavkD,GAErGa,MAAK4jD,aAAazkD,GAAG4c,OAASA,GAIxB8mC,GAAAtiD,UAAA4kD,0BAAR,SAAkCppC,EAAiBqpC,EAAmBC,EAAmBC,GAExF,GAAIxxC,GAAoBpJ,EAAcyJ,kBACtC,IAAIoxC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAI/c,GAAc8T,OAAOkJ,kBAAmB/c,EAAc6T,OAAOkJ,kBAAmB9c,CACpF,IAAIC,GAAc2T,OAAOmJ,kBAAmB7c,EAAc0T,OAAOmJ,kBAAmB5c,EAAcyT,OAAOmJ,iBACzG,IAAI3mD,GAAoB,CAExB,OAAOA,EAAI,GAAI,CACdomD,EAAKvlD,KAAK+lD,eAAe5mD,EACzBqmD,GAAKxlD,KAAK+lD,eAAe5mD,EAAI,EAC7BsmD,GAAKzlD,KAAK+lD,eAAe5mD,EAAI,EAC7BumD,GAAKH,GAAMvlD,KAAK+lD,eAAe5mD,EAAI,IAAMomD,GAAIH,CAC7CO,GAAKH,GAAMxlD,KAAK+lD,eAAe5mD,EAAI,IAAMqmD,GAAIJ,CAC7CQ,GAAKH,GAAMzlD,KAAK+lD,eAAe5mD,EAAI,IAAMsmD,GAAIL,CAC7C,IAAIG,EAAK1c,EACRA,EAAO0c,CACR,IAAIA,EAAKvc,EACRA,EAAOuc,CACR,IAAIC,EAAK1c,EACRA,EAAO0c,CACR,IAAIA,EAAKvc,EACRA,EAAOuc,CACR,IAAIC,EAAKvc,EACRA,EAAOuc,CACR,IAAIC,EAAK7c,EACRA,EAAO6c,CACR,IAAIA,EAAK1c,EACRA,EAAO0c,CACR,IAAIC,EAAK7c,EACRA,EAAO6c,CACR,IAAIA,EAAK1c,EACRA,EAAO0c,CACR,IAAIC,EAAK1c,EACRA,EAAO0c,CACRzmD,IAAK,EAGN4pC,EAAO,CAEP,IAAIlgC,GAAYmgC,EAAOH,CACvB,IAAImd,GAAY/c,EAAOH,CACvB,IAAI7oC,GAAW,GAAGipC,EAAOH,EAEzB,IAAIF,EAAO,EACVA,GAAQ7oC,KAAKimD,MACd,IAAInd,EAAO,EACVA,GAAQ9oC,KAAKimD,MACdpd,GAAOlgC,KAAKwb,MAAM0kB,EAAK7oC,KAAKimD,QAAQjmD,KAAKimD,MACzCnd,GAAOngC,KAAKwb,MAAM2kB,EAAK9oC,KAAKimD,QAAQjmD,KAAKimD,MAEzC,IAAIC,GAAe,EAAElmD,KAAKimD,MAC1Bp9C,GAAIF,KAAKwb,MAAMtb,EAAEq9C,EAAQ,GAAGA,CAC5BF,GAAIr9C,KAAKwb,MAAM6hC,EAAEE,EAAQ,GAAGA,CAE5Bld,GAAOH,EAAOhgC,CACdogC,GAAOH,EAAOkd,CAEdn9C,GAAI,EAAEA,CACNm9C,GAAI,EAAEA,CAENlyC,GAAI,GAAK,EAAEjL,CACXiL,GAAI,GAAK,EAAEkyC,CACXlyC,GAAI,IAAM7T,CACV6T,GAAI,MAAQk1B,EAAOH,GAAMhgC,CACzBiL,GAAI,MAAQm1B,EAAOH,GAAMkd,CACzBlyC,GAAI,KAAOi1B,EAAK9oC,CAChB6T,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFiI,GAAO1H,gBAAgBP,EACvBiI,GAAO7N,YAAY,IAAK,IAAK,EAC7B6N,GAAOrE,kBAAkB2tC,EAAYC,EAAY,EACjDvpC,GAAO7N,YAAY,GAAI,GAAI,GAGrB20C,GAAAtiD,UAAA2Q,iBAAP,SAAwBC,EAAaC,GAEpCpR,KAAKijD,kBAAkB/xC,iBAAiBC,EAAMC,GAGxCyxC,GAAAtiD,UAAA2V,oBAAP,SAA2B/E,EAAaC,GAEvCpR,KAAKijD,kBAAkB/sC,oBAAoB/E,EAAMC,GAG3CyxC,GAAAtiD,UAAAyI,cAAP,SAAqB+sB,GAEpB,MAAO/1B,MAAKijD,kBAAkBj6C,cAAc+sB,GAGtC8sB,GAAAtiD,UAAA4V,iBAAP,SAAwBhF,GAEvB,MAAOnR,MAAKijD,kBAAkB9sC,iBAAiBhF,GAGhDvQ,QAAAC,eAAIgiD,EAAAtiD,UAAA,wB3E+waGO,I2E/waP,WAEC,MAAOd,MAAKwjD,qB3EgxaNxiD,WAAY,KACZC,aAAc,M2E/watB,OAAA4hD,IA/PkCtb,EAiQL3nC,GAAAJ,QAApBqjD,I3EoxaN1N,+BAA+B9zC,UAAUqkB,yCAAyCrkB,UAAUsY,qCAAqCtY,UAAU8kD,iCAAiC9kD,UAAU+kD,mDAAmD/kD,UAAUu9B,qCAAqC,qCAAqCuK,qEAAqE,uEAAuEkF,kEAAkE,SAAS3vC,EAAQkB,EAAOJ,GACtiB,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4EzibtB,IAAOgmD,GAA0B3nD,EAAW,oDAI5C,IAAOg7B,GAAMh7B,EAAgB,qCAE7B,IAAO4nD,GAAgB5nD,EAAc,8DAKrC,IAAM0uC,GAAmB,SAAAzsC,GAASZ,EAA5BqtC,EAAmBzsC,EAMxB,SANKysC,KAQJzsC,EAAAlB,KAAAO,KAEAA,MAAKukD,eAAiB,GACtBvkD,MAAKumD,aAAe,GAAIjiD,MACxBtE,MAAKwmD,cAGEpZ,EAAA7sC,UAAAimD,YAAR,WAECxmD,KAAKujD,cAAgB,GAAIj/C,MACzBtE,MAAKymD,aAAe,GAAIniD,MAGxBtE,MAAK0mD,UAAU,EAAG,GAAI,EACtB1mD,MAAK0mD,UAAU,GAAI,GAAI,EACvB1mD,MAAK0mD,WAAW,GAAI,EAAG,EACvB1mD,MAAK0mD,UAAU,GAAI,EAAG,EACtB1mD,MAAK0mD,UAAU,EAAG,EAAG,EACrB1mD,MAAK0mD,UAAU,EAAG,IAAK,GAGhBtZ,GAAA7sC,UAAAmmD,UAAR,SAAkBr2C,EAAkBC,EAAkBC,GAErD,GAAIo2C,GAAa,GAAIjtB,EACrBitB,GAAIt2C,UAAYA,CAChBs2C,GAAIr2C,UAAYA,CAChBq2C,GAAIp2C,UAAYA,CAChBo2C,GAAIlqB,WAAWkoB,KAAO,GAEtB,IAAIloB,GAA2DkqB,EAAIlqB,UACnEA,GAAWmqB,YAAc,EACzB5mD,MAAKymD,aAAa1uC,KAAK0kB,EACvBkqB,GAAIlqB,WAAWC,cAAgB,CAC/B18B,MAAKujD,cAAcxrC,KAAK4uC,GAIlBvZ,GAAA7sC,UAAAsmD,oBAAP,WAEC,KAAM,IAAIR,GAOJjZ,GAAA7sC,UAAAikD,uBAAP,SAA8BC,GAE7B,GAAI7iC,GAAgC5hB,KAAY,OAChD,IAAI8mD,GAAqBllC,EAAM2rB,SAC/B,IAAItL,GAAejiC,KAAK+mD,QAAQxxC,aAGhC,KAAK,GAAIpW,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClCa,KAAKymD,aAAatnD,GAAG0lD,IAAMiC,CAC3B9mD,MAAKujD,cAAcpkD,GAAGyH,UAAUsM,SAAW+uB,CAC3CjiC,MAAKumD,aAAapnD,GAAK,MAKlBiuC,GAAA7sC,UAAAwjD,cAAP,SAAqBtwC,EAAsBwD,EAAa8iB,GAEvD,IAAK,GAAI56B,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIa,KAAKumD,aAAapnD,GAAI,CACzBa,KAAKikD,kBAAkB7uC,OAASpV,KAAKujD,cAAcpkD,EACnDa,MAAKikD,kBAAkBrnC,OACvB3F,GAAMgiB,mBAAmBj5B,KAAKikD,kBAC9BlqB,GAASitB,SAAShnD,KAAKikD,kBAAmBxwC,EAAQ,KAAMtU,KAI5D,OAAAiuC,IAhFkCkZ,EAkFlC1mD,GAA6BJ,QAApB4tC,I5EkhbN6Z,oDAAoD5lD,UAAUu9B,qCAAqC,qCAAqCsoB,8DAA8D,gEAAgE/d,sEAAsE,SAASzqC,EAAQkB,EAAOJ,GACvW,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6ErnbtB,IAAOoK,GAAQ/L,EAAgB,gCAG/B,IAAOkkD,GAAoBlkD,EAAa,mDAIxC,IAAOg7B,GAAMh7B,EAAgB,qCAE7B,IAAO4nD,GAAgB5nD,EAAc,8DAIrC,IAAM6oC,GAAuB,SAAA5mC,GAASZ,EAAhCwnC,EAAuB5mC,EAc5B,SAdK4mC,KAgBJ5mC,EAAAlB,KAAAO,KAXMA,MAAAmnD,cAAuB,GAGvBnnD,MAAAimD,OAAgB,EAUtBjmD,MAAKmkD,eACLnkD,MAAKilD,yBAA2B,GAAIrC,EACpC5iD,MAAKokD,qBAAuB,GAAI1qB,GAAO15B,KAAKilD,yBAC5CjlD,MAAK+lD,iBACL/lD,MAAKglD,SAAW,GAAIv6C,GAGrB7J,OAAAC,eAAW0mC,EAAAhnC,UAAA,Q7EkmbJO,I6ElmbP,WAEC,MAAOd,MAAKimD,Q7EmmbN1iD,I6EhmbP,SAAgBC,GAEfxD,KAAKimD,OAASziD,G7EimbRxC,WAAY,KACZC,aAAc,M6E/lbrBL,QAAAC,eAAW0mC,EAAAhnC,UAAA,e7EkmbJO,I6ElmbP,WAEC,MAAOd,MAAKmnD,e7EmmbN5jD,I6EhmbP,SAAuBC,GAEtBxD,KAAKmnD,cAAgB3jD,G7EimbfxC,WAAY,KACZC,aAAc,M6E9lbrBL,QAAAC,eAAW0mC,EAAAhnC,UAAA,oB7EkmbJO,I6ElmbP,WAEC,MAAOd,MAAKokD,qBAAqBtd,gB7Emmb3B9lC,WAAY,KACZC,aAAc,M6EhmbrBL,QAAAC,eAAW0mC,EAAAhnC,UAAA,S7EombJO,I6EpmbP,WAEC,MAAOd,MAAKonD,OAASpnD,KAAKqnD,Q7EqmbpBrmD,WAAY,KACZC,aAAc,M6ElmbdsmC,GAAAhnC,UAAAwjD,cAAP,SAAqBtwC,EAAyBwD,EAAa8iB,GAE1D/5B,KAAKikD,kBAAkB7uC,OAASpV,KAAKokD,oBACrCpkD,MAAKikD,kBAAkBC,WAAalkD,KAAKmkD,YACzCnkD,MAAKikD,kBAAkBrnC,OACvB3F,GAAMgiB,mBAAmBj5B,KAAKikD,kBAC9BlqB,GAASitB,SAAShnD,KAAKikD,kBAAmBxwC,GAIpC8zB,GAAAhnC,UAAA2kD,kBAAP,SAAyBT,GAExB,GAAI6C,GAAoCtnD,KAAKokD,qBAAqBmD,aAClE,IAAIC,GAAmC/C,EAAW8C,aAClDvnD,MAAKmkD,aAAazkD,OAAS,CAE3BM,MAAKmkD,aAAa,GAAKmD,EAAmB,EAC1CtnD,MAAKmkD,aAAa,GAAKmD,EAAmB,EAC1CtnD,MAAKmkD,aAAa,GAAKmD,EAAmB,EAC1CtnD,MAAKmkD,aAAa,GAAKmD,EAAmB,EAE1C,IAAI1lC,GAA4C5hB,KAAK+mD,OACrD,IAAIU,GAAe7lC,EAAM8lC,cACzB,IAAIC,GAAcF,EAAItgD,CACtB,IAAIygD,GAAcH,EAAIrgD,CACtB,IAAIygD,GAAcJ,EAAIpgD,CACtB,IAAIE,GAAW,CACf,KAAK,GAAIpI,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAI8vB,GAAgBu4B,EAAkBroD,EACtC,IAAI8vB,EAAM/vB,EAAEyoD,EAAO14B,EAAM/uB,EAAE0nD,EAAO34B,EAAMC,EAAE24B,EAAO,EAChD7nD,KAAKmkD,aAAa58C,KAAO0nB,GAKrBsY,GAAAhnC,UAAAikD,uBAAP,SAA8BC,GAE7BzkD,KAAK8kD,oCAAoCL,EAAYA,EAAWhoB,WAAWsoB,eAAgB/kD,KAAKglD,SAChGhlD,MAAKilD,yBAAyBlpC,OAAS/b,KAAKglD,QAC5ChlD,MAAKklD,kBAAkBT,GAGjBld,GAAAhnC,UAAAukD,oCAAP,SAA2CL,EAAmBqD,EAAuB/rC,GAEpF,GAAIjI,GAAoB,GAAIxP,MAC5B,IAAImjD,EACJ,IAAItgD,GAAUC,EAAUC,CACxB,IAAIwhC,GAAaC,CACjB,IAAIE,GAAaC,CACjB,IAAI9pC,EAEJ,IAAIyiB,GAA4C5hB,KAAK+mD,OACrDU,GAAM7lC,EAAM8lC,cACZ1nD,MAAKokD,qBAAqBx9C,UAAUyqB,SAAWrxB,KAAK+mD,QAAQ53C,cAC5DhI,GAAIwB,KAAKwb,OAAOsgC,EAAWt9C,EAAIsgD,EAAItgD,EAAEnH,KAAKmnD,eAAennD,KAAKimD,QAAQjmD,KAAKimD,MAC3E7+C,GAAIuB,KAAKwb,OAAOsgC,EAAWr9C,EAAIqgD,EAAIrgD,EAAEpH,KAAKmnD,eAAennD,KAAKimD,QAAQjmD,KAAKimD,MAC3E5+C,GAAIsB,KAAKwb,OAAOsgC,EAAWp9C,EAAIogD,EAAIpgD,EAAErH,KAAKmnD,eAAennD,KAAKimD,QAAQjmD,KAAKimD,MAC3EjmD,MAAKokD,qBAAqBj9C,EAAIA,CAC9BnH,MAAKokD,qBAAqBh9C,EAAIA,CAC9BpH,MAAKokD,qBAAqB/8C,EAAIA,CAE9BrH,MAAKglD,SAAS91C,SAASlP,KAAKokD,qBAAqBjxC,sBACjDnT,MAAKglD,SAASptC,QAAQ6sC,EAAWt1C,eACjCnP,MAAKglD,SAAS/c,iBAAiB6f,EAAS9nD,KAAK+lD,eAE7Cld,GAAOG,EAAOhpC,KAAK+lD,eAAe,EAClCjd,GAAOG,EAAOjpC,KAAK+lD,eAAe,EAClC/lD,MAAKonD,OAASpnD,KAAK+lD,eAAe,EAElC5mD,GAAI,CACJ,OAAOA,EAAI,GAAI,CACdgI,EAAInH,KAAK+lD,eAAe5mD,EACxBiI,GAAIpH,KAAK+lD,eAAe5mD,EAAI,EAC5BkI,GAAIrH,KAAK+lD,eAAe5mD,EAAI,EAC5B,IAAIgI,EAAI0hC,EACPA,EAAO1hC,CACR,IAAIA,EAAI6hC,EACPA,EAAO7hC,CACR,IAAIC,EAAI0hC,EACPA,EAAO1hC,CACR,IAAIA,EAAI6hC,EACPA,EAAO7hC,CACR,IAAIC,EAAIrH,KAAKonD,OACZpnD,KAAKonD,OAAS//C,CACflI,IAAK,EAGNa,KAAKqnD,OAAS,CAEd,IAAIx+C,GAAWmgC,EAAOH,CACtB,IAAImd,GAAW/c,EAAOH,CACtB,IAAI7oC,GAAW,GAAGD,KAAKonD,OAASpnD,KAAKqnD,OAErC,IAAIxe,EAAO,EACVA,GAAQ7oC,KAAKimD,MAEd,IAAInd,EAAO,EACVA,GAAQ9oC,KAAKimD,MAEdpd,GAAOlgC,KAAKwb,MAAM0kB,EAAK7oC,KAAKimD,QAAQjmD,KAAKimD,MACzCnd,GAAOngC,KAAKwb,MAAM2kB,EAAK9oC,KAAKimD,QAAQjmD,KAAKimD,MAEzC,IAAIC,GAAe,EAAElmD,KAAKimD,MAC1Bp9C,GAAIF,KAAKwb,MAAMtb,EAAEq9C,EAAQ,GAAGA,CAC5BF,GAAIr9C,KAAKwb,MAAM6hC,EAAEE,EAAQ,GAAGA,CAE5Bld,GAAOH,EAAOhgC,CACdogC,GAAOH,EAAOkd,CAEdn9C,GAAI,EAAEA,CACNm9C,GAAI,EAAEA,CAENlyC,GAAI,GAAK,EAAEjL,CACXiL,GAAI,GAAK,EAAEkyC,CACXlyC,GAAI,IAAM7T,CACV6T,GAAI,MAAQk1B,EAAOH,GAAMhgC,CACzBiL,GAAI,MAAQm1B,EAAOH,GAAMkd,CACzBlyC,GAAI,KAAO9T,KAAKqnD,OAAOpnD,CACvB6T,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFiI,GAAO1H,gBAAgBP,GAEzB,OAAAyzB,IArLsC+e,EAuLtC1mD,GAAiCJ,QAAxB+nC,I7EilbN7tB,gCAAgCrY,UAAU+kD,mDAAmD/kD,UAAUu9B,qCAAqC,qCAAqCsoB,8DAA8D,gEAAgEa,0EAA0E,SAASrpD,EAAQkB,EAAOJ,GACpZ,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8EzxbtB,IAAOknC,GAAuB7oC,EAAY,qEAE1C,IAAMspD,GAA2B,SAAArnD,GAASZ,EAApCioD,EAA2BrnD,EAIhC,SAJKqnD,GAIOC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,GAEXtnD,EAAAlB,KAAAO,KAEAA,MAAKioD,cAAgBA,EAMtBrnD,OAAAC,eAAWmnD,EAAAznD,UAAA,iB9EuxbJO,I8EvxbP,WAEC,MAAOd,MAAKkoD,gB9EwxbN3kD,I8ErxbP,SAAyBC,GAExB,GAAIA,EAAQ,EACXA,EAAQ,MAAQ,IAAIA,EAAQ,EAC5BA,EAAQ,CAETxD,MAAKkoD,eAAiB1kD,G9EsxbhBxC,WAAY,KACZC,aAAc,M8Epxbd+mD,GAAAznD,UAAAikD,uBAAP,SAA8BC,GAE7B,GAAIqD,GAAwBrD,EAAWhoB,WAAWsoB,cAElD,KAAK,GAAI5lD,GAAmB,EAAGA,EAAI,KAAMA,EAAG,CAC3C,GAAI4+B,GAAW+pB,EAAQ3oD,EACvBa,MAAK+lD,eAAe5mD,GAAK4+B,CACzB/9B,MAAK+lD,eAAe5mD,EAAI,IAAM4+B,GAAK+pB,EAAQ3oD,EAAI,IAAM4+B,GAAG/9B,KAAKkoD,eAG9DloD,KAAK8kD,oCAAoCL,EAAYzkD,KAAK+lD,eAAgB/lD,KAAKglD,SAC/EhlD,MAAKilD,yBAAyBlpC,OAAS/b,KAAKglD,SAE9C,OAAAgD,IAzC0CzgB,EA2C1C3nC,GAAqCJ,QAA5BwoD,I9EsxbN7e,qEAAqE,uEAAuE+d,+DAA+D,SAASxoD,EAAQkB,EAAOJ,G+Ep0btO,GAAOoL,GAAmBlM,EAAa,6CAMvC,IAAOypD,GAAqBzpD,EAAY,oDAExC,IAAO0pD,GAAa1pD,EAAc,yCAGlC,IAAM4nD,GAAgB,WAYrB,QAZKA,KAMEtmD,KAAAukD,eAAwB,IAGvBvkD,MAAAqoD,mBAA6B,IAKpCroD,MAAKikD,kBAAoBjkD,KAAKsoD,yBAGxBhC,EAAA/lD,UAAA+nD,uBAAP,WAEC,MAAO,IAAIH,GAGZvnD,QAAAC,eAAWylD,EAAA/lD,UAAA,qB/EizbJO,I+EjzbP,WAEC,MAAOd,MAAKqoD,oB/EkzbN9kD,I+E/ybP,SAA6BC,GAE5BxD,KAAKqoD,mBAAqB7kD,G/EgzbpBxC,WAAY,KACZC,aAAc,M+E9ybdqlD,GAAA/lD,UAAAgoD,cAAP,WAECvoD,KAAKwoD,iBAAmB,KAGlBlC,GAAA/lD,UAAAkoD,aAAP,SAAoBC,GAEnB,GAAI1oD,KAAK2oD,WAAaD,EACrB,MAED,IAAI1oD,KAAK2oD,YAAc3oD,KAAK4oD,kBAC3B5oD,KAAK2oD,UAAUznD,SAEhBlB,MAAK2oD,UAAYD,CAEjB,IAAI1oD,KAAK2oD,UAAW,CACnB3oD,KAAK4oD,kBAAoB,IACzB5oD,MAAKukD,eAAiBvkD,KAAK2oD,UAAUjX,SAC/B,CACN1xC,KAAK4oD,kBAAoB,OAI3BhoD,QAAAC,eAAWylD,EAAA/lD,UAAA,S/E2ybJO,I+E3ybP,WAEC,MAAOd,MAAK+mD,S/E4ybNxjD,I+EzybP,SAAiBC,GAEhBxD,KAAK+mD,QAAUvjD,G/E0ybTxC,WAAY,KACZC,aAAc,M+ExybrBL,QAAAC,eAAWylD,EAAA/lD,UAAA,Y/E2ybJO,I+E3ybP,WAEC,IAAKd,KAAK2oD,UACT3oD,KAAK2oD,UAAY3oD,KAAK6mD,qBAEvB,OAAO7mD,MAAK2oD,W/E2ybN3nD,WAAY,KACZC,aAAc,M+EzybrBL,QAAAC,eAAWylD,EAAA/lD,UAAA,gB/E4ybJO,I+E5ybP,WAEC,MAAOd,MAAKukD,gB/E6ybNhhD,I+E1ybP,SAAwBC,GAEvB,GAAIA,GAASxD,KAAKukD,eACjB,MAEDvkD,MAAK6jD,kBAAkBrgD,I/E0ybjBxC,WAAY,KACZC,aAAc,M+ExybdqlD,GAAA/lD,UAAAW,QAAP,WAEClB,KAAKikD,kBAAoB,IAEzB,IAAIjkD,KAAK2oD,YAAc3oD,KAAK4oD,kBAC3B5oD,KAAK2oD,UAAUznD,SAEhBlB,MAAK2oD,UAAY,KAGXrC,GAAA/lD,UAAAsmD,oBAAP,WAEC,MAAO,IAAIuB,GAAcpoD,KAAKukD,eAAgBvkD,KAAKukD,gBAG7C+B,GAAA/lD,UAAAsoD,gBAAP,SAAuBC,EAAiC/uB,GAEvD/5B,KAAKwoD,iBAAmB,KAExBxoD,MAAKwkD,uBAAuBsE,EAAgB1zC,OAE5C,KAAKpV,KAAK2oD,UACT3oD,KAAK2oD,UAAY3oD,KAAK6mD,qBAEvB7mD,MAAK+jD,cAAc/jD,KAAK2oD,UAAWG,EAAgB7xC,MAAO8iB,GAGpDusB,GAAA/lD,UAAAikD,uBAAP,SAA8BC,GAE7B,KAAM,IAAI75C,GAGJ07C,GAAA/lD,UAAAwjD,cAAP,SAAqBtwC,EAAyBwD,EAAa8iB,GAE1D,KAAM,IAAInvB,GAGJ07C,GAAA/lD,UAAAsjD,kBAAP,SAAyBrgD,GAExBxD,KAAKukD,eAAiB/gD,CAEtB,IAAIxD,KAAK4oD,kBAAmB,CAC3B,KAAMvpD,OAAM,2DACN,IAAIW,KAAK2oD,UAAW,CAC1B3oD,KAAK2oD,UAAUznD,SACflB,MAAK2oD,UAAY,MAGpB,OAAArC,KAEA1mD,GAA0BJ,QAAjB8mD,I/E6xbN/sC,6CAA6ClY,UAAU0nD,yCAAyC1nD,UAAU2nD,oDAAoD,sDAAsDC,2CAA2C,SAASvqD,EAAQkB,EAAOJ,GAC1R,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgFr7btB,IAAO6oD,GAAUxqD,EAAe,0ChF27bhC,IgFl7bMyqD,GAAU,SAAAxoD,GAASZ,EAAnBopD,EAAUxoD,EAIf,SAJKwoD,GAIOC,EAAqBh0C,EAAgB4B,GAEhDrW,EAAAlB,KAAAO,KAAMopD,EAAMh0C,EAAQ4B,GAMdmyC,EAAA5oD,UAAA8oD,gBAAP,SAAuBnwB,IAVTiwB,GAAA/V,GAAY,YAc3B,OAAA+V,IAhByBD,EAkBzBtpD,GAAoBJ,QAAX2pD,IhFi7bNG,0CAA0C,4CAA4CC,qDAAqD,SAAS7qD,EAAQkB,EAAOJ,GACtK,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiFj9btB,IAAO6oD,GAAUxqD,EAAe,0CjFu9bhC,IiF98bM8qD,GAAoB,SAAA7oD,GAASZ,EAA7BypD,EAAoB7oD,EAUzB,SAVK6oD,GAUOJ,EAAqBK,EAA0BzyC,GAE1DrW,EAAAlB,KAAAO,KAAMopD,EAAMK,EAAkBzyC,EAE9BhX,MAAK0pD,kBAAoBD,EAMnBD,EAAAjpD,UAAA8oD,gBAAP,SAAuBnwB,GAEtB,GAAIA,EAAUywB,UAAU3pD,MACvBk5B,EAAU0wB,sBAAsB5pD,KAAK0pD,mBAOhCF,GAAAjpD,UAAAspD,gBAAP,WAEC,MAAO,OA9BML,GAAApW,GAAY,sBAgC3B,OAAAoW,IAlCmCN,EAoCLtpD,GAAAJ,QAArBgqD,IjFw8bNF,0CAA0C,4CAA4CA,2CAA2C,SAAS5qD,EAAQkB,EAAOJ,GAC5J,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkFz/btB,IAAO4B,GAAQvD,EAAgB,gCAE/B,IAAO0vB,GAAsB1vB,EAAY,mDACzC,IAAOozB,GAAcpzB,EAAc,2CAEnC,IAAO+zB,GAAU/zB,EAAe,uCAChC,IAAOo0B,GAAUp0B,EAAe,uCAEhC,IAAO+5B,GAAQ/5B,EAAgB,wClF4/b/B,IkFl/bMwqD,GAAU,SAAAvoD,GAASZ,EAAnBmpD,EAAUvoD,EAUf,SAVKuoD,GAUOE,EAAqBlnC,EAAgBlL,GAEhDrW,EAAAlB,KAAAO,KACAA,MAAK8pD,MAAQV,CACbppD,MAAK+pD,QAAU7nC,CACfliB,MAAK+4B,WAAa/hB,CAClBhX,MAAKgqD,cAAgB,CAErBhqD,MAAKqO,cAELrO,MAAK6Q,aAAe7Q,KAAK+pD,QAAQl5C,aAGlCjQ,OAAAC,eAAWqoD,EAAA3oD,UAAA,UlFu+bJO,IkFv+bP,WAEC,MAAOd,MAAK+pD,SlFw+bN/oD,WAAY,KACZC,aAAc,MkFt+bdioD,GAAA3oD,UAAA0pD,iBAAP,WAEC,GAAIjqD,KAAKkqD,SACRlqD,KAAKkqD,SAASC,YAAYnqD,KAE3BA,MAAKkqD,SAAW,KAOVhB,GAAA3oD,UAAAspD,gBAAP,WAEC,MAAO7pD,MAAKkiB,OAAOtU,aASbs7C,GAAA3oD,UAAAquB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAK9uB,KAAK+pD,QAAQh5C,cACjB,MAAO,MAER,OAAO/Q,MAAKsS,QAAQsc,YAAYC,EAAQC,GAMlCo6B,GAAA3oD,UAAA8oD,gBAAP,SAAuBnwB,GAEtB,GAAIA,EAAUywB,UAAU3pD,MAAO,CAC9Bk5B,EAAUkxB,YAAYpqD,KAAK+pD,QAE3B,IAAI/pD,KAAKqqD,wBAA0BnxB,EAAUoxB,kBAC5CpxB,EAAUkxB,YAAYpqD,KAAKuqD,gBAOvBrB,GAAA3oD,UAAAiqD,kBAAP,SAAyBC,EAAsBC,GAE9C,IAAK1qD,KAAK+pD,QAAQh5C,cACjB,MAAO,MAER,IAAI45C,GAAwC3qD,KAAK+pD,QAAQa,oBACzDD,GAAmBE,iBAAmB7qD,KAAK+pD,QAAQ52C,sBAAsB7L,gBAAgBmjD,EACzFE,GAAmBG,kBAAoB9qD,KAAK+pD,QAAQ52C,sBAAsBsZ,qBAAqBi+B,EAE/F,KAAKC,EAAmBvU,YACvBuU,EAAmBvU,YAAc,GAAIn0C,EAEtC,IAAIy8B,GAA0B1+B,KAAKsS,QAAQid,gBAAgBo7B,EAAmBE,iBAAkBF,EAAmBG,kBAAmBH,EAAmBvU,YAEzJ,IAAI1X,EAAmB,EACtB,MAAO,MAERisB,GAAmBjsB,iBAAmBA,CACtCisB,GAAmBF,YAAcA,CACjCE,GAAmBD,aAAeA,CAClCC,GAAmBI,wBAA0BrsB,GAAoB,CAEjE,OAAO,MAODwqB,GAAA3oD,UAAAyqD,oBAAP,WAEC,MAAOhrD,MAAKsS,QAAQ24C,gBAGd/B,GAAA3oD,UAAAuW,oBAAP,WAEC9W,KAAKsS,QAAQigB,YAEbvyB,MAAK+4B,WAAWmyB,eAAelrD,MAGzBkpD,GAAA3oD,UAAA8N,aAAP,WAEC,GAAIrO,KAAK+pD,QAAQhe,YAActZ,EAAWE,iBACzC3yB,KAAKsS,QAAU,GAAI8b,GAAuBpuB,KAAK+pD,aAC3C,IAAI/pD,KAAK+pD,QAAQhe,YAActZ,EAAWC,OAC9C1yB,KAAKsS,QAAU,GAAIwf,GAAe9xB,KAAK+pD,aACnC,IAAI/pD,KAAK+pD,QAAQhe,YAActZ,EAAWG,KAC9C5yB,KAAKsS,QAAU,GAAIwgB,EAEpB9yB,MAAKmrD,oBA3HQjC,GAAA9V,GAAY,YA6H3B,OAAA8V,IA/HyBzwB,EAiIL74B,GAAAJ,QAAX0pD,IlFk9bN5/C,gCAAgCjI,UAAU2sB,mDAAmD,mDAAmD4D,2CAA2C,2CAA2CY,uCAAuC,uCAAuCK,uCAAuC,uCAAuCwG,wCAAwC,0CAA0C+xB,+CAA+C,SAAS1sD,EAAQkB,EAAOJ,GAC9hB,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmF3mctB,IAAO6oD,GAAUxqD,EAAe,0CnFinchC,ImFxmcM2sD,GAAc,SAAA1qD,GAASZ,EAAvBsrD,EAAc1qD,EAUnB,SAVK0qD,GAUOjC,EAAqBkC,EAAoBt0C,GAEpDrW,EAAAlB,KAAAO,KAAMopD,EAAMkC,EAAYt0C,EAExBhX,MAAKurD,YAAcD,EAMbD,EAAA9qD,UAAA8oD,gBAAP,SAAuBnwB,GAEtB,GAAIA,EAAUywB,UAAU3pD,MACvBk5B,EAAUsyB,gBAAgBxrD,KAAKurD,aAO1BF,GAAA9qD,UAAAspD,gBAAP,WAEC,MAAO,OA9BMwB,GAAAjY,GAAY,gBAgC3B,OAAAiY,IAlC6BnC,EAoC7BtpD,GAAwBJ,QAAf6rD,InFkmcN/B,0CAA0C,4CAA4CjwB,yCAAyC,SAAS36B,EAAQkB,EAAOJ,GoF7oc1J,GAAOoL,GAAmBlM,EAAa,6CpFkpcvC,IoF1ocM+5B,GAAQ,WAqEb,QArEKA,KAOEz4B,KAAAyrD,gBAAyB,CAIzBzrD,MAAAgqD,cAAuB,CA4D7BhqD,MAAK0rD,aAAe,GAAIpnD,OAtDzB1D,OAAAC,eAAW43B,EAAAl4B,UAAA,gBpFsocJO,IoFtocP,WAEC,MAAOd,MAAK2rD,uBpFuocNpoD,IoFpocP,SAAwBC,GAEvB,GAAIxD,KAAK2rD,uBAAyBnoD,EACjC,MAEDxD,MAAK2rD,sBAAwBnoD,CAE7BxD,MAAK4rD,6BAA6B5rD,KAAKkqD,SAAUlqD,KAAKkqD,SAAS2B,qBAAuB,QpFmochF7qD,WAAY,KACZC,aAAc,MoFhocrBL,QAAAC,eAAW43B,EAAAl4B,UAAA,wBpFmocJO,IoFnocP,WAEC,MAAOd,MAAK8rD,uBpFoocNvoD,IoFjocP,SAAgCC,GAE/B,GAAIxD,KAAK8rD,uBAAyBtoD,EACjC,MAEDxD,MAAK8rD,sBAAwBtoD,CAE7B,KAAK,GAAIrE,GAAW,EAAGA,EAAIa,KAAKyrD,kBAAmBtsD,EAClDa,KAAK0rD,aAAavsD,GAAGysD,6BAA6B5rD,KAAK8rD,wBpFgoclD9qD,WAAY,KACZC,aAAc,MoF3ncrBL,QAAAC,eAAW43B,EAAAl4B,UAAA,UpFiocJO,IoFjocP,WAEC,MAAOd,MAAKkqD,UpFkocNlpD,WAAY,KACZC,aAAc,MoF5ncrBL,QAAAC,eAAW43B,EAAAl4B,UAAA,iBpFmocJO,IoFnocP,WAEC,MAAOd,MAAKgqD,epFoocNhpD,WAAY,KACZC,aAAc,MoFnncdw3B,GAAAl4B,UAAAquB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MASD2J,GAAAl4B,UAAAiqD,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAODjyB,GAAAl4B,UAAAspD,gBAAP,WAEC,MAAO,MAQDpxB,GAAAl4B,UAAAwrD,uBAAP,SAA8B7pC,GAE7B,MAAOliB,MAODy4B,GAAAl4B,UAAA8oD,gBAAP,SAAuBnwB,GAEtB,GAAIl5B,KAAKgsD,eAAiB,IAAMhsD,KAAKqqD,uBACpC,MAED,IAAInxB,EAAUywB,UAAU3pD,MAAO,CAC9B,GAAIb,GAAW,CAEf,OAAOA,EAAIa,KAAKyrD,gBACfzrD,KAAK0rD,aAAavsD,KAAKkqD,gBAAgBnwB,EAExC,IAAIl5B,KAAKqqD,wBAA0BnxB,EAAUoxB,kBAC5CpxB,EAAUkxB,YAAYpqD,KAAKuqD,gBAQvB9xB,GAAAl4B,UAAA0rD,iBAAP,SAAwB/yB,GAEvB,GAAIl5B,KAAKuqD,eAAiB,KACzBvqD,KAAKuqD,cAAgBvqD,KAAKgrD,qBAE3B9xB,GAAUkxB,YAAYpqD,KAAKuqD,eAQrB9xB,GAAAl4B,UAAA2rD,SAAP,SAAgB3O,GAEfA,EAAK2M,SAAWlqD,IAChBA,MAAKgqD,eAAiBzM,EAAKyO,aAC3BhsD,MAAK0rD,aAAc1rD,KAAKyrD,mBAAsBlO,CAE9CA,GAAKqO,6BAA6B5rD,KAAK6rD,qBAEvC,IAAIM,GAAqB5O,EAAKyO,aAC9BzO,GAAOv9C,IAEP,GAAG,CACFu9C,EAAKyM,eAAiBmC,SACb5O,EAAOA,EAAK2M,WAAa,MAQ7BzxB,GAAAl4B,UAAA4pD,YAAP,SAAmB5M,GAElB,GAAIr4C,GAAelF,KAAK0rD,aAAazzC,QAAQslC,EAC7Cv9C,MAAK0rD,aAAaxmD,GAASlF,KAAK0rD,eAAe1rD,KAAKyrD,gBACpDzrD,MAAK0rD,aAAaU,KAElB7O,GAAKqO,6BAA6B,MAElC,IAAIO,GAAqB5O,EAAKyO,aAC9BzO,GAAOv9C,IAEP,GAAG,CACFu9C,EAAKyO,eAAiBG,SACb5O,EAAOA,EAAK2M,WAAa,MAG5BzxB,GAAAl4B,UAAAqrD,6BAAR,SAAqCpoD,GAEpC,GAAIxD,KAAKqqD,wBAA0BrqD,KAAK2rD,uBAAyBnoD,EAChE,MAEDxD,MAAKqqD,uBAAyBrqD,KAAK2rD,uBAAyBnoD,CAE5D,KAAK,GAAIrE,GAAW,EAAGA,EAAIa,KAAKyrD,kBAAmBtsD,EAClDa,KAAK0rD,aAAavsD,GAAGysD,6BAA6B5rD,KAAK8rD,sBAExD,IAAI9rD,KAAKqqD,uBAAwB,CAChCrqD,KAAKuqD,cAAgBvqD,KAAKgrD,0BACpB,CAENhrD,KAAKuqD,cAAgB,MAKhB9xB,GAAAl4B,UAAA4qD,kBAAP,WAEC,GAAInrD,KAAKqqD,uBAAwB,CAEhCrqD,KAAKuqD,cAAgBvqD,KAAKgrD,uBAIrBvyB,GAAAl4B,UAAAyqD,oBAAP,WAEC,KAAM,IAAIpgD,GAEZ,OAAA6tB,KAEA74B,GAAkBJ,QAATi5B,IpF6lcNlf,6CAA6ClY,YAAYgrD,yCAAyC,SAAS3tD,EAAQkB,EAAOJ,GAI7H,GqFv0cM8sD,GAAQ,WAEb,QAFKA,MAKN,MAAAA,KAEA1sD,GAAkBJ,QAAT8sD,OrFw0cHhzB,0CAA0C,SAAS56B,EAAQkB,EAAOJ,GsF50cxE,GAAO2pD,GAAUzqD,EAAe,0CAChC,IAAO8qD,GAAoB9qD,EAAa,oDACxC,IAAOwqD,GAAUxqD,EAAe,0CAChC,IAAO2sD,GAAc3sD,EAAc,8CACnC,IAAO6tD,GAAc7tD,EAAc,8CACnC,IAAO8tD,GAAU9tD,EAAe,0CAEhC,IAAO4tD,GAAQ5tD,EAAgB,wCAC/B,IAAO+tD,GAAc/tD,EAAc,yCtFg1cnC,IsF10cMg6B,GAAS,WAad,QAbKA,GAaOg0B,GAHJ1sD,KAAA2sD,aAAuB,KAK9B3sD,MAAK4sD,UAAYF,GAAuB,GAAIJ,EAE5CtsD,MAAK6sD,gBAAkB,GAAIJ,GAAetD,EAAYnpD,KACtDA,MAAK8sD,0BAA4B,GAAIL,GAAejD,EAAsBxpD,KAC1EA,MAAK+sD,gBAAkB,GAAIN,GAAevD,EAAYlpD,KACtDA,MAAKgtD,oBAAsB,GAAIP,GAAepB,EAAgBrrD,KAC9DA,MAAKitD,oBAAsB,GAAIR,GAAeF,EAAgBvsD,KAC9DA,MAAKktD,gBAAkB,GAAIT,GAAeD,EAAYxsD,MAGvDY,OAAAC,eAAW63B,EAAAn4B,UAAA,YtF6zcJO,IsF7zcP,WAEC,MAAOd,MAAK4sD,WtF8zcN5rD,WAAY,KACZC,aAAc,MsF5zcdy3B,GAAAn4B,UAAA44B,SAAP,SAAgBD,GAEf,GAAIl5B,KAAK2sD,aACR3sD,KAAKmtD,gBAENntD,MAAK4sD,UAAUvD,gBAAgBnwB,GAGzBR,GAAAn4B,UAAA2qD,eAAP,SAAsB3N,GAErB,GAAI3+C,GAAeoB,KAAKotD,YAExB,OAAOxuD,EAAG,CACT,GAAI2+C,GAAQ3+C,EACX,MAEDA,GAAIA,EAAEyuD,kBAGP9P,EAAK8P,kBAAoBrtD,KAAKotD,YAE9BptD,MAAKotD,aAAe7P,CACpBv9C,MAAK2sD,aAAe,KAGdj0B,GAAAn4B,UAAA+sD,cAAP,SAAqB/P,GAEpB,GAAI3+C,EAEJ2+C,GAAK0M,kBAEL,IAAI1M,GAAQv9C,KAAKotD,aAAc,CAC9BptD,KAAKotD,aAAe7P,EAAK8P,sBACnB,CACNzuD,EAAIoB,KAAKotD,YACT,OAAOxuD,GAAKA,EAAEyuD,mBAAqB9P,EAClC3+C,EAAIA,EAAEyuD,iBAEP,IAAIzuD,EACHA,EAAEyuD,kBAAoB9P,EAAK8P,kBAG7B9P,EAAK8P,kBAAoB,IAEzB,KAAKrtD,KAAKotD,aACTptD,KAAK2sD,aAAe,MAGdj0B,GAAAn4B,UAAA4sD,eAAR,WAEC,GAAI5P,GAAkBv9C,KAAKotD,YAC3B,IAAIG,EACJ,IAAI3uD,EACJoB,MAAKotD,aAAe,IACpBptD,MAAK2sD,aAAe,KAEpB,GAAG,CACFY,EAAavtD,KAAK4sD,UAAUb,uBAAuBxO,EAAKr7B,OAExD,IAAIq7B,EAAKtrC,QAAUs7C,EAAY,CAC9B,GAAIhQ,EACHA,EAAK0M,kBAENsD,GAAWrB,SAAS3O,GAGrB3+C,EAAI2+C,EAAK8P,iBACT9P,GAAK8P,kBAAoB,IAGzB9P,GAAKr7B,OAAO5J,0BAEHilC,EAAO3+C,IAAM,MAOjB85B,GAAAn4B,UAAAk7B,iBAAP,SAAwBrmB,GAEvBpV,KAAKkrD,eAAelrD,KAAK6sD,gBAAgBW,QAAQp4C,IAM3CsjB,GAAAn4B,UAAAooC,2BAAP,SAAkC8gB,GAEjCzpD,KAAKkrD,eAAelrD,KAAK8sD,0BAA0BU,QAAQ/D,IAMrD/wB,GAAAn4B,UAAAskC,iBAAP,SAAwB3iB,GAEvBliB,KAAKkrD,eAAelrD,KAAK+sD,gBAAgBS,QAAQtrC,IAM3CwW,GAAAn4B,UAAAopC,qBAAP,SAA4B2hB,GAE3BtrD,KAAKkrD,eAAelrD,KAAKgtD,oBAAoBQ,QAAQlC,IAM/C5yB,GAAAn4B,UAAA4tC,qBAAP,SAA4Bsf,GAE3BztD,KAAKkrD,eAAelrD,KAAKitD,oBAAoBO,QAAQC,IAM/C/0B,GAAAn4B,UAAA2vC,iBAAP,SAAwBwd,GAEvB1tD,KAAKkrD,eAAelrD,KAAKktD,gBAAgBM,QAAQE,IAM3Ch1B,GAAAn4B,UAAA2mC,mBAAP,SAA0B9xB,GAEzBpV,KAAKstD,cAActtD,KAAK6sD,gBAAgBc,YAAYv4C,IAM9CsjB,GAAAn4B,UAAAqoC,6BAAP,SAAoC6gB,GAEnCzpD,KAAKstD,cAActtD,KAAK8sD,0BAA0Ba,YAAYlE,IAMxD/wB,GAAAn4B,UAAAukC,mBAAP,SAA0B5iB,GAEzBliB,KAAKstD,cAActtD,KAAK+sD,gBAAgBY,YAAYzrC,IAM9CwW,GAAAn4B,UAAAqpC,uBAAP,SAA8B0hB,GAE7BtrD,KAAKstD,cAActtD,KAAKgtD,oBAAoBW,YAAYrC,IAMlD5yB,GAAAn4B,UAAA6tC,uBAAP,SAA8Bqf,GAE7BztD,KAAKstD,cAActtD,KAAKitD,oBAAoBU,YAAYF;CAMlD/0B,GAAAn4B,UAAA4vC,mBAAP,SAA0Bud,GAEzB1tD,KAAKstD,cAActtD,KAAKktD,gBAAgBS,YAAYD,IAEtD,OAAAh1B,KAEA94B,GAAmBJ,QAAVk5B,ItFkxcNuwB,0CAA0C,0CAA0CM,oDAAoD,oDAAoDD,0CAA0C,0CAA0C8B,8CAA8C,8CAA8CiB,wCAAwC,wCAAwCuB,8CAA8C,8CAA8CC,0CAA0C,0CAA0CC,yCAAyC,2CAA2CF,+CAA+C,SAASlvD,EAAQkB,EAAOJ,GAC1wB,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuFr/ctB,IAAO6oD,GAAUxqD,EAAe,0CvF2/chC,IuFl/cM6tD,GAAc,SAAA5rD,GAASZ,EAAvBwsD,EAAc5rD,EAUnB,SAVK4rD,GAUOnD,EAAqBqE,EAAoBz2C,GAEpDrW,EAAAlB,KAAAO,KAAMopD,EAAMqE,EAAYz2C,EAExBhX,MAAK+tD,YAAcN,EAMblB,EAAAhsD,UAAA8oD,gBAAP,SAAuBnwB,GAEtB,GAAIA,EAAUywB,UAAU3pD,MACvBk5B,EAAU80B,gBAAgBhuD,KAAK+tD,aAO1BxB,GAAAhsD,UAAAspD,gBAAP,WAEC,MAAO,OA9BM0C,GAAAnZ,GAAY,gBAgC3B,OAAAmZ,IAlC6BrD,EAoC7BtpD,GAAwBJ,QAAf+sD,IvF4+cNjD,0CAA0C,4CAA4CuE,2CAA2C,SAASnvD,EAAQkB,EAAOJ,GAC5J,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwF5hdtB,IAAO6oD,GAAUxqD,EAAe,0CxFoidhC,IwFzhdM8tD,GAAU,SAAA7rD,GAASZ,EAAnBysD,EAAU7rD,EAUf,SAVK6rD,GAUOpD,EAAqB6E,EAAgBj3C,GAEhDrW,EAAAlB,KAAAO,KAAMopD,EAAM6E,EAAQj3C,EAEpBhX,MAAKkuD,QAAUD,EAMTzB,EAAAjsD,UAAA8oD,gBAAP,SAAuBnwB,GAEtB,GAAIA,EAAUywB,UAAqB3pD,MAClCk5B,EAAUi1B,YAAYnuD,KAAKkuD,SAStB1B,GAAAjsD,UAAAquB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAK9uB,KAAKkuD,QAAQn9C,YACjB,MAAO,MAGR,OAAO,MApCMy7C,GAAApZ,GAAY,YAsC3B,OAAAoZ,IAxCyBtD,EA0CzBtpD,GAAoBJ,QAAXgtD,IxFkhdNlD,0CAA0C,4CAA4C8E,mCAAmC,SAAS1vD,EAAQkB,EAAOJ,SAI9I6uD,4CAA4C,SAAS3vD,EAAQkB,EAAOJ,SAIpE0a,8CAA8C,SAASxb,EAAQkB,EAAOJ,GAS5E,GyF7kdMuL,GAAkB,WA0EvB,QA1EKA,GA0EO4c,GAEX3nB,KAAK2nB,cAAgBA,EAGvB,MAAA5c,KAE4BnL,GAAAJ,QAAnBuL,OzF0gdHi0B,yCAAyC,SAAStgC,EAAQkB,EAAOJ,G0FzmdvE,GAAOyC,GAAQvD,EAAgB,gCAQ/B,IAAO4vD,GAAgB5vD,EAAc,+C1F2mdrC,I0FjmdM+6B,GAAa,WA8BlB,QA9BKA,GA8BO80B,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MA1BJvuD,KAAAwuD,mBACAxuD,MAAAyuD,kBAA4B,IAG5BzuD,MAAA0uD,aAAsB,CAwB7B1uD,MAAK2uD,kBAAoB,GAAIL,EAE7BtuD,MAAK4uD,sBAAwBL,CAC7BvuD,MAAK6uD,UAAY,GAAIvqD,OArBtB1D,OAAAC,eAAW44B,EAAAl5B,UAAA,oB1FumdJO,I0FvmdP,WAEC,MAAOd,MAAKyuD,mB1FwmdNlrD,I0FrmdP,SAA4BC,GAE3BxD,KAAKyuD,kBAAoBjrD,G1FsmdnBxC,WAAY,KACZC,aAAc,M0Fnlddw4B,GAAAl5B,UAAAk9B,iBAAP,SAAwBt2B,EAAUC,EAAU4uC,G1F0ldrC,G0FvldFyU,GAAuBzU,EAAK9X,UAAU/2B,EAAGC,EAAG,EAChD,IAAIsjD,GAAwB1U,EAAK9X,UAAU/2B,EAAGC,EAAG,GAAG6M,SAASw2C,EAE7D,OAAOzqD,MAAK8uD,kBAAkBrE,EAAaC,EAAc1U,EAAK/+B,OAMxDwiB,GAAAl5B,UAAAuuD,kBAAP,SAAyBrE,EAAsBC,EAAuBzzC,GAGrEjX,KAAK2uD,kBAAkB/xC,OAGvB5c,MAAK2uD,kBAAkBlE,YAAcA,CACrCzqD,MAAK2uD,kBAAkBjE,aAAeA,CAGtCzzC,GAAMgiB,mBAAmBj5B,KAAK2uD,kBAE9B3uD,MAAK0uD,aAAe,CACpB,IAAInR,GAAsBv9C,KAAK2uD,kBAAkBI,UACjD,IAAI7sC,EAEJ,OAAOq7B,EAAM,CACZ,IAAKv9C,KAAKgvD,UAAU9sC,EAASq7B,EAAKr7B,QACjCliB,KAAK6uD,UAAU7uD,KAAK0uD,gBAAkBxsC,CAEvCq7B,GAAOA,EAAK0R,KAIb,IAAKjvD,KAAK0uD,aACT,MAAO,KAER,OAAO1uD,MAAKkvD,sBAAsBlvD,KAAK2uD,mBAoBjCl1B,GAAAl5B,UAAA4uD,cAAP,SAAqBC,GAEpBpvD,KAAKwuD,iBAAmBY,EAGjB31B,GAAAl5B,UAAAyuD,UAAR,SAAkB9sC,GAEjB,GAAIliB,KAAKyuD,oBAAsBvsC,EAAOzJ,mBACrC,MAAO,KAER,IAAItU,GAAanE,KAAKwuD,iBAAiB9uD,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IAC/B,GAAIa,KAAKwuD,iBAAiBrvD,IAAM+iB,EAC/B,MAAO,KAET,OAAO,OAGAuX,GAAAl5B,UAAA8uD,YAAR,SAAoBC,EAAiBC,GAEpC,MAAOD,GAAQ1E,qBAAqBlsB,iBAAmB6wB,EAAQ3E,qBAAqBlsB,iBAAkB,GAAK,EAGpGjF,GAAAl5B,UAAA2uD,sBAAR,SAA8BM,GAG7BxvD,KAAK6uD,UAAUnvD,OAASM,KAAK0uD,YAG7B1uD,MAAK6uD,UAAY7uD,KAAK6uD,UAAUY,KAAKzvD,KAAKqvD,Y1FskdpC,I0F/jdFj3C,GAAmCukC,OAAO+S,SAC9C,IAAIC,EACJ,IAAIhF,EACJ,IAAIzoC,EACJ,IAAI/iB,EAEJ,KAAKA,EAAI,EAAGA,EAAIa,KAAK0uD,eAAgBvvD,EAAG,CACvC+iB,EAASliB,KAAK6uD,UAAU1vD,EACxBwrD,GAAqBzoC,EAAO0oC,oBAC5B,IAAI1oC,EAAO0tC,gBAAiB,CAE3B,IAAKD,GAAmB,MAAQhF,EAAmBjsB,iBAAmBixB,EAAgBjxB,mBAAqBxc,EAAO/J,gBAAgBC,EAA2BpY,KAAK4uD,uBAAwB,CACzLx2C,EAA4BuyC,EAAmBjsB,gBAC/CixB,GAAkBhF,CAClB,KAAK3qD,KAAK4uD,sBAAuB,CAChC5uD,KAAK6vD,oBAAoBlF,EACzB,OAAOA,SAGH,IAAIgF,GAAmB,MAAQhF,EAAmBjsB,iBAAmBixB,EAAgBjxB,iBAAkB,CAK7G,IAAKisB,EAAmBI,wBAAyB,CAChD/qD,KAAK6vD,oBAAoBlF,EACzB,OAAOA,KAKV,MAAOgF,GAGAl2B,GAAAl5B,UAAAsvD,oBAAR,SAA4BlF,GAE3B,GAAImF,GAA0BnF,EAAmBxU,eAAiB,KAASwU,EAAmBxU,cAAgB,GAAIl0C,GAAc0oD,EAAmBxU,aAEnJ,IAAI4Z,GAAkBpF,EAAmBG,iBACzC,IAAIkF,GAAkBrF,EAAmBE,gBACzC,IAAIjsD,GAAW+rD,EAAmBjsB,gBAClCoxB,GAAa3oD,EAAI6oD,EAAO7oD,EAAIvI,EAAEmxD,EAAO5oD,CACrC2oD,GAAa1oD,EAAI4oD,EAAO5oD,EAAIxI,EAAEmxD,EAAO3oD,CACrC0oD,GAAazoD,EAAI2oD,EAAO3oD,EAAIzI,EAAEmxD,EAAO1oD,EAG/BoyB,GAAAl5B,UAAAW,QAAP,YAID,OAAAu4B,KAEuB75B,GAAAJ,QAAdi6B,I1F4jdNnwB,gCAAgCjI,UAAU4uD,+CAA+C,iDAAiDC,kDAAkD,SAASxxD,EAAQkB,EAAOJ,GACvN,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2F/wdtB,IAAO8vD,GAAiBzxD,EAAa,4C3FqxdrC,I2F9wdM0xD,GAAsB,SAAAzvD,GAASZ,EAA/BqwD,EAAsBzvD,EAI3B,SAJKyvD,GAIOhH,EAAsBiH,GAEjC1vD,EAAAlB,KAAAO,KAAMopD,EAAMiH,EAAWA,EAEvB,IAAIC,GAAsCv1B,SAASK,cAAc,MACjEk1B,GAAIC,YAAc,SAACx6B,GAAqB,MAAA,OAExC/1B,MAAKy7C,YAAc6U,CAEnB,IAAIr1B,GAA6Bq1B,EAAIr1B,KAErCA,GAAM/nB,SAAW,UACjB+nB,GAAM+iB,gBACH/iB,EAAM,4BACNA,EAAM,yBACNA,EAAM,uBACNA,EAAM,wBAA0B,OAEnC,IAAIu1B,GAAsCz1B,SAASK,cAAc,MAEjEk1B,GAAIj1B,YAAYm1B,EAEhBA,GAAIC,UAAY,WAAaJ,EAAUxmD,SAASupC,GAxBnCgd,EAAAhd,GAAY,WA0B3B,OAAAgd,IA5BqCD,EA8BLvwD,GAAAJ,QAAvB4wD,I3FowdNM,4CAA4C,8CAA8CC,oDAAoD,SAASjyD,EAAQkB,EAAOJ,GACzK,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4F9ydtB,IAAO8vD,GAAiBzxD,EAAa,4C5FozdrC,I4F7ydMkyD,GAAwB,SAAAjwD,GAASZ,EAAjC6wD,EAAwBjwD,EAI7B,SAJKiwD,GAIOxH,EAAsByH,GAEjClwD,EAAAlB,KAAAO,KAAMopD,EAAMyH,EAAaA,EAEzB,IAAIP,GAAsCv1B,SAASK,cAAc,MACjEk1B,GAAIC,YAAc,SAACx6B,GAAqB,MAAA,OAExC/1B,MAAKy7C,YAAc6U,CAEnB,IAAIr1B,GAA6Bq1B,EAAIr1B,KAErCA,GAAM/nB,SAAW,UACjB+nB,GAAM+iB,gBACH/iB,EAAM,4BACNA,EAAM,yBACNA,EAAM,uBACNA,EAAM,wBAA0B,OAEnC,IAAIu1B,GAAsCz1B,SAASK,cAAc,MAEjEk1B,GAAIj1B,YAAYm1B,EAEhBA,GAAIC,UAAY,WAAaI,EAAYhnD,SAASupC,GAxBrCwd,EAAAxd,GAAY,aA0B3B,OAAAwd,IA5BuCT,EA8BLvwD,GAAAJ,QAAzBoxD,I5FmydNF,4CAA4C,8CAA8CA,6CAA6C,SAAShyD,EAAQkB,EAAOJ,GAIlK,G6Fl0dM2wD,GAAiB,WA+DtB,QA/DKA,GA+DO/G,EAAsB9H,EAAsBrL,GAGvDj2C,KAAK8pD,MAAQV,CAEbppD,MAAKshD,aAAeA,CAEpBthD,MAAKi2C,gBAAkBA,EAMjBka,EAAA5vD,UAAAW,QAAP,WAEClB,KAAK8pD,MAAM6D,YAAY3tD,KAAKi2C,iBAMtBka,GAAA5vD,UAAAknB,mBAAP,YAQO0oC,GAAA5vD,UAAAuwD,oBAAP,YAQOX,GAAA5vD,UAAAwwD,qBAAP,SAA4BtqC,IAI7B,OAAA0pC,KAEAvwD,GAA2BJ,QAAlB2wD,O7F+vdHa,+CAA+C,SAAStyD,EAAQkB,EAAOJ,GAC7E,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Fx3dtB,IAAO8vD,GAAiBzxD,EAAa,4C9F83drC,I8Ft3dMuyD,GAAmB,SAAAtwD,GAASZ,EAA5BkxD,EAAmBtwD,EAIxB,SAJKswD,GAIO7H,EAAsB6E,GAEjCttD,EAAAlB,KAAAO,KAAMopD,EAAM6E,EAAQA,EAEpB,IAAIqC,GAAsCv1B,SAASK,cAAc,MACjEk1B,GAAIC,YAAc,SAACx6B,GAAqB,MAAA,OAExC/1B,MAAKy7C,YAAc6U,CAEnB,IAAIr1B,GAA6Bq1B,EAAIr1B,KACrC,IAAIu1B,EAGJv1B,GAAM/nB,SAAW,UACjB+nB,GAAM+iB,gBACH/iB,EAAM,4BACNA,EAAM,yBACNA,EAAM,uBACNA,EAAM,wBAA0B,OAEnCu1B,GAAuBz1B,SAASK,cAAc,MAE9Ck1B,GAAIj1B,YAAYm1B,EAEhBA,GAAIC,UAAY,WAAaxC,EAAO7a,GA1BvB6d,EAAA7d,GAAY,QA4B3B,OAAA6d,IA9BkCd,EAgClCvwD,GAA6BJ,QAApByxD,I9F42dNP,4CAA4C,8CAA8CQ,8CAA8C,SAASxyD,EAAQkB,EAAOJ,G+Fp5dnK,GAAO2xD,GAAczyD,EAAc,yC/Fy5dnC,I+Fp5dM0yD,GAAkB,WASvB,QATKA,KAGGpxD,KAAAqxD,OAAgB,CAChBrxD,MAAAsxD,UAAmB,CAO1BtxD,MAAK8pD,MAAQ,GAAIxlD,OAMX8sD,EAAA7wD,UAAAitD,QAAP,WAEC,GAAI+D,EACJ,IAAIvxD,KAAKqxD,QAAUrxD,KAAKsxD,UAAW,CAClCC,EAAO,GAAIJ,EACXnxD,MAAK8pD,MAAM9pD,KAAKqxD,UAAYE,IAC1BvxD,KAAKsxD,cACD,CACNC,EAAOvxD,KAAK8pD,MAAM9pD,KAAKqxD,UAExB,MAAOE,GAMDH,GAAA7wD,UAAAixD,QAAP,WAECxxD,KAAKqxD,OAAS,EAGRD,GAAA7wD,UAAAW,QAAP,WAEClB,KAAK8pD,MAAMpqD,OAAS,EAEtB,OAAA0xD,KAEAxxD,GAA4BJ,QAAnB4xD,I/F84dNK,yCAAyC,2CAA2CA,0CAA0C,SAAS/yD,EAAQkB,EAAOJ,GAIzJ,GgG97dM2xD,GAAc,WAApB,QAAMA,MAWN,MAAAA,KAEwBvxD,GAAAJ,QAAf2xD,OhGy7dHrD,0CAA0C,SAASpvD,EAAQkB,EAAOJ,GAIxE,GiGv8dMitD,GAAc,WAWnB,QAXKA,GAWOiF,EAAkC16C,GATtChX,KAAA+sD,gBAAyB,GAAInsD,OAWpCZ,MAAK2xD,iBAAmBD,CACxB1xD,MAAK+4B,WAAa/hB,EASZy1C,EAAAlsD,UAAAitD,QAAP,SAAetrC,GAEd,MAAQliB,MAAK+sD,gBAAgB7qC,EAAOkxB,MAAQpzC,KAAK+sD,gBAAgB7qC,EAAOkxB,IAAMlxB,EAAO9I,gBAAgB,GAAIpZ,MAAK2xD,iBAAiB3xD,KAAMkiB,EAAQliB,KAAK+4B,cAQ5I0zB,GAAAlsD,UAAAotD,YAAP,SAAmBzrC,GAElB,GAAI7I,GAAwBrZ,KAAK+sD,gBAAgB7qC,EAAOkxB,GAExD,IAAI/5B,EAAY,CACf6I,EAAO5I,mBAAmBD,EAE1BrZ,MAAK+sD,gBAAgB7qC,EAAOkxB,IAAM,KAGnC,MAAO/5B,GAET,OAAAozC,KAEA7sD,GAAwBJ,QAAfitD,OjG87dHmF,4CAA4C,SAASlzD,EAAQkB,EAAOJ,SAIpEqyD,yCAAyC,SAASnzD,EAAQkB,EAAOJ,SAIjEsyD,2CAA2C,SAASpzD,EAAQkB,EAAOJ,SAInEuyD,uCAAuC,SAASrzD,EAAQkB,EAAOJ,SAI/DwyD,yCAAyC,SAAStzD,EAAQkB,EAAOJ,SAIjEyyD,yCAAyC,SAASvzD,EAAQkB,EAAOJ,GACvE,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkG9getB,IAAOI,GAAc/B,EAAa,yCAClC,IAAOkM,GAAmBlM,EAAY,6ClGohetC,IkG7geMwzD,GAAU,SAAAvxD,GAASZ,EAAnBmyD,EAAUvxD,EASf,SATKuxD,KAWJvxD,EAAAlB,KAAAO,KATMA,MAAAmyD,UAAiC,GAAI7tD,OAerC4tD,EAAA3xD,UAAAixB,aAAP,WAEC,GAAI4jB,GAAuBp1C,KAAKoyD,gBAEhCpyD,MAAKmyD,UAAUp6C,KAAKq9B,EAEpB,OAAOA,GAYD8c,GAAA3xD,UAAA6xD,eAAP,WAEC,KAAM,IAAIxnD,GAGJsnD,GAAA3xD,UAAAkS,WAAP,YAID,OAAAy/C,IA5CyBzxD,EA8CLb,GAAAJ,QAAX0yD,IlGogeN34C,6CAA6ClY,UAAUC,yCAAyCD,YAAYgxD,qDAAqD,SAAS3zD,EAAQkB,EAAOJ,GAC5L,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmG1jetB,IAAOiyD,GAAmB5zD,EAAY,iDnGgketC,ImG3jeM6zD,GAAsB,SAAA5xD,GAASZ,EAA/BwyD,EAAsB5xD,EA6F3B,SA7FK4xD,GA6FO90C,EAAoB3O,EAAqB0jD,EAAuBC,EAAuBC,GAAvF,GAAAj1C,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA3O,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA0jD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAElG/xD,EAAAlB,KAAAO,KAxFOA,MAAA2yD,aAAsB,CA0F7B3yD,MAAK+xB,QAAUtU,CACfzd,MAAK+O,QAAUD,CACf9O,MAAK4yD,WAAaJ,CAClBxyD,MAAK6yD,WAAcJ,EAAU,GAAK,EAAIA,EAAY,EAAIA,CACtDzyD,MAAK8yD,KAAOJ,EAzFb9xD,OAAAC,eAAW0xD,EAAAhyD,UAAA,UnG2keJO,ImG3keP,WAEC,MAAOd,MAAK+xB,SnG4keNxuB,ImGzkeP,SAAkBC,GAEjBxD,KAAK+xB,QAAUvuB,CAEfxD,MAAK+yD,wBnGykeC/xD,WAAY,KACZC,aAAc,MmGpkerBL,QAAAC,eAAW0xD,EAAAhyD,UAAA,UnG0keJO,ImG1keP,WAEC,MAAOd,MAAK+O,SnG2keNxL,ImGxkeP,SAAkBC,GAEjBxD,KAAK+O,QAAUvL,CACfxD,MAAK+yD,wBnGykeC/xD,WAAY,KACZC,aAAc,MmGpkerBL,QAAAC,eAAW0xD,EAAAhyD,UAAA,anG0keJO,ImG1keP,WAEC,MAAOd,MAAK4yD,YnG2keNrvD,ImGxkeP,SAAqBC,GAEpBxD,KAAK4yD,WAAapvD,CAElBxD,MAAK+yD,sBACL/yD,MAAKgzD,mBnGwkeChyD,WAAY,KACZC,aAAc,MmGnkerBL,QAAAC,eAAW0xD,EAAAhyD,UAAA,anGykeJO,ImGzkeP,WAEC,MAAOd,MAAK6yD,YnG0keNtvD,ImGvkeP,SAAqBC,GAEpBxD,KAAK6yD,WAAcrvD,EAAM,GAAK,EAAIA,EAAQ,EAAIA,CAE9CxD,MAAK+yD,sBACL/yD,MAAKgzD,mBnGukeChyD,WAAY,KACZC,aAAc,MmGlkerBL,QAAAC,eAAW0xD,EAAAhyD,UAAA,OnGwkeJO,ImGxkeP,WAEC,MAAOd,MAAK8yD,MnGykeNvvD,ImGtkeP,SAAeC,GAEdxD,KAAK8yD,KAAOtvD,CAEZxD,MAAK+yD,wBnGskeC/xD,WAAY,KACZC,aAAc,MmG9iedsxD,GAAAhyD,UAAA0yD,gBAAP,SAAuBx/C,EAAwB8d,GAE9C,GAAItrB,EACJ,IAAId,EACJ,IAAI6lB,EACJ,IAAIS,EAEJ,IAAItsB,EACJ,IAAIoI,EACJ,IAAI2rD,GAAkB,CACtB,IAAIhuD,GAAe,CACnB,IAAIiuD,EACJ,IAAIC,GAAcC,EAAcC,EAAWC,CAC3C,IAAIC,GAAoB,CAExB,IAAIjiC,GAAgB,sBAAuB,CAE1C,GAAIkiC,GAA6DhgD,CAGjEzT,MAAK2yD,cAAgB3yD,KAAK6yD,WAAa,IAAI7yD,KAAK4yD,WAAa,EAC7DY,IAAcxzD,KAAK6yD,WAAa,GAAG7yD,KAAK4yD,WAAW,CAGnD,IAAI5yD,KAAK2yD,cAAgBc,EAAiBC,YAAa,CACtDztD,EAAUwtD,EAAiBxtD,OAC3Bd,GAAYsuD,EAAiBtuD,SAC7B6lB,GAAUyoC,EAAiBE,aAC3BloC,GAAWgoC,EAAiBG,mBACtB,CACN3tD,EAAU,GAAI3B,OAAckvD,EAC5BruD,GAAY,GAAIb,OAActE,KAAK2yD,aAAa,EAChD3nC,GAAU,GAAI1mB,OAActE,KAAK2yD,aAAa,EAC9ClnC,GAAW,GAAInnB,OAActE,KAAK2yD,aAAa,EAE/C3yD,MAAKgzD,kBAGN,IAAKzrD,EAAI,EAAGA,GAAKvH,KAAK6yD,aAActrD,EAAG,CAEtC,GAAIssD,GAAkBlrD,KAAKmrD,GAAGvsD,EAAEvH,KAAK6yD,UACrC,IAAIxrD,IAAYrH,KAAK+xB,QAAQppB,KAAKm4B,IAAI+yB,EACtC,IAAIE,GAAoB/zD,KAAK+xB,QAAQppB,KAAKk4B,IAAIgzB,EAE9CV,GAAajuD,CAEb,KAAK/F,EAAI,EAAGA,GAAKa,KAAK4yD,aAAczzD,EAAG,CACtC,GAAI60D,GAAkB,EAAErrD,KAAKmrD,GAAG30D,EAAEa,KAAK4yD,UACvC,IAAIzrD,GAAW4sD,EAAWprD,KAAKm4B,IAAIkzB,EACnC,IAAIxuD,GAAgB+B,EAAIvH,KAAK6yD,WAAW,EAAG7yD,KAAK+O,QAAQ,GAAK/O,KAAK+O,QAAQ,CAC1E,IAAI3H,GAAW2sD,EAAWprD,KAAKk4B,IAAImzB,EACnC,IAAIC,GAAiB,EAAEtrD,KAAKC,KAAKzB,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,EAC/C,IAAI6sD,GAAgBvrD,KAAKC,KAAKxB,EAAEA,EAAID,EAAEA,EAEtC,IAAInH,KAAK8yD,KAAM,CACdQ,EAAK,CACLC,GAAKW,EAAS,KAAM/sD,EAAE+sD,EAAS,CAC/Bd,IAAS/rD,CACTgsD,GAAQjsD,MAEF,CACNksD,EAAKY,EAAS,KAAM/sD,EAAE+sD,EAAS,CAC/BX,GAAK,CACLH,GAAQhsD,CACRisD,GAAQhsD,EAGT,GAAIlI,GAAKa,KAAK4yD,WAAY,CAEzBztD,EAAUD,GAASC,EAAUguD,EAC7BhuD,GAAUD,EAAQ,GAAKC,EAAUguD,EAAa,EAC9ChuD,GAAUD,EAAQ,GAAKC,EAAUguD,EAAa,EAC9CnoC,GAAQ9lB,IAAU8lB,EAAQmoC,GAAehsD,EAAE8sD,GAAU,EACrDjpC,GAAQ9lB,EAAQ,IAAM8lB,EAAQmoC,EAAa,GAAOC,EAAMa,GAAU,EAClEjpC,GAAQ9lB,EAAQ,IAAM8lB,EAAQmoC,EAAa,GAAME,EAAMY,GAAU,EACjExoC,GAASvmB,IAAUumB,EAAS0nC,IAAee,EAAS,MAAO9sD,EAAE8sD,EAAS,IAAI,EAC1EzoC,GAASvmB,EAAQ,IAAMumB,EAAS0nC,EAAa,GAAKG,GAAI,EACtD7nC,GAASvmB,EAAQ,IAAMumB,EAAS0nC,EAAa,GAAKI,GAAI,OAEhD,CAENpuD,EAAUD,GAASiC,CACnBhC,GAAUD,EAAQ,GAAMlF,KAAS,KAAGozD,EAAQ5tD,EAAS4tD,CACrDjuD,GAAUD,EAAQ,GAAMlF,KAAS,KAAGqzD,EAAQA,EAAQ7tD,CAEpDwlB,GAAQ9lB,GAASiC,EAAE8sD,CACnBjpC,GAAQ9lB,EAAQ,GAAKkuD,EAAMa,CAC3BjpC,GAAQ9lB,EAAQ,GAAKmuD,EAAMY,CAE3BxoC,GAASvmB,GAASgvD,EAAS,MAAO9sD,EAAE8sD,EAAS,CAC7CzoC,GAASvmB,EAAQ,GAAKouD,CACtB7nC,GAASvmB,EAAQ,GAAKquD,EAGvB,GAAIp0D,EAAI,GAAKoI,EAAI,EAAG,CACnB,GAAIrI,IAAYc,KAAK4yD,WAAa,GAAGrrD,EAAIpI,CACzC,IAAIe,IAAYF,KAAK4yD,WAAa,GAAGrrD,EAAIpI,EAAI,CAC7C,IAAI+vB,IAAYlvB,KAAK4yD,WAAa,IAAIrrD,EAAI,GAAKpI,EAAI,CACnD,IAAIc,IAAYD,KAAK4yD,WAAa,IAAIrrD,EAAI,GAAKpI,CAE/C,IAAIoI,GAAKvH,KAAK6yD,WAAY,CACzB1tD,EAAUD,GAASC,EAAUguD,EAC7BhuD,GAAUD,EAAQ,GAAKC,EAAUguD,EAAa,EAC9ChuD,GAAUD,EAAQ,GAAKC,EAAUguD,EAAa,EAE9CltD,GAAQitD,KAAch0D,CACtB+G,GAAQitD,KAAchkC,CACtBjpB,GAAQitD,KAAcjzD,MAEhB,IAAIsH,GAAK,EAAG,CAClBtB,EAAQitD,KAAch0D,CACtB+G,GAAQitD,KAAchzD,CACtB+F,GAAQitD,KAAchkC,MAEhB,CACNjpB,EAAQitD,KAAch0D,CACtB+G,GAAQitD,KAAchzD,CACtB+F,GAAQitD,KAAchkC,CACtBjpB,GAAQitD,KAAch0D,CACtB+G,GAAQitD,KAAchkC,CACtBjpB,GAAQitD,KAAcjzD,GAIxBiF,GAAS,GAKXuuD,EAAiBztD,cAAcC,EAE/BwtD,GAAiBhvD,gBAAgBU,EACjCsuD,GAAiBlpC,oBAAoBS,EACrCyoC,GAAiBjpC,qBAAqBiB,OAEhC,IAAI8F,GAAgB,kBAAmB,GAQxCghC,GAAAhyD,UAAA4zD,WAAP,SAAkB1gD,EAAwB8d,GAEzC,GAAIpyB,GAAUoI,CACd,IAAI3B,EAGJ,IAAI2rB,GAAgB,sBAAuB,CAE1C,GAAIkiC,GAA6DhgD,CAGjE,IAAIggD,EAAiB7tD,KAAO5F,KAAK2yD,cAAgBc,EAAiBC,YAAa,CAC9E9tD,EAAM6tD,EAAiB7tD,QACjB,CACNA,EAAM,GAAItB,OAActE,KAAK2yD,aAAa,GnG6helC,GmGzheLztD,GAAe,CAGnB,KAAKqC,EAAI,EAAGA,GAAKvH,KAAK6yD,aAActrD,EAAG,CACtC,IAAKpI,EAAI,EAAGA,GAAKa,KAAK4yD,aAAczzD,EAAG,CAEtCyG,EAAIV,KAAa/F,EAAEa,KAAK4yD,WAAaa,EAAiBntD,MACtDV,GAAIV,KAAaqC,EAAEvH,KAAK6yD,WAAaY,EAAiBltD,QAKxDktD,EAAiB7uD,UAAUgB,OAErB,IAAI2rB,GAAgB,kBAAmB,GAIhD,OAAAghC,IA9RqCD,EAgSL1yD,GAAAJ,QAAvB+yD,InGwheN6B,iDAAiD,mDAAmDC,kDAAkD,SAAS31D,EAAQkB,EAAOJ,GACjL,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoGr0etB,IAAOi0D,GAAuB51D,EAAW,qDpG20ezC,IoGt0eM61D,GAAmB,SAAA5zD,GAASZ,EAA5Bw0D,EAAmB5zD,EA0BxB,SA1BK4zD,GA0BO92C,EAAoB3O,EAAqB0jD,EAAuBC,EAAsB+B,EAAuB9B,GAA7G,GAAAj1C,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA3O,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA0jD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA+B,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAA9B,QAAA,GAAkB,CAAlBA,EAAA,KAExH/xD,EAAAlB,KAAAO,KAAM,EAAGyd,EAAQ3O,EAAQ0jD,EAAWC,EAAW,MAAO+B,EAAQ,KAAM9B,GAtBrE9xD,OAAAC,eAAW0zD,EAAAh0D,UAAA,UpGu1eJO,IoGv1eP,WAEC,MAAOd,MAAKy0D,gBpGw1eNlxD,IoGr1eP,SAAkBC,GAEjBxD,KAAKy0D,eAAiBjxD,CAEtBxD,MAAK+yD,wBpGq1eC/xD,WAAY,KACZC,aAAc,MoGv0etB,OAAAszD,IA9BkCD,EAgCL10D,GAAAJ,QAApB+0D,IpG40eNG,qDAAqD,uDAAuD/iC,kDAAkD,SAASjzB,EAAQkB,EAAOJ,GACzL,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqGn3etB,IAAOiyD,GAAmB5zD,EAAY,iDrGy3etC,IqGp3eMyvB,GAAmB,SAAAxtB,GAASZ,EAA5BouB,EAAmBxtB,EAqBxB,SArBKwtB,GAqBOnd,EAAoBlC,EAAqBP,EAAoBikD,EAAsBC,EAAsBkC,EAAsBC,GAA/H,GAAA5jD,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAlC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAP,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAikD,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAkC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,KAE1Ij0D,EAAAlB,KAAAO,KAEAA,MAAKwQ,OAASQ,CACdhR,MAAK+O,QAAUD,CACf9O,MAAKyO,OAASF,CACdvO,MAAK4yD,WAAaJ,CAClBxyD,MAAK6yD,WAAaJ,CAClBzyD,MAAK60D,WAAaF,CAClB30D,MAAK80D,OAASF,EAMfh0D,OAAAC,eAAWstB,EAAA5tB,UAAA,SrGg3eJO,IqGh3eP,WAEC,MAAOd,MAAKwQ,QrGi3eNjN,IqG92eP,SAAiBC,GAEhBxD,KAAKwQ,OAAShN,CAEdxD,MAAK+yD,wBrG82eC/xD,WAAY,KACZC,aAAc,MqGz2erBL,QAAAC,eAAWstB,EAAA5tB,UAAA,UrG+2eJO,IqG/2eP,WAEC,MAAOd,MAAK+O,SrGg3eNxL,IqG72eP,SAAkBC,GAEjBxD,KAAK+O,QAAUvL,CAEfxD,MAAK+yD,wBrG62eC/xD,WAAY,KACZC,aAAc,MqGx2erBL,QAAAC,eAAWstB,EAAA5tB,UAAA,SrG82eJO,IqG92eP,WAEC,MAAOd,MAAKyO,QrG+2eNlL,IqG52eP,SAAiBC,GAEhBxD,KAAKyO,OAASjL,CAEdxD,MAAK+yD,wBrG42eC/xD,WAAY,KACZC,aAAc,MqGl2erBL,QAAAC,eAAWstB,EAAA5tB,UAAA,SrG62eJO,IqG72eP,WAEC,MAAOd,MAAK80D,QrG82eNvxD,IqG32eP,SAAiBC,GAEhBxD,KAAK80D,OAAStxD,CAEdxD,MAAK+yD,wBrG22eC/xD,WAAY,KACZC,aAAc,MqGt2erBL,QAAAC,eAAWstB,EAAA5tB,UAAA,arG42eJO,IqG52eP,WAEC,MAAOd,MAAK4yD,YrG62eNrvD,IqG12eP,SAAqBC,GAEpBxD,KAAK4yD,WAAapvD,CAElBxD,MAAK+yD,sBACL/yD,MAAKgzD,mBrG02eChyD,WAAY,KACZC,aAAc,MqGr2erBL,QAAAC,eAAWstB,EAAA5tB,UAAA,arG22eJO,IqG32eP,WAEC,MAAOd,MAAK6yD,YrG42eNtvD,IqGz2eP,SAAqBC,GAEpBxD,KAAK6yD,WAAarvD,CAElBxD,MAAK+yD,sBACL/yD,MAAKgzD,mBrGy2eChyD,WAAY,KACZC,aAAc,MqGp2erBL,QAAAC,eAAWstB,EAAA5tB,UAAA,arG02eJO,IqG12eP,WAEC,MAAOd,MAAK60D,YrG22eNtxD,IqGx2eP,SAAqBC,GAEpBxD,KAAK60D,WAAarxD,CAElBxD,MAAK+yD,sBACL/yD,MAAKgzD,mBrGw2eChyD,WAAY,KACZC,aAAc,MqGn2edktB,GAAA5tB,UAAA0yD,gBAAP,SAAuBx/C,EAAwB8d,GAE9C,GAAItrB,EACJ,IAAId,EACJ,IAAI6lB,EACJ,IAAIS,EAEJ,IAAIspC,GAAWC,EAAWC,EAAWC,CACrC,IAAI/1D,GAAUoI,EAAU4tD,EAAa,CAErC,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWzjC,CAE1B,IAAI0jC,EACJ,IAAInC,EACJ,IAAIE,EAGJ4B,GAAKt1D,KAAKwQ,OAAO,CACjB+kD,GAAKv1D,KAAK+O,QAAQ,CAClBymD,GAAKx1D,KAAKyO,OAAO,CAEjB,IAAI8iB,GAAgB,sBAAuB,CAE1C,GAAIkiC,GAA6DhgD,CAEjEigD,KAAgB1zD,KAAK4yD,WAAa,IAAI5yD,KAAK6yD,WAAa,IAAM7yD,KAAK4yD,WAAa,IAAI5yD,KAAK60D,WAAa,IAAM70D,KAAK6yD,WAAa,IAAI7yD,KAAK60D,WAAa,IAAI,CAExJrB,IAAexzD,KAAK4yD,WAAW5yD,KAAK6yD,WAAa7yD,KAAK4yD,WAAW5yD,KAAK60D,WAAa70D,KAAK6yD,WAAW7yD,KAAK60D,YAAY,EAEpH,IAAInB,GAAeD,EAAiBC,aAAeD,EAAiBxtD,SAAW,KAAM,CACpFA,EAAUwtD,EAAiBxtD,OAC3Bd,GAAYsuD,EAAiBtuD,SAC7B6lB,GAAUyoC,EAAiBE,aAC3BloC,GAAWgoC,EAAiBG,mBACtB,CACN3tD,EAAU,GAAI3B,OAAckvD,EAC5BruD,GAAY,GAAIb,OAAcovD,EAAY,EAC1C1oC,GAAU,GAAI1mB,OAAcovD,EAAY,EACxCjoC,GAAW,GAAInnB,OAAcovD,EAAY,EAEzC1zD,MAAKgzD,kBAGNoC,EAAO,CACPC,GAAO,CAGPI,GAAKz1D,KAAKwQ,OAAOxQ,KAAK4yD,UACtB8C,GAAK11D,KAAK+O,QAAQ/O,KAAK6yD,UACvB5gC,GAAKjyB,KAAKyO,OAAOzO,KAAK60D,UAEtB,KAAK11D,EAAI,EAAGA,GAAKa,KAAK4yD,WAAYzzD,IAAK,CACtCw2D,GAAaL,EAAKn2D,EAAEs2D,CAEpB,KAAKluD,EAAI,EAAGA,GAAKvH,KAAK6yD,WAAYtrD,IAAK,CAEtCpC,EAAUiwD,GAAQO,CAClBxwD,GAAUiwD,EAAO,IAAMG,EAAKhuD,EAAEmuD,CAC9BvwD,GAAUiwD,EAAO,IAAMI,CACvBxqC,GAAQoqC,GAAQ,CAChBpqC,GAAQoqC,EAAO,GAAK,CACpBpqC,GAAQoqC,EAAO,IAAM,CACrB3pC,GAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAO,GAAK,CACrB3pC,GAAS2pC,EAAO,GAAK,CACrBA,IAAQ,CAGRjwD,GAAUiwD,GAAQO,CAClBxwD,GAAUiwD,EAAO,IAAMG,EAAKhuD,EAAEmuD,CAC9BvwD,GAAUiwD,EAAO,GAAKI,CACtBxqC,GAAQoqC,GAAQ,CAChBpqC,GAAQoqC,EAAO,GAAK,CACpBpqC,GAAQoqC,EAAO,GAAK,CACpB3pC,GAAS2pC,IAAS,CAClB3pC,GAAS2pC,EAAO,GAAK,CACrB3pC,GAAS2pC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIj2D,GAAKoI,EAAG,CACXwtD,EAAK,IAAI51D,EAAI,IAAIa,KAAK6yD,WAAa,IAAMtrD,EAAI,GAC7CytD,GAAK,GAAG71D,GAAGa,KAAK6yD,WAAa,IAAMtrD,EAAI,GACvC0tD,GAAKF,EAAK,CACVG,GAAKF,EAAK,CAEV/uD,GAAQovD,KAAUN,CAClB9uD,GAAQovD,KAAUJ,CAClBhvD,GAAQovD,KAAUH,CAClBjvD,GAAQovD,KAAUN,CAClB9uD,GAAQovD,KAAUH,CAClBjvD,GAAQovD,KAAUL,CAClB/uD,GAAQovD,KAAUL,EAAK,CACvB/uD,GAAQovD,KAAUH,EAAK,CACvBjvD,GAAQovD,KAAUJ,EAAK,CACvBhvD,GAAQovD,KAAUL,EAAK,CACvB/uD,GAAQovD,KAAUJ,EAAK,CACvBhvD,GAAQovD,KAAUN,EAAK,IAK1BI,GAAO,GAAGn1D,KAAK4yD,WAAa,IAAI5yD,KAAK6yD,WAAa,EAElD,KAAK1zD,EAAI,EAAGA,GAAKa,KAAK4yD,WAAYzzD,IAAK,CACtCw2D,GAAaL,EAAKn2D,EAAEs2D,CAEpB,KAAKluD,EAAI,EAAGA,GAAKvH,KAAK60D,WAAYttD,IAAK,CAEtCpC,EAAUiwD,GAAQO,CAClBxwD,GAAUiwD,EAAO,GAAKG,CACtBpwD,GAAUiwD,EAAO,IAAMI,EAAKjuD,EAAE0qB,CAC9BjH,GAAQoqC,GAAQ,CAChBpqC,GAAQoqC,EAAO,GAAK,CACpBpqC,GAAQoqC,EAAO,GAAK,CACpB3pC,GAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAO,GAAK,CACrB3pC,GAAS2pC,EAAO,GAAK,CACrBA,IAAQ,CAGRjwD,GAAUiwD,GAAQO,CAClBxwD,GAAUiwD,EAAO,IAAMG,CACvBpwD,GAAUiwD,EAAO,IAAMI,EAAKjuD,EAAE0qB,CAC9BjH,GAAQoqC,GAAQ,CAChBpqC,GAAQoqC,EAAO,IAAM,CACrBpqC,GAAQoqC,EAAO,GAAK,CACpB3pC,GAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAO,GAAK,CACrB3pC,GAAS2pC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIj2D,GAAKoI,EAAG,CACXwtD,EAAKI,EAAM,IAAIh2D,EAAI,IAAIa,KAAK60D,WAAa,IAAMttD,EAAI,GACnDytD,GAAKG,EAAM,GAAGh2D,GAAGa,KAAK60D,WAAa,IAAMttD,EAAI,GAC7C0tD,GAAKF,EAAK,CACVG,GAAKF,EAAK,CAEV/uD,GAAQovD,KAAUN,CAClB9uD,GAAQovD,KAAUJ,CAClBhvD,GAAQovD,KAAUH,CAClBjvD,GAAQovD,KAAUN,CAClB9uD,GAAQovD,KAAUH,CAClBjvD,GAAQovD,KAAUL,CAClB/uD,GAAQovD,KAAUL,EAAK,CACvB/uD,GAAQovD,KAAUH,EAAK,CACvBjvD,GAAQovD,KAAUJ,EAAK,CACvBhvD,GAAQovD,KAAUL,EAAK,CACvB/uD,GAAQovD,KAAUJ,EAAK,CACvBhvD,GAAQovD,KAAUN,EAAK,IAK1BI,GAAO,GAAGn1D,KAAK4yD,WAAa,IAAI5yD,KAAK60D,WAAa,EAElD,KAAK11D,EAAI,EAAGA,GAAKa,KAAK60D,WAAY11D,IAAK,CACtCw2D,EAAYH,EAAKr2D,EAAE8yB,CAEnB,KAAK1qB,EAAI,EAAGA,GAAKvH,KAAK6yD,WAAYtrD,IAAK,CAEtCpC,EAAUiwD,IAASE,CACnBnwD,GAAUiwD,EAAK,IAAMG,EAAKhuD,EAAEmuD,CAC5BvwD,GAAUiwD,EAAK,GAAKO,CACpB3qC,GAAQoqC,IAAS,CACjBpqC,GAAQoqC,EAAK,GAAK,CAClBpqC,GAAQoqC,EAAK,GAAK,CAClB3pC,GAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAK,GAAK,CACnB3pC,GAAS2pC,EAAK,IAAM,CACpBA,IAAQ,CAGRjwD,GAAUiwD,GAAQE,CAClBnwD,GAAUiwD,EAAK,IAAMG,EAAKhuD,EAAEmuD,CAC5BvwD,GAAUiwD,EAAK,GAAKO,CACpB3qC,GAAQoqC,GAAQ,CAChBpqC,GAAQoqC,EAAK,GAAK,CAClBpqC,GAAQoqC,EAAK,GAAK,CAClB3pC,GAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAK,GAAK,CACnB3pC,GAAS2pC,EAAK,GAAK,CACnBA,IAAQ,CAER,IAAIj2D,GAAKoI,EAAG,CACXwtD,EAAKI,EAAM,IAAIh2D,EAAI,IAAIa,KAAK6yD,WAAa,IAAMtrD,EAAI,GACnDytD,GAAKG,EAAM,GAAGh2D,GAAGa,KAAK6yD,WAAa,IAAMtrD,EAAI,GAC7C0tD,GAAKF,EAAK,CACVG,GAAKF,EAAK,CAEV/uD,GAAQovD,KAAUN,CAClB9uD,GAAQovD,KAAUJ,CAClBhvD,GAAQovD,KAAUH,CAClBjvD,GAAQovD,KAAUN,CAClB9uD,GAAQovD,KAAUH,CAClBjvD,GAAQovD,KAAUL,CAClB/uD,GAAQovD,KAAUL,EAAK,CACvB/uD,GAAQovD,KAAUH,EAAK,CACvBjvD,GAAQovD,KAAUJ,EAAK,CACvBhvD,GAAQovD,KAAUL,EAAK,CACvB/uD,GAAQovD,KAAUJ,EAAK,CACvBhvD,GAAQovD,KAAUN,EAAK,IAK1BtB,EAAiBztD,cAAcC,EAE/BwtD,GAAiBhvD,gBAAgBU,EACjCsuD,GAAiBlpC,oBAAoBS,EACrCyoC,GAAiBjpC,qBAAqBiB,OAEhC,IAAI8F,GAAgB,kBAAmB,CAC7C,GAAIqkC,GAAiDniD,CAErD,IAAIoiD,GAAqB71D,KAAK6yD,WAAW,EAAK7yD,KAAK4yD,WAAW,EAAI5yD,KAAK60D,WAAW,CAClF,IAAI9wC,EACJ,IAAIC,EACJ,IAAIlF,EAEJ,IAAI82C,EAAa3vD,SAAW,MAAQ4vD,GAAeD,EAAaC,YAAa,CAC5E9xC,EAAiB6xC,EAAa7xC,cAC9BC,GAAe4xC,EAAa5xC,YAC5BlF,GAAY82C,EAAa92C,cACnB,CACNiF,EAAiB,GAAIzf,OAAcuxD,EAAY,EAC/C7xC,GAAe,GAAI1f,OAAcuxD,EAAY,EAC7C/2C,GAAY,GAAIxa,OAAcuxD,GAG/BT,EAAO,CAEPC,GAAO,CAGP,KAAKl2D,EAAI,EAAGA,EAAIa,KAAK6yD,aAAc1zD,EAAG,CACrC4kB,EAAeqxC,IAASE,CACxBvxC,GAAeqxC,EAAO,GAAKj2D,EAAEa,KAAK+O,QAAQ/O,KAAK6yD,WAAa0C,CAC5DxxC,GAAeqxC,EAAO,IAAMI,CAE5BxxC,GAAaoxC,GAAQE,CACrBtxC,GAAaoxC,EAAO,GAAKj2D,EAAEa,KAAK+O,QAAQ/O,KAAK6yD,WAAa0C,CAC1DvxC,GAAaoxC,EAAO,IAAMI,CAE1B12C,GAAUu2C,KAAU,CAEpBD,IAAQ,CAERrxC,GAAeqxC,IAASE,CACxBvxC,GAAeqxC,EAAO,GAAKG,EAAKp2D,EAAEa,KAAK+O,QAAQ/O,KAAK6yD,UACpD9uC,GAAeqxC,EAAO,GAAKI,CAE3BxxC,GAAaoxC,GAAQE,CACrBtxC,GAAaoxC,EAAO,GAAKG,EAAKp2D,EAAEa,KAAK+O,QAAQ/O,KAAK6yD,UAClD7uC,GAAaoxC,EAAO,GAAKI,CAEzB12C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAGT,IAAKj2D,EAAI,EAAGA,EAAIa,KAAK4yD,aAAczzD,EAAG,CACrC4kB,EAAeqxC,GAAQj2D,EAAEa,KAAKwQ,OAAOxQ,KAAK4yD,WAAa0C,CACvDvxC,GAAeqxC,EAAO,IAAMG,CAC5BxxC,GAAeqxC,EAAO,IAAMI,CAE5BxxC,GAAaoxC,GAAQj2D,EAAEa,KAAKwQ,OAAOxQ,KAAK4yD,WAAa0C,CACrDtxC,GAAaoxC,EAAO,GAAKG,CACzBvxC,GAAaoxC,EAAO,IAAMI,CAE1B12C,GAAUu2C,KAAU,CAEpBD,IAAQ,CAERrxC,GAAeqxC,GAAQE,EAAKn2D,EAAEa,KAAKwQ,OAAOxQ,KAAK4yD,UAC/C7uC,GAAeqxC,EAAO,IAAMG,CAC5BxxC,GAAeqxC,EAAO,GAAKI,CAE3BxxC,GAAaoxC,GAAQE,EAAKn2D,EAAEa,KAAKwQ,OAAOxQ,KAAK4yD,UAC7C5uC,GAAaoxC,EAAO,GAAKG,CACzBvxC,GAAaoxC,EAAO,GAAKI,CAEzB12C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAIT,IAAKj2D,EAAI,EAAGA,EAAIa,KAAK6yD,aAAc1zD,EAAG,CACrC4kB,EAAeqxC,IAASE,CACxBvxC,GAAeqxC,EAAO,GAAKj2D,EAAEa,KAAK+O,QAAQ/O,KAAK6yD,WAAa0C,CAC5DxxC,GAAeqxC,EAAO,IAAMI,CAE5BxxC,GAAaoxC,IAASE,CACtBtxC,GAAaoxC,EAAO,GAAKj2D,EAAEa,KAAK+O,QAAQ/O,KAAK6yD,WAAa0C,CAC1DvxC,GAAaoxC,EAAO,GAAKI,CAEzB12C,GAAUu2C,KAAU,CAEpBD,IAAQ,CAERrxC,GAAeqxC,GAAQE,CACvBvxC,GAAeqxC,EAAO,GAAKG,EAAKp2D,EAAEa,KAAK+O,QAAQ/O,KAAK6yD,UACpD9uC,GAAeqxC,EAAO,IAAMI,CAE5BxxC,GAAaoxC,GAAQE,CACrBtxC,GAAaoxC,EAAO,GAAKG,EAAKp2D,EAAEa,KAAK+O,QAAQ/O,KAAK6yD,UAClD7uC,GAAaoxC,EAAO,GAAKI,CAEzB12C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAGT,IAAKj2D,EAAI,EAAGA,EAAIa,KAAK60D,aAAc11D,EAAG,CACrC4kB,EAAeqxC,GAAQE,CACvBvxC,GAAeqxC,EAAO,IAAMG,CAC5BxxC,GAAeqxC,EAAO,GAAKj2D,EAAEa,KAAKyO,OAAOzO,KAAK60D,WAAaW,CAE3DxxC,GAAaoxC,GAAQE,CACrBtxC,GAAaoxC,EAAO,GAAKG,CACzBvxC,GAAaoxC,EAAO,GAAKj2D,EAAEa,KAAKyO,OAAOzO,KAAK60D,WAAaW,CAEzD12C,GAAUu2C,KAAU,CAEpBD,IAAQ,CAERrxC,GAAeqxC,IAASE,CACxBvxC,GAAeqxC,EAAO,IAAMG,CAC5BxxC,GAAeqxC,EAAO,GAAKI,EAAKr2D,EAAEa,KAAKyO,OAAOzO,KAAK60D,UAEnD7wC,GAAaoxC,IAASE,CACtBtxC,GAAaoxC,EAAO,GAAKG,CACzBvxC,GAAaoxC,EAAO,GAAKI,EAAKr2D,EAAEa,KAAKyO,OAAOzO,KAAK60D,UAEjD/1C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAKT,IAAKj2D,EAAI,EAAGA,EAAIa,KAAK60D,aAAc11D,EAAG,CACrC4kB,EAAeqxC,IAASE,CACxBvxC,GAAeqxC,EAAO,IAAMG,CAC5BxxC,GAAeqxC,EAAO,GAAKI,EAAKr2D,EAAEa,KAAKyO,OAAOzO,KAAK60D,UAEnD7wC,GAAaoxC,GAAQE,CACrBtxC,GAAaoxC,EAAO,IAAMG,CAC1BvxC,GAAaoxC,EAAO,GAAKI,EAAKr2D,EAAEa,KAAKyO,OAAOzO,KAAK60D,UAEjD/1C,GAAUu2C,KAAU,CAEpBD,IAAQ,CAERrxC,GAAeqxC,IAASE,CACxBvxC,GAAeqxC,EAAO,GAAKG,CAC3BxxC,GAAeqxC,EAAO,GAAKj2D,EAAEa,KAAKyO,OAAOzO,KAAK60D,WAAaW,CAE3DxxC,GAAaoxC,GAAQE,CACrBtxC,GAAaoxC,EAAO,GAAKG,CACzBvxC,GAAaoxC,EAAO,GAAKj2D,EAAEa,KAAKyO,OAAOzO,KAAK60D,WAAaW,CAEzD12C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAGT,IAAKj2D,EAAI,EAAGA,EAAIa,KAAK4yD,aAAczzD,EAAG,CACrC4kB,EAAeqxC,GAAQE,EAAKn2D,EAAEa,KAAKwQ,OAAOxQ,KAAK4yD,UAC/C7uC,GAAeqxC,EAAO,IAAMG,CAC5BxxC,GAAeqxC,EAAO,IAAMI,CAE5BxxC,GAAaoxC,GAAQE,EAAKn2D,EAAEa,KAAKwQ,OAAOxQ,KAAK4yD,UAC7C5uC,GAAaoxC,EAAO,IAAMG,CAC1BvxC,GAAaoxC,EAAO,GAAKI,CAEzB12C,GAAUu2C,KAAU,CAEpBD,IAAQ,CAERrxC,GAAeqxC,GAAQj2D,EAAEa,KAAKwQ,OAAOxQ,KAAK4yD,WAAa0C,CACvDvxC,GAAeqxC,EAAO,GAAKG,CAC3BxxC,GAAeqxC,EAAO,IAAMI,CAE5BxxC,GAAaoxC,GAAQj2D,EAAEa,KAAKwQ,OAAOxQ,KAAK4yD,WAAa0C,CACrDtxC,GAAaoxC,EAAO,GAAKG,CACzBvxC,GAAaoxC,EAAO,GAAKI,CAEzB12C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAITQ,EAAanxD,gBAAgBsf,EAAgBC,EAC7C4xC,GAAapyC,gBAAgB1E,IAOxBqP,GAAA5tB,UAAA4zD,WAAP,SAAkB1gD,EAAwB8d,GAEzC,GAAIpyB,GAAUoI,EAAUrC,CACxB,IAAIU,EAEJ,IAAIkwD,GAAmBC,CACvB,IAAIC,GAAoBC,CACxB,IAAIC,GAAaC,CACjB,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,CACf,IAAI7C,EAEJ,IAAIniC,GAAgB,sBAAuB,CAE1CmiC,IAAgB1zD,KAAK4yD,WAAa,IAAI5yD,KAAK6yD,WAAa,IAAM7yD,KAAK4yD,WAAa,IAAI5yD,KAAK60D,WAAa,IAAM70D,KAAK6yD,WAAa,IAAI7yD,KAAK60D,WAAa,IAAI,CAExJ,IAAIpB,GAA6DhgD,CAEjE,IAAIigD,GAAeD,EAAiBC,aAAeD,EAAiB7tD,KAAO,KAAM,CAChFA,EAAM6tD,EAAiB7tD,QACjB,CACNA,EAAM,GAAItB,OAAcovD,EAAY,GAGrC,GAAI1zD,KAAK80D,OAAQ,CAChBgB,EAAaE,EAAc,EAAE,CAC7BD,GAAaE,EAAc,EAAE,MACvB,CACNH,EAAaC,EAAa,CAC1BC,GAAcC,EAAc,EAe7B/wD,EAAQ,CAGRgxD,GAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAW91D,KAAK4yD,UACrB2D,GAAKR,EAAW/1D,KAAK6yD,UACrB,KAAK1zD,EAAI,EAAGA,GAAKa,KAAK4yD,WAAYzzD,IAAK,CACtC,IAAKoI,EAAI,EAAGA,GAAKvH,KAAK6yD,WAAYtrD,IAAK,CACtC3B,EAAIV,MAAagxD,EAAO/2D,EAAEm3D,GAAK7C,EAAiBntD,MAChDV,GAAIV,MAAaixD,GAAQJ,EAAaxuD,EAAEgvD,IAAK9C,EAAiBltD,MAE9DX,GAAIV,MAAakxD,GAAQN,EAAa32D,EAAEm3D,IAAK7C,EAAiBntD,MAC9DV,GAAIV,MAAamxD,GAAQN,EAAaxuD,EAAEgvD,IAAK9C,EAAiBltD,QAKhE2vD,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAW91D,KAAK4yD,UACrB2D,GAAKR,EAAW/1D,KAAK60D,UACrB,KAAK11D,EAAI,EAAGA,GAAKa,KAAK4yD,WAAYzzD,IAAK,CACtC,IAAKoI,EAAI,EAAGA,GAAKvH,KAAK60D,WAAYttD,IAAK,CACtC3B,EAAIV,MAAagxD,EAAO/2D,EAAEm3D,GAAI7C,EAAiBntD,MAC/CV,GAAIV,MAAaixD,GAAQJ,EAAaxuD,EAAEgvD,IAAK9C,EAAiBltD,MAE9DX,GAAIV,MAAakxD,EAAOj3D,EAAEm3D,GAAI7C,EAAiBntD,MAC/CV,GAAIV,MAAamxD,EAAO9uD,EAAEgvD,GAAI9C,EAAiBltD,QAKjD2vD,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAW91D,KAAK60D,UACrB0B,GAAKR,EAAW/1D,KAAK6yD,UACrB,KAAK1zD,EAAI,EAAGA,GAAKa,KAAK60D,WAAY11D,IAAK,CACtC,IAAKoI,EAAI,EAAGA,GAAKvH,KAAK6yD,WAAYtrD,IAAK,CACtC3B,EAAIV,MAAagxD,EAAO/2D,EAAEm3D,GAAI7C,EAAiBntD,MAC/CV,GAAIV,MAAaixD,GAAQJ,EAAaxuD,EAAEgvD,IAAK9C,EAAiBltD,MAE9DX,GAAIV,MAAakxD,GAAQN,EAAa32D,EAAEm3D,IAAK7C,EAAiBntD,MAC9DV,GAAIV,MAAamxD,GAAQN,EAAaxuD,EAAEgvD,IAAK9C,EAAiBltD,QAIhEktD,EAAiB7uD,UAAUgB,OAErB,IAAI2rB,GAAgB,kBAAmB,GAIhD,OAAApD,IAjpBkCmkC,EAmpBL1yD,GAAAJ,QAApB2uB,IrGmweNimC,iDAAiD,mDAAmDM,sDAAsD,SAASh2D,EAAQkB,EAAOJ,GACrL,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsGh6ftB,IAAOiyD,GAAmB5zD,EAAY,iDtGs6ftC,IsGj6fM41D,GAAuB,SAAA3zD,GAASZ,EAAhCu0D,EAAuB3zD,EAyJ5B,SAzJK2zD,GAyJOkC,EAAuBC,EAA0B3nD,EAAqB0jD,EAAuBC,EAAsBiE,EAA0BC,EAA6BC,EAA8BlE,GAAxM,GAAA8D,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAA3nD,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA0jD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAiE,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAlE,QAAA,GAAkB,CAAlBA,EAAA,KAEnN/xD,EAAAlB,KAAAO,KA9IOA,MAAA2yD,aAAsB,CAgJ7B3yD,MAAK62D,WAAaL,CAClBx2D,MAAKy0D,eAAiBgC,CACtBz2D,MAAK+O,QAAUD,CACf9O,MAAK82D,YAActE,CACnBxyD,MAAK+2D,YAActE,CACnBzyD,MAAKg3D,WAAaN,CAClB12D,MAAKi3D,cAAgBN,CACrB32D,MAAKk3D,eAAiBN,CACtB52D,MAAK8yD,KAAOJ,EAnJb9xD,OAAAC,eAAWyzD,EAAA/zD,UAAA,atGs7fJO,IsGt7fP,WAEC,MAAOd,MAAK62D,YtGu7fNtzD,IsGp7fP,SAAqBC,GAEpBxD,KAAK62D,WAAarzD,CAClBxD,MAAK+yD,wBtGq7fC/xD,WAAY,KACZC,aAAc,MsGh7frBL,QAAAC,eAAWyzD,EAAA/zD,UAAA,gBtGs7fJO,IsGt7fP,WAEC,MAAOd,MAAKy0D,gBtGu7fNlxD,IsGp7fP,SAAwBC,GAEvBxD,KAAKy0D,eAAiBjxD,CACtBxD,MAAK+yD,wBtGq7fC/xD,WAAY,KACZC,aAAc,MsGh7frBL,QAAAC,eAAWyzD,EAAA/zD,UAAA,UtGs7fJO,IsGt7fP,WAEC,MAAOd,MAAK+O,StGu7fNxL,IsGp7fP,SAAkBC,GAEjBxD,KAAK+O,QAAUvL,CACfxD,MAAK+yD,wBtGq7fC/xD,WAAY,KACZC,aAAc,MsGh7frBL,QAAAC,eAAWyzD,EAAA/zD,UAAA,atGs7fJO,IsGt7fP,WAEC,MAAOd,MAAK82D,atGu7fNvzD,IsGp7fP,SAAqBC,GAEpBxD,KAAKm3D,aAAa3zD,ItGq7fZxC,WAAY,KACZC,aAAc,MsGn7fdqzD,GAAA/zD,UAAA42D,aAAP,SAAoB3zD,GAEnBxD,KAAK82D,YAActzD,CACnBxD,MAAK+yD,sBACL/yD,MAAKgzD,kBAMNpyD,QAAAC,eAAWyzD,EAAA/zD,UAAA,atGo7fJO,IsGp7fP,WAEC,MAAOd,MAAK+2D,atGq7fNxzD,IsGl7fP,SAAqBC,GAGpBxD,KAAKo3D,aAAa5zD,ItGk7fZxC,WAAY,KACZC,aAAc,MsG/6fdqzD,GAAA/zD,UAAA62D,aAAP,SAAoB5zD,GAEnBxD,KAAK+2D,YAAcvzD,CACnBxD,MAAK+yD,sBACL/yD,MAAKgzD,kBAONpyD,QAAAC,eAAWyzD,EAAA/zD,UAAA,atG+6fJO,IsG/6fP,WAEC,MAAOd,MAAKg3D,YtGg7fNzzD,IsG76fP,SAAqBC,GAEpBxD,KAAKg3D,WAAaxzD,CAClBxD,MAAK+yD,wBtG86fC/xD,WAAY,KACZC,aAAc,MsGz6frBL,QAAAC,eAAWyzD,EAAA/zD,UAAA,gBtG+6fJO,IsG/6fP,WAEC,MAAOd,MAAKi3D,etGg7fN1zD,IsG76fP,SAAwBC,GAEvBxD,KAAKi3D,cAAgBzzD,CACrBxD,MAAK+yD,wBtG86fC/xD,WAAY,KACZC,aAAc,MsGz6frBL,QAAAC,eAAWyzD,EAAA/zD,UAAA,OtG+6fJO,IsG/6fP,WAEC,MAAOd,MAAK8yD,MtGg7fNvvD,IsG76fP,SAAeC,GAEdxD,KAAK8yD,KAAOtvD,CACZxD,MAAK+yD,wBtG86fC/xD,WAAY,KACZC,aAAc,MsG94fdqzD,GAAA/zD,UAAA0yD,gBAAP,SAAuBx/C,EAAwB8d,GAE9C,GAAItrB,EACJ,IAAId,EACJ,IAAI6lB,EACJ,IAAIS,EAEJ,IAAItsB,EACJ,IAAIoI,EACJ,IAAIJ,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI+tD,EACJ,IAAIC,EAEJ,IAAI53C,EACJ,IAAI45C,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIhE,GAAoB,CAExB,IAAIJ,EACJ,IAAIC,EACJ,IAAIF,GAAoB,CACxB,IAAIsE,GAAyB,CAC7B,IAAIC,GAA2B,CAE/B,IAAIpE,EACJ,IAAIC,EAGJvzD,MAAK2yD,aAAe,CtG84fd,IsG34fFgF,GAA8B,EAAEhvD,KAAKmrD,GAAG9zD,KAAK82D,WAEjD,IAAIvlC,GAAgB,sBAAuB,CAE1C,GAAIkiC,GAA6DhgD,CAGjE,IAAIzT,KAAKk3D,eAAgB,CACxBl3D,KAAK2yD,eAAiB3yD,KAAK+2D,YAAc,IAAI/2D,KAAK82D,YAAc,EAChEtD,IAAcxzD,KAAK+2D,YAAY/2D,KAAK82D,YAAY,EAEjD,GAAI92D,KAAKg3D,WAAY,CACpBh3D,KAAK2yD,cAAgB,GAAG3yD,KAAK82D,YAAc,EAC3CtD,IAAcxzD,KAAK82D,YAAY,EAEhC,GAAI92D,KAAKi3D,cAAe,CACvBj3D,KAAK2yD,cAAgB,GAAG3yD,KAAK82D,YAAc,EAC3CtD,IAAcxzD,KAAK82D,YAAY,EAIhC,GAAI92D,KAAK2yD,cAAgBc,EAAiBC,YAAa,CACtDztD,EAAUwtD,EAAiBxtD,OAC3Bd,GAAYsuD,EAAiBtuD,SAC7B6lB,GAAUyoC,EAAiBE,aAC3BloC,GAAWgoC,EAAiBG,mBACtB,CACN3tD,EAAU,GAAI3B,OAAckvD,EAC5BruD,GAAY,GAAIb,OAActE,KAAK2yD,aAAa,EAChD3nC,GAAU,GAAI1mB,OAActE,KAAK2yD,aAAa,EAC9ClnC,GAAW,GAAInnB,OAActE,KAAK2yD,aAAa,EAE/C3yD,MAAKgzD,kBAGNoC,EAAO,CACPC,GAAO,CAGP,IAAIr1D,KAAKg3D,YAAch3D,KAAK62D,WAAa,EAAG,CAE3CxvD,GAAK,GAAIrH,KAAK+O,OAGd,IAAI/O,KAAK8yD,KAAM,CACdQ,EAAK,CACLC,GAAK,CACLH,IAAS/rD,CACTgsD,GAAQ,MAEF,CACNC,EAAK,CACLC,IAAM,CACNH,GAAQ,CACRC,GAAQhsD,EAGTlC,EAAUiwD,GAAQ,CAClBjwD,GAAUiwD,EAAO,GAAKhC,CACtBjuD,GAAUiwD,EAAO,GAAK/B,CACtBroC,GAAQoqC,GAAQ,CAChBpqC,GAAQoqC,EAAO,GAAK9B,CACpBtoC,GAAQoqC,EAAO,GAAK7B,CACpB9nC,GAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAO,GAAK,CACrB3pC,GAAS2pC,EAAO,GAAK,CACrBA,IAAQ,CAERqC,IAAmB,CAEnB,KAAKt4D,EAAI,EAAGA,GAAKa,KAAK82D,cAAe33D,EAAG,CAGvCk4D,EAAkBl4D,EAAEw4D,CACpBxwD,GAAInH,KAAK62D,WAAWluD,KAAKm4B,IAAIu2B,EAC7BjwD,GAAIpH,KAAK62D,WAAWluD,KAAKk4B,IAAIw2B,EAE7B,IAAIr3D,KAAK8yD,KAAM,CACdM,GAAS/rD,CACTgsD,GAAQjsD,MACF,CACNgsD,EAAQhsD,CACRisD,GAAQhsD,EAGT,GAAIlI,GAAKa,KAAK82D,YAAa,CAC1B3xD,EAAUiwD,GAAQjwD,EAAUguD,EAAa,EACzChuD,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,EAC7ChuD,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,OAEvC,CACNhuD,EAAUiwD,GAAQjuD,CAClBhC,GAAUiwD,EAAO,GAAKhC,CACtBjuD,GAAUiwD,EAAO,GAAK/B,EAGvBroC,EAAQoqC,GAAQ,CAChBpqC,GAAQoqC,EAAO,GAAK9B,CACpBtoC,GAAQoqC,EAAO,GAAK7B,CACpB9nC,GAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAO,GAAK,CACrB3pC,GAAS2pC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIj2D,EAAI,EAAG,CAEV8G,EAAQovD,KAAUoC,EAAkB,CACpCxxD,GAAQovD,KAAUqC,CAClBzxD,GAAQovD,KAAUoC,EAGnBA,GAAmB,GAKrB,GAAIz3D,KAAKi3D,eAAiBj3D,KAAKy0D,eAAiB,EAAG,CAElDptD,EAAI,GAAIrH,KAAK+O,OAEbokD,GAAasE,EAAgB,CAE7BC,GAAoBD,CAGpB,IAAIz3D,KAAK8yD,KAAM,CACdQ,GAAM,CACNC,GAAK,CACLH,IAAS/rD,CACTgsD,GAAQ,MACF,CACNC,EAAK,CACLC,GAAK,CACLH,GAAQ,CACRC,GAAQhsD,EAGT,GAAIlI,EAAI,EAAG,CACVgG,EAAUiwD,GAAQ,CAClBjwD,GAAUiwD,EAAO,GAAKhC,CACtBjuD,GAAUiwD,EAAO,GAAK/B,CACtBroC,GAAQoqC,GAAQ,CAChBpqC,GAAQoqC,EAAO,GAAK9B,CACpBtoC,GAAQoqC,EAAO,GAAK7B,CACpB9nC,GAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAO,GAAK,CACrB3pC,GAAS2pC,EAAO,GAAK,CACrBA,IAAQ,EAGTqC,GAAmB,CAEnB,KAAKt4D,EAAI,EAAGA,GAAKa,KAAK82D,cAAe33D,EAAG,CAGvCk4D,EAAkBl4D,EAAEw4D,CACpBxwD,GAAInH,KAAKy0D,eAAe9rD,KAAKm4B,IAAIu2B,EACjCjwD,GAAIpH,KAAKy0D,eAAe9rD,KAAKk4B,IAAIw2B,EAEjC,IAAIr3D,KAAK8yD,KAAM,CACdM,GAAS/rD,CACTgsD,GAAQjsD,MACF,CACNgsD,EAAQhsD,CACRisD,GAAQhsD,EAGT,GAAIlI,GAAKa,KAAK82D,YAAa,CAC1B3xD,EAAUiwD,GAAQjwD,EAAUguD,EAAa,EACzChuD,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,EAC7ChuD,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,OACvC,CACNhuD,EAAUiwD,GAAQjuD,CAClBhC,GAAUiwD,EAAO,GAAKhC,CACtBjuD,GAAUiwD,EAAO,GAAK/B,EAGvBroC,EAAQoqC,GAAQ,CAChBpqC,GAAQoqC,EAAO,GAAK9B,CACpBtoC,GAAQoqC,EAAO,GAAK7B,CACpB9nC,GAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAO,GAAK,CACrB3pC,GAAS2pC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIj2D,EAAI,EAAG,CAEV8G,EAAQovD,KAAUoC,EAAkB,CACpCxxD,GAAQovD,KAAUoC,CAClBxxD,GAAQovD,KAAUqC,EAGnBD,GAAmB,GAQrBH,EAAMt3D,KAAKy0D,eAAiBz0D,KAAK62D,UACjCU,GAAcD,EAAGt3D,KAAK+O,OACtByoD,GAAeD,GAAe,EAAI,EAAIv3D,KAAK+O,QAAQuoD,CAGnD,IAAIt3D,KAAKk3D,eAAgB,CACxB,GAAIh4D,EACJ,IAAIgB,EACJ,IAAIgvB,EACJ,IAAIjvB,EACJ,IAAI23D,GAAYC,EAAYC,EAAgBC,CAE5C,KAAKxwD,EAAI,EAAGA,GAAKvH,KAAK+2D,cAAexvD,EAAG,CACvCkW,EAASzd,KAAK62D,WAAetvD,EAAEvH,KAAK+2D,aAAc/2D,KAAK62D,WAAa72D,KAAKy0D,eACzEptD,KAAMrH,KAAK+O,QAAQ,GAAMxH,EAAEvH,KAAK+2D,YAAY/2D,KAAK+O,OAEjDokD,GAAasE,EAAgB,CAE7B,KAAKt4D,EAAI,EAAGA,GAAKa,KAAK82D,cAAe33D,EAAG,CAEvCk4D,EAAkBl4D,EAAEw4D,CACpBxwD,GAAIsW,EAAO9U,KAAKm4B,IAAIu2B,EACpBjwD,GAAIqW,EAAO9U,KAAKk4B,IAAIw2B,EACpBO,GAAMJ,EAAY7uD,KAAKm4B,IAAIu2B,EAC3BQ,GAAML,EAAY7uD,KAAKk4B,IAAIw2B,EAE3B,IAAIr3D,KAAK8yD,KAAM,CACdQ,EAAK,CACLC,IAAMqE,CACNxE,IAAS/rD,CACTgsD,GAAQjsD,CACR0wD,GAAUP,CACVQ,GAAUF,MAEJ,CACNvE,GAAMsE,CACNrE,GAAK,CACLH,GAAQhsD,CACRisD,GAAQhsD,CACRywD,GAAUD,CACVE,GAAUR,EAGX,GAAIp4D,GAAKa,KAAK82D,YAAa,CAC1B3xD,EAAUiwD,GAAQjwD,EAAUguD,EAC5BhuD,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,EAC7ChuD,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,EAC7CnoC,GAAQoqC,GAAQwC,CAChB5sC,GAAQoqC,EAAO,GAAKmC,CACpBvsC,GAAQoqC,EAAO,GAAKyC,CACpBpsC,GAAS2pC,GAAQyC,CACjBpsC,GAAS2pC,EAAO,GAAK9B,CACrB7nC,GAAS2pC,EAAO,GAAK7B,MACf,CACNpuD,EAAUiwD,GAAQjuD,CAClBhC,GAAUiwD,EAAO,GAAKhC,CACtBjuD,GAAUiwD,EAAO,GAAK/B,CACtBroC,GAAQoqC,GAAQwC,CAChB5sC,GAAQoqC,EAAO,GAAK0C,CACpB9sC,GAAQoqC,EAAO,GAAK2C,CACpBtsC,GAAS2pC,IAASyC,CAClBpsC,GAAS2pC,EAAO,GAAK9B,CACrB7nC,GAAS2pC,EAAO,GAAK7B,EAEtB6B,GAAQ,CAGR,IAAIj2D,EAAI,GAAKoI,EAAI,EAAG,CACnBrI,EAAIu4D,CACJv3D,GAAIu3D,EAAkB,CACtBvoC,GAAIhvB,EAAIF,KAAK82D,YAAc,CAC3B72D,GAAIf,EAAIc,KAAK82D,YAAc,CAE3B7wD,GAAQovD,KAAUn2D,CAClB+G,GAAQovD,KAAUn1D,CAClB+F,GAAQovD,KAAUnmC,CAElBjpB,GAAQovD,KAAUn2D,CAClB+G,GAAQovD,KAAUnmC,CAClBjpB,GAAQovD,KAAUp1D,EAGnBw3D,MAMHhE,EAAiBztD,cAAcC,EAE/BwtD,GAAiBhvD,gBAAgBU,EACjCsuD,GAAiBlpC,oBAAoBS,EACrCyoC,GAAiBjpC,qBAAqBiB,OAEhC,IAAI8F,GAAgB,kBAAmB,CAC7C,GAAIqkC,GAAiDniD,CAErD,IAAIoiD,IAAsB71D,KAAK+2D,YAAc,GAAI/2D,KAAgB,YAAIA,KAAK82D,WAC1E,IAAI/yC,EACJ,IAAIC,EACJ,IAAIlF,EAEJ,IAAI82C,EAAa3vD,SAAW,MAAQ4vD,GAAeD,EAAaC,YAAa,CAC5E9xC,EAAiB6xC,EAAa7xC,cAC9BC,GAAe4xC,EAAa5xC,YAC5BlF,GAAY82C,EAAa92C,cACnB,CACNiF,EAAiB,GAAIzf,OAAcuxD,EAAY,EAC/C7xC,GAAe,GAAI1f,OAAcuxD,EAAY,EAC7C/2C,GAAY,GAAIxa,OAAcuxD,GAG/BT,EAAO,CAEPC,GAAO,CAIP,KAAK9tD,EAAI,EAAGA,GAAKvH,KAAK+2D,cAAexvD,EAAG,CACvCkW,EAASzd,KAAK62D,WAAetvD,EAAEvH,KAAK+2D,aAAc/2D,KAAK62D,WAAa72D,KAAKy0D,eACzEptD,GAAIrH,KAAK+O,SAASxH,EAAEvH,KAAK+2D,YAAc,GAEvC,KAAK53D,EAAI,EAAGA,GAAKa,KAAK82D,cAAe33D,EAAG,CAEvCk4D,EAAkBl4D,EAAEw4D,CACpBxwD,GAAIsW,EAAO9U,KAAKm4B,IAAIu2B,EACpBjwD,GAAIqW,EAAO9U,KAAKk4B,IAAIw2B,EAEpB,IAAIr3D,KAAK8yD,KAAM,CACdM,GAAS/rD,CACTgsD,GAAQjsD,MACF,CACNgsD,EAAQhsD,CACRisD,GAAQhsD,EAGT,GAAIlI,EAAI,EAAG,CACV6kB,EAAaoxC,GAAQjuD,CACrB6c,GAAaoxC,EAAO,GAAKhC,CACzBpvC,GAAaoxC,EAAO,GAAK/B,CAEzBv0C,GAAUu2C,KAAU,CAEpBD,IAAQ,CAGRrxC,GAAeqxC,GAAQpxC,EAAaoxC,EAAOp1D,KAAK82D,YAAY,EAC5D/yC,GAAeqxC,EAAO,GAAKpxC,EAAaoxC,EAAO,EAAIp1D,KAAK82D,YAAY,EACpE/yC,GAAeqxC,EAAO,GAAKpxC,EAAaoxC,EAAO,EAAIp1D,KAAK82D,YAAY,EAEpE9yC,GAAaoxC,GAAQjuD,CACrB6c,GAAaoxC,EAAO,GAAKhC,CACzBpvC,GAAaoxC,EAAO,GAAK/B,CAEzBv0C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAGT,GAAIj2D,EAAIa,KAAK82D,YAAa,CACzB/yC,EAAeqxC,GAAQjuD,CACvB4c,GAAeqxC,EAAO,GAAKhC,CAC3BrvC,GAAeqxC,EAAO,GAAK/B,IAM9BuC,EAAanxD,gBAAgBsf,EAAgBC,EAC7C4xC,GAAapyC,gBAAgB1E,IAOxBw1C,GAAA/zD,UAAA4zD,WAAP,SAAkB1gD,EAAwB8d,GAEzC,GAAIpyB,EACJ,IAAIoI,EACJ,IAAIJ,EACJ,IAAIC,EACJ,IAAIiwD,EACJ,IAAIzxD,EAEJ,IAAI2rB,GAAgB,sBAAuB,CAE1C,GAAIkiC,GAA6DhgD,CAGjE,IAAIggD,EAAiB7tD,KAAO5F,KAAK2yD,cAAgBc,EAAiBC,YAAa,CAC9E9tD,EAAM6tD,EAAiB7tD,QACjB,CACNA,EAAM,GAAItB,OAActE,KAAK2yD,aAAa,GtGm1flC,GsG/0fLgF,GAA8B,EAAEhvD,KAAKmrD,GAAG9zD,KAAK82D,WtGi1fxC,IsG90fL5xD,GAAe,CAGnB,IAAIlF,KAAKg3D,WAAY,CAEpBpxD,EAAIV,KAAW,GAAIuuD,EAAiBntD,MACpCV,GAAIV,KAAW,GAAIuuD,EAAiBltD,MAEpC,KAAKpH,EAAI,EAAGA,GAAKa,KAAK82D,cAAe33D,EAAG,CAEvCk4D,EAAkBl4D,EAAEw4D,CACpBxwD,GAAI,GAAM,IAAMwB,KAAKm4B,IAAIu2B,EACzBjwD,GAAI,GAAM,GAAIuB,KAAKk4B,IAAIw2B,EAEvBzxD,GAAIV,KAAWiC,EAAEssD,EAAiBntD,MAClCV,GAAIV,KAAWkC,EAAEqsD,EAAiBltD,QAKpC,GAAIvG,KAAKi3D,cAAe,CAEvBrxD,EAAIV,KAAW,GAAIuuD,EAAiBntD,MACpCV,GAAIV,KAAW,GAAIuuD,EAAiBltD,MAEpC,KAAKpH,EAAI,EAAGA,GAAKa,KAAK82D,cAAe33D,EAAG,CAEvCk4D,EAAkBl4D,EAAEw4D,CACpBxwD,GAAI,GAAM,GAAIwB,KAAKm4B,IAAIu2B,EACvBjwD,GAAI,GAAM,GAAIuB,KAAKk4B,IAAIw2B,EAEvBzxD,GAAIV,KAAWiC,EAAEssD,EAAiBntD,MAClCV,GAAIV,KAAWkC,EAAEqsD,EAAiBltD,QAKpC,GAAIvG,KAAKk3D,eAAgB,CACxB,IAAK3vD,EAAI,EAAGA,GAAKvH,KAAK+2D,cAAexvD,EAAG,CACvC,IAAKpI,EAAI,EAAGA,GAAKa,KAAK82D,cAAe33D,EAAG,CAEvCyG,EAAIV,KAAa/F,EAAEa,KAAK82D,YAAcrD,EAAiBntD,MACvDV,GAAIV,KAAaqC,EAAEvH,KAAK+2D,YAActD,EAAiBltD,SAM1DktD,EAAiB7uD,UAAUgB,OAErB,IAAI2rB,GAAgB,kBAAmB,GAIhD,OAAA+iC,IAtpBsChC,EAwpBtC1yD,GAAiCJ,QAAxB80D,ItGo0fNF,iDAAiD,mDAAmD4D,mDAAmD,SAASt5D,EAAQkB,EAAOJ,GAClL,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuGt+gBtB,IAAOiyD,GAAmB5zD,EAAY,iDvG4+gBtC,IuGv+gBMu5D,GAAoB,SAAAt3D,GAASZ,EAA7Bk4D,EAAoBt3D,EAkBzB,SAlBKs3D,GAkBOjnD,EAAoBlC,EAAqB0jD,EAAsBC,EAAsBC,EAAoBwF,GAAzG,GAAAlnD,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAlC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA0jD,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAwF,QAAA,GAA2B,CAA3BA,EAAA,MAGpHv3D,EAAAlB,KAAAO,KAEAA,MAAK4yD,WAAaJ,CAClBxyD,MAAK6yD,WAAaJ,CAClBzyD,MAAK8yD,KAAOJ,CACZ1yD,MAAKwQ,OAASQ,CACdhR,MAAK+O,QAAUD,CACf9O,MAAKm4D,aAAeD,EAOrBt3D,OAAAC,eAAWo3D,EAAA13D,UAAA,avGk+gBJO,IuGl+gBP,WAEC,MAAOd,MAAK4yD,YvGm+gBNrvD,IuGh+gBP,SAAqBC,GAGpBxD,KAAK4yD,WAAapvD,CAElBxD,MAAK+yD,sBACL/yD,MAAKgzD,mBvG+9gBChyD,WAAY,KACZC,aAAc,MuGx9gBrBL,QAAAC,eAAWo3D,EAAA13D,UAAA,avG+9gBJO,IuG/9gBP,WAEC,MAAOd,MAAK6yD,YvGg+gBNtvD,IuG79gBP,SAAqBC,GAGpBxD,KAAK6yD,WAAarvD,CAElBxD,MAAK+yD,sBACL/yD,MAAKgzD,mBvG49gBChyD,WAAY,KACZC,aAAc,MuGt9gBrBL,QAAAC,eAAWo3D,EAAA13D,UAAA,OvG49gBJO,IuG59gBP,WAEC,MAAOd,MAAK8yD,MvG69gBNvvD,IuG19gBP,SAAeC,GAEdxD,KAAK8yD,KAAOtvD,CAEZxD,MAAK+yD,wBvG09gBC/xD,WAAY,KACZC,aAAc,MuGr9gBrBL,QAAAC,eAAWo3D,EAAA13D,UAAA,evG29gBJO,IuG39gBP,WAEC,MAAOd,MAAKm4D,cvG49gBN50D,IuGz9gBP,SAAuBC,GAEtBxD,KAAKm4D,aAAe30D,CAEpBxD,MAAK+yD,wBvGy9gBC/xD,WAAY,KACZC,aAAc,MuGp9gBrBL,QAAAC,eAAWo3D,EAAA13D,UAAA,SvG09gBJO,IuG19gBP,WAEC,MAAOd,MAAKwQ,QvG29gBNjN,IuGx9gBP,SAAiBC,GAEhBxD,KAAKwQ,OAAShN,CAEdxD,MAAK+yD,wBvGw9gBC/xD,WAAY,KACZC,aAAc,MuGn9gBrBL,QAAAC,eAAWo3D,EAAA13D,UAAA,UvGy9gBJO,IuGz9gBP,WAEC,MAAOd,MAAK+O,SvG09gBNxL,IuGv9gBP,SAAkBC,GAEjBxD,KAAK+O,QAAUvL,CAEfxD,MAAK+yD,wBvGu9gBC/xD,WAAY,KACZC,aAAc,MuGl9gBdg3D,GAAA13D,UAAA0yD,gBAAP,SAAuBx/C,EAAwB8d,GAE9C,GAAItrB,EACJ,IAAIkB,GAAUC,CACd,IAAIosD,EACJ,IAAI4E,EACJ,IAAIC,GAAYr4D,KAAK4yD,WAAa,CAClC,IAAIc,EAEJ,IAAI0B,GAAaC,CAEjB,IAAIiD,EACJ,IAAIC,EAEJ,IAAIhnC,GAAgB,sBAAuB,CAE1C,GAAIkiC,GAA6DhgD,CAEjE,IAAIigD,IAAsB1zD,KAAK6yD,WAAa,GAAGwF,CAC/C,IAAIlzD,EACJ,IAAI6lB,EACJ,IAAIS,EAEJ,IAAIzrB,KAAKm4D,aACRzE,GAAe,CAEhBF,GAAaxzD,KAAK6yD,WAAW7yD,KAAK4yD,WAAW,CAE7C,IAAI5yD,KAAKm4D,aACR3E,GAAc,CAEf,IAAIC,EAAiBxtD,SAAW,MAAQutD,GAAcC,EAAiBxtD,QAAQvG,OAAQ,CACtFuG,EAAUwtD,EAAiBxtD,YACrB,CACNA,EAAU,GAAI3B,OAAckvD,EAE5BxzD,MAAKgzD,kBAGN,GAAIU,GAAeD,EAAiBC,YAAa,CAChDvuD,EAAYsuD,EAAiBtuD,SAC7B6lB,GAAUyoC,EAAiBE,aAC3BloC,GAAWgoC,EAAiBG,mBACtB,CACNzuD,EAAY,GAAIb,OAAcovD,EAAY,EAC1C1oC,GAAU,GAAI1mB,OAAcovD,EAAY,EACxCjoC,GAAW,GAAInnB,OAAcovD,EAAY,EAEzC1zD,MAAKgzD,kBAGNqC,EAAO,CAEPD,GAAO,CAEP,KAAKmD,EAAK,EAAGA,GAAMv4D,KAAK6yD,aAAc0F,EAAI,CAEzC,IAAKD,EAAK,EAAGA,GAAMt4D,KAAK4yD,aAAc0F,EAAI,CACzCnxD,GAAKmxD,EAAGt4D,KAAK4yD,WAAa,IAAI5yD,KAAKwQ,MACnCpJ,IAAKmxD,EAAGv4D,KAAK6yD,WAAa,IAAI7yD,KAAK+O,OAEnC5J,GAAUiwD,GAAQjuD,CAClB,IAAInH,KAAK8yD,KAAM,CACd3tD,EAAUiwD,EAAO,GAAK,CACtBjwD,GAAUiwD,EAAO,GAAKhuD,MAChB,CACNjC,EAAUiwD,EAAO,GAAKhuD,CACtBjC,GAAUiwD,EAAO,GAAK,EAGvBpqC,EAAQoqC,GAAQ,CAEhB,IAAIp1D,KAAK8yD,KAAM,CACd9nC,EAAQoqC,EAAO,GAAK,CACpBpqC,GAAQoqC,EAAO,GAAK,MACd,CACNpqC,EAAQoqC,EAAO,GAAK,CACpBpqC,GAAQoqC,EAAO,IAAM,EAGtB3pC,EAAS2pC,GAAQ,CACjB3pC,GAAS2pC,EAAO,GAAK,CACrB3pC,GAAS2pC,EAAO,GAAK,CAErBA,IAAQ,CAGR,IAAIp1D,KAAKm4D,aAAc,CAEtB,IAAK,GAAIh5D,GAAWi2D,EAAMj2D,EAAIi2D,EAAO,IAAKj2D,EAAG,CAC5CgG,EAAUhG,GAAKgG,EAAUhG,EAAI,EAC7B6rB,GAAQ7rB,IAAM6rB,EAAQ7rB,EAAI,EAC1BssB,GAAStsB,IAAMssB,EAAStsB,EAAI,GAG7Bi2D,GAAQ,EAIT,GAAIkD,GAAMt4D,KAAK4yD,YAAc2F,GAAMv4D,KAAK6yD,WAAY,CAEnDuF,EAAOE,EAAKC,EAAGF,CACf,IAAIG,GAAcx4D,KAAKm4D,aAAc,EAAI,CAEzClyD,GAAQovD,KAAU+C,EAAKI,CACvBvyD,GAAQovD,MAAW+C,EAAOC,GAAIG,CAC9BvyD,GAAQovD,MAAW+C,EAAOC,EAAK,GAAGG,CAClCvyD,GAAQovD,KAAU+C,EAAKI,CACvBvyD,GAAQovD,MAAW+C,EAAOC,EAAK,GAAGG,CAClCvyD,GAAQovD,MAAW+C,EAAO,GAAGI,CAE7B,IAAIx4D,KAAKm4D,aAAc,CAEtBlyD,EAAQovD,MAAW+C,EAAOC,EAAK,GAAGG,EAAO,CACzCvyD,GAAQovD,MAAW+C,EAAOC,GAAIG,EAAO,CACrCvyD,GAAQovD,KAAU+C,EAAKI,EAAO,CAC9BvyD,GAAQovD,MAAW+C,EAAO,GAAGI,EAAO,CACpCvyD,GAAQovD,MAAW+C,EAAOC,EAAK,GAAGG,EAAO,CACzCvyD,GAAQovD,KAAU+C,EAAKI,EAAO,KAOlC/E,EAAiBztD,cAAcC,EAE/BwtD,GAAiBhvD,gBAAgBU,EACjCsuD,GAAiBlpC,oBAAoBS,EACrCyoC,GAAiBjpC,qBAAqBiB;KAEhC,IAAI8F,GAAgB,kBAAmB,CAC7C,GAAIqkC,GAAiDniD,CAErD,IAAIoiD,GAAsB71D,KAAK6yD,WAAa,EAAKwF,CACjD,IAAIt0C,EACJ,IAAIC,EACJ,IAAIlF,EAEJ,IAAIw2C,GAAYt1D,KAAKwQ,OAAO,CAC5B,IAAI+kD,GAAYv1D,KAAK+O,QAAQ,CAG7B,IAAI6mD,EAAa3vD,SAAW,MAAQ4vD,GAAeD,EAAaC,YAAa,CAC5E9xC,EAAiB6xC,EAAa7xC,cAC9BC,GAAe4xC,EAAa5xC,YAC5BlF,GAAY82C,EAAa92C,cACnB,CACNiF,EAAiB,GAAIzf,OAAcuxD,EAAY,EAC/C7xC,GAAe,GAAI1f,OAAcuxD,EAAY,EAC7C/2C,GAAY,GAAIxa,OAAcuxD,GAG/BR,EAAO,CAEPD,GAAO,CAEP,KAAKmD,EAAK,EAAGA,GAAMv4D,KAAK6yD,aAAc0F,EAAI,CACzCx0C,EAAeqxC,IAASE,CACxBvxC,GAAeqxC,EAAO,GAAK,CAC3BrxC,GAAeqxC,EAAO,GAAKmD,EAAGv4D,KAAK+O,QAAUwmD,CAE7CvxC,GAAaoxC,GAAQE,CACrBtxC,GAAaoxC,EAAO,GAAK,CACzBpxC,GAAaoxC,EAAO,GAAKmD,EAAGv4D,KAAK+O,QAAUwmD,CAE3Cz2C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAIT,IAAKkD,EAAK,EAAGA,GAAMt4D,KAAK4yD,aAAc0F,EAAI,CACzCv0C,EAAeqxC,GAAQkD,EAAGt4D,KAAKwQ,OAAS8kD,CACxCvxC,GAAeqxC,EAAO,GAAK,CAC3BrxC,GAAeqxC,EAAO,IAAMG,CAE5BvxC,GAAaoxC,GAAQkD,EAAGt4D,KAAKwQ,OAAS8kD,CACtCtxC,GAAaoxC,EAAO,GAAK,CACzBpxC,GAAaoxC,EAAO,GAAKG,CAEzBz2C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAITQ,EAAanxD,gBAAgBsf,EAAgBC,EAC7C4xC,GAAapyC,gBAAgB1E,IAOxBm5C,GAAA13D,UAAA4zD,WAAP,SAAkB1gD,EAAwB8d,GAEzC,GAAI3rB,EACJ,IAAI8tD,EAEJ,IAAIniC,GAAgB,sBAAuB,CAE1CmiC,GAAgB1zD,KAAK6yD,WAAa,IAAM7yD,KAAK4yD,WAAa,EAE1D,IAAI5yD,KAAKm4D,aACRzE,GAAe,CAEhB,IAAID,GAA6DhgD,CAEjE,IAAIggD,EAAiB7tD,KAAO8tD,GAAeD,EAAiBC,YAAa,CACxE9tD,EAAM6tD,EAAiB7tD,QACjB,CACNA,EAAM,GAAItB,OAAcovD,EAAY,EACpC1zD,MAAK+yD,uBAGN,GAAI7tD,GAAe,CAEnB,KAAK,GAAIqzD,GAAY,EAAGA,GAAMv4D,KAAK6yD,aAAc0F,EAAI,CAEpD,IAAK,GAAID,GAAY,EAAGA,GAAMt4D,KAAK4yD,aAAc0F,EAAI,CACpD1yD,EAAIV,GAAUozD,EAAGt4D,KAAK4yD,WAAYa,EAAiBntD,MACnDV,GAAIV,EAAQ,IAAM,EAAIqzD,EAAGv4D,KAAK6yD,YAAYY,EAAiBltD,MAC3DrB,IAAS,CAET,IAAIlF,KAAKm4D,aAAc,CACtBvyD,EAAIV,GAAUozD,EAAGt4D,KAAK4yD,WAAYa,EAAiBntD,MACnDV,GAAIV,EAAM,IAAM,EAAIqzD,EAAGv4D,KAAK6yD,YAAYY,EAAiBltD,MACzDrB,IAAS,IAKZuuD,EAAiB7uD,UAAUgB,OAGrB,IAAI2rB,GAAgB,kBAAmB,GAIhD,OAAA0mC,IApXmC3F,EAsXL1yD,GAAAJ,QAArBy4D,IvGg6gBN7D,iDAAiD,mDAAmDqE,qDAAqD,SAAS/5D,EAAQkB,EAAOJ,GACpL,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwGnyhBtB,IAAOi0D,GAAuB51D,EAAW,qDxGyyhBzC,IwGpyhBMg6D,GAAsB,SAAA/3D,GAASZ,EAA/B24D,EAAsB/3D,EAiD3B,SAjDK+3D,GAiDOj7C,EAAqBk7C,EAAmBjG,GAAxC,GAAAj1C,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAk7C,QAAA,GAAiB,CAAjBA,EAAA,GAAmB,GAAAjG,QAAA,GAAkB,CAAlBA,EAAA,KAEnD/xD,EAAAlB,KAAAO,KAAMyd,EAAQ,EAAG,EAAGk7C,EAAO,EAAG,KAAM,MAAO,MAAOjG,GA7CnD9xD,OAAAC,eAAW63D,EAAAn4D,UAAA,UxGgzhBJO,IwGhzhBP,WAEC,MAAOd,MAAKy0D,gBxGizhBNlxD,IwG9yhBP,SAAkBC,GAEjBxD,KAAKy0D,eAAiBjxD,CACtBxD,MAAK+yD,wBxG+yhBC/xD,WAAY,KACZC,aAAc,MwG1yhBrBL,QAAAC,eAAW63D,EAAAn4D,UAAA,SxGgzhBJO,IwGhzhBP,WAEC,MAAOd,MAAK82D,axGizhBNvzD,IwG9yhBP,SAAiBC,GAEhBxD,KAAKm3D,aAAa3zD,IxG+yhBZxC,WAAY,KACZC,aAAc,MwG1yhBrBL,QAAAC,eAAW63D,EAAAn4D,UAAA,gBxGgzhBJO,IwGhzhBP,WAEC,MAAOd,MAAK+2D,axGizhBNxzD,IwG9yhBP,SAAwBC,GAEvBxD,KAAKo3D,aAAa5zD,IxG+yhBZxC,WAAY,KACZC,aAAc,MwGnyhBtB,OAAAy3D,IArDqCpE,EAuDrC10D,GAAgCJ,QAAvBk5D,IxGwyhBNhE,qDAAqD,uDAAuDN,kDAAkD,SAAS11D,EAAQkB,EAAOJ,GACzL,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyG32hBtB,IAAOG,GAAS9B,EAAc,oCAC9B,IAAOkM,GAAmBlM,EAAY,6CAGtC,IAAO2b,GAAQ3b,EAAe,mCAE9B,IAAOmkB,GAAmBnkB,EAAY,8CACtC,IAAOokB,GAAepkB,EAAa,0CACnC,IAAOisC,GAAIjsC,EAAgB,mCAE3B,IAAOwzD,GAAUxzD,EAAc,wCzG62hB/B,IyGx2hBM4zD,GAAmB,SAAA3xD,GAASZ,EAA5BuyD,EAAmB3xD,EAsExB,SAtEK2xD,GAsEOzoD,EAA8B0nB,GAA9B,GAAA1nB,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA0nB,QAAA,GAA2C,CAA3CA,EAAA,sBAEzC5wB,EAAAlB,KAAAO,KAtEMA,MAAA44D,WAAqB,IACrB54D,MAAA64D,SAAmB,IAMlB74D,MAAA84D,mBAA6B,IAiEpC94D,MAAKyrC,UAAY,GAAIpxB,EACrBra,MAAKmnB,UAAYtd,CACjB7J,MAAK+4D,cAAgBxnC,EA7DtB3wB,OAAAC,eAAWyxD,EAAA/xD,UAAA,azG+2hBJO,IyG/2hBP,WAEC,MAAON,GAAUw4D,kBzGg3hBXh4D,WAAY,KACZC,aAAc,MyG32hBrBL,QAAAC,eAAWyxD,EAAA/xD,UAAA,gBzGi3hBJO,IyGj3hBP,WAEC,MAAOd,MAAK+4D,ezGk3hBNx1D,IyG/2hBP,SAAwBC,GAEvB,GAAIxD,KAAK+4D,eAAiBv1D,EACzB,MAEDxD,MAAK+4D,cAAgBv1D,CAErBxD,MAAKi5D,0BzG82hBCj4D,WAAY,KACZC,aAAc,MyG52hBrBL,QAAAC,eAAWyxD,EAAA/xD,UAAA,YzG+2hBJO,IyG/2hBP,WAECd,KAAKyS,YAEL,OAAOzS,MAAKyrC,WzG+2hBNzqC,WAAY,KACZC,aAAc,MyG12hBrBL,QAAAC,eAAWyxD,EAAA/xD,UAAA,YzGg3hBJO,IyGh3hBP,WAEC,MAAOd,MAAKmnB,WzGi3hBN5jB,IyG92hBP,SAAoBC,GAEnB,GAAIA,GAASxD,KAAKmnB,UACjB,MAEDnnB,MAAKmnB,UAAY3jB,CAEjB,IAAIW,GAAanE,KAAKmyD,UAAUzyD,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,EAAKhF,IACvBa,KAAKmyD,UAAUhzD,GAAI0K,SAAW7J,KAAKmnB,WzG62hBtCnmB,WAAY,KACZC,aAAc,MyGz1hBdqxD,GAAA/xD,UAAA0yD,gBAAP,SAAuBx/C,EAAwB8d,GAE9C,KAAM,IAAI3mB,GAOJ0nD,GAAA/xD,UAAA4zD,WAAP,SAAkB1gD,EAAwB8d,GAEzC,KAAM,IAAI3mB,GAMJ0nD,GAAA/xD,UAAA04D,uBAAP,WAECj5D,KAAK84D,mBAAqB,IAC1B94D,MAAK44D,WAAa,IAClB54D,MAAK64D,SAAW,KAMVvG,GAAA/xD,UAAAwyD,qBAAP,WAEC/yD,KAAK44D,WAAa,KAMZtG,GAAA/xD,UAAAyyD,gBAAP,WAEChzD,KAAK64D,SAAW,KAMTvG,GAAA/xD,UAAA24D,mBAAR,WAGC,GAAIl5D,KAAK+J,aACR/J,KAAKyrC,UAAU5wB,kBAAkB7a,KAAK+J,aAEvC,IAAI/J,KAAK+4D,eAAiB,sBAAuB,CAChD,GAAItF,GAAuC,GAAI5wC,GAAoB,KACnE4wC,GAAiB0F,kBAAoB,KACrC1F,GAAiB2F,mBAAqB,KACtC3F,GAAiB4F,cAAgB,KACjCr5D,MAAKyrC,UAAUhxB,eAAeg5C,EAC9BzzD,MAAK+J,aAAe0pD,MACd,IAAIzzD,KAAK+4D,eAAiB,kBAAmB,CACnD/4D,KAAKyrC,UAAUhxB,eAAeza,KAAK+J,aAAe,GAAI+Y,IAGvD9iB,KAAK84D,mBAAqB,MAOnBxG,GAAA/xD,UAAA+4D,eAAR,WAECt5D,KAAKizD,gBAAgBjzD,KAAK+J,aAAc/J,KAAK+4D,cAE7C/4D,MAAK44D,WAAa,MAMXtG,GAAA/xD,UAAAqE,UAAR,WAEC5E,KAAKm0D,WAAWn0D,KAAK+J,aAAc/J,KAAK+4D,cAExC/4D,MAAK64D,SAAW,MAGVvG,GAAA/xD,UAAAkS,WAAP,WAEC,GAAIzS,KAAK84D,mBACR94D,KAAKk5D,oBAEN,IAAIl5D,KAAK44D,WACR54D,KAAKs5D,gBAEN,IAAIt5D,KAAK64D,SACR74D,KAAK4E,YAIA0tD,GAAA/xD,UAAA6xD,eAAP,WAEC,GAAImH,GAAY,GAAI5uB,GAAK3qC,KAAKyrC,UAAWzrC,KAAKmnB,UAC9CoyC,GAAK/mD,eAAiBxS,IAEtB,OAAOu5D,GAWT,OAAAjH,IApMkCJ,EAsMlCtyD,GAA6BJ,QAApB8yD,IzG8zhBN/4C,6CAA6ClY,UAAUD,oCAAoCC,UAAU8Y,mCAAmC,mCAAmCwI,0CAA0C,0CAA0CgC,8CAA8C,8CAA8C+lB,mCAAmC,mCAAmCunB,wCAAwC,0CAA0C3/B,oDAAoD,SAAS5zB,EAAQkB,EAAOJ,GAClkB,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0GnhiBtB,IAAOiyD,GAAmB5zD,EAAY,iD1GyhiBtC,I0GphiBMmzB,GAAqB,SAAAlxB,GAASZ,EAA9B8xB,EAAqBlxB,EA6E1B,SA7EKkxB,GA6EOpU,EAAoB+0C,EAAuBC,EAAuBC,GAAlE,GAAAj1C,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA+0C,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAE7E/xD,EAAAlB,KAAAO,KAEAA,MAAK+xB,QAAUtU,CACfzd,MAAK4yD,WAAaJ,CAClBxyD,MAAK6yD,WAAaJ,CAClBzyD,MAAK8yD,KAAOJ,EA1Eb9xD,OAAAC,eAAWgxB,EAAAtxB,UAAA,U1GmiiBJO,I0GniiBP,WAEC,MAAOd,MAAK+xB,S1GoiiBNxuB,I0GjiiBP,SAAkBC,GAEjBxD,KAAK+xB,QAAUvuB,CAEfxD,MAAK+yD,wB1GiiiBC/xD,WAAY,KACZC,aAAc,M0G5hiBrBL,QAAAC,eAAWgxB,EAAAtxB,UAAA,a1GkiiBJO,I0GliiBP,WAEC,MAAOd,MAAK4yD,Y1GmiiBNrvD,I0GhiiBP,SAAqBC,GAEpBxD,KAAK4yD,WAAapvD,CAElBxD,MAAK+yD,sBACL/yD,MAAKgzD,mB1GgiiBChyD,WAAY,KACZC,aAAc,M0G3hiBrBL,QAAAC,eAAWgxB,EAAAtxB,UAAA,a1GiiiBJO,I0GjiiBP,WAEC,MAAOd,MAAK6yD,Y1GkiiBNtvD,I0G/hiBP,SAAqBC,GAEpBxD,KAAK6yD,WAAarvD,CAElBxD,MAAK+yD,sBACL/yD,MAAKgzD,mB1G+hiBChyD,WAAY,KACZC,aAAc,M0G1hiBrBL,QAAAC,eAAWgxB,EAAAtxB,UAAA,O1GgiiBJO,I0GhiiBP,WAEC,MAAOd,MAAK8yD,M1GiiiBNvvD,I0G9hiBP,SAAeC,GAEdxD,KAAK8yD,KAAOtvD,CAEZxD,MAAK+yD,wB1G8hiBC/xD,WAAY,KACZC,aAAc,M0GvgiBd4wB,GAAAtxB,UAAA0yD,gBAAP,SAAuBx/C,EAAwB8d,GAE9C,GAAItrB,EACJ,IAAId,EACJ,IAAI6lB,EACJ,IAAIS,EAEJ,IAAItsB,EACJ,IAAIoI,EACJ,IAAI6tD,GAAaC,CAEjB,IAAIjC,EACJ,IAAIC,EACJ,IAAIK,EAGJ,IAAIniC,GAAgB,sBAAuB,CAE1C,GAAIkiC,GAA6DhgD,CAEjEigD,IAAe1zD,KAAK6yD,WAAa,IAAI7yD,KAAK4yD,WAAa,EAEvD,IAAIc,GAAeD,EAAiBC,aAAeD,EAAiBxtD,SAAW,KAAM,CACpFA,EAAUwtD,EAAiBxtD,OAC3Bd,GAAYsuD,EAAiBtuD,SAC7B6lB,GAAUyoC,EAAiBE,aAC3BloC,GAAWgoC,EAAiBG,mBACtB,CACN3tD,EAAU,GAAI3B,QAAetE,KAAK6yD,WAAa,GAAG7yD,KAAK4yD,WAAW,EAClEztD,GAAY,GAAIb,OAAcovD,EAAY,EAC1C1oC,GAAU,GAAI1mB,OAAcovD,EAAY,EACxCjoC,GAAW,GAAInnB,OAAcovD,EAAY,EAEzC1zD,MAAKgzD,kBAGNoC,EAAO,CACPC,GAAO,CAEP,IAAIlC,EACJ,IAAIG,EACJ,IAAIC,EAEJ,KAAKhsD,EAAI,EAAGA,GAAKvH,KAAK6yD,aAActrD,EAAG,CAEtC4rD,EAAaiC,CAEb,IAAIvB,GAAkBlrD,KAAKmrD,GAAGvsD,EAAEvH,KAAK6yD,UACrC,IAAIxrD,IAAYrH,KAAK+xB,QAAQppB,KAAKm4B,IAAI+yB,EACtC,IAAIE,GAAoB/zD,KAAK+xB,QAAQppB,KAAKk4B,IAAIgzB,EAE9C,KAAK10D,EAAI,EAAGA,GAAKa,KAAK4yD,aAAczzD,EAAG,CACtC,GAAI60D,GAAkB,EAAErrD,KAAKmrD,GAAG30D,EAAEa,KAAK4yD,UACvC,IAAIzrD,GAAW4sD,EAAWprD,KAAKm4B,IAAIkzB,EACnC,IAAI5sD,GAAW2sD,EAAWprD,KAAKk4B,IAAImzB,EACnC,IAAIC,GAAiB,EAAEtrD,KAAKC,KAAKzB,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,EAC/C,IAAI6sD,GAAgBvrD,KAAKC,KAAKxB,EAAEA,EAAID,EAAEA,EAEtC,IAAInH,KAAK8yD,KAAM,CAEdQ,EAAK,CACLC,GAAKW,EAAS,KAAM/sD,EAAE+sD,EAAS,CAC/Bd,IAAS/rD,CACTgsD,GAAQjsD,MAEF,CACNksD,EAAKY,EAAS,KAAM/sD,EAAE+sD,EAAS,CAC/BX,GAAK,CACLH,GAAQhsD,CACRisD,GAAQhsD,EAGT,GAAIlI,GAAKa,KAAK4yD,WAAY,CACzBztD,EAAUiwD,GAAQjwD,EAAUguD,EAC5BhuD,GAAUiwD,EAAK,GAAKjwD,EAAUguD,EAAa,EAC3ChuD,GAAUiwD,EAAK,GAAKjwD,EAAUguD,EAAa,EAC3CnoC,GAAQoqC,GAAQpqC,EAAQmoC,GAAehsD,EAAE8sD,EAAS,EAClDjpC,GAAQoqC,EAAK,GAAKpqC,EAAQmoC,EAAa,GAAOC,EAAMa,EAAS,EAC7DjpC,GAAQoqC,EAAK,GAAKpqC,EAAQmoC,EAAa,GAAME,EAAMY,EAAS,EAC5DxoC,GAAS2pC,GAAQlB,EAAS,MAAO9sD,EAAE8sD,EAAS,CAC5CzoC,GAAS2pC,EAAK,GAAK9B,CACnB7nC,GAAS2pC,EAAK,GAAK7B,MAEb,CAENpuD,EAAUiwD,GAAQjuD,CAClBhC,GAAUiwD,EAAK,GAAKhC,CACpBjuD,GAAUiwD,EAAK,GAAK/B,CACpBroC,GAAQoqC,GAAQjuD,EAAE8sD,CAClBjpC,GAAQoqC,EAAK,GAAKhC,EAAMa,CACxBjpC,GAAQoqC,EAAK,GAAK/B,EAAMY,CACxBxoC,GAAS2pC,GAAQlB,EAAS,MAAO9sD,EAAE8sD,EAAS,CAC5CzoC,GAAS2pC,EAAK,GAAK9B,CACnB7nC,GAAS2pC,EAAK,GAAK7B,EAGpB,GAAIp0D,EAAI,GAAKoI,EAAI,EAAG,CAEnB,GAAIrI,IAAYc,KAAK4yD,WAAa,GAAGrrD,EAAIpI,CACzC,IAAIe,IAAYF,KAAK4yD,WAAa,GAAGrrD,EAAIpI,EAAI,CAC7C,IAAI+vB,IAAYlvB,KAAK4yD,WAAa,IAAIrrD,EAAI,GAAKpI,EAAI,CACnD,IAAIc,IAAYD,KAAK4yD,WAAa,IAAIrrD,EAAI,GAAKpI,CAE/C,IAAIoI,GAAKvH,KAAK6yD,WAAY,CAEzB1tD,EAAUiwD,GAAQjwD,EAAUguD,EAC5BhuD,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,EAC7ChuD,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,EAE7CltD,GAAQovD,KAAUn2D,CAClB+G,GAAQovD,KAAUnmC,CAClBjpB,GAAQovD,KAAUp1D,MAEZ,IAAIsH,GAAK,EAAG,CAElBtB,EAAQovD,KAAUn2D,CAClB+G,GAAQovD,KAAUn1D,CAClB+F,GAAQovD,KAAUnmC,MAEZ,CACNjpB,EAAQovD,KAAUn2D,CAClB+G,GAAQovD,KAAUn1D,CAClB+F,GAAQovD,KAAUnmC,CAClBjpB,GAAQovD,KAAUn2D,CAClB+G,GAAQovD,KAAUnmC,CAClBjpB,GAAQovD,KAAUp1D,GAIpBm1D,GAAQ,GAIV3B,EAAiBztD,cAAcC,EAE/BwtD,GAAiBhvD,gBAAgBU,EACjCsuD,GAAiBlpC,oBAAoBS,EACrCyoC,GAAiBjpC,qBAAqBiB,OAEhC,IAAI8F,GAAgB,kBAAmB,CAE7C,GAAIqkC,GAAiDniD,CAErD,IAAIoiD,IAAsB71D,KAAK6yD,WAAa,GAAG7yD,KAAK4yD,WAAW,CAC/D,IAAI7uC,EACJ,IAAIC,EACJ,IAAIlF,EAEJ,IAAI82C,EAAa3vD,SAAW,MAAQ4vD,GAAeD,EAAaC,YAAa,CAC5E9xC,EAAiB6xC,EAAa7xC,cAC9BC,GAAe4xC,EAAa5xC,YAC5BlF,GAAY82C,EAAa92C,cACnB,CACNiF,EAAiB,GAAIzf,OAAcuxD,EAAY,EAC/C7xC,GAAe,GAAI1f,OAAcuxD,EAAY,EAC7C/2C,GAAY,GAAIxa,OAAcuxD,GAG/BT,EAAO,CAEPC,GAAO,CAEP,KAAK9tD,EAAI,EAAGA,GAAKvH,KAAK6yD,aAActrD,EAAG,CAEtC,GAAIssD,GAAkBlrD,KAAKmrD,GAAGvsD,EAAEvH,KAAK6yD,UACrC,IAAIxrD,IAAYrH,KAAK+xB,QAAQppB,KAAKm4B,IAAI+yB,EACtC,IAAIE,GAAoB/zD,KAAK+xB,QAAQppB,KAAKk4B,IAAIgzB,EAE9C,KAAK10D,EAAI,EAAGA,GAAKa,KAAK4yD,aAAczzD,EAAG,CACtC,GAAI60D,GAAkB,EAAErrD,KAAKmrD,GAAG30D,EAAEa,KAAK4yD,UACvC,IAAIzrD,GAAW4sD,EAAWprD,KAAKm4B,IAAIkzB,EACnC,IAAI5sD,GAAW2sD,EAAWprD,KAAKk4B,IAAImzB,EAEnC,IAAIh0D,KAAK8yD,KAAM,CACdM,GAAS/rD,CACTgsD,GAAQjsD,MAEF,CACNgsD,EAAQhsD,CACRisD,GAAQhsD,EAGT,GAAIlI,EAAI,GAAKoI,EAAI,EAAG,CAEnB,GAAIA,EAAIvH,KAAK6yD,WAAY,CACxB7uC,EAAaoxC,GAAQjuD,CACrB6c,GAAaoxC,EAAO,GAAKhC,CACzBpvC,GAAaoxC,EAAO,GAAK/B,CAEzBv0C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAITrxC,EAAeqxC,GAAQpxC,EAAaoxC,EAAOp1D,KAAK4yD,WAAW,EAC3D7uC,GAAeqxC,EAAO,GAAKpxC,EAAaoxC,EAAO,EAAIp1D,KAAK4yD,WAAW,EACnE7uC,GAAeqxC,EAAO,GAAKpxC,EAAaoxC,EAAO,EAAIp1D,KAAK4yD,WAAW,EAEnE5uC,GAAaoxC,GAAQjuD,CACrB6c,GAAaoxC,EAAO,GAAKhC,CACzBpvC,GAAaoxC,EAAO,GAAK/B,CAEzBv0C,GAAUu2C,KAAU,CAEpBD,IAAQ,EAGT,GAAIj2D,EAAIa,KAAK4yD,YAAcrrD,EAAI,GAAKA,EAAIvH,KAAK6yD,WAAY,CACxD9uC,EAAeqxC,GAAQjuD,CACvB4c,GAAeqxC,EAAO,GAAKhC,CAC3BrvC,GAAeqxC,EAAO,GAAK/B,IAM9BuC,EAAanxD,gBAAgBsf,EAAgBC,EAC7C4xC,GAAapyC,gBAAgB1E,IAOxB+S,GAAAtxB,UAAA4zD,WAAP,SAAkB1gD,EAAwB8d,GAEzC,GAAIpyB,GAAUoI,CACd,IAAImsD,IAAsB1zD,KAAK6yD,WAAa,IAAI7yD,KAAK4yD,WAAa,EAClE,IAAIhtD,EAGJ,IAAI2rB,GAAgB,sBAAuB,CAE1CmiC,GAAe1zD,KAAK6yD,WAAa,IAAI7yD,KAAK4yD,WAAa,EAEvD,IAAIa,GAA6DhgD,CAEjE,IAAIigD,GAAeD,EAAiBC,aAAeD,EAAiB7tD,KAAO,KAAM,CAChFA,EAAM6tD,EAAiB7tD,QACjB,CACNA,EAAM,GAAItB,OAAcovD,EAAY,GAGrC,GAAIxuD,GAAe,CACnB,KAAKqC,EAAI,EAAGA,GAAKvH,KAAK6yD,aAActrD,EAAG,CACtC,IAAKpI,EAAI,EAAGA,GAAKa,KAAK4yD,aAAczzD,EAAG,CACtCyG,EAAIV,KAAa/F,EAAEa,KAAK4yD,WAAaa,EAAiBntD,MACtDV,GAAIV,KAAaqC,EAAEvH,KAAK6yD,WAAaY,EAAiBltD,QAIxDktD,EAAiB7uD,UAAUgB,OAErB,IAAI2rB,GAAgB,kBAAmB,GAIhD,OAAAM,IA5VoCygC,EA8VL1yD,GAAAJ,QAAtBqyB,I1G09hBNuiC,iDAAiD,mDAAmDoF,mDAAmD,SAAS96D,EAAQkB,EAAOJ,GAClL,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2Gn0iBtB,IAAOiyD,GAAmB5zD,EAAY,iD3Gy0iBtC,I2Gp0iBM+6D,GAAoB,SAAA94D,GAASZ,EAA7B05D,EAAoB94D,EAyFzB,SAzFK84D,GAyFOh8C,EAAoBi8C,EAAwBC,EAAuBC,EAAsBlH,GAAzF,GAAAj1C,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAi8C,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAlH,QAAA,GAAkB,CAAlBA,EAAA,KAEpG/xD,EAAAlB,KAAAO,KApFOA,MAAA2yD,aAAsB,CAsF7B3yD,MAAK+xB,QAAUtU,CACfzd,MAAK65D,YAAcH,CACnB15D,MAAK85D,WAAaH,CAClB35D,MAAK+5D,WAAaH,CAClB55D,MAAK8yD,KAAOJ,EArFb9xD,OAAAC,eAAW44D,EAAAl5D,UAAA,U3Go1iBJO,I2Gp1iBP,WAEC,MAAOd,MAAK+xB,S3Gq1iBNxuB,I2Gl1iBP,SAAkBC,GAEjBxD,KAAK+xB,QAAUvuB,CACfxD,MAAK+yD,wB3Gm1iBC/xD,WAAY,KACZC,aAAc,M2G90iBrBL,QAAAC,eAAW44D,EAAAl5D,UAAA,c3Go1iBJO,I2Gp1iBP,WAEC,MAAOd,MAAK65D,a3Gq1iBNt2D,I2Gl1iBP,SAAsBC,GAErBxD,KAAK65D,YAAcr2D,CACnBxD,MAAK+yD,wB3Gm1iBC/xD,WAAY,KACZC,aAAc,M2G90iBrBL,QAAAC,eAAW44D,EAAAl5D,UAAA,a3Go1iBJO,I2Gp1iBP,WAEC,MAAOd,MAAK85D,Y3Gq1iBNv2D,I2Gl1iBP,SAAqBC,GAEpBxD,KAAK85D,WAAat2D,CAClBxD,MAAK+yD,sBACL/yD,MAAKgzD,mB3Gm1iBChyD,WAAY,KACZC,aAAc,M2G90iBrBL,QAAAC,eAAW44D,EAAAl5D,UAAA,a3Go1iBJO,I2Gp1iBP,WAEC,MAAOd,MAAK+5D,Y3Gq1iBNx2D,I2Gl1iBP,SAAqBC,GAEpBxD,KAAK+5D,WAAav2D,CAClBxD,MAAK+yD,sBACL/yD,MAAKgzD,mB3Gm1iBChyD,WAAY,KACZC,aAAc,M2G90iBrBL,QAAAC,eAAW44D,EAAAl5D,UAAA,O3Go1iBJO,I2Gp1iBP,WAEC,MAAOd,MAAK8yD,M3Gq1iBNvvD,I2Gl1iBP,SAAeC,GAEdxD,KAAK8yD,KAAOtvD,CACZxD,MAAK+yD,wB3Gm1iBC/xD,WAAY,KACZC,aAAc,M2G1ziBdw4D,GAAAl5D,UAAA0yD,gBAAP,SAAuBx/C,EAAwB8d,GAE9C,GAAItrB,EACJ,IAAId,EACJ,IAAI6lB,EACJ,IAAIS,EAEJ,IAAItsB,GAAUoI,CACd,IAAIJ,GAAUC,EAAUC,EAAU2yD,EAAWC,EAAWC,EAAWC,EAAyBC,CAC5F,IAAIhF,EACJ,IAAIC,EACJ,IAAI7B,GAAoB,CAExB,IAAIjiC,GAAgB,sBAAuB,CAE1C,GAAIkiC,GAA6DhgD,CAGjEzT,MAAK2yD,cAAgB3yD,KAAK+5D,WAAa,IAAI/5D,KAAK85D,WAAa,EAC7DtG,GAAaxzD,KAAK+5D,WAAW/5D,KAAK85D,WAAW,CAG7C,IAAI95D,KAAK2yD,cAAgBc,EAAiBC,YAAa,CACtDztD,EAAUwtD,EAAiBxtD,OAC3Bd,GAAYsuD,EAAiBtuD,SAC7B6lB,GAAUyoC,EAAiBE,aAC3BloC,GAAWgoC,EAAiBG,mBACtB,CACN3tD,EAAU,GAAI3B,OAAckvD,EAC5BruD,GAAY,GAAIb,OAActE,KAAK2yD,aAAa,EAChD3nC,GAAU,GAAI1mB,OAActE,KAAK2yD,aAAa,EAC9ClnC,GAAW,GAAInnB,OAActE,KAAK2yD,aAAa,EAE/C3yD,MAAKgzD,kBAINoC,EAAO,CACPC,GAAO,C3GyziBE,I2GtziBLgF,GAA+B,EAAE1xD,KAAKmrD,GAAG9zD,KAAK85D,UAClD,IAAIQ,GAA+B,EAAE3xD,KAAKmrD,GAAG9zD,KAAK+5D,UAElD,IAAI3G,GAAcC,CAClB,IAAIC,GAAWC,EAAWgH,EAAWC,CACrC,IAAIrH,GAAoB,CACxB,IAAIsE,GAAyB,C3GuziBpB,I2GpziBLv4D,GAAUgB,EAAUgvB,EAAUjvB,EAAUP,CAE5C,KAAK6H,EAAI,EAAGA,GAAKvH,KAAK+5D,aAAcxyD,EAAG,CAEtC4rD,EAAasE,EAAgB,CAE7B,KAAKt4D,EAAI,EAAGA,GAAKa,KAAK85D,aAAc36D,EAAG,CAGtCg7D,EAAmBh7D,EAAEk7D,CACrBD,GAAmB7yD,EAAE+yD,CAErB56D,GAASiJ,KAAKm4B,IAAIs5B,EAClBJ,GAAKt6D,EAAOiJ,KAAKm4B,IAAIq5B,EACrBF,GAAKv6D,EAAOiJ,KAAKk4B,IAAIs5B,EACrBD,GAAKvxD,KAAKk4B,IAAIu5B,EAEdjzD,GAAInH,KAAK+xB,QAAQppB,KAAKm4B,IAAIq5B,GAAoBn6D,KAAK65D,YAAYG,CAC/D5yD,GAAIpH,KAAK+xB,QAAQppB,KAAKk4B,IAAIs5B,GAAoBn6D,KAAK65D,YAAYI,CAC/D5yD,GAAKE,GAAKvH,KAAK+5D,WAAa,EAAI/5D,KAAK65D,YAAYK,CAEjD,IAAIl6D,KAAK8yD,KAAM,CAEdyH,GAAML,CACNM,GAAKP,CACL3G,GAAK,CACLC,GAAM7zD,EAAQs6D,EAAGt6D,EAASyH,EAAEnH,KAAK+xB,OACjCqhC,IAAS/rD,CACTgsD,GAAQjsD,MAEF,CACNmzD,EAAKN,CACLO,GAAKN,CACL5G,GAAM5zD,EAAQs6D,EAAGt6D,EAASyH,EAAEnH,KAAK+xB,OACjCwhC,GAAK,CACLH,GAAQhsD,CACRisD,GAAQhsD,EAGT,GAAIlI,GAAKa,KAAK85D,WAAY,CACzB30D,EAAUiwD,GAAQjuD,CAClBhC,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,EAC7ChuD,GAAUiwD,EAAO,GAAKjwD,EAAUguD,EAAa,OACvC,CACNhuD,EAAUiwD,GAAQjuD,CAClBhC,GAAUiwD,EAAO,GAAKhC,CACtBjuD,GAAUiwD,EAAO,GAAK/B,EAGvBroC,EAAQoqC,GAAQ4E,CAChBhvC,GAAQoqC,EAAO,GAAKmF,CACpBvvC,GAAQoqC,EAAO,GAAKoF,CACpB/uC,GAAS2pC,KAAU11D,EAAQu6D,EAAGv6D,EAAS0H,EAAEpH,KAAK+xB,QAC9CtG,GAAS2pC,EAAO,GAAK9B,CACrB7nC,GAAS2pC,EAAO,GAAK7B,CAErB6B,IAAQ,CAGR,IAAIj2D,EAAI,GAAKoI,EAAI,EAAG,CACnBrI,EAAIu4D,CACJv3D,GAAIu3D,EAAkB,CACtBvoC,GAAIhvB,EAAIF,KAAK85D,WAAa,CAC1B75D,GAAIf,EAAIc,KAAK85D,WAAa,CAE1B7zD,GAAQovD,KAAUn2D,CAClB+G,GAAQovD,KAAUn1D,CAClB+F,GAAQovD,KAAUnmC,CAElBjpB,GAAQovD,KAAUn2D,CAClB+G,GAAQovD,KAAUnmC,CAClBjpB,GAAQovD,KAAUp1D,EAGnBw3D,KAKFhE,EAAiBztD,cAAcC,EAE/BwtD,GAAiBhvD,gBAAgBU,EACjCsuD,GAAiBlpC,oBAAoBS,EACrCyoC,GAAiBjpC,qBAAqBiB,OAEhC,IAAI8F,GAAgB,kBAAmB,GAQxCkoC,GAAAl5D,UAAA4zD,WAAP,SAAkB1gD,EAAwB8d,GAGzC,GAAIpyB,GAAUoI,CACd,IAAI3B,EAGJ,IAAI2rB,GAAgB,sBAAuB,CAE1C,GAAIkiC,GAA6DhgD,CAGjE,IAAIggD,EAAiB7tD,KAAO5F,KAAK2yD,cAAgBc,EAAiBC,YAAa,CAC9E9tD,EAAM6tD,EAAiB7tD,QACjB,CACNA,EAAM,GAAItB,OAActE,KAAK2yD,aAAa,G3GgyiBlC,G2G5xiBLztD,GAAe,CAGnB,KAAKqC,EAAI,EAAGA,GAAKvH,KAAK+5D,aAAcxyD,EAAG,CACtC,IAAKpI,EAAI,EAAGA,GAAKa,KAAK85D,aAAc36D,EAAG,CAEtCyG,EAAIV,KAAa/F,EAAEa,KAAK85D,WAAarG,EAAiBntD,MACtDV,GAAIV,KAAaqC,EAAEvH,KAAK+5D,WAAatG,EAAiBltD,QAKxDktD,EAAiB7uD,UAAUgB,OAErB,IAAI2rB,GAAgB,kBAAmB,GAIhD,OAAAkoC,IA5RmCnH,EA8RnC1yD,GAA8BJ,QAArBi6D,I3G2xiBNrF,iDAAiD,mDAAmDqG,gDAAgD,SAAS/7D,EAAQkB,EAAOJ,GAC/K,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4GvkjBtB,IAAOoK,GAAQ/L,EAAgB,gCAC/B,IAAOg8D,GAAgBh8D,EAAc,+CAGrC,IAAOi8D,GAAej8D,EAAc,4CAEpC,IAAOk8D,GAAkBl8D,EAAa,iD5G6kjBtC,I4GjkjBMm8D,GAAkB,SAAAl6D,GAASZ,EAA3B86D,EAAkBl6D,EAcvB,SAdKk6D,KAgBJl6D,EAAAlB,KAAAO,KAXOA,MAAA86D,eAA0B,GAAIrwD,EAG9BzK,MAAA+6D,kBAA6B,GAAItwD,EACjCzK,MAAAgO,WAAsB,GAAIvD,EAUjCzK,MAAKg7D,WAAajgC,SAASK,cAAc,MACzCp7B,MAAKg7D,WAAW//B,MAAMggC,SAAW,QACjCj7D,MAAKg7D,WAAW//B,MAAM/nB,SAAW,UAGjC6nB,UAASC,KAAKK,YAAYr7B,KAAKg7D,WAG/Bh7D,MAAKk7D,SAAWngC,SAASK,cAAc,MACvCp7B,MAAKm7D,cAAgBn7D,KAAKk7D,SAASjgC,KACnCj7B,MAAKm7D,cAAcjoD,SAAW,UAC9BlT,MAAKm7D,cAAcC,eAChBp7D,KAAKm7D,cAAc,2BACnBn7D,KAAKm7D,cAAc,wBACnBn7D,KAAKm7D,cAAc,sBACnBn7D,KAAKm7D,cAAc,uBAAyB,aAC/Cn7D,MAAKm7D,cAAcnd,gBAChBh+C,KAAKm7D,cAAc,4BACnBn7D,KAAKm7D,cAAc,yBACnBn7D,KAAKm7D,cAAc,uBACnBn7D,KAAKm7D,cAAc,wBAA0B,OAGhDn7D,MAAKg7D,WAAW3/B,YAAYr7B,KAAKk7D,UAO3BL,EAAAt6D,UAAAu8B,OAAP,SAAcgsB,GAEbnoD,EAAAJ,UAAMu8B,OAAMr9B,KAAAO,KAAC8oD,EAEb,IAAI9oD,KAAKq7D,oBACRr7D,KAAKs7D,mBAENt7D,MAAKgnD,SAA2B8B,EAEhC9oD,MAAKq7D,oBAAsB,MAMrBR,GAAAt6D,UAAAg7D,MAAP,SAAazS,GAeZ,GAAIrL,GAAsC1iB,SAAS2iB,YAAY3iB,SAAS2iB,YAAYh+C,OAAS,EAE7F,KAAK,GAAIP,GAAW,EAAGA,EAAIs+C,EAAMG,SAASl+C,OAAQP,IAAK,CACtD,GAAI87B,GAA6CwiB,EAAMG,SAASz+C,GAAI87B,KACpEA,GAAMr0B,UACHq0B,EAAM,qBACNA,EAAM,kBACNA,EAAM,gBACNA,EAAM,iBAAoB6tB,EAAgB1zC,OAAOqnB,WAAW++B,kBAAoBd,EAAiBe,aAAe,GAAK,iCAAmCxgC,EAAMnsB,OAAS,IAG3K9O,KAAK07D,gBAAgB17D,KAAK27D,gBAAiB7S,EAK3C9oD,MAAK47D,gBAAkB,KAMjBf,GAAAt6D,UAAA+6D,kBAAP,WAECt7D,KAAKg7D,WAAW//B,MAAMjqB,MAAQhR,KAAKwQ,OAAS,IAC5CxQ,MAAKg7D,WAAW//B,MAAMnsB,OAAS9O,KAAK+O,QAAU,IAC9C/O,MAAKg7D,WAAW//B,MAAM4gC,KAAO,aAAe77D,KAAKwQ,OAAS,OAASxQ,KAAK+O,QAAU,UAGlF/O,MAAK86D,eAAe5sB,QAAQ,GAAKluC,KAAKwQ,OAAO,CAC7CxQ,MAAK86D,eAAe5sB,QAAQ,IAAMluC,KAAK+O,QAAQ,CAC/C/O,MAAK86D,eAAe5sB,QAAQ,KAAO,CACnCluC,MAAK86D,eAAe5sB,QAAQ,IAAMluC,KAAKwQ,OAAO,CAC9CxQ,MAAK86D,eAAe5sB,QAAQ,IAAMluC,KAAK+O,QAAQ,CAG/C/O,MAAKm7D,cAAcv0D,UAChB5G,KAAKm7D,cAAc,qBACnBn7D,KAAKm7D,cAAc,kBACnBn7D,KAAKm7D,cAAc,gBACnBn7D,KAAKm7D,cAAc,iBAAmBn7D,KAAK86D,eAAe1oB,UAE7DpyC,MAAKq7D,oBAAsB,MAOpBR,GAAAt6D,UAAAu7D,WAAR,SAAmBhT,IAUX+R,GAAAt6D,UAAAm7D,gBAAR,SAAwBnK,EAAwBzI,GAE/C,GAAIhiB,GAA0BgiB,EAAgB1zC,OAAO0xB,eAAe5gC,OAEpE,OAAOqrD,EAAM,CAIZvxD,KAAKgO,WAAWqG,gBAAgBk9C,EAAKwK,qBAAqB7tB,QAC1DluC,MAAKgO,WAAW+4B,OAAOD,EAEvB,IAAI7L,GAA6Bs2B,EAAK9V,YAAYxgB,KAElDA,GAAMr0B,UACHq0B,EAAM,qBACNA,EAAM,kBACNA,EAAM,gBACNA,EAAM,iBAAmBj7B,KAAKgO,WAAWokC,UAE5CnX,GAAMmgC,eACHngC,EAAM,2BACNA,EAAM,wBACNA,EAAM,sBACNA,EAAM,uBAAyB,aAGlC,KAAKj7B,KAAKk7D,SAASrnC,SAAS09B,EAAK9V,aAChCz7C,KAAKk7D,SAAS7/B,YAAYk2B,EAAK9V,YAEhC8V,GAAOA,EAAKtC,MA8CP4L,GAAAt6D,UAAAW,QAAP,WAECP,EAAAJ,UAAMW,QAAOzB,KAAAO,MAMP66D,GAAAt6D,UAAAy7B,wBAAP,WAEC,MAAO,IAAI4+B,GAEb,OAAAC,IAjOiCF,EAmOjC/6D,GAA4BJ,QAAnBq7D,I5G8/iBNnhD,gCAAgCrY,UAAU26D,+CAA+C36D,UAAU46D,4CAA4C,4CAA4CC,iDAAiD,mDAAmDD,6CAA6C,SAASv9D,EAAQkB,EAAOJ,GACvW,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6GxvjBtB,IAAOsK,GAAKjM,EAAgB,6BAC5B,IAAOikD,GAASjkD,EAAe,iCAE/B,IAAOkM,GAAmBlM,EAAa,6CACvC,IAAOqmB,GAAermB,EAAc,yCAkBpC,IAAOk7B,GAAal7B,EAAc,0C7G+ujBlC,I6GrujBMi8D,GAAe,SAAAh6D,GAASZ,EAAxB46D,EAAeh6D,EA4IpB,SA5IKg6D,GA4IOwB,EAAiCC,EAA+BC,GAAhE,GAAAF,QAAA,GAA+B,CAA/BA,EAAA,MAAiC,GAAAC,QAAA,GAA6B,CAA7BA,EAAA,MAA+B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,WAE3E17D,EAAAlB,KAAAO,KArIOA,MAAAs8D,aAAsB,CACtBt8D,MAAAu8D,aAAsB,CACtBv8D,MAAAw8D,aAAsB,CACtBx8D,MAAAm6B,iBAA0B,CAC1Bn6B,MAAAs8B,cAAwB,KAEzBt8B,MAAAq7D,oBAA8B,IAC9Br7D,MAAAy8D,qBAA+B,IAO9Bz8D,MAAA08D,UAAsB,GAAI/Z,EAE1B3iD,MAAA28D,aAAyB,GAAIha,EAG7B3iD,MAAA48D,UAAkB,GAAIjyD,EACtB3K,MAAA68D,WAAmB,GAAIlyD,EAsH9B3K,MAAK08D,UAAY,GAAI/Z,EAErB,IAAI3iD,KAAKwQ,QAAU,EAClBxQ,KAAKgR,MAAQ8rD,OAAOC,UAErB,IAAI/8D,KAAK+O,SAAW,EACnB/O,KAAK8O,OAASguD,OAAOE,YApHvBp8D,OAAAC,eAAW85D,EAAAp6D,UAAA,Y7GiujBJO,I6GjujBP,WAEC,MAAOd,MAAK08D,W7GkujBN17D,WAAY,KACZC,aAAc,M6G7tjBrBL,QAAAC,eAAW85D,EAAAp6D,UAAA,e7GmujBJO,I6GnujBP,WAEC,MAAOd,MAAK28D,c7GoujBN37D,WAAY,KACZC,aAAc,M6G/tjBrBL,QAAAC,eAAW85D,EAAAp6D,UAAA,K7GqujBJO,I6GrujBP,WAEC,MAAOd,MAAK48D,UAAUz1D,G7GsujBhB5D,I6GnujBP,SAAaC,GAEZ,GAAIxD,KAAKmH,GAAK3D,EACb,MAEDxD,MAAKi9D,mB7GmujBCj8D,WAAY,KACZC,aAAc,M6G9tjBrBL,QAAAC,eAAW85D,EAAAp6D,UAAA,K7GoujBJO,I6GpujBP,WAEC,MAAOd,MAAK48D,UAAUx1D,G7GqujBhB7D,I6GlujBP,SAAaC,GAEZ,GAAIxD,KAAKoH,GAAK5D,EACb,MAEDxD,MAAK68D,WAAWz1D,EAAIpH,KAAK48D,UAAUx1D,EAAI5D,CAEvCxD,MAAKi9D,mB7GiujBCj8D,WAAY,KACZC,aAAc,M6G5tjBrBL,QAAAC,eAAW85D,EAAAp6D,UAAA,S7GkujBJO,I6GlujBP,WAEC,MAAOd,MAAKwQ,Q7GmujBNjN,I6GhujBP,SAAiBC,GAEhB,GAAIxD,KAAKwQ,QAAUhN,EAClB,MAEDxD,MAAKwQ,OAAShN,CACdxD,MAAK28D,aAAa3rD,MAAQxN,CAC1BxD,MAAK08D,UAAU1rD,MAAQxN,CAEvBxD,MAAKq7D,oBAAsB,IAC3Br7D,MAAKy8D,qBAAuB,IAE5Bz8D,MAAKk9D,sBACLl9D,MAAKm9D,uB7G8tjBCn8D,WAAY,KACZC,aAAc,M6GztjBrBL,QAAAC,eAAW85D,EAAAp6D,UAAA,U7G+tjBJO,I6G/tjBP,WAEC,MAAOd,MAAK+O,S7GgujBNxL,I6G7tjBP,SAAkBC,GAEjB,GAAIxD,KAAK+O,SAAWvL,EACnB,MAEDxD,MAAK+O,QAAUvL,CACfxD,MAAK28D,aAAa7tD,OAAStL,CAC3BxD,MAAK08D,UAAU5tD,OAAStL,CAExBxD,MAAKq7D,oBAAsB,IAC3Br7D,MAAKy8D,qBAAuB,IAE5Bz8D,MAAKk9D,sBACLl9D,MAAKm9D,uB7G2tjBCn8D,WAAY,KACZC,aAAc,M6G5rjBrBL,QAAAC,eAAW85D,EAAAp6D,UAAA,iB7GosjBJO,I6GpsjBP,WAEC,MAAOd,MAAKs8D,c7GqsjBN/4D,I6GlsjBP,SAAyBC,GAExB,GAAIxD,KAAKs8D,cAAgB94D,EACxB,MAEDxD,MAAKs8D,aAAe94D,CAEpBxD,MAAKq7D,oBAAsB,M7GisjBrBr6D,WAAY,KACZC,aAAc,M6G1rjBrBL,QAAAC,eAAW85D,EAAAp6D,UAAA,iB7GksjBJO,I6GlsjBP,WAEC,MAAOd,MAAKu8D,c7GmsjBNh5D,I6GhsjBP,SAAyBC,GAExB,GAAIxD,KAAKu8D,cAAgB/4D,EACxB,MAEDxD,MAAKu8D,aAAe/4D,CAEpBxD,MAAKq7D,oBAAsB,M7G+rjBrBr6D,WAAY,KACZC,aAAc,M6GxrjBrBL,QAAAC,eAAW85D,EAAAp6D,UAAA,iB7GgsjBJO,I6GhsjBP,WAEC,MAAOd,MAAKw8D,c7GisjBNj5D,I6G9rjBP,SAAyBC,GAExB,GAAIxD,KAAKw8D,cAAgBh5D,EACxB,MAEDxD,MAAKw8D,aAAeh5D,CAEpBxD,MAAKq7D,oBAAsB,M7G6rjBrBr6D,WAAY,KACZC,aAAc,M6G3rjBrBL,QAAAC,eAAW85D,EAAAp6D,UAAA,gB7G8rjBJO,I6G9rjBP,WAEC,MAAOd,MAAKs8B,e7G+rjBN/4B,I6G5rjBP,SAAwBC,GAEvB,GAAIxD,KAAKs8B,eAAiB94B,EACzB,MAEDxD,MAAKs8B,cAAgB94B,CAErBxD,MAAKi9D,mB7G2rjBCj8D,WAAY,KACZC,aAAc,M6GtrjBd05D,GAAAp6D,UAAAW,QAAP,YAUOy5D,GAAAp6D,UAAAu8B,OAAP,SAAcgsB,GAEb9oD,KAAKo6B,eAAiB,KACtBp6B,MAAKq6B,cAAgB,MAQfsgC,GAAAp6D,UAAAymD,SAAP,SAAgB8B,EAAiCr1C,EAAgCwpB,EAA8BmgC,GAA9D,GAAA3pD,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAwpB,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAmgC,QAAA,GAA0B,CAA1BA,EAAA,EAE9G,IAAKtU,EAAgBiG,WACpB,MAED/uD,MAAKq9D,eAAevU,EAAiB7rB,GAG/B09B,GAAAp6D,UAAA8jD,iBAAP,SAAwByE,EAA+Br1C,EAAyBqvC,EAAoBwa,EAA+BC,IAI5H5C,GAAAp6D,UAAAi9D,oBAAP,SAA2B1U,IAyBpB6R,GAAAp6D,UAAA88D,eAAP,SAAsBvU,EAAoC7rB,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEzDj9B,KAAKw9D,oBAAoB1U,EAEzB9oD,MAAKu7D,MAAMzS,GAQL6R,GAAAp6D,UAAAg7D,MAAP,SAAazS,GAEZ,KAAM,IAAIl+C,GAGXhK,QAAAC,eAAW85D,EAAAp6D,UAAA,qB7GgrjBJO,I6GhrjBP,WAEC,MAAOd,MAAKm6B,kB7GirjBN52B,I6G9qjBP,SAA6BC,GAE5B,GAAIxD,KAAKm6B,kBAAoB32B,EAC5B,MAEDxD,MAAKm6B,iBAAmB32B,CAExBxD,MAAKq7D,oBAAsB,M7G6qjBrBr6D,WAAY,KACZC,aAAc,M6GvqjBd05D,GAAAp6D,UAAAqkC,eAAP,SAAsByrB,IASfsK,GAAAp6D,UAAAskB,iBAAP,SAAwB44C,IASjB9C,GAAAp6D,UAAA4tD,YAAP,SAAmBT,IASZiN,GAAAp6D,UAAAwtB,qBAAP,SAA4B2vC,IAUpB/C,GAAAp6D,UAAAo9D,iBAAR,SAAyB7lD,GAExB,GAAIjO,EACJ,IAAIqY,GAAiBpK,EAAWwpC,YAChC,IAAIpuC,GAAoBgP,EAAO3M,aAE/B,IAAI1L,EAAU,CAEbiO,EAAW8lD,WAAa/zD,EAASqzC,YAEjCplC,GAAW+lD,SAAW,KAGtB3qD,GAAWlT,KAAK89D,aAAa7pD,SAASf,EACtC4E,GAAWimD,OAAS77C,EAAO87C,QAAU9qD,EAAS+qD,WAAWj+D,KAAKk+D,gBAG9DpmD,GAAWikD,qBAAuBjkD,EAAWwpC,aAAansC,wBAAwBnV,KAAKw7B,SAGvF1jB,GAAWm3C,KAAOjvD,KAAK27D,eACvB37D,MAAK27D,gBAAkB7jD,GAQjB6iD,GAAAp6D,UAAA48D,oBAAR,WAEC,GAAIn9D,KAAKq6B,cACR,MAEDr6B,MAAKq6B,cAAgB,IAErB,KAAKr6B,KAAKm+D,gBACTn+D,KAAKm+D,gBAAkB,GAAIvkC,GAAcA,EAAckC,gBAExD97B,MAAKgJ,cAAchJ,KAAKm+D,iBAOjBxD,GAAAp6D,UAAA28D,qBAAR,WAEC,GAAIl9D,KAAKo6B,eACR,MAEDp6B,MAAKo6B,eAAiB,IAEtB,KAAKp6B,KAAKo+D,iBACTp+D,KAAKo+D,iBAAmB,GAAIxkC,GAAcA,EAAciC,iBAEzD77B,MAAKgJ,cAAchJ,KAAKo+D,kBAMlBzD,GAAAp6D,UAAA08D,gBAAP,WAECj9D,KAAK08D,UAAUv1D,EAAInH,KAAK68D,WAAW11D,CACnCnH,MAAK08D,UAAUt1D,EAAIpH,KAAK68D,WAAWz1D,CAEnCpH,MAAKk9D,sBACLl9D,MAAKm9D,sBAICxC,GAAAp6D,UAAAy7B,wBAAP,WAEC,KAAM,IAAIpxB,GAEZ,OAAA+vD,IAzb8B51C,EA2bLnlB,GAAAJ,QAAhBm7D,I7G+ojBNphD,6CAA6ClY,UAAUqkB,yCAAyCrkB,UAAUuY,6BAA6BvY,UAAU8kD,iCAAiC9kD,UAAUy9B,0CAA0C,4CAA4Cu/B,uCAAuC,SAAS3/D,EAAQkB,EAAOJ,SAI9U8+D,yCAAyC,SAAS5/D,EAAQkB,EAAOJ,SAIjE++D,+CAA+C,SAAS7/D,EAAQkB,EAAOJ,GAI7E,G8GhnkBMg/D,GAAmB,WAAzB,QAAMA,MAEEA,EAAAj+D,UAAAk+D,uBAAP,SAA8BC,GAE7B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,KAAKH,IAASA,EAAKzP,KAAM,CACxB,MAAOyP,GAIRG,EAAOH,CACPE,GAAOF,EAAKzP,IAEZ,OAAO2P,EAAM,CACZA,EAAOA,EAAK3P,IACZ,IAAI2P,EAAM,CACTC,EAAOA,EAAK5P,IACZ2P,GAAOA,EAAK3P,MAId0P,EAAQE,EAAK5P,IACb4P,GAAK5P,KAAO,IAGZyP,GAAO1+D,KAAKy+D,uBAAuBC,EACnCC,GAAQ3+D,KAAKy+D,uBAAuBE,E9G6mkB9B,I8G1mkBF9oB,EACJ,IAAIipB,EACJ,IAAIv/D,EAEJ,KAAKm/D,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,EAAO,CACrB,GAAID,EAAKX,OAASY,EAAMZ,OAAQ,CAC/Bx+D,EAAIm/D,CACJA,GAAOA,EAAKzP,SACN,CACN1vD,EAAIo/D,CACJA,GAAQA,EAAM1P,KAGf,IAAKpZ,EACJA,EAASt2C,MACTu/D,GAAK7P,KAAO1vD,CAEbu/D,GAAOv/D,EAGR,GAAIm/D,EACHI,EAAK7P,KAAOyP,MAAW,IAAIC,EAC3BG,EAAK7P,KAAO0P,CAEb,OAAO9oB,GAGD2oB,GAAAj+D,UAAAw+D,sBAAP,SAA6BL,GAE5B,GAAIC,EACJ,IAAIC,GAAkBC,CAEtB,KAAKH,IAASA,EAAKzP,KAAM,CACxB,MAAOyP,GAIRG,EAAOH,CACPE,GAAOF,EAAKzP,IAEZ,OAAO2P,EAAM,CACZA,EAAOA,EAAK3P,IACZ,IAAI2P,EAAM,CACTC,EAAOA,EAAK5P,IACZ2P,GAAOA,EAAK3P,MAId0P,EAAQE,EAAK5P,IACb4P,GAAK5P,KAAO,IAGZyP,GAAO1+D,KAAK++D,sBAAsBL,EAClCC,GAAQ3+D,KAAK++D,sBAAsBJ,E9GkmkB7B,I8G/lkBF9oB,EACJ,IAAIipB,EACJ,IAAIv/D,EACJ,IAAIy/D,GAAa,CAEjB,KAAKN,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,GAASD,GAAQ,MAAQC,GAAS,KAAM,C9GimkB7C,G8G5lkBLM,GAAaP,EAAKQ,aACtB,IAAIC,GAAaR,EAAMO,aAEvB,IAAID,GAAOE,EAAK,CACf,GAAIC,GAAYV,EAAKW,cACrB,IAAIC,GAAYX,EAAMU,cAEtB,IAAID,GAAME,EAAI,CACb,GAAIZ,EAAKX,OAASY,EAAMZ,OACvBiB,EAAM,MACNA,IAAO,MACF,IAAII,EAAKE,EAAI,CACnBN,EAAM,MACA,CACNA,GAAO,OAEF,IAAIC,EAAME,EAAK,CACrBH,EAAM,MACA,CACNA,GAAO,EAGR,GAAIA,EAAM,EAAG,CACZz/D,EAAIm/D,CACJA,GAAOA,EAAKzP,SACN,CACN1vD,EAAIo/D,CACJA,GAAQA,EAAM1P,KAGf,IAAKpZ,EAAQ,CACZA,EAASt2C,CACTu/D,GAAOv/D,MACD,CACNu/D,EAAK7P,KAAO1vD,CACZu/D,GAAOv/D,GAIT,GAAIm/D,EACHI,EAAK7P,KAAOyP,MAAW,IAAIC,EAC3BG,EAAK7P,KAAO0P,CAEb,OAAO9oB,GAET,OAAA2oB,KAEA5+D,GAA6BJ,QAApBg/D,O9GimkBHe,8CAA8C,SAAS7gE,EAAQkB,EAAOJ,GAI5E,G+GhwkBMggE,GAAkB,WAAxB,QAAMA,MAEEA,EAAAj/D,UAAAk+D,uBAAP,SAA8BC,GAE7B,MAAOA,GAGDc,GAAAj/D,UAAAw+D,sBAAP,SAA6BL,GAE5B,MAAOA,GAET,OAAAc,KAEA5/D,GAA4BJ,QAAnBggE,O/GiwkBHC,yCAAyC,SAAS/gE,EAAQkB,EAAOJ,GAKvE,GgHrxkBMkgE,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,SAAkB,UASlBD,GAAAj9C,OAAgB,QAC/B,OAAAi9C,KAEA9/D,GAAuBJ,QAAdkgE,OhHwxkBHE,gCAAgC,SAASlhE,EAAQkB,EAAOJ,GAC9D,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiHvzkBtB,IAAOI,GAAc/B,EAAc,yCAInC,IAAO8B,GAAS9B,EAAe,oCAC/B,IAAOmhE,GAASnhE,EAAgB,8CjHg0kBhC,IiHrzkBMohE,GAAI,SAAAn/D,GAASZ,EAAb+/D,EAAIn/D,EAcT,SAdKm/D,KAgBJn/D,EAAAlB,KAAAO,KAdOA,MAAA+/D,aAAgC,GAAIz7D,OAoB5C1D,OAAAC,eAAWi/D,EAAAv/D,UAAA,ajHkzkBJO,IiHlzkBP,WAEC,MAAON,GAAUw/D,MjHmzkBXh/D,WAAY,KACZC,aAAc,MiH/ykBd6+D,GAAAv/D,UAAAW,QAAP,YAOO4+D,GAAAv/D,UAAA0/D,eAAP,SAAsBC,GAErB,GAAI/7D,GAAanE,KAAK+/D,aAAargE,MAEnC,KAAK,GAAIP,GAAW,EAAGA,EAAIgF,IAAOhF,EAAG,CACpC,GAAGa,KAAK+/D,aAAa5gE,GAAG6S,MAAMkuD,EAC7B,MAAOlgE,MAAK+/D,aAAa5gE,GAE3B,GAAIghE,GAAuB,GAAIN,EAC/BM,GAAWnuD,KAAKkuD,CAChBlgE,MAAK+/D,aAAahoD,KAAKooD,EACvB,OAAOA,GAGT,OAAAL,IAlDmBr/D,EAoDnBb,GAAcJ,QAALsgE,IjHkzkBN1+D,oCAAoCC,UAAUC,yCAAyCD,UAAU++D,8CAA8C,gDAAgDC,uCAAuC,SAAS3hE,EAAQkB,EAAOJ,GAIjQ,GkHx3kBM8gE,GAAW,WAAjB,QAAMA,MASSA,EAAAx+D,KAAc,MAUdw+D,GAAAC,MAAe,OAUfD,GAAAE,SAAkB,UACjC,OAAAF,KAEA1gE,GAAqBJ,QAAZ8gE,OlH03kBHF,+CAA+C,SAAS1hE,EAAQkB,EAAOJ,GAC7E,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmHj6kBtB,IAAOI,GAAc/B,EAAc,yCnH66kBnC,ImH95kBM+hE,GAAmB,SAAA9/D,GAASZ,EAA5B0gE,EAAmB9/D,EAgBxB,SAhBK8/D,KAkBJ9/D,EAAAlB,KAAAO,KACAA,MAAK0gE,YAAc,GAAIp8D,MACvBtE,MAAK2gE,gBAAkB,GAAI//D,QAMrB6/D,EAAAlgE,UAAAW,QAAP,YAKOu/D,GAAAlgE,UAAAqgE,eAAP,WAEC,MAAO5gE,MAAK0gE,YAEND,GAAAlgE,UAAAqxC,iBAAP,WAEC,MAAO5xC,MAAK6gE,cAENJ,GAAAlgE,UAAAugE,iBAAP,SAAwBC,GAEvB/gE,KAAK6gE,cAAcE,EAKbN,GAAAlgE,UAAA2xC,oBAAP,SAA2B8uB,GAE1B,MAAOhhE,MAAK2gE,gBAAgBK,GAKtBP,GAAAlgE,UAAA0gE,oBAAP,SAA2BD,EAAaE,GAEvCA,EAAOlvD,KAAKgvD,CACZhhE,MAAK0gE,YAAY3oD,KAAKmpD,EACtBlhE,MAAK2gE,gBAAgBK,GAAME,EAG7B,OAAAT,IA5DkChgE,EA8DLb,GAAAJ,QAApBihE,InHi5kBNn/D,yCAAyCD,YAAY8/D,6CAA6C,SAASziE,EAAQkB,EAAOJ,GAK7H,GoHh+kBM4hE,GAAiB,WAAvB,QAAMA,MAOSA,EAAAC,OAAgB,QAOhBD,GAAAE,KAAc,MAKdF,GAAAt/D,KAAc,MAOds/D,GAAAG,MAAe,OAC9B,OAAAH,KAEAxhE,GAA2BJ,QAAlB4hE,OpHi+kBHI,yCAAyC,SAAS9iE,EAAQkB,EAAOJ,GAOvE,GqHnglBMiiE,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,QAAiB,SAKjBD,GAAAE,MAAe,OAC9B,OAAAF,KAEA7hE,GAAuBJ,QAAdiiE,OrHsglBHG,2CAA2C,SAASljE,EAAQkB,EAAOJ,GAKzE,GsH1hlBMqiE,GAAe,WAArB,QAAMA,KAME7hE,KAAAqhE,OAAgB,QAMhBrhE,MAAA8hE,QAAiB,SAMjB9hE,MAAAshE,KAAc,MAMdthE,MAAAuhE,MAAe,QACvB,MAAAM,KAEAjiE,GAAyBJ,QAAhBqiE,OtH2hlBHE,sCAAsC,SAASrjE,EAAQkB,EAAOJ,GACpE,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuH9jlBtB,IAAOI,GAAc/B,EAAc,yCAInC,IAAO8B,GAAS9B,EAAe,oCvHwllB/B,IuH3jlBMsjE,GAAU,SAAArhE,GAASZ,EAAnBiiE,EAAUrhE,EAqNf,SArNKqhE,GAqNOC,EAAiCvwB,EAAkBv1B,EAAiC+lD,EAAsBC,EAAwBC,EAA2BC,EAAiBC,EAAyBC,EAAuBC,EAAuBC,EAAwBC,EAAmBC,GAAhS,GAAAV,QAAA,GAA+B,CAA/BA,EAAA,kBAAiC,GAAAvwB,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAv1B,QAAA,GAA+B,CAA/BA,EAAA,EAAiC,GAAA+lD,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAe,CAAfA,EAAA,GAAiB,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,OAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAE3ShiE,EAAAlB,KAAAO,KA9EMA,MAAA4iE,SAAiC,GAAIt+D,MA+E3CtE,MAAK6iE,UAAYZ,CACjBjiE,MAAK0xC,KAAOA,CACZ1xC,MAAKkiE,KAAOA,CACZliE,MAAKmiE,OAASA,CACdniE,MAAKoiE,UAAYA,CACjBpiE,MAAKqiE,IAAMA,CACXriE,MAAKsiE,YAAcA,CACnBtiE,MAAKuiE,MAAQA,CACbviE,MAAKwiE,WAAaA,CAClBxiE,MAAKyiE,YAAcA,CACnBziE,MAAK0iE,OAASA,CACd1iE,MAAK2iE,QAAUA,EAMhB/hE,OAAAC,eAAWmhE,EAAAzhE,UAAA,avHi6kBJO,IuHj6kBP,WAEC,MAAON,GAAUsiE,YvHk6kBX9hE,WAAY,KACZC,aAAc,MuHj6kBtB,OAAA+gE,IA7OyBvhE,EA+OzBb,GAAoBJ,QAAXwiE,IvHs6kBN5gE,oCAAoCC,UAAUC,yCAAyCD,YAAY0hE,+CAA+C,SAASrkE,EAAQkB,EAAOJ,GAM7K,GwHxrlBMwjE,GAAmB,WAAzB,QAAMA,MASSA,EAAAvgD,OAAgB,QAOhBugD,GAAAC,UAAmB,WAClC,OAAAD,KAEApjE,GAA6BJ,QAApBwjE,OxH2rlBHE,2CAA2C,SAASxkE,EAAQkB,EAAOJ,GAOzE,GyHptlBM2jE,GAAe,WA4DpB,QA5DKA,GA4DOh8D,EAAgB6J,EAAoBlC,EAAqBs0D,EAAqBC,EAAsBV,GAApG,GAAAx7D,QAAA,GAAc,CAAdA,EAAAkX,IAAgB,GAAArN,QAAA,GAAkB,CAAlBA,EAAAqN,IAAoB,GAAAvP,QAAA,GAAmB,CAAnBA,EAAAuP,IAAqB,GAAA+kD,QAAA,GAAmB,CAAnBA,EAAA/kD,IAAqB,GAAAglD,QAAA,GAAoB,CAApBA,EAAAhlD,IAAsB,GAAAskD,QAAA,GAAoB,CAApBA,EAAAtkD,KAIjH,MAAA8kD,KAEAvjE,GAAyBJ,QAAhB2jE,OzHkrlBHjH,kDAAkD,SAASx9D,EAAQkB,EAAOJ,GAChF,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0H/vlBtB,IAAOijE,GAAa5kE,EAAc,4C1HqwlBlC,I0HhwlBMk8D,GAAkB,SAAAj6D,GAASZ,EAA3B66D,EAAkBj6D,EAEvB,SAFKi6D,KAIJj6D,EAAAlB,KAAAO,MAEF,MAAA46D,IANiC0I,EAQL1jE,GAAAJ,QAAnBo7D,I1HkwlBN2I,4CAA4C,8CAA8CA,6CAA6C,SAAS7kE,EAAQkB,EAAOJ,G2H3wlBlK,GAAO4xD,GAAkB1yD,EAAa,6C3HgxlBtC,I2HvwlBM4kE,GAAa,WAelB,QAfKA,KASGtjE,KAAAwjE,eAAwB,CACzBxjE,MAAAgsD,cAAuB,CACvBhsD,MAAAyjE,yBAAkC,CAMxCzjE,MAAK0jE,qBAAuB,GAAItS,GAMjCxwD,OAAAC,eAAWyiE,EAAA/iE,UAAA,U3H2vlBJO,I2H3vlBP,WAEC,MAAOd,MAAKw7B,U3H4vlBNj4B,I2HzvlBP,SAAkBC,GAEjBxD,KAAKw7B,SAAWh4B,CAChBxD,MAAK2jE,YAAc3jE,KAAKw7B,SAAS+rB,e3H0vlB3BvmD,WAAY,KACZC,aAAc,M2HrvlBrBL,QAAAC,eAAWyiE,EAAA/iE,UAAA,c3H2vlBJO,I2H3vlBP,WAEC,MAAOd,MAAK4jE,mB3H4vlBNrgE,I2HzvlBP,SAAsBC,GAErBxD,KAAK4jE,kBAAoBpgE,G3H0vlBnBxC,WAAY,KACZC,aAAc,M2HrvlBrBL,QAAAC,eAAWyiE,EAAA/iE,UAAA,c3H2vlBJO,I2H3vlBP,WAEC,MAAOd,MAAK6jE,c3H4vlBN7iE,WAAY,KACZC,aAAc,M2HvvlBrBL,QAAAC,eAAWyiE,EAAA/iE,UAAA,e3H6vlBJO,I2H7vlBP,WAEC,MAAOd,MAAKgsD,e3H8vlBNhrD,WAAY,KACZC,aAAc,M2HzvlBrBL,QAAAC,eAAWyiE,EAAA/iE,UAAA,0B3H+vlBJO,I2H/vlBP,WAEC,MAAOd,MAAKyjE,0B3HgwlBNziE,WAAY,KACZC,aAAc,M2H3vlBdqiE,GAAA/iE,UAAAqc,MAAP,WAEC5c,KAAKgsD,cAAgBhsD,KAAKyjE,yBAA2B,CACrDzjE,MAAK2jE,YAAc3jE,KAAK4jE,kBAAmB5jE,KAAK4jE,kBAAsB5jE,KAAKw7B,SAAUx7B,KAAKw7B,SAAS+rB,cAAgB,IACnHvnD,MAAKwjE,eAAiBxjE,KAAK2jE,YAAa3jE,KAAK2jE,YAAYjkE,OAAS,CAClEM,MAAK6jE,aAAe,IACpB7jE,MAAK0jE,qBAAqBlS,UAQpB8R,GAAA/iE,UAAAopD,UAAP,SAAiBpM,GAEhB,GAAIumB,GAAgB9jE,KAAKiX,MAAM6hB,kBAAoBykB,EAAKzkB,kBAAoBykB,EAAK3uB,YAAY5uB,KAAK2jE,YAAa3jE,KAAKwjE,eAEpHjmB,GAAKzkB,iBAAmB94B,KAAKiX,MAAM6hB,gBAEnC,OAAOgrC,GAODR,GAAA/iE,UAAAqpD,sBAAP,SAA6B1nC,IAStBohD,GAAA/iE,UAAA6pD,YAAP,SAAmBloC,GAElBliB,KAAKgsD,eAEL,IAAI9pC,EAAOzJ,mBACVzY,KAAKyjE,0BAEN,IAAIlS,GAAsBvxD,KAAK0jE,qBAAqBlW,SACpD+D,GAAKrvC,OAASA,CAEdqvC,GAAKtC,KAAOjvD,KAAK6jE,YACjB7jE,MAAK6jE,aAAetS,EAOd+R,GAAA/iE,UAAAirD,gBAAP,SAAuBtpC,IAShBohD,GAAA/iE,UAAAytD,gBAAP,SAAuB9rC,IAShBohD,GAAA/iE,UAAA4tD,YAAP,SAAmBjsC,IAIpB,OAAAohD,KAEA1jE,GAAuBJ,QAAd8jE,I3HivlBNpS,6CAA6C,+CAA+C6S,+CAA+C,SAASrlE,EAAQkB,EAAOJ,GACtK,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4H15lBtB,IAAOijE,GAAa5kE,EAAc,4C5Hg6lBlC,I4Ht5lBMslE,GAAe,SAAArjE,GAASZ,EAAxBikE,EAAerjE,EAsDpB,SAtDKqjE,KAwDJrjE,EAAAlB,KAAAO,KAhDMA,MAAAikE,YAAqB,CAEpBjkE,MAAAkkE,sBAA+B,CAC/BlkE,MAAAmkE,gBAAyB,CACzBnkE,MAAAokE,gBAAyB,CA8ChCpkE,MAAKqkE,SAAW,GAAI//D,MACpBtE,MAAKskE,mBAAqB,GAAIhgE,MAC9BtE,MAAKukE,aAAe,GAAIjgE,MACxBtE,MAAKwkE,aAAe,GAAIlgE,MAExBtE,MAAKsqD,kBAAoB,KA9C1B1pD,OAAAC,eAAWmjE,EAAAzjE,UAAA,qB5Hu5lBJO,I4Hv5lBP,WAEC,MAAOd,MAAKskE,oB5Hw5lBNtjE,WAAY,KACZC,aAAc,M4Hn5lBrBL,QAAAC,eAAWmjE,EAAAzjE,UAAA,e5Hy5lBJO,I4Hz5lBP,WAEC,MAAOd,MAAKwkE,c5H05lBNxjE,WAAY,KACZC,aAAc,M4Hr5lBrBL,QAAAC,eAAWmjE,EAAAzjE,UAAA,U5H25lBJO,I4H35lBP,WAEC,MAAOd,MAAKqkE,U5H45lBNrjE,WAAY,KACZC,aAAc,M4Hv5lBrBL,QAAAC,eAAWmjE,EAAAzjE,UAAA,e5H65lBJO,I4H75lBP,WAEC,MAAOd,MAAKukE,c5H85lBNvjE,WAAY,KACZC,aAAc,M4Hz5lBrBL,QAAAC,eAAWmjE,EAAAzjE,UAAA,U5H+5lBJO,I4H/5lBP,WAEC,MAAOd,MAAKykE,U5Hg6lBNzjE,WAAY,KACZC,aAAc,M4H94lBd+iE,GAAAzjE,UAAAqpD,sBAAP,SAA6B1nC,GAE5BliB,KAAKskE,mBAAoBtkE,KAAKkkE,yBAA+ChiD,EAOvE8hD,GAAAzjE,UAAAirD,gBAAP,SAAuBtpC,GAEtBliB,KAAKwkE,aAAcxkE,KAAKokE,mBAAmCliD,EAOrD8hD,GAAAzjE,UAAAytD,gBAAP,SAAuB9rC,GAEtBliB,KAAKukE,aAAcvkE,KAAKmkE,mBAAmCjiD;CAOrD8hD,GAAAzjE,UAAA4tD,YAAP,SAAmBjsC,GAElBliB,KAAKykE,SAAoBviD,EAMnB8hD,GAAAzjE,UAAAqc,MAAP,WAECjc,EAAAJ,UAAMqc,MAAKnd,KAAAO,KAEXA,MAAKykE,SAAW,IAEhB,IAAIzkE,KAAKikE,YAAc,EACtBjkE,KAAKqkE,SAAS3kE,OAASM,KAAKikE,YAAc,CAE3C,IAAIjkE,KAAKkkE,sBAAwB,EAChClkE,KAAKskE,mBAAmB5kE,OAASM,KAAKkkE,sBAAwB,CAE/D,IAAIlkE,KAAKmkE,gBAAkB,EAC1BnkE,KAAKukE,aAAa7kE,OAASM,KAAKmkE,gBAAkB,CAEnD,IAAInkE,KAAKokE,gBAAkB,EAC1BpkE,KAAKwkE,aAAa9kE,OAASM,KAAKokE,gBAAkB,EAErD,OAAAJ,IA3H8BV,EA6HL1jE,GAAAJ,QAAhBwkE,I5Hy4lBNT,4CAA4C,8CAA8CtT,gDAAgD,SAASvxD,EAAQkB,EAAOJ,GACrK,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6HthmBtB,IAAO4B,GAAQvD,EAAgB,gCAG/B,IAAO4kE,GAAa5kE,EAAc,4C7HgimBlC,I6HnhmBM4vD,GAAgB,SAAA3tD,GAASZ,EAAzBuuD,EAAgB3tD,EAoCrB,SApCK2tD,KAsCJ3tD,EAAAlB,KAAAO,KApCOA,MAAA0kE,aAAwB,GAAIziE,EAC5BjC,MAAA2kE,cAAyB,GAAI1iE,EAE9BjC,MAAA84B,iBAA0B,EAKjCl4B,OAAAC,eAAWytD,EAAA/tD,UAAA,e7HwhmBJO,I6HxhmBP,WAEC,MAAOd,MAAK0kE,c7HyhmBNnhE,I6HthmBP,SAAuBC,GAEtBxD,KAAK0kE,aAAelhE,G7HuhmBdxC,WAAY,KACZC,aAAc,M6HlhmBrBL,QAAAC,eAAWytD,EAAA/tD,UAAA,gB7HwhmBJO,I6HxhmBP,WAEC,MAAOd,MAAK2kE,e7HyhmBNphE,I6HthmBP,SAAwBC,GAEvBxD,KAAK2kE,cAAgBnhE,G7HuhmBfxC,WAAY,KACZC,aAAc,M6HxgmBdqtD,GAAA/tD,UAAAopD,UAAP,SAAiBpM,GAEhB,MAAOA,GAAKiN,kBAAkBxqD,KAAK0kE,aAAc1kE,KAAK2kE,eAExD,OAAArW,IAlD+BgV,EAoDL1jE,GAAAJ,QAAjB8uD,I7HihmBNhlD,gCAAgCjI,UAAUkiE,4CAA4C,8CAA8Cva,qDAAqD,SAAStqD,EAAQkB,EAAOJ,GACpN,GAAIO,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8HzlmBtB,IAAOijE,GAAa5kE,EAAc,4C9H+lmBlC,I8H1lmBMypD,GAAqB,SAAAxnD,GAASZ,EAA9BooD,EAAqBxnD,EAE1B,SAFKwnD,KAIJxnD,EAAAlB,KAAAO,MAMMmoD,EAAA5nD,UAAAopD,UAAP,SAAiBpM,GAEhB,GAAIumB,GAAgB9jE,KAAKiX,MAAM6hB,kBAAoBykB,EAAKzkB,kBAAoBykB,EAAKsM,iBAEjF,KAAKia,EAAO,CACXvmB,EAAKzkB,iBAAmB94B,KAAKiX,MAAM6hB,gBAEnC,OAAO,OAGR,MAAOn4B,GAAAJ,UAAMopD,UAASlqD,KAAAO,KAACu9C,GAEzB,OAAA4K,IAtBoCmb,EAwBpC1jE,GAA+BJ,QAAtB2oD,I9HulmBNob,4CAA4C,8CAA8CqB,iCAAiC,SAASlmE,EAAQkB,EAAOJ,G+HrnmBtJ,GAAO64C,GAAU35C,EAAc,kCAC/B,IAAOmmE,GAASnmE,EAAc,kCAE9B,IAAOq2C,GAASr2C,EAAc,sCAC9B,IAAO45C,GAAa55C,EAAa,yCACjC,IAAOs+C,GAAYt+C,EAAc,wC/HynmBjC,I+HpnmBMomE,GAAI,WAAV,QAAMA,MAQSA,EAAAC,OAAd,SAAqBhnD,GAEpB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,UAAU,IAAU,SACnB,MAAOA,EAER,OAAgBA,GAGH+mD,GAAAE,UAAd,SAAwBjnD,GAEvB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,IAAIA,YAAgB8mD,GACnB,MAAO9mD,EAER,OAAmBA,GAcL+mD,GAAAG,MAAf,SAAqBC,GAEpB,GAAIxlE,GAAwBwlE,EAAIxlE,MAChC,KAAK,GAAIP,GAAmB,EAAGA,EAAIO,IAAUP,EAAG,CAC/C,GAAIa,KAAKmlE,UAAUltD,QAAQitD,EAAIE,OAAOjmE,MAAQ,EAC7C,MAAO,OAGT,MAAO,MAGM2lE,GAAAO,SAAd,SAAuBtnD,GAEtB,SAAU,IAAU,SACnB,MAAOpV,MAAKwb,MAAepG,EAE5B,UAAU,IAAU,SAAU,CAC7B,GAAIA,GAAQ,SACX,MAAOpV,MAAKwb,MAAMxb,KAAK28D,SAAS,SAEjC,IAAItlE,KAAKulE,aAAe,KAAM,CAC7BvlE,KAAKulE,YAAc,GAAI3kE,OACvBZ,MAAKulE,YAAY,aAAe,OAChCvlE,MAAKulE,YAAY,aAAe,MAChCvlE,MAAKulE,YAAY,kBAAoB,OACrCvlE,MAAKulE,YAAY,kBAAoB,QACrCvlE,MAAKulE,YAAY,mBAAqB,OACtCvlE,MAAKulE,YAAY,aAAe,OAChCvlE,MAAKulE,YAAY,iBAAmB,OACpCvlE,MAAKulE,YAAY,gBAAkB,OACnCvlE,MAAKulE,YAAY,QAAU,GAC3BvlE,MAAKulE,YAAY,YAAc,GAC/BvlE,MAAKulE,YAAY,cAAgB,GACjCvlE,MAAKulE,YAAY,QAAU,GAC3BvlE,MAAKulE,YAAY,cAAgB,OACjCvlE,MAAKulE,YAAY,eAAiB,KAClCvlE,MAAKulE,YAAY,gBAAkB,OACnCvlE,MAAKulE,YAAY,WAAa,OAC9BvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,cAAgB,QACjCvlE,MAAKulE,YAAY,SAAW,QAC5BvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,iBAAmB,QACpCvlE,MAAKulE,YAAY,mBAAqB,OACtCvlE,MAAKulE,YAAY,iBAAmB,OACpCvlE,MAAKulE,YAAY,YAAc,KAC/BvlE,MAAKulE,YAAY,QAAU,KAC3BvlE,MAAKulE,YAAY,aAAe,OAChCvlE,MAAKulE,YAAY,iBAAmB,KACpCvlE,MAAKulE,YAAY,QAAU,KAC3BvlE,MAAKulE,YAAY,QAAU,KAC3BvlE,MAAKulE,YAAY,aAAe,OAChCvlE,MAAKulE,YAAY,cAAgB,OACjCvlE,MAAKulE,YAAY,oBAAsB,OACvCvlE,MAAKulE,YAAY,gBAAkB,OACnCvlE,MAAKulE,YAAY,kBAAoB,OACrCvlE,MAAKulE,YAAY,YAAc,OAC/BvlE,MAAKulE,YAAY,aAAe,KAChCvlE,MAAKulE,YAAY,SAAW,KAC5BvlE,MAAKulE,YAAY,eAAiB,OAClCvlE,MAAKulE,YAAY,aAAe,OAChCvlE,MAAKulE,YAAY,QAAU,KAC3BvlE,MAAKulE,YAAY,cAAgB,OACjCvlE,MAAKulE,YAAY,aAAe,OAChCvlE,MAAKulE,YAAY,eAAiB,QAClCvlE,MAAKulE,YAAY,eAAiB,QAClCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,cAAgB,OACjCvlE,MAAKulE,YAAY,eAAiB,KAClCvlE,MAAKulE,YAAY,qBAAuB,KACxCvlE,MAAKulE,YAAY,kBAAoB,OACrCvlE,MAAKulE,YAAY,aAAe,OAChCvlE,MAAKulE,YAAY,SAAW,OAC5BvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,iBAAmB,QACpCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,QAAU,QAC3BvlE,MAAKulE,YAAY,UAAY,QAC7BvlE,MAAKulE,YAAY,SAAW,QAC5BvlE,MAAKulE,YAAY,iBAAmB,QACpCvlE,MAAKulE,YAAY,kBAAoB,QACrCvlE,MAAKulE,YAAY,YAAc,QAC/BvlE,MAAKulE,YAAY,SAAW,QAC5BvlE,MAAKulE,YAAY,eAAiB,QAClCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,OAAS,QAC1BvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,UAAY,QAC7BvlE,MAAKulE,YAAY,eAAiB,OAClCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,QAAU,QAC3BvlE,MAAKulE,YAAY,cAAgB,QACjCvlE,MAAKulE,YAAY,WAAa,OAC9BvlE,MAAKulE,YAAY,UAAY,OAC7BvlE,MAAKulE,YAAY,SAAW,QAC5BvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,cAAgB,QACjCvlE,MAAKulE,YAAY,UAAY,QAC7BvlE,MAAKulE,YAAY,cAAgB,QACjCvlE,MAAKulE,YAAY,eAAiB,QAClCvlE,MAAKulE,YAAY,SAAW,QAC5BvlE,MAAKulE,YAAY,UAAY,QAC7BvlE,MAAKulE,YAAY,cAAgB,QACjCvlE,MAAKulE,YAAY,UAAY,QAC7BvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,WAAa,QAC9BvlE,MAAKulE,YAAY,OAAS,QAC1BvlE,MAAKulE,YAAY,YAAc,QAC/BvlE,MAAKulE,YAAY,WAAa,QAC9BvlE,MAAKulE,YAAY,WAAa,QAC9BvlE,MAAKulE,YAAY,WAAa,QAC9BvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,QAAU,QAC3BvlE,MAAKulE,YAAY,iBAAmB,QACpCvlE,MAAKulE,YAAY,mBAAqB,QACtCvlE,MAAKulE,YAAY,UAAY,OAC7BvlE,MAAKulE,YAAY,eAAiB,OAClCvlE,MAAKulE,YAAY,gBAAkB,OACnCvlE,MAAKulE,YAAY,cAAgB,OACjCvlE,MAAKulE,YAAY,UAAY,OAC7BvlE,MAAKulE,YAAY,cAAgB,OACjCvlE,MAAKulE,YAAY,cAAgB,QACjCvlE,MAAKulE,YAAY,gBAAkB,QACnCvlE,MAAKulE,YAAY,UAAY,QAC7BvlE,MAAKulE,YAAY,UAAY,QAC7BvlE,MAAKulE,YAAY,QAAU,QAC3BvlE,MAAKulE,YAAY,WAAa,QAC9BvlE,MAAKulE,YAAY,YAAc,QAC/BvlE,MAAKulE,YAAY,cAAgB,QACjCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,YAAc,QAC/BvlE,MAAKulE,YAAY,wBAA0B,QAC3CvlE,MAAKulE,YAAY,gBAAkB,QACnCvlE,MAAKulE,YAAY,YAAc,QAC/BvlE,MAAKulE,YAAY,eAAiB,QAClCvlE,MAAKulE,YAAY,SAAW,QAC5BvlE,MAAKulE,YAAY,eAAiB,QAClCvlE,MAAKulE,YAAY,SAAW,QAC5BvlE,MAAKulE,YAAY,WAAa,QAC9BvlE,MAAKulE,YAAY,gBAAkB,QACnCvlE,MAAKulE,YAAY,UAAY,QAC7BvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,cAAgB,QACjCvlE,MAAKulE,YAAY,SAAW,QAC5BvlE,MAAKulE,YAAY,YAAc,QAC/BvlE,MAAKulE,YAAY,iBAAmB,QACpCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,QAAU,QAC3BvlE,MAAKulE,YAAY,SAAW,QAC5BvlE,MAAKulE,YAAY,cAAgB,QACjCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,aAAe,QAChCvlE,MAAKulE,YAAY,UAAY,QAC7BvlE,MAAKulE,YAAY,YAAc,QAC/BvlE,MAAKulE,YAAY,QAAU,OAC3BvlE,MAAKulE,YAAY,kBAAoB,OACrCvlE,MAAKulE,YAAY,aAAe,OAChCvlE,MAAKulE,YAAY,WAAa,OAC9BvlE,MAAKulE,YAAY,iBAAmB,OACpCvlE,MAAKulE,YAAY,SAAW,CAC5BvlE,MAAKulE,YAAY,eAAiB,WAGnC,GAAIvlE,KAAKulE,YAAYxnD,IAAS,KAC7B,MAAO/d,MAAKulE,YAAYxnD,EAEzB,IAAeA,EAAMre,QAAU,GAAMM,KAAKilE,MAAMlnD,GAC/C,MAAOynD,UAAS,KAAOznD,GAGzB,MAAO,MAGM+mD,GAAA3oD,MAAd,SAAoB4B,GAEnB,GAAI83B,GAAyB71C,KAAKqlE,SAAStnD,EAE3C,IAAI83B,GAAU,KACb,KAAM,IAAId,GAAU,wBAA0Bh3B,EAE/C,OAAO83B,GAGMivB,GAAAW,SAAd,SAAuBzzD,GAEtB,GAAIhS,KAAK0lE,YAAY1zD,GACpB,MAAOA,EAER,IAAI6jC,GAAa71C,KAAK2lE,SAAS3zD,EAE/B,IAAI6jC,GAAU,KACb,MAAOA,EAER,KACCA,EAASinB,OAAO9qD,EAChBhS,MAAK2lE,SAAS3zD,GAAQ6jC,CACtB,OAAOA,GACN,MAAOl3C,IAGTqB,KAAK0lE,YAAY1zD,GAAQ,IAEzB,OAAOA,GAGM8yD,GAAAc,WAAd,SAAyB7nD,GAExB,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAO/d,KAAKylE,SAAS1nD,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOpf,GACRof,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgBs6B,GACnB,MAAOt6B,EAER,IAAIA,YAAgBi/B,GACnBj/B,EAAuBA,EAAMu/B,gBAE9B,IAAIv/B,YAAgB8nD,kBAAkB,CACrC,GAAIC,GAAmD/nD,CACvD,IAAI6nD,GAAwB,GAAIvtB,GAAWytB,EAAa90D,MAAO80D,EAAah3D,OAAQ,KAAM,EAC1F82D,GAAWG,KAAKD,EAChB,OAAOF,GAaR,KAAM,IAAI7wB,GAAU,6BAA+Bh3B,GAGtC+mD,GAAAkB,cAAd,SAA4BjoD,GAE3B,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAO/d,KAAKylE,SAAS1nD,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOpf,GACRof,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgBu6B,GACnB,MAAOv6B,EAER,KACC,GAAIkoD,GAAiBnB,EAAKc,WAAW7nD,EACrC,OAAO,IAAIu6B,GAAc2tB,GACxB,MAAOtnE,IAGT,KAAM,IAAIo2C,GAAU,gCAAkCh3B,GAxTxC+mD,GAAAK,UAAmB,wBAEnBL,GAAAY,YAAqB,GAAI9kE,OACzBkkE,GAAAa,SAAkB,GAAI/kE,OAuTtC,OAAAkkE,KAEAllE,GAAcJ,QAALslE,I/HmkmBNxrB,kCAAkCj4C,UAAUk4C,yCAAyCl4C,UAAU+8C,wCAAwC/8C,UAAU6kE,kCAAkC7kE,UAAUyzC,sCAAsC",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends NamedAssetBase implements IAsset\r\n{\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.ANIMATION_NODE;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubMesh\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static POSITION_DATA:string = \"positions\";\r\n    public static CURVE_DATA:string = \"curves\";\r\n\tpublic static UV_DATA:string = \"uvs\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static CURVE_FORMAT:string = \"float2\";\r\n\tpublic static UV_FORMAT:string = \"float2\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _curvesDirty:boolean = true;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n    private _vertexNormalsDirty:boolean = true;\r\n\tprivate _uvsDirty:boolean = true;\r\n\tprivate _secondaryUVsDirty:boolean = true;\r\n\tprivate _jointIndicesDirty:boolean = true;\r\n\tprivate _jointWeightsDirty:boolean = true;\r\n\r\n\tprivate _positions:Array<number>;\r\n\tprivate _curves:Array<number>;\r\n\tprivate _uvs:Array<number>;\r\n\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedJointIndices:Array<number>;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\r\n\tprivate _concatenateArrays:boolean = true;\r\n\tprivate _autoDeriveNormals:boolean = false;\r\n\tprivate _useFaceWeights:boolean = false;\r\n    private _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Array<number>;\r\n\tprivate _faceWeights:Array<number>;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _curvesUpdated:SubGeometryEvent;\r\n\tprivate _uvsUpdated:SubGeometryEvent;\r\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tthis._pOffset[CurveSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\t\t//always have positions\r\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tvar stride:number = 3;\r\n\r\n\t\t\tif (this._curves != null) {\r\n\t\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvs != null) {\r\n\t\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tthis._pStride[CurveSubGeometry.VERTEX_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = stride;\r\n\r\n\t\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t} else {\r\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = 0;\r\n\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = 0;\r\n\r\n\r\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = 3;\r\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = 2;\r\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = 2;\r\n\t\t}\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n    //remove\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n        if (this._curvesDirty)\r\n            this.updateCurves(this._curves);\r\n\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Array<number>\r\n\t{\r\n\t\tif (this._curvesDirty)\r\n\t\t\tthis.updateCurves(this._curves);\r\n\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Array<number>\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Array<number>\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\r\n\t */\r\n\tpublic get useFaceWeights():boolean\r\n\t{\r\n\t\treturn this._useFaceWeights;\r\n\t}\r\n\r\n\tpublic set useFaceWeights(value:boolean)\r\n\t{\r\n\t\tif (this._useFaceWeights == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useFaceWeights = value;\r\n\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t}\r\n\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\r\n\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper(concatenatedArrays);\r\n\r\n\t\tthis._pSubMeshClass = CurveSubMesh;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tthis._positions = values;\r\n\r\n\t\tif (this._positions == null)\r\n\t\t\tthis._positions = new Array<number>();\r\n\r\n\t\tthis._pNumVertices = this._positions.length/3;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tvar len:number = this._pNumVertices*this.getStride(CurveSubGeometry.VERTEX_DATA);\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = this.getOffset(CurveSubGeometry.POSITION_DATA);\r\n\t\t\tstride = this.getStride(CurveSubGeometry.POSITION_DATA);\r\n\t\t\tpositions = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tpositions[index] = values[i++];\r\n\t\t\t\tpositions[index + 1] = values[i++];\r\n\t\t\t\tpositions[index + 2] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic updateCurves(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar curves:Array<number>;\r\n\r\n\t\tif (true) {\r\n\t\t\tif ((this._curves == null || values == null) && (this._curves != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._curves = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.CURVE_DATA);\r\n\t\t\t\tstride = this.getStride(CurveSubGeometry.CURVE_DATA);\r\n                curves = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n                    curves[index] = values[i++];\r\n                    curves[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.notifyCurvesUpdate();\r\n\r\n\t\tthis._curvesDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic updateUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._uvs = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.UV_DATA);\r\n\t\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\r\n\t\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (this._uvs == null) {\r\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\toffset = this.getOffset(CurveSubGeometry.UV_DATA);\r\n\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\r\n\r\n\t\t\t//autoderived uvs\r\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tvar uvIdx:number = 0;\r\n\r\n\t\t\t//clear uv values\r\n\t\t\tvar lenV:number = uvs.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuvs[index] = uvIdx*.5;\r\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (++uvIdx == 3)\r\n\t\t\t\t\tuvIdx = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\r\n\t\tthis._uvsDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._curves = null;\r\n\t\tthis._uvs = null;\r\n\r\n\t\tthis._faceNormals = null;\r\n\t\tthis._faceWeights = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the CurveSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tsuper.updateIndices(indices);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenateArrays);\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._positions.concat());\r\n\r\n\t\tif (this._curves)\r\n\t\t\tclone.updateCurves(this._curves.concat());\r\n\t\telse\r\n\t\t\tclone.updateCurves(null);\r\n\r\n\t\tif (this._uvs && !this._autoDeriveUVs)\r\n\t\t\tclone.updateUVs(this._uvs.concat());\r\n\t\telse\r\n\t\t\tclone.updateUVs(null);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tuvs = this._uvs;\r\n\r\n\t\tvar ratioU:number = scaleU/this._scaleU;\r\n\t\tvar ratioV:number = scaleV/this._scaleV;\r\n\r\n\t\tthis._scaleU = scaleU;\r\n\t\tthis._scaleV = scaleV;\r\n\r\n\t\tvar len:number = uvs.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 2;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tuvs[index] *= ratioU;\r\n\t\t\tuvs[index + 1] *= ratioV;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tpositions = this._positions;\r\n\r\n\t\tvar len:number = positions.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 3;\r\n\r\n\t\ti = 0;\r\n\t\tindex = offset;\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[index] *= scale;\r\n\t\t\tpositions[index + 1] *= scale;\r\n\t\t\tpositions[index + 2] *= scale;\r\n\r\n\t\t\ti += 3;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tpositions = this._pVertices;\r\n\t\t} else {\r\n\t\t\tpositions = this._positions;\r\n\t\t}\r\n\r\n\t\tvar len:number = this._positions.length/3;\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\r\n\r\n\t\tvar vi0:number = this.getOffset(CurveSubGeometry.POSITION_DATA);\r\n\t\tvar vStride:number = this.getStride(CurveSubGeometry.POSITION_DATA);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\r\n\t\t\t// bake position\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += vStride;\r\n\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceNormals == null)\r\n\t\t\tthis._faceNormals = new Array<number>(len);\r\n\r\n\t\tif (this._useFaceWeights && this._faceWeights == null)\r\n\t\t\tthis._faceWeights = new Array<number>(len/3);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tif (this._useFaceWeights) {\r\n\t\t\t\tvar w:number = d*10000;\r\n\r\n\t\t\t\tif (w < 1)\r\n\t\t\t\t\tw = 1;\r\n\r\n\t\t\t\tthis._faceWeights[k++] = w;\r\n\t\t\t}\r\n\r\n\t\t\td = 1/d;\r\n\r\n\t\t\tthis._faceNormals[j++] = cx*d;\r\n\t\t\tthis._faceNormals[j++] = cy*d;\r\n\t\t\tthis._faceNormals[j++] = cz*d;\r\n\t\t}\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyCurvesUpdate();\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyCurvesUpdate()\r\n\t{\r\n\t\tif (this._curvesDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._curvesDirty = true;\r\n\r\n\t\tif (!this._curvesUpdated)\r\n\t\t\tthis._curvesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.CURVE_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._curvesUpdated);\r\n\t}\r\n\r\n\r\n\r\n\tprivate notifyUVsUpdate() {\r\n        if (this._uvsDirty)\r\n            return;\r\n\r\n        this._uvsDirty = true;\r\n\r\n        if (!this._uvsUpdated)\r\n            this._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.UV_DATA);\r\n\r\n        this.dispatchEvent(this._uvsUpdated);\r\n    }\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport CurveSubGeometry\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.CURVE_SUB_MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyCurveSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends NamedAssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic alpha:number;\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pBoxBounds;\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid) {\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\treturn point; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\treturn new Point(); //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends NamedAssetBase implements IAsset\r\n{\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.GEOMETRY;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\tpublic getSubGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/base/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/base/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/base/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/base/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/base/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/base/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/base/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/base/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/base/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LIGHT;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "import DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport LineSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static VERTEX_DATA:string = \"vertices\";\r\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\r\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\r\n\tpublic static THICKNESS_DATA:string = \"thickness\";\r\n\tpublic static COLOR_DATA:string = \"colors\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static COLOR_FORMAT:string = \"float4\";\r\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _boundingPositionDirty = true;\r\n\tprivate _thicknessDirty:boolean = true;\r\n\tprivate _colorsDirty:boolean = true;\r\n\r\n\tprivate _startPositions:Array<number>;\r\n\tprivate _endPositions:Array<number>;\r\n\tprivate _boundingPositions:Array<number>\r\n\tprivate _thickness:Array<number>;\r\n\tprivate _startColors:Array<number>;\r\n\tprivate _endColors:Array<number>;\r\n\r\n\tprivate _numSegments:number;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _thicknessUpdated:SubGeometryEvent;\r\n\tprivate _colorUpdated:SubGeometryEvent;\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\tvar stride:number = 0;\r\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\r\n\t\tstride += 3;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\r\n\t\tstride += 3;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\r\n\t\tstride += 1;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\r\n\t\tstride += 4;\r\n\r\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\r\n\r\n\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\tif (this._pVertices == null)\r\n\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\telse if (this._pVertices.length != len)\r\n\t\t\tthis._pVertices.length = len;\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\tif (this._thicknessDirty)\r\n\t\t\tthis.updateThickness(this._thickness);\r\n\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\treturn this._startPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\treturn this._endPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Array<number>\r\n\t{\r\n\t\tif (this._thicknessDirty)\r\n\t\t\tthis.updateThickness(this._thickness);\r\n\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startColors():Array<number>\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._startColors;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endColors():Array<number>\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._endColors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of segments in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numSegments():number\r\n\t{\r\n\t\treturn this._numSegments;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(true);\r\n\r\n\t\tthis._pSubMeshClass = LineSubMesh;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._boundingPositionDirty)\r\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\r\n\r\n\t\treturn this._boundingPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar values:Array<number>\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar indices:Array<number>;\r\n\r\n\t\tthis._startPositions = startValues;\r\n\r\n\t\tif (this._startPositions == null)\r\n\t\t\tthis._startPositions = new Array<number>();\r\n\r\n\t\tthis._endPositions = endValues;\r\n\r\n\t\tif (this._endPositions == null)\r\n\t\t\tthis._endPositions = new Array<number>();\r\n\r\n\t\tthis._boundingPositionDirty = true;\r\n\r\n\t\tthis._numSegments = this._startPositions.length/3;\r\n\r\n\t\tthis._pNumVertices = this._numSegments*4;\r\n\r\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\r\n\r\n\t\tif (this._pVertices == null)\r\n\t\t\tthis._pVertices = new Array<number>(lenV);\r\n\t\telse if (this._pVertices.length != lenV)\r\n\t\t\tthis._pVertices.length = lenV;\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\r\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\r\n\t\tpositions = this._pVertices;\r\n\t\tindices = new Array();\r\n\r\n\t\twhile (i < startValues.length) {\r\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\r\n\t\t\tpositions[index] = values[i];\r\n\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\tpositions[index + 2] = values[i + 2];\r\n\r\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\r\n\t\t\tpositions[index + 3] = values[i];\r\n\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\tpositions[index + 5] = values[i + 2];\r\n\r\n\t\t\tif (++j == 4) {\r\n\t\t\t\tvar o:number = index/stride - 3;\r\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\r\n\t\t\t\tj = 0;\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.updateIndices(indices);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic updateThickness(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar thickness:Array<number>;\r\n\r\n\t\tthis._thickness = values;\r\n\r\n\t\tif (values != null) {\r\n\t\t\ti = 0;\r\n\t\t\tj = 0;\r\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\r\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\r\n\t\t\tthickness = this._pVertices;\r\n\r\n\t\t\tindex = offset\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyThicknessUpdate();\r\n\r\n\t\tthis._thicknessDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar values:Array<number>\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar colors:Array<number>;\r\n\r\n\t\tthis._startColors = startValues;\r\n\r\n\t\tthis._endColors = endValues;\r\n\r\n\t\t//default to white\r\n\t\tif (this._startColors == null) {\r\n\t\t\tthis._startColors = new Array(this._numSegments*4);\r\n\r\n\t\t\ti = 0;\r\n\t\t\twhile (i < this._startColors.length)\r\n\t\t\t\tthis._startColors[i++] = 1;\r\n\t\t}\r\n\r\n\t\tif (this._endColors == null) {\r\n\t\t\tthis._endColors = new Array(this._numSegments*4);\r\n\r\n\t\t\ti = 0;\r\n\t\t\twhile (i < this._endColors.length)\r\n\t\t\t\tthis._endColors[i++] = 1;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\r\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\r\n\t\tcolors = this._pVertices;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (i < this._startColors.length) {\r\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\r\n\t\t\tcolors[index] = values[i];\r\n\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\tcolors[index + 3] = values[i + 3];\r\n\r\n\t\t\tif (++j == 4) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\ti += 4;\r\n\t\t\t}\r\n\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyColorsUpdate();\r\n\r\n\t\tthis._colorsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._startPositions = null;\r\n\t\tthis._endPositions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._startColors = null;\r\n\t\tthis._endColors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\r\n\t\tclone.updateThickness(this._thickness.concat());\r\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyThicknessUpdate();\r\n\t\tthis.notifyColorsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyThicknessUpdate()\r\n\t{\r\n\t\tif (this._thicknessDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._thicknessDirty = true;\r\n\r\n\t\tif (!this._thicknessUpdated)\r\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._thicknessUpdated);\r\n\t}\r\n\r\n\tprivate notifyColorsUpdate()\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._colorsDirty = true;\r\n\r\n\t\tif (!this._colorUpdated)\r\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._colorUpdated);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LINE_SUB_MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyLineSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport ISubMeshClass\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends NamedAssetBase\r\n{\r\n\tpublic static VERTEX_DATA:string = \"vertices\";\r\n\r\n\tpublic _pStrideOffsetDirty:boolean = true;\r\n\r\n\tpublic _pIndices:Array<number> /*uint*/;\r\n\tpublic _pVertices:Array<number>;\r\n\r\n\tprivate _numIndices:number;\r\n\tprivate _numTriangles:number;\r\n\tpublic _pNumVertices:number;\r\n\r\n\tpublic _pConcatenateArrays:boolean = true;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _pStride:Object = new Object();\r\n\tpublic _pOffset:Object = new Object();\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSubMeshClass:ISubMeshClass;\r\n\r\n\tpublic get subMeshClass():ISubMeshClass\r\n\t{\r\n\t\treturn this._pSubMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get concatenateArrays():boolean\r\n\t{\r\n\t\treturn this._pConcatenateArrays;\r\n\t}\r\n\r\n\tpublic set concatenateArrays(value:boolean)\r\n\t{\r\n\t\tif (this._pConcatenateArrays == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pConcatenateArrays = value;\r\n\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Array<number>\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tthis.updateVertices();\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numTriangles():number\r\n\t{\r\n\t\treturn this._numTriangles;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._pNumVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pConcatenateArrays = concatenatedArrays;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getStride(dataType:string)\r\n\t{\r\n\t\tif (this._pStrideOffsetDirty)\r\n\t\t\tthis._pUpdateStrideOffset();\r\n\r\n\t\treturn this._pStride[dataType];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getOffset(dataType:string)\r\n\t{\r\n\t\tif (this._pStrideOffsetDirty)\r\n\t\t\tthis._pUpdateStrideOffset();\r\n\r\n\t\treturn this._pOffset[dataType];\r\n\t}\r\n\r\n\tpublic updateVertices()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pIndices = null;\r\n\t\tthis._pVertices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tthis._pIndices = indices;\r\n\t\tthis._numIndices = indices.length;\r\n\r\n\t\tthis._numTriangles = this._numIndices/3;\r\n\r\n\t\tthis.notifyIndicesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\tconsole.log(\"apply\");\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends NamedAssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubMesh\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static POSITION_DATA:string = \"positions\";\r\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\r\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\r\n\tpublic static UV_DATA:string = \"uvs\";\r\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\r\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\r\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static NORMAL_FORMAT:string = \"float3\";\r\n\tpublic static TANGENT_FORMAT:string = \"float3\";\r\n\tpublic static UV_FORMAT:string = \"float2\";\r\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\tprivate _vertexNormalsDirty:boolean = true;\r\n\tprivate _vertexTangentsDirty:boolean = true;\r\n\tprivate _uvsDirty:boolean = true;\r\n\tprivate _secondaryUVsDirty:boolean = true;\r\n\tprivate _jointIndicesDirty:boolean = true;\r\n\tprivate _jointWeightsDirty:boolean = true;\r\n\r\n\tprivate _positions:Array<number>;\r\n\tprivate _vertexNormals:Array<number>;\r\n\tprivate _vertexTangents:Array<number>;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _secondaryUVs:Array<number>;\r\n\tprivate _jointIndices:Array<number>;\r\n\tprivate _jointWeights:Array<number>;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedJointIndices:Array<number>;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\tprivate _numCondensedJoints:number;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _concatenateArrays:boolean = true;\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\tprivate _useFaceWeights:boolean = false;\r\n\r\n\tprivate _faceNormals:Array<number>;\r\n\tprivate _faceTangents:Array<number>;\r\n\tprivate _faceWeights:Array<number>;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _normalsUpdated:SubGeometryEvent;\r\n\tprivate _tangentsUpdated:SubGeometryEvent;\r\n\tprivate _uvsUpdated:SubGeometryEvent;\r\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\r\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\r\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\t}\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\t\t//always have positions\r\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tvar stride:number = 3;\r\n\r\n\t\t\tif (this._vertexNormals != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\r\n\t\t\t\tstride += 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._vertexTangents != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\r\n\t\t\t\tstride += 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvs != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._secondaryUVs != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._jointIndices != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\r\n\t\t\t\tstride += this._jointsPerVertex;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._jointWeights != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\r\n\t\t\t\tstride += this._jointsPerVertex;\r\n\t\t\t}\r\n\r\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\r\n\r\n\t\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t} else {\r\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\r\n\r\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\r\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\r\n\t\t}\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tif (this._pConcatenateArrays)\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\r\n\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\r\n\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\r\n\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\tthis.updateJointWeights(this._jointWeights);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertexNormals():Array<number>\r\n\t{\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\r\n\r\n\t\treturn this._vertexNormals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertexTangents():Array<number>\r\n\t{\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\r\n\r\n\t\treturn this._vertexTangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Array<number>\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Array<number>\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Array<number>\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Array<number>\r\n\t{\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\r\n\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():Array<number>\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\tif (this._useCondensedIndices)\r\n\t\t\treturn this._condensedJointIndices;\r\n\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():Array<number>\r\n\t{\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\tthis.updateJointWeights(this._jointWeights);\r\n\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\r\n\t */\r\n\tpublic get useFaceWeights():boolean\r\n\t{\r\n\t\treturn this._useFaceWeights;\r\n\t}\r\n\r\n\tpublic set useFaceWeights(value:boolean)\r\n\t{\r\n\t\tif (this._useFaceWeights == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useFaceWeights = value;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t}\r\n\r\n\tpublic get numCondensedJoints():number\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\treturn this._numCondensedJoints;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper(concatenatedArrays);\r\n\r\n\t\tthis._pSubMeshClass = TriangleSubMesh;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tthis._positions = values;\r\n\r\n\t\tif (this._positions == null)\r\n\t\t\tthis._positions = new Array<number>();\r\n\r\n\t\tthis._pNumVertices = this._positions.length/3;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\r\n\t\t\tpositions = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tpositions[index] = values[i++];\r\n\t\t\t\tpositions[index + 1] = values[i++];\r\n\t\t\t\tpositions[index + 2] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyUVsUpdate()\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic updateVertexNormals(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar normals:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._vertexNormals = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\t\tnormals = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tnormals[index] = values[i++];\r\n\t\t\t\t\tnormals[index + 1] = values[i++];\r\n\t\t\t\t\tnormals[index + 2] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._vertexNormals == null) {\r\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\t\t//autoderived normals\r\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\r\n\r\n\t\t\tvar f1:number = 0;\r\n\t\t\tvar f2:number = 1;\r\n\t\t\tvar f3:number = 2;\r\n\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//clear normal values\r\n\t\t\tvar lenV:number = normals.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tnormals[index] = 0;\r\n\t\t\t\tnormals[index + 1] = 0;\r\n\t\t\t\tnormals[index + 2] = 0;\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar lenI:number = this._pIndices.length;\r\n\t\t\tvar weight:number;\r\n\r\n\t\t\ti = 0;\r\n\r\n\t\t\t//collect face normals\r\n\t\t\twhile (i < lenI) {\r\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tf1 += 3;\r\n\t\t\t\tf2 += 3;\r\n\t\t\t\tf3 += 3;\r\n\t\t\t}\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//average normals collections\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tvar vx:number = normals[index];\r\n\t\t\t\tvar vy:number = normals[index + 1];\r\n\t\t\t\tvar vz:number = normals[index + 2];\r\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnormals[index] = vx*d;\r\n\t\t\t\t\tnormals[index + 1] = vy*d;\r\n\t\t\t\t\tnormals[index + 2] = vz*d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tthis._vertexNormalsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic updateVertexTangents(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._vertexTangents = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\t\ttangents = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\ttangents[index] = values[i++];\r\n\t\t\t\t\ttangents[index + 1] = values[i++];\r\n\t\t\t\t\ttangents[index + 2] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._vertexTangents == null) {\r\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\t\t//autoderived tangents\r\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\r\n\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//clear tangent values\r\n\t\t\tvar lenV:number = tangents.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\ttangents[index] = 0;\r\n\t\t\t\ttangents[index + 1] = 0;\r\n\t\t\t\ttangents[index + 2] = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar weight:number;\r\n\t\t\tvar f1:number = 0;\r\n\t\t\tvar f2:number = 1;\r\n\t\t\tvar f3:number = 2;\r\n\r\n\t\t\ti = 0;\r\n\r\n\t\t\t//collect face tangents\r\n\t\t\tvar lenI:number = this._pIndices.length;\r\n\t\t\twhile (i < lenI) {\r\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tf1 += 3;\r\n\t\t\t\tf2 += 3;\r\n\t\t\t\tf3 += 3;\r\n\t\t\t}\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//average tangents collections\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tvar vx:number = tangents[index];\r\n\t\t\t\tvar vy:number = tangents[index + 1];\r\n\t\t\t\tvar vz:number = tangents[index + 2];\r\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttangents[index] = vx*d;\r\n\t\t\t\t\ttangents[index + 1] = vy*d;\r\n\t\t\t\t\ttangents[index + 2] = vz*d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis._vertexTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic updateUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._uvs = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\r\n\t\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (this._uvs == null) {\r\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\r\n\r\n\t\t\t//autoderived uvs\r\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tvar uvIdx:number = 0;\r\n\r\n\t\t\t//clear uv values\r\n\t\t\tvar lenV:number = uvs.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuvs[index] = uvIdx*.5;\r\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (++uvIdx == 3)\r\n\t\t\t\t\tuvIdx = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\r\n\t\tthis._uvsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic updateSecondaryUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._secondaryUVs = values;\r\n\r\n\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifySecondaryUVsUpdate();\r\n\r\n\t\tthis._secondaryUVsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic updateJointIndices(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar jointIndices:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._jointIndices = values;\r\n\r\n\t\tif (values != null) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tj = 0;\r\n\t\t\t\tindex = offset;\r\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tif (!this._concatenateArrays)\r\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\r\n\t\t\t\t\t\toldIndex = values[i++];\r\n\r\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\r\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t\tthis._numCondensedJoints = newIndex;\r\n\t\t\t} else if (this._concatenateArrays) {\r\n\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = offset;\r\n\t\t\t\tjointIndices = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile (j < this._jointsPerVertex)\r\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\r\n\t\tthis._jointIndicesDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic updateJointWeights(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar jointWeights:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._jointWeights = values;\r\n\r\n\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tjointWeights = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile (j < this._jointsPerVertex)\r\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyJointWeightsUpdate();\r\n\r\n\t\tthis._jointWeightsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._vertexNormals = null;\r\n\t\tthis._vertexTangents = null;\r\n\t\tthis._uvs = null;\r\n\t\tthis._secondaryUVs = null;\r\n\t\tthis._jointIndices = null;\r\n\t\tthis._jointWeights = null;\r\n\r\n\t\tthis._faceNormals = null;\r\n\t\tthis._faceWeights = null;\r\n\t\tthis._faceTangents = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tsuper.updateIndices(indices);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis._vertexTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._positions.concat());\r\n\r\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\r\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\r\n\t\telse\r\n\t\t\tclone.updateVertexNormals(null);\r\n\r\n\t\tif (this._uvs && !this._autoDeriveUVs)\r\n\t\t\tclone.updateUVs(this._uvs.concat());\r\n\t\telse\r\n\t\t\tclone.updateUVs(null);\r\n\r\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\r\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\r\n\t\telse\r\n\t\t\tclone.updateVertexTangents(null);\r\n\r\n\t\tif (this._secondaryUVs)\r\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tuvs = this._uvs;\r\n\r\n\t\tvar ratioU:number = scaleU/this._scaleU;\r\n\t\tvar ratioV:number = scaleV/this._scaleV;\r\n\r\n\t\tthis._scaleU = scaleU;\r\n\t\tthis._scaleV = scaleV;\r\n\r\n\t\tvar len:number = uvs.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 2;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tuvs[index] *= ratioU;\r\n\t\t\tuvs[index + 1] *= ratioV;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tpositions = this._positions;\r\n\r\n\t\tvar len:number = positions.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 3;\r\n\r\n\t\ti = 0;\r\n\t\tindex = offset;\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[index] *= scale;\r\n\t\t\tpositions[index + 1] *= scale;\r\n\t\t\tpositions[index + 2] *= scale;\r\n\r\n\t\t\ti += 3;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tpositions = this._pVertices;\r\n\t\t\tnormals = this._pVertices;\r\n\t\t\ttangents = this._pVertices;\r\n\t\t} else {\r\n\t\t\tpositions = this._positions;\r\n\t\t\tnormals = this._vertexNormals;\r\n\t\t\ttangents = this._vertexTangents;\r\n\t\t}\r\n\r\n\t\tvar len:number = this._positions.length/3;\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\r\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\r\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (bakeNormals || bakeTangents) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\r\n\t\t\t// bake position\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += vStride;\r\n\r\n\t\t\t// bake normal\r\n\t\t\tif (bakeNormals) {\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += nStride;\r\n\t\t\t}\r\n\r\n\t\t\t// bake tangent\r\n\t\t\tif (bakeTangents) {\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tStride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyNormalsUpdate();\r\n\t\tthis.notifyTangentsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions\r\n\t\tvar uvs:Array<number> = this._uvs;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceTangents == null)\r\n\t\t\tthis._faceTangents = new Array<number>(len);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex1 = this._pIndices[i];\r\n\t\t\tindex2 = this._pIndices[i + 1];\r\n\t\t\tindex3 = this._pIndices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*2 + 1];\r\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\r\n\r\n\t\t\tvi = index1*3;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*3;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*3;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tthis._faceTangents[i++] = denom*cx;\r\n\t\t\tthis._faceTangents[i++] = denom*cy;\r\n\t\t\tthis._faceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceNormals == null)\r\n\t\t\tthis._faceNormals = new Array<number>(len);\r\n\r\n\t\tif (this._useFaceWeights && this._faceWeights == null)\r\n\t\t\tthis._faceWeights = new Array<number>(len/3);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tif (this._useFaceWeights) {\r\n\t\t\t\tvar w:number = d*10000;\r\n\r\n\t\t\t\tif (w < 1)\r\n\t\t\t\t\tw = 1;\r\n\r\n\t\t\t\tthis._faceWeights[k++] = w;\r\n\t\t\t}\r\n\r\n\t\t\td = 1/d;\r\n\r\n\t\t\tthis._faceNormals[j++] = cx*d;\r\n\t\t\tthis._faceNormals[j++] = cy*d;\r\n\t\t\tthis._faceNormals[j++] = cz*d;\r\n\t\t}\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyNormalsUpdate();\r\n\t\tthis.notifyTangentsUpdate();\r\n\t\tthis.notifyUVsUpdate();\r\n\t\tthis.notifySecondaryUVsUpdate();\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\t\tthis.notifyJointWeightsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyNormalsUpdate()\r\n\t{\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t\tif (!this._normalsUpdated)\r\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._normalsUpdated);\r\n\t}\r\n\r\n\tprivate notifyTangentsUpdate()\r\n\t{\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._vertexTangentsDirty = true;\r\n\r\n\t\tif (!this._tangentsUpdated)\r\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._tangentsUpdated);\r\n\t}\r\n\r\n\tprivate notifyUVsUpdate()\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._uvsDirty = true;\r\n\r\n\t\tif (!this._uvsUpdated)\r\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._uvsUpdated);\r\n\t}\r\n\r\n\tprivate notifySecondaryUVsUpdate()\r\n\t{\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._secondaryUVsDirty = true;\r\n\r\n\t\tif (!this._secondaryUVsUpdated)\r\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\r\n\t}\r\n\r\n\tprivate notifyJointIndicesUpdate()\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointIndicesDirty = true;\r\n\r\n\t\tif (!this._jointIndicesUpdated)\r\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyJointWeightsUpdate()\r\n\t{\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointWeightsDirty = true;\r\n\r\n\t\tif (!this._jointWeightsUpdated)\r\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\n\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.TRIANGLE_SUB_MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyTriangleSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tprivate _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.CONTAINER;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = name;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\r\n\t\treturn child;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:LoaderEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "class ContextMode\r\n{\r\n\tstatic AUTO:string = \"auto\";\r\n\tstatic WEBGL:string = \"webgl\";\r\n\tstatic FLASH:string = \"flash\";\r\n\tstatic NATIVE:string = \"native\";\r\n}\r\n\r\nexport = ContextMode;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a BitmapData object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its BitmapData reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same BitmapData object,\r\n * multiple display objects can use the same complex BitmapData object without\r\n * incurring the memory overhead of a BitmapData object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.BILLBOARD;\r\n\t}\r\n\r\n\t/**\r\n\t * The BitmapData object being referenced.\r\n\t */\r\n\tpublic bitmapData:BitmapData; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardWidth;\r\n\t\tthis._pBoxBounds.height = this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyBillboard(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.CAMERA;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:CubeTextureBase;\r\n\tprivate _specularMap:CubeTextureBase;\r\n\r\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LINE_SEGMENT;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyLineSegment(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\r\n\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tlen = this.numChildren;\r\n\t\tvar obj:any;\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tobj = this.getChildAt(i).clone();\r\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tclone.animator = this._animator.clone();\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = subGeometry.subMeshClass;\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\tthis._subMeshes[i]._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderObjectOwner\r\n{\r\n\tprivate _cubeMap:CubeTextureBase;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\t\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\tpublic _pInvalidateRenderObject()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:CubeTextureBase)\r\n\t{\r\n\t\tif (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\t\tthis._pInvalidateRenderObject();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:CubeTextureBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.SKYBOX;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renderObjects.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].dispose();\r\n\r\n\t\tthis._renderObjects = new Array<IRenderObject>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.push(renderObject);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool)\r\n\t{\r\n\t\treturn renderablePool.getSkyboxRenderObject(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\t/**\r\n\t * The height of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t * \r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string, newFormat:TextFormat) {\r\n\r\n\t\tvar indices:Array<number> = new Array<number>();\r\n\t\tvar positions:Array<number> = new Array<number>();\r\n\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\tvar char_scale:number=newFormat.size/newFormat.font_table.get_font_em_size();\r\n\t\tvar tri_idx_offset:number=0;\r\n\t\tvar tri_cnt:number=0;\r\n\t\tvar x_offset:number=0;\r\n\t\tvar y_offset:number=0;\r\n\t\tfor (var i = 0; i < newText.length; i++) {\r\n\t\t\tvar this_subGeom:CurveSubGeometry = <CurveSubGeometry> newFormat.font_table.get_subgeo_for_char(newText.charCodeAt(i).toString());\r\n\t\t\tif (this_subGeom != null) {\r\n\t\t\t\ttri_cnt=0;\r\n\t\t\t\tvar indices2:Array<number> = this_subGeom.indices;\r\n\t\t\t\tvar positions2:Array<number> = this_subGeom.positions;\r\n\t\t\t\tvar curveData2:Array<number> = this_subGeom.curves;\r\n\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\r\n\t\t\t\t\tindices.push(indices2[v]+tri_idx_offset);\r\n\t\t\t\t\ttri_cnt++;\r\n\t\t\t\t}\r\n\t\t\t\ttri_idx_offset+=tri_cnt;\r\n\t\t\t\tfor (v = 0; v < positions2.length/3; v++) {\r\n\t\t\t\t\tpositions.push((positions2[v*3]*char_scale)+x_offset);\r\n\t\t\t\t\tpositions.push((positions2[v*3+1]*char_scale*-1)+y_offset);\r\n\t\t\t\t\tpositions.push(positions2[v*3+2]);\r\n\t\t\t\t\tcurveData.push(curveData2[v*2]);\r\n\t\t\t\t\tcurveData.push(curveData2[v*2+1]);\r\n\t\t\t\t\tuvs.push(0.0);\r\n\t\t\t\t\tuvs.push(0.0);\r\n\t\t\t\t}\r\n\t\t\t\tx_offset+=newFormat.font_table.get_font_em_size()*char_scale;\r\n\t\t\t\t//xcount+=newFormat.font_table.get_font_em_size();\r\n\t\t\t\tconsole.log(x_offset);\r\n\t\t\t\t//matrix.appendScale(0.1,0.1,0.1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=newFormat.material;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic construct_geometry()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"SubGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"SubGeometryRemoved\";\r\n\r\n\tpublic static BOUNDS_INVALID:string = \"BoundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OBJECT_OWNER_UPDATED:string = \"renderObjectOwnerUpdated\";\r\n\r\n\tprivate _renderObjectOwner:IRenderObjectOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderObjectOwner:IRenderObjectOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderObjectOwner = renderObjectOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderObjectOwner():IRenderObjectOwner\r\n\t{\r\n\t\treturn this._renderObjectOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderObjectOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass StageEvent extends Event\r\n{\r\n\tpublic static CONTEXT_CREATED:string = \"contextCreated\";\r\n\tpublic static CONTEXT_DISPOSED:string = \"contextDisposed\";\r\n\tpublic static CONTEXT_RECREATED:string = \"contextRecreated\";\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = StageEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\tprivate _dataType:string;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, dataType:string = \"\")\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._dataType = dataType;\r\n\t}\r\n\r\n\t/**\r\n\t * The data type of the vertex data.\r\n\t */\r\n\tpublic get dataType():string\r\n\t{\r\n\t\treturn this._dataType;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapData:BitmapData;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:BitmapTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.assetType == AssetType.LINE_SUB_MESH) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):BitmapTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\r\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapData():BitmapData\r\n\t{\r\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event:MouseEvent)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = event.clientX;\r\n\t\tvar mouseY:number = event.clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase implements IRenderObjectOwner\r\n{\r\n    private _preserveAlpha:boolean = false;\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Texture2DBase) {\r\n\t\t\tthis.texture = <Texture2DBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRenderObject();\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\treturn renderablePool.getMaterialRenderObject(this);\r\n\t}\r\n}\r\n\r\nexport = BasicMaterial;",
    "import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass CSSMaterialBase extends MaterialBase\r\n{\r\n\tprivate _imageElement:HTMLImageElement;\r\n\tprivate _imageStyle:MSStyleCSSProperties;\r\n\r\n\r\n\tpublic get imageElement():HTMLImageElement\r\n\t{\r\n\t\treturn this._imageElement;\r\n\t}\r\n\r\n\tpublic get imageStyle():MSStyleCSSProperties\r\n\t{\r\n\t\treturn this._imageStyle;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tif (value instanceof ImageTexture) {\r\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\r\n\r\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\r\n\t\t\tnode.type = \"text/css\";\r\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\r\n\r\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\r\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\r\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\r\n\r\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\r\n\t\t\tstyle.backgroundSize = \"100% 100%\";\r\n\t\t\tstyle.position = \"absolute\";\r\n\t\t\tstyle.width = this._imageElement.width + \"px\";\r\n\t\t\tstyle.height = this._imageElement.height + \"px\";\r\n\t\t\tstyle.transformOrigin\r\n\t\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\t\tthis._pHeight = this._imageElement.height;\r\n\t\t\tthis._pWidth = this._imageElement.width;\r\n\r\n\t\t\tthis._pNotifySizeChanged();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis.texture = texture;\r\n\r\n\t\tthis.smooth = smooth;\r\n\t\tthis.repeat = repeat;\r\n\t}\r\n}\r\n\r\nexport = CSSMaterialBase;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass CurveMaterial extends MaterialBase implements IRenderObjectOwner\r\n{\r\n    private _preserveAlpha:boolean = false;\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Texture2DBase) {\r\n\t\t\tthis.texture = <Texture2DBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRenderObject();\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\treturn renderablePool.getMaterialRenderObject(this);\r\n\t}\r\n}\r\n\r\nexport = CurveMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends NamedAssetBase implements IRenderObjectOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:Texture2DBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.MATERIAL;;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tthis._pHeight = this._pTexture.height;\r\n\t\tthis._pWidth = this._pTexture.width;\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renderObjects.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].dispose();\r\n\r\n\t\tthis._renderObjects = new Array<IRenderObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRenderObject()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.push(renderObject);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends NamedAssetBase implements IAsset\r\n{\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LIGHT_PICKER;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform = this._pOverallDepthCamera.transform;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():TextureProxyBase\r\n\t{\r\n\t\tthrow new PartialImplementationError();\r\n\t\t/*\r\n\t\t return new RenderCubeTexture( this._depthMapSize );\r\n\t\t */\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tprivate _depthMap:TextureProxyBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tprivate _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureProxyBase)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureProxyBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureProxyBase\r\n\t{\r\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSBillboardRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"billboard\";\r\n\r\n\tconstructor(pool:IRenderablePool, billboard:Billboard)\r\n\t{\r\n\t\tsuper(pool, billboard, billboard);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + billboard.material.id;\r\n\t}\r\n}\r\n\r\nexport = CSSBillboardRenderable;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSLineSegmentRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"lineSegment\";\r\n\r\n\tconstructor(pool:IRenderablePool, lineSegment:LineSegment)\r\n\t{\r\n\t\tsuper(pool, lineSegment, lineSegment);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + lineSegment.material.id;\r\n\t}\r\n}\r\n\r\nexport = CSSLineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSRenderableBase implements IRenderable\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _pool:IRenderablePool;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:CSSRenderableBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic materialId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderOrderId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zIndex:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic cascaded:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderSceneTransform:Matrix3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic sourceEntity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderObjectId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic htmlElement:HTMLElement;\r\n\r\n\t/**\r\n\t *\r\n\t * @param sourceEntity\r\n\t * @param material\r\n\t * @param animator\r\n\t */\r\n\tconstructor(pool:IRenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner)\r\n\t{\r\n\t\t//store a reference to the pool for later disposal\r\n\t\tthis._pool = pool;\r\n\r\n\t\tthis.sourceEntity = sourceEntity;\r\n\r\n\t\tthis.renderableOwner = renderableOwner;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.disposeItem(this.renderableOwner);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateGeometry()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateIndexData()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateVertexData(dataType:string)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = CSSRenderableBase;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n\r\n/**\r\n * @class away.pool.CSSSkyboxRenderable\r\n */\r\nclass CSSSkyboxRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"skybox\";\r\n\r\n\tconstructor(pool:IRenderablePool, skyBox:Skybox)\r\n\t{\r\n\t\tsuper(pool, skyBox, skyBox);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\t\tvar img:HTMLDivElement;\r\n\r\n\t\t//create the six images that make up the skybox\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + skyBox.id;\r\n\t}\r\n}\r\n\r\nexport = CSSSkyboxRenderable;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends NamedAssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//horizonal lines\r\n\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Array<number>;\r\n\t\t\tvar normals:Array<number>;\r\n\t\t\tvar tangents:Array<number>;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = -hh;\r\n\r\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Array<number>;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.PRIMITIVE_PREFAB;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tif (j < this._segmentsH) {\r\n\t\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\r\n\r\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\r\n\r\n\r\n/**\r\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\r\n * materials assigned to them.\r\n *\r\n * @class away.render.DefaultRenderer\r\n */\r\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\r\n{\r\n\tprivate _container:HTMLDivElement;\r\n\tprivate _context:HTMLDivElement;\r\n\tprivate _contextStyle:MSStyleCSSProperties;\r\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\r\n\t\r\n\tprivate _activeMaterial:CSSMaterialBase;\r\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\r\n\tprivate _transform:Matrix3D = new Matrix3D();\r\n\r\n\t/**\r\n\t * Creates a new CSSDefaultRenderer object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//create container for the renderer\r\n\t\tthis._container = document.createElement(\"div\");\r\n\t\tthis._container.style.overflow = \"hidden\";\r\n\t\tthis._container.style.position = \"absolute\";\r\n\t\t\r\n\t\t//add container to body\r\n\t\tdocument.body.appendChild(this._container);\r\n\r\n\t\t//create conxtext for the renderer\r\n\t\tthis._context = document.createElement(\"div\");\r\n\t\tthis._contextStyle = this._context.style;\r\n\t\tthis._contextStyle.position = \"absolute\";\r\n\t\tthis._contextStyle.transformStyle\r\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\r\n\t\tthis._contextStyle.transformOrigin\r\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\t//add context to container\r\n\t\tthis._container.appendChild(this._context);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entityCollector\r\n\t */\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tsuper.render(entityCollector);\r\n\r\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\r\n\t\t\tthis.pUpdateBackBuffer();\r\n\r\n\t\tthis._iRender(<EntityCollector> entityCollector);\r\n\r\n\t\tthis._pBackBufferInvalid = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pDraw(entityCollector:EntityCollector)\r\n\t{\r\n//\t\t\tif (entityCollector.skyBox) {\r\n//\t\t\t\tif (this._activeMaterial)\r\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\r\n//\r\n//\t\t\t\tthis._activeMaterial = null;\r\n//\r\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\r\n//\t\t\t\tthis.drawSkybox(entityCollector);\r\n//\r\n//\t\t\t}\r\n//\r\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\r\n\r\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\r\n\r\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\r\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\r\n\t\t\tstyle.transform\r\n\t\t\t\t= style[\"-webkit-transform\"]\r\n\t\t\t\t= style[\"-moz-transform\"]\r\n\t\t\t\t= style[\"-o-transform\"]\r\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\r\n\t\t}\r\n\r\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\r\n\r\n//\t\t\tif (this._activeMaterial)\r\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\r\n\r\n\t\tthis._activeMaterial = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the backbuffer properties.\r\n\t */\r\n\tpublic pUpdateBackBuffer()\r\n\t{\r\n\t\tthis._container.style.width = this._width + \"px\";\r\n\t\tthis._container.style.height = this._height + \"px\";\r\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\r\n\r\n\t\t//update context matrix\r\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\r\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\r\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\r\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\r\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\r\n\r\n\t\t//update context tranform\r\n\t\tthis._contextStyle.transform\r\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform\"]\r\n\t\t\t= this._contextStyle[\"-o-transform\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\r\n\r\n\t\tthis._pBackBufferInvalid = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Draw the skybox if present.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a list of renderables.\r\n\t * @param renderables The renderables to draw.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\r\n\t{\r\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\r\n\r\n\t\twhile (item) {\r\n\t\t\t//this._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\r\n\r\n\t\t\t//serialise transform and apply to html element\r\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\r\n\t\t\tthis._transform.append(viewProjection);\r\n\r\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\r\n\r\n\t\t\tstyle.transform\r\n\t\t\t\t= style[\"-webkit-transform\"]\r\n\t\t\t\t= style[\"-moz-transform\"]\r\n\t\t\t\t= style[\"-o-transform\"]\r\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\r\n\r\n\t\t\tstyle.transformStyle\r\n\t\t\t\t= style[\"-webkit-transform-style\"]\r\n\t\t\t\t= style[\"-moz-transform-style\"]\r\n\t\t\t\t= style[\"-o-transform-style\"]\r\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\r\n\r\n\t\t\t//check if child requires adding to the view\r\n\t\t\tif (!this._context.contains(item.htmlElement))\r\n\t\t\t\tthis._context.appendChild(item.htmlElement);\r\n\r\n\t\t\titem = item.next;\r\n\t\t}\r\n\r\n//\t\t\tvar numPasses:number;\r\n//\t\t\tvar j:number;\r\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\r\n//\t\t\tvar item2:away.render.CSSRenderableBase;\r\n//\r\n//\t\t\twhile (item) {\r\n//\t\t\t\tthis._activeMaterial = item.material;\r\n//\r\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\r\n//\r\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\r\n//\r\n//\t\t\t\tj = 0;\r\n//\r\n//\t\t\t\tdo {\r\n//\t\t\t\t\titem2 = item;\r\n//\r\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\r\n//\r\n//\t\t\t\t\tif ((rttMask & which) != 0) {\r\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\r\n//\r\n//\t\t\t\t\t\tdo {\r\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\r\n//\r\n//\t\t\t\t\t\t\titem2 = item2.next;\r\n//\r\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\r\n//\r\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\r\n//\r\n//\t\t\t\t\t} else {\r\n//\t\t\t\t\t\tdo {\r\n//\t\t\t\t\t\t\titem2 = item2.next;\r\n//\r\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\r\n//\t\t\t\t\t}\r\n//\t\t\t\t} while (++j < numPasses);\r\n//\r\n//\t\t\t\titem = item2;\r\n//\t\t\t}\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn new CSSEntityCollector();\r\n\t}\r\n}\r\n\r\nexport = CSSDefaultRenderer;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\r\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\r\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\n/**\r\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\r\n * contents of a partition\r\n *\r\n * @class away.render.RendererBase\r\n */\r\nclass CSSRendererBase extends EventDispatcher\r\n{\r\n\tprivate _billboardRenderablePool:IRenderablePool;\r\n\tprivate _lineSegmentRenderablePool:IRenderablePool;\r\n\r\n\tpublic _pCamera:Camera;\r\n\tpublic _iEntryPoint:Vector3D;\r\n\tpublic _pCameraForward:Vector3D;\r\n\r\n\tprivate _backgroundR:number = 0;\r\n\tprivate _backgroundG:number = 0;\r\n\tprivate _backgroundB:number = 0;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\tprivate _shareContext:boolean = false;\r\n\r\n\tpublic _pBackBufferInvalid:boolean = true;\r\n\tpublic _depthTextureInvalid:boolean = true;\r\n\r\n\tpublic _renderableHead:CSSRenderableBase;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\r\n\tprivate _viewPort:Rectangle = new Rectangle();\r\n\tprivate _viewportDirty:boolean;\r\n\tprivate _scissorRect:Rectangle = new Rectangle();\r\n\tprivate _scissorDirty:boolean;\r\n\r\n\tprivate _localPos:Point = new Point();\r\n\tprivate _globalPos:Point = new Point();\r\n\r\n\tprivate _scissorUpdated:RendererEvent;\r\n\tprivate _viewPortUpdated:RendererEvent;\r\n\r\n\t/**\r\n\t * A viewPort rectangle equivalent of the StageGL size and position.\r\n\t */\r\n\tpublic get viewPort():Rectangle\r\n\t{\r\n\t\treturn this._viewPort;\r\n\t}\r\n\r\n\t/**\r\n\t * A scissor rectangle equivalent of the view size and position.\r\n\t */\r\n\tpublic get scissorRect():Rectangle\r\n\t{\r\n\t\treturn this._scissorRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._localPos.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._localPos.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._globalPos.y = this._localPos.y = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._scissorRect.width = value;\r\n\t\tthis._viewPort.width = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._depthTextureInvalid = true;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._scissorRect.height = value;\r\n\t\tthis._viewPort.height = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._depthTextureInvalid = true;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableSorter:IEntitySorter;\r\n\r\n\t/**\r\n\t * Creates a new RendererBase object.\r\n\t */\r\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//this._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\r\n\t\t//this._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\r\n\r\n\t\tthis._viewPort = new Rectangle();\r\n\r\n\t\tif (this._width == 0)\r\n\t\t\tthis.width = window.innerWidth;\r\n\r\n\t\tif (this._height == 0)\r\n\t\t\tthis.height = window.innerHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's red component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundR():number\r\n\t{\r\n\t\treturn this._backgroundR;\r\n\t}\r\n\r\n\tpublic set _iBackgroundR(value:number)\r\n\t{\r\n\t\tif (this._backgroundR == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundR = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's green component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundG():number\r\n\t{\r\n\t\treturn this._backgroundG;\r\n\t}\r\n\r\n\tpublic set _iBackgroundG(value:number)\r\n\t{\r\n\t\tif (this._backgroundG == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundG = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's blue component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundB():number\r\n\t{\r\n\t\treturn this._backgroundB;\r\n\t}\r\n\r\n\tpublic set _iBackgroundB(value:number)\r\n\t{\r\n\t\tif (this._backgroundB == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundB = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the resources used by the RendererBase.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\t/*\r\n\t\t if (_backgroundImageRenderer) {\r\n\t\t _backgroundImageRenderer.dispose();\r\n\t\t _backgroundImageRenderer = null;\r\n\t\t }\r\n\t\t */\r\n\t}\r\n\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tthis._viewportDirty = false;\r\n\t\tthis._scissorDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param scissorRect\r\n\t */\r\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\tif (!entityCollector.entityHead)\r\n\t\t\treturn;\r\n\r\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\r\n\t}\r\n\r\n\tpublic _iRenderCascades(entityCollector:CollectorBase, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\r\n\t{\r\n\r\n\t}\r\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\r\n\t{\r\n\t\t////reset head values\r\n\t\t//this._renderableHead = null;\r\n\t\t//\r\n\t\t////grab entity head\r\n\t\t//var item:EntityListItem = entityCollector.entityHead;\r\n\t\t//\r\n\t\t////set temp values for entry point and camera forward vector\r\n\t\t//this._pCamera = entityCollector.camera;\r\n\t\t//this._iEntryPoint = this._pCamera.scenePosition;\r\n\t\t//this._pCameraForward = this._pCamera.transform.forwardVector;\r\n\t\t//\r\n\t\t////iterate through all entities\r\n\t\t//while (item) {\r\n\t\t//\t//item.entity._iCollectRenderables(this);\r\n\t\t//\titem = item.next;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param scissorRect\r\n\t */\r\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\r\n\t{\r\n\t\tthis.pCollectRenderables(entityCollector);\r\n\r\n\t\tthis.pDraw(entityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the actual drawing of dom objects to the target.\r\n\t *\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\r\n\t */\r\n\tpublic pDraw(entityCollector:CSSEntityCollector)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get _iBackgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\tpublic set _iBackgroundAlpha(value:number)\r\n\t{\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundAlpha = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param billboard\r\n\t */\r\n\tpublic applyBillboard(billboard:Billboard)\r\n\t{\r\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param lineSubMesh\r\n\t */\r\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\r\n\t{\r\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param skybox\r\n\t */\r\n\tpublic applySkybox(skybox:Skybox)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param triangleSubMesh\r\n\t */\r\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderable\r\n\t * @private\r\n\t */\r\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\r\n\t{\r\n\t\tvar material:CSSMaterialBase;// = <CSSMaterialBase> renderable.renderableOwner.material;\r\n\t\tvar entity:IEntity = renderable.sourceEntity;\r\n\t\tvar position:Vector3D = entity.scenePosition;\r\n\r\n\t\tif (material) {\r\n\t\t\t//set ids for faster referencing\r\n\t\t\trenderable.materialId = material._iMaterialId;\r\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\r\n\t\t\trenderable.cascaded = false;\r\n\r\n\t\t\t// project onto camera's z-axis\r\n\t\t\tposition = this._iEntryPoint.subtract(position);\r\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\r\n\r\n\t\t\t//store reference to scene transform\r\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\r\n\r\n\t\t\t//store reference to next item in list\r\n\t\t\trenderable.next = this._renderableHead;\r\n\t\t\tthis._renderableHead = renderable;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScissorUpdate()\r\n\t{\r\n\t\tif (this._scissorDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scissorDirty = true;\r\n\r\n\t\tif (!this._scissorUpdated)\r\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._scissorUpdated);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyViewportUpdate()\r\n\t{\r\n\t\tif (this._viewportDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewportDirty = true;\r\n\r\n\t\tif (!this._viewPortUpdated)\r\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._viewPortUpdated);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateGlobalPos()\r\n\t{\r\n\t\tthis._viewPort.x = this._globalPos.x;\r\n\t\tthis._viewPort.y = this._globalPos.y;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = CSSRendererBase;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderObjectId;\r\n\t\t\t\tvar mb:number = headB.renderObjectId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport FontTable\t\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends NamedAssetBase implements IAsset\r\n{\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.FONT;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends NamedAssetBase\r\n{\r\n\tprivate _font_chars:Array<SubGeometryBase>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<SubGeometryBase>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):SubGeometryBase\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(subgeo);\r\n\t\tthis._font_chars_dic[char]=subgeo;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends NamedAssetBase implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\tpublic align:string;\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.TEXTFORMAT;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static bitmapData(data:any):BitmapData\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof BitmapData)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof ImageTexture)\r\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\r\n\r\n\t\tif (data instanceof HTMLImageElement) {\r\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\r\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\r\n\t\t\tbitmapData.draw(imageElement)\r\n\t\t\treturn bitmapData;\r\n\t\t}\r\n\r\n\t\t//            if (data is DisplayObject) {\r\n\t\t//                var ds:DisplayObject = data as DisplayObject;\r\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\r\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\r\n\t\t//                mat.tx = 0;\r\n\t\t//                mat.ty = 0;\r\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\r\n\t\t//                return bmd;\r\n\t\t//            }\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):BitmapTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof BitmapTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\r\n\t\t\treturn new BitmapTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "name",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "MovieClip",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "translateScript",
    "classReplacements",
    "addScriptForExecution",
    "frame_script_in",
    "replacementPreface",
    "replacementPostface",
    "srcName",
    "dstName",
    "Function",
    "err",
    "console",
    "log",
    "message",
    "numFrames",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "removeAll",
    "removeAllFromScript",
    "previous_sessions",
    "previous_mcs",
    "session_cnt",
    "prev_script_cnt",
    "numChildren",
    "child",
    "getChildAt",
    "unregisterScriptObject",
    "isAsset",
    "freeFromScript",
    "removeChildAt",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "remove_childs",
    "command_index_stream",
    "command_length_stream",
    "add_childs",
    "target_sessions",
    "reset",
    "doit",
    "isBlockedByScript",
    "update_childs",
    "constructNextFrame",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "start_index",
    "removeChildAtDepth",
    "remove_child_stream",
    "add_child_stream",
    "addChildAtDepth",
    "props_cnt",
    "props_start_idx",
    "value_start_index",
    "props_type",
    "childID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "properties_stream_int",
    "firstMaskID",
    "mask",
    "masks",
    "mouseEnabled",
    "properties_stream_strings",
    "registerScriptObject",
    "makeButton",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/entities/MovieClip",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getDepthIndexInternal",
    "getChildByName",
    "childIndex",
    "getChildDepth",
    "getNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "Event",
    "MouseEvent",
    "_loop",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_framescripts_to_execute",
    "_isPlaying",
    "_isButton",
    "_fps",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_timeline",
    "potential_child_length",
    "timeline",
    "_skipAdvance",
    "key",
    "_onMouseOver",
    "evt",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListener",
    "newFps",
    "play",
    "timeDelta",
    "frameMarker",
    "advanceFrame",
    "has_executed_script",
    "executePostConstructCommands",
    "activateChild",
    "deactivateChild",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "has_script_executed",
    "caller",
    "shift",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar maxDevisions:number = 32;\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif(this.numVertices > 150){\n\n\n\t\t\tif (this.cells == null) {\n\t\t\t\tthis.buildGrid();\n\t\t\t}\n\t\t\tvar cell:number = this.getCell(x, y);\n\t\t\tif (cell == -1) return false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\t\t\tif (nodes == null) return false;\n\n\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot a\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot b\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot c\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tprivate _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\n\t{\n\t\tif (!newInstance)\n\t\t\tnewInstance = new DisplayObject();\n\n\t\tnewInstance.pivot = this.pivot;\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\t\tnewInstance.name = this.name;\n\n\t\tnewInstance._iMaskID = this._iMaskID;\n\t\tnewInstance._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset_to_init_state():void\n\t{\n\t\tthis.visible=true;\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\t\tif(this.colorTransform)\n\t\t\tthis.colorTransform.clear();\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\treturn;\n\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.queueDispatch(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices==null)||(this.frame_recipe==null)||(this.keyframe_durations==null))\n\t\t\treturn;\n\t\tthis.keyframe_firstframes=[];\n\t\tthis.keyframe_constructframes=[];\n\t\tvar frame_cnt=0;\n\t\tvar ic=0;\n\t\tvar ic2=0;\n\t\tvar keyframe_cnt=0;\n\t\tvar last_construct_frame=0;\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\n\t\t\t\tlast_construct_frame=keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt]=frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\n\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\n\t\t\t\tthis.keyframe_indices[frame_cnt++]=ic;\n\t\t\t}\n\t\t}\n\t}\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis.translateScript(target_mc.adapter.classReplacements,this._framescripts[keyframe_idx], keyframe_idx);\n\t\t\t}\n\t\t\ttarget_mc.addScriptForExecution(this._framescripts[keyframe_idx]);\n\t\t}\n\t}\n\t// TODO: handle this in the exporter so it's safe!\n\tpublic translateScript(classReplacements, frame_script_in:string, keyframe_idx:number)\n\t{\n\t\tvar replacementPreface = \"\";\n\t\tvar replacementPostface = \"\";\n\n\t\tfor (var srcName in classReplacements) {\n\t\t\tvar dstName = classReplacements[srcName];\n\t\t\t// where class name is a single word\n\t\t\t//var regex = \"\\b\" + srcName + \"\\b\";\n\t\t\t//replaced = replaced.replace(new RegExp(regex, \"g\"), dstName);\n\n\t\t\t// store old references to stuff in a temporary var to be reset after script execution;\n\t\t\t// make sure a definition exists, even if it's undefined\n\t\t\treplacementPreface += \"var __OLD_\" + srcName + \" = typeof \" + srcName + \" == 'function'? \" + srcName + \" : undefined;\\n\";\n\t\t\treplacementPreface += srcName + \" = require(\\\"\" + dstName + \"\\\");\\n\";\n\t\t\treplacementPreface += \"function int(value) { return value | 0; }\\n\";\n\t\t\treplacementPostface += srcName + \" = __OLD_\" + srcName + \";\\n\";\n\t\t}\n\n\t\t// make sure we don't use \"this\", since Actionscript's \"this\" has the same scope rules as a variable\n\t\tvar str =   replacementPreface +\n\t\t\tframe_script_in +\n\t\t\treplacementPostface;\n\n\t\t//console.log(str);\n\n\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\ttry {\n\t\t\tthis._framescripts[keyframe_idx] = new Function(str);\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\tconsole.log(\"Syntax error in script:\\n\", str);\n\t\t\tconsole.log(err.message);\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tpublic numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds() : Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id].clone();\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value : number)\n\t{\n\n\t\t//console.log(\"gotoframe\");\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe=this.keyframe_firstframes[target_keyframe_idx];\n\t\tif(frameIndex==value){\n\t\t\t//we are already on this frame.\n\t\t\treturn;\n\t\t}\n\t\t//console.log(\"gotoframe 2\");\n\t\tif(firstframe==value){\n\t\t\t//frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx);\n\t\t}\n\n\t\tif(current_keyframe_idx==target_keyframe_idx) {\n\t\t\t// already constructed\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number=this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number=break_frame_idx;\n\t\t// in case we jump fporward, but not jump a gap, we start at current_keyframe_idx +1\n\t\tif((jump_forward)&&(!jump_gap)){\n\t\t\tstart_construct_idx=current_keyframe_idx+1;\n\t\t}\n\t\tvar removeAll:boolean=false;\n\t\tvar removeAllFromScript:boolean=false;\n\t\t// if we jump backwards, or if we jump a gap, we want to remove everything from the stage.\n\t\t// if we jump a gap, we also want to free everything from script access.\n\t\tif((!jump_forward)||(jump_gap)){\n\t\t\tremoveAll=true;\n\t\t\tif(jump_gap){\n\t\t\t\tremoveAllFromScript;\n\t\t\t}\n\t\t}\n\n\t\tvar previous_sessions:Array<number> = [];\t// store a list of all previous active sessionIDs\n\t\tvar previous_mcs:Array<MovieClip> = [];\t// store a list of all previous active Movieclips\n\t\tvar session_cnt:number=0;\n\t\tvar prev_script_cnt:number=0;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tfor (i=target_mc.numChildren-1; i>=0; i--) {\n\t\t\t//else{\n\t\t\tvar child:DisplayObject = target_mc.getChildAt(i);\n\n\t\t\t// if we jump back, or if we do not jump a gap, we need to collect all sessionIDs, in order to know what to reset\n\t\t\tif((!jump_forward)||(!jump_gap)){\n\t\t\t\tprevious_sessions[session_cnt++] = child[\"__sessionID\"];\n\t\t\t}\n\t\t\tif (removeAll) {\n\t\t\t\tif(removeAllFromScript){\n\t\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\t\tif(child.isAsset(MovieClip) && (<MovieClip>child).adapter)\n\t\t\t\t\t\t(<MovieClip>child).adapter.freeFromScript();\n\n\t\t\t\t}\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(child.isAsset(MovieClip))\n\t\t\t\t\tprevious_mcs[prev_script_cnt++] = <MovieClip>child;\n\t\t\t}\n\t\t}\n\n\t\t//  pass1: only apply add/remove commands.\n\t\tvar update_indices:Array<number>=[];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt=0;\n\t\tfor(k=start_construct_idx;k<=target_keyframe_idx; k++){\n\n\t\t\tvar frame_command_idx:number=this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number=this.frame_recipe[k];\n\n\t\t\tif ((frame_recipe & 2)==2)\n\t\t\t\tthis.remove_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 4)==4)\n\t\t\t\tthis.add_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tupdate_indices[update_cnt++]=frame_command_idx;// execute update command later\n\t\t}\n\n\t\tsession_cnt=0;\n\t\tvar target_sessions:Array<number> = [];\n\t\t// between passes:\n\t\t// if a child has a sessionID that was not present in previous frame, it must be reset\n\t\tfor (i=0; i<target_mc.numChildren; ++i) {\n\t\t\tvar child:DisplayObject = target_mc.getChildAt(i);\n\t\t\ttarget_sessions[session_cnt++] = child[\"__sessionID\"];\n\t\t\tif (previous_sessions.indexOf(child[\"__sessionID\"]) == -1) {\n\t\t\t\tchild.reset_to_init_state();\n\t\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t\t(<MovieClip>child).reset();\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!jump_forward) {\n\t\t\t\t\tvar doit:boolean = true;\n\t\t\t\t\tif (child.isAsset(MovieClip)) {\n\t\t\t\t\t\tif ((<MovieClip>child).adapter && (<MovieClip>child).adapter.isBlockedByScript())\n\t\t\t\t\t\t\tdoit = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (doit)\n\t\t\t\t\t\tchild.reset_to_init_state();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// all objects that was present on previous frame, but not on current need to be unregistered\n\t\tfor (i=0; i<previous_mcs.length; ++i) {\n\t\t\tif(target_sessions.indexOf(previous_mcs[i][\"__sessionID\"])==-1){\n\t\t\t\tprevious_mcs[i].adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(previous_mcs[i]);\n\t\t\t}\n\t\t}\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number=0;\n\t\tfor(k=0;k<update_indices.length; k++){\n\t\t\tframe_command_idx=update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx] );\n\t\t}\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx=this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe=this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif((frame_recipe & 1)==1) {\n\t\t\t\tvar i:number = target_mc.numChildren;\n\t\t\t\twhile (i--)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t\t} else if ((frame_recipe & 2)==2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t}\n\t\tif(this.keyframe_firstframes[new_keyFrameIndex]==frameIndex){\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex);\n\t\t}\n\n\t}\n\n\n\tpublic remove_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index+i] - 16383);\n\t}\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\n\t\t\tsourceMovieClip.adapter.unregisterScriptObject(target);\n\t\t\tif(target.isAsset(MovieClip) && (<MovieClip> target).adapter)\n\t\t\t\t(<MovieClip> target).adapter.freeFromScript();\n\t\t}\n\t}\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++){\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\n\t\t\ttarget[\"__sessionID\"] = start_index + i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\n\t\t}\n\t}\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++){\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\n\t\t\ttarget[\"__sessionID\"] = start_index + i;\n\n\t\t\tif(target.isAsset(MovieClip)) {\n\t\t\t\tif ((<MovieClip>target).adapter && !(<MovieClip>target).adapter.isBlockedByScript()) {\n\t\t\t\t\t(<MovieClip>target).reset();\n\t\t\t\t\ttarget.reset_to_init_state();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttarget.reset_to_init_state();\n\t\t\t}\n\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_cnt:number;\n\t\tvar props_start_idx:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tfor(var i:number = 0; i < len; i++) {\n\t\t\tvar childID:number=this.update_child_stream[start_index + i];\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(childID);\n\t\t\tif (target.parent == sourceMovieClip) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.isAsset(MovieClip))\n\t\t\t\t\tif ((<MovieClip>target).adapter.isBlockedByScript())\n\t\t\t\t\t\tdoit = false;\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[start_index + i];\n\t\t\t\tprops_cnt = this.update_child_props_length_stream[start_index + i];\n\n\t\t\t\tfor(var p:number = 0; p < props_cnt; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[props_start_idx + p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[props_start_idx + p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3:// masks\n\t\t\t\t\t\t\tvar mask_length:number=this.properties_stream_int[value_start_index++];\n\t\t\t\t\t\t\tvar firstMaskID:number=this.properties_stream_int[value_start_index] - 1;\n\t\t\t\t\t\t\tif (mask_length == 1 && firstMaskID == -1) {\n\t\t\t\t\t\t\t\ttarget._iMaskID = childID;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\t\tfor(var m:number = 0; m < mask_length; m++){\n\t\t\t\t\t\t\t\t\tmask = masks[m] = sourceMovieClip.getPotentialChildInstance(this.properties_stream_int[value_start_index++] - 1);\n\t\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\n\t\t\t\t\t\t\t\t\tif(mask.isAsset(MovieClip))\n\t\t\t\t\t\t\t\t\t\t(<MovieClip> mask).mouseChildren = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget._iMasks = masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\t(<MovieClip>target).makeButton();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depths:Array<number> = new Array<number>();\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\t\t\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._depths.length;\n\t\tvar index:number = len;\n\t\t\n\t\twhile (index--)\n\t\t\tif (this._depths[index] < depth)\n\t\t\t\tbreak;\n\n\t\tindex++;\n\n\t\tif (index < len) {\n\t\t\t//if replace flag & depths match current depth, remove the existing child\n\t\t\tif (this._depths[index] == depth) {\n\t\t\t\tif (replace) {\n\t\t\t\t\tthis.removeChildAt(index);\n\t\t\t\t} else {\n\t\t\t\t\t//update depths if there are children higher than added child\n\t\t\t\t\tfor (var i:number = index; i < len; i++)\n\t\t\t\t\t\tthis._depths[i] = this._depths[i] + 1;\n\n\t\t\t\t\tthis._nextHighestDepth++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._children.splice(index, 0, child);\n\t\t\tthis._depths.splice(index, 0, depth);\n\t\t} else {\n\t\t\tthis._children.push(child);\n\t\t\tthis._depths.push(depth);\n\n\t\t\tthis._nextHighestDepth = depth + 1;\n\t\t}\n\n\t\treturn child;\n\t}\n\t\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._depths[index] : this._nextHighestDepth, false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\n\t{\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\n\n\t\tnewInstance.partition = this.partition;\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\n\t\tnewInstance.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\t\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\n\t}\n\t\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\n\t{\n\t\treturn this._depths[this.getChildIndex(child)];\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\t\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\t\t\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._depths[index1];\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis._depths[index1] = this._depths[index2];\n\t\tthis._children[index1] = this._children[index2];\n\n\t\tthis._depths[index2] = depth;\n\t\tthis._children[index2] = child;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\t\tthis._depths.splice(index, 1);\n\n\t\t//if child is the last in array, update next highest depth\n\t\tif (index == this._children.length)\n\t\t\tthis._nextHighestDepth = this._depths[index - 1] + 1;\n\n\t\treturn child;\n\t}\n\t\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tvar index:number = this._depths.indexOf(depth);\n\n\t\tif (index == -1)\n\t\t\tthrow new ArgumentError(\"No child at specified depth\");\n\n\t\treturn index;\n\t}\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\n\t\tif(this.visible==false)return;\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\n\t\t\tif(childHit) {\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\tif(all_masks){\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\tif(mask_child.parent){\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\n\t\t\t\t\t\t\tif(childHit) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        for (i = 0; i < len; ++i)\n            clone.addChild(this.getChildAt(i).clone());\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\t// if this is a mask, directly return false\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\n\n\t\t// if this is invisible, all children should be invisible too.\n\t\t// todo: is the above statement correct for awayjs visible-property ?\n\t\tif(this.visible==false)return false;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\t\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tif(this.geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\n\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\t\t\tif (all_masks) {\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\n\t\t\t\t\t\t\tif (all_hir_masks){\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hit:boolean = false;\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\n\t\tif(hit)\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\n\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\nimport SceneEvent = require(\"awayjs-display/lib/events/SceneEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:Function;\n    private _onMouseOut:Function;\n    private _onMouseDown:Function;\n    private _onMouseUp:Function;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\n\n    private _fps:number;// we use ms internally, but have fps, so user can set time by frame\n    private _isPlaying:boolean;// false if paused or stopped\n    private _loop:boolean = true;\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Array<DisplayObject>;\n    private _framescripts_to_execute:Array<Function>;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor()\n    {\n        super();\n        this._potentialInstances = [];\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._framescripts_to_execute=[];\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._fps = 30;\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n        var i:number=0;\n        var potential_child_length:number=value.getPotentialChilds().length;\n        for(i=0; i<potential_child_length; i++){\n            this._potentialInstances[i]=null;\n        }\n    }\n    public get loop()\n    {\n        return this._loop;\n    }\n\n    public set loop(value:boolean)\n    {\n        this._loop = value;\n    }\n\n    public get numFrames() : number\n    {\n        return this.timeline.numFrames();\n    }\n\n    public jumpToLabel(label:string) : void\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this.timeline.jumpToLabel(this, label);\n    }\n\n    public get currentFrameIndex() : number\n    {\n        return this._currentFrameIndex;\n    }\n    public get constructedKeyFrameIndex() : number\n    {\n        return this._constructedKeyFrameIndex;\n    }\n\n    public set constructedKeyFrameIndex(value : number)\n    {\n        this._constructedKeyFrameIndex = value;\n    }\n\n    public reset():void\n    {\n        //if(this.adapter && this.adapter.isBlockedByScript()){\n        this._framescripts_to_execute=[];\n        this._isPlaying = true;\n        this._time = 0;\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        var i:number=this.numChildren;\n        while (i--)\n            this.removeChildAt(i);\n\n        // force reset all potential childs on timeline.\n        for (var key in this._potentialInstances) {\n            if (this._potentialInstances[key]) {\n                if (this._potentialInstances[key].isAsset(MovieClip))\n                    (<MovieClip>this._potentialInstances[key]).reset();\n            }\n        }\n\n        if(this.parent) {\n            this._currentFrameIndex = 0;\n            this.timeline.constructNextFrame(this);\n            this._skipAdvance=true;\n        }\n//___scoped_this___.dennis.mov.Man.body.reach.gotoAndPlay(\"call\");\n        // i was thinking we might need to reset all children, but it makes stuff worse\n        /*\n        var i:number=this.numChildren;\n        while (i--) {\n            var child = this.getChildAt(i);\n            if (child.isAsset(MovieClip))\n                (<MovieClip>child).reset();\n        }\n        */\n        //this.advanceChildren();\n\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public set currentFrameIndex(value : number)\n    {\n        if(this._timeline) {\n            value = Math.floor(value);\n            if (value < 0)\n                value = 0;\n            else if (value >= this.timeline.numFrames())\n                value = this.timeline.numFrames() - 1;\n\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this.timeline.gotoFrame(this, value);\n\n            this._currentFrameIndex = value;\n        }\n    }\n\n    public makeButton()\n    {\n        this._isButton=true;\n        this.stop();\n\n        this._onMouseOver = function(evt:MouseEvent) {(<MovieClip>evt.target).currentFrameIndex = 1; };\n        this._onMouseOut = function(evt:MouseEvent) { (<MovieClip>evt.target).currentFrameIndex = 0; };\n        this._onMouseDown = function(evt:MouseEvent) { (<MovieClip>evt.target).currentFrameIndex = 2; };\n        this._onMouseUp = function(evt:MouseEvent) { (<MovieClip>evt.target).currentFrameIndex = this.currentFrameIndex == 0? 0 : 1; };\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListener()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\t\tsuper.addChildAtDepth(child, depth, replace);\n\n        return child;\n    }\n\n    public get fps():number\n    {\n        return this._fps;\n    }\n\n    public set fps(newFps:number)\n    {\n        this._fps = newFps;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update(timeDelta:number)\n    {\n        //this.logHierarchy();\n        // TODO: Implement proper elastic racetrack logic\n        var frameMarker:number = Math.floor(1000/this._fps);\n\n        // right now, just advance frame once time marker has been reached (only allow for one frame advance per-update)\n        this._time += Math.min(timeDelta, frameMarker);\n\n        if (this._time >= frameMarker) {\n            this._time = 0;\n            this.advanceFrame();\n            //console.log(\"update \"+this._currentFrameIndex);\n            //console.log(\"update key \"+this._constructedKeyFrameIndex);\n\n            this.dispatchEvent(this._enterFrame);\n            var has_executed_script:boolean=true;\n            while(has_executed_script)\n                has_executed_script=this.executePostConstructCommands();\n\n        }\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id]) {\n            this._potentialInstances[id] = this.timeline.getPotentialChildInstance(id);\n        }\n\n        return this._potentialInstances[id];\n    }\n\n    public addScriptForExecution(value:Function)\n    {\n        this._framescripts_to_execute.push(value);\n    }\n    public activateChild(id:number)\n    {\n        this.addChild(this.getPotentialChildInstance(id));\n    }\n\n    public deactivateChild(id:number)\n    {\n        this.removeChild(this._potentialInstances[id]);\n    }\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone(newInstance:MovieClip = null) : DisplayObject\n    {\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip());\n\n        newInstance.timeline = this._timeline;\n\n        newInstance._fps = this._fps;\n        newInstance._loop = this._loop;\n\n        return newInstance;\n    }\n\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tsuper.iSetParent(value);\n\n\t\tif (value && this._timeline && this._currentFrameIndex == -1)\n\t\t\tthis.reset();\n\t}\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        if(this.timeline) {\n            var i;\n            var oldFrameIndex = this._currentFrameIndex;\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\n            if (advance && oldFrameIndex == this.timeline.numFrames() - 1 && !this._loop) {\n                advance = false;\n            }\n            if (advance && oldFrameIndex == 0 && this.timeline.numFrames() == 1) {\n                //console.log(\"one frame clip\");\n                this._currentFrameIndex = 0;\n                advance = false;\n            }\n            if (advance) {\n                //console.log(\"advance\");\n                ++this._currentFrameIndex;\n                if (this._currentFrameIndex == this.timeline.numFrames()) {\n                    // looping - jump to first frame.\n                    this.currentFrameIndex=0;\n                }\n                else if (oldFrameIndex != this._currentFrameIndex){\n                    // not looping - construct next frame\n                    this.timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren)\n                this.advanceChildren();\n\n        }\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len = this.numChildren;\n        for (var i = 0; i <  len; ++i) {\n            var child = this.getChildAt(i);\n            if (child instanceof MovieClip)\n                (<MovieClip>child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        for (var i = 0; i < len; i++) {\n            var child = this.getChildAt(i);\n\n            if (child instanceof MovieClip)\n                (<MovieClip>child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target._iMaskID;\n        console.log(str);\n    }\n\n    executePostConstructCommands():boolean\n    {\n\n        // a script ,might call gotoAndStop() / gotoAndPlay() on itself or on other mc\n        // this might result in more script that should be executed.\n        // each mc provides a list of index to script that needs postconstructing.\n        // in this function, we postcontruct all those scripts\n        var has_script_executed:boolean=false;\n        if(this.timeline) {\n            if(this._framescripts_to_execute.length>0){\n                has_script_executed=true;\n                var caller = this.adapter? this.adapter : this;\n\n                try {\n                    this._framescripts_to_execute[0].call(caller);\n                }\n                catch(err)\n                {\n                    console.log(\"Script error in \" + this.name + \"\\n\", this._framescripts_to_execute[0]);\n                    console.log(err.message);\n                    throw err;\n                }\n                this._framescripts_to_execute.shift();\n            }\n        }\n\n        var i;\n        var len:number = this.numChildren-1;\n        for (i = len; i >=0; --i) {\n            var child = this.getChildAt(i);\n            if (child.isAsset(MovieClip)) {\n                if ((<MovieClip>child).executePostConstructCommands()) {\n                    has_script_executed = true;\n                }\n            }\n        }\n        return has_script_executed;\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar line_width:number=0;\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t\tfont_chars.push(this_char);\n\t\t\t}\n\t\t\tvar x_offset:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-line_width);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len = this.numChildren;\n\t\tvar i;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tclone.addChild(this.getChildAt(i).clone());\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tpublic _entity:IEntity;\n\tprivate _partition:Partition;\n\tpublic _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade) {\n\t\t\tvar t:EntityNode = this._updateQueue;\n\t\t\twhile (t) {\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\t\tt.entity._iInternalUpdate();\n\t\t\t\tt = t._iUpdateQueueNext;\n\t\t\t}\n\t\t\tthis.updateEntities();\n\t\t}\n\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
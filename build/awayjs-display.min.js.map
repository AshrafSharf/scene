{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "hitTestPoint",
    "x",
    "y",
    "z",
    "posDim",
    "positions",
    "dimensions",
    "curveDim",
    "curves",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "k",
    "curvex",
    "az",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "setIndices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "uvs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "indices",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "_tangents",
    "setNormals",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "jointsPerVertex",
    "normals",
    "tangents",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "visible",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\t//check if nmot solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean = false;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this._pScaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._pScaleZ = val/this.getBox().depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this._pScaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._pScaleY = val/this.getBox().height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this._pScaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._pScaleX = val/this.getBox().width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(3);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = this.name;\n\n        clone._iMaskID = this._iMaskID;\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\tif (this._width != null) {\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._height != null) {\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._depth != null) {\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tif (this._listenToSceneChanged)\n\t\t\t\tthis.notifySceneChange();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (!this._scenechanged)\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scenechanged);\n}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\t\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\t\t\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setNormals((this._normals && !this._autoDeriveNormals)? this._normals.clone() : null);\n\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\n\n\t\tclone.setTangents((this._tangents && !this._autoDeriveTangents)? this._tangents.clone() : null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this._secondaryUVs.clone());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.setJointIndices(this._jointIndices.clone());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.setJointWeights(this._jointWeights.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = this.name;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\t\treturn child;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\n\t\tif(this.visible==false)return;\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\n\t\t\tif(childHit) {\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\tif(all_masks){\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\tif(mask_child.parent){\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\n\t\t\t\t\t\t\tif(childHit) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        var obj:any;\n\n        for (i = 0; i < len; ++i) {\n            obj = this.getChildAt(i).clone();\n            clone.addChild(<DisplayObjectContainer> obj);\n        }\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\t// if this is a mask, directly return false\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\n\n\t\t// if this is invisible, all children should be invisible too.\n\t\t// todo: is the above statement correct for awayjs visible-property ?\n\t\tif(this.visible==false)return false;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\t\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tif(this.geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\n\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\t\t\tif (all_masks) {\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\n\t\t\t\t\t\t\tif (all_hir_masks){\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hit:boolean = false;\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\n\t\tif(hit)\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\n\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar line_width:number=0;\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t}\n\t\t\t\tfont_chars.push(this_char);\n\t\t\t}\n\t\t\tvar x_offset:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-line_width);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n        this._iCopyToMesh(clone);\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tpublic _entity:IEntity;\n\tprivate _partition:Partition;\n\tpublic _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
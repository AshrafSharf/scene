{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display/display.ts",
    "awayjs-display.js",
    "awayjs-display/lib/View.ts",
    "awayjs-display/lib/animators/data/ParticleData.ts",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/Style.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/display/Billboard.ts",
    "awayjs-display/lib/display/Camera.ts",
    "awayjs-display/lib/display/DirectionalLight.ts",
    "awayjs-display/lib/display/DisplayObjectContainer.ts",
    "awayjs-display/lib/display/DisplayObject.ts",
    "awayjs-display/lib/display/LightBase.ts",
    "awayjs-display/lib/display/LightProbe.ts",
    "awayjs-display/lib/display/LineSegment.ts",
    "awayjs-display/lib/display/LoaderContainer.ts",
    "awayjs-display/lib/display/MovieClip.ts",
    "awayjs-display/lib/display/PointLight.ts",
    "awayjs-display/lib/display/Scene.ts",
    "awayjs-display/lib/display/Shape.ts",
    "awayjs-display/lib/display/Skybox.ts",
    "awayjs-display/lib/display/Sprite.ts",
    "awayjs-display/lib/display/TextField.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathCommand.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/GraphicsPath.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/ElementsEvent.ts",
    "awayjs-display/lib/events/GraphicsEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/StyleEvent.ts",
    "awayjs-display/lib/events/SurfaceEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/events/TransformEvent.ts",
    "awayjs-display/lib/graphics/ElementsBase.ts",
    "awayjs-display/lib/graphics/ElementsType.ts",
    "awayjs-display/lib/graphics/Graphics.ts",
    "awayjs-display/lib/graphics/Graphic.ts",
    "awayjs-display/lib/graphics/LineElements.ts",
    "awayjs-display/lib/graphics/TriangleElements.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/DisplayObjectNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollision.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/MappingMode.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/ElementsUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "./display.ts",
    "module",
    "Camera",
    "DirectionalLight",
    "Sprite",
    "Billboard",
    "LineSegment",
    "TextField",
    "PointLight",
    "LightProbe",
    "Skybox",
    "Shape",
    "MovieClip",
    "CameraNode",
    "DirectionalLightNode",
    "EntityNode",
    "LightProbeNode",
    "PartitionBase",
    "PointLightNode",
    "SkyboxNode",
    "registerAbstraction",
    "display",
    "awayjs-display/lib/display/Billboard",
    "awayjs-display/lib/display/Camera",
    "awayjs-display/lib/display/DirectionalLight",
    "awayjs-display/lib/display/LightProbe",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/MovieClip",
    "awayjs-display/lib/display/PointLight",
    "awayjs-display/lib/display/Shape",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/display/Sprite",
    "awayjs-display/lib/display/TextField",
    "awayjs-display/lib/partition/CameraNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/LightProbeNode",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/ITraverser",
    "awayjs-display/lib/View",
    "getTimer",
    "TouchPoint",
    "Scene",
    "RaycastPicker",
    "CameraEvent",
    "DisplayObjectEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "scene",
    "camera",
    "_this",
    "this",
    "_width",
    "_height",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "Array",
    "_onPartitionChangedDelegate",
    "event",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "position",
    "appendChild",
    "_mouseManager",
    "getInstance",
    "registerView",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "_pMouseX",
    "enumerable",
    "configurable",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "inverseSceneTransform",
    "transformVector",
    "unproject",
    "x",
    "getLocalMouseY",
    "y",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "len",
    "push",
    "id",
    "_pRenderer",
    "set",
    "value",
    "dispose",
    "removeEventListener",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "addEventListener",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "width",
    "height",
    "shareContext",
    "_shareContext",
    "_pCamera",
    "PROJECTION_CHANGED",
    "_pScene",
    "partition",
    "_iRegisterEntity",
    "PARTITION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollision",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "undefined",
    "awayjs-display/lib/base/TouchPoint",
    "awayjs-display/lib/display/Scene",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/data/ParticleData",
    "ParticleData",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "_pStateClass",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/HierarchicalProperties",
    "HierarchicalProperties",
    "MOUSE_ENABLED",
    "VISIBLE",
    "MASK_ID",
    "MASKS",
    "COLOR_TRANSFORM",
    "SCENE_TRANSFORM",
    "ALL",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderable",
    "awayjs-display/lib/base/ISurface",
    "awayjs-display/lib/base/OrientationMode",
    "OrientationMode",
    "DEFAULT",
    "CAMERA_PLANE",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher",
    "StyleEvent",
    "Style",
    "_samplers",
    "_images",
    "_color",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "_uvMatrix",
    "getImageAt",
    "texture",
    "index",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "dispatchEvent",
    "INVALIDATE_PROPERTIES",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/events/StyleEvent",
    "awayjs-display/lib/base/Timeline",
    "ColorTransform",
    "FrameScriptManager",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "indexOf",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "adapter",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "numChildren",
    "_children",
    "_depthID",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "_sessionID",
    "isBlockedByScript",
    "transform",
    "clearMatrix3D",
    "clearColorTransform",
    "masks",
    "maskMode",
    "isVisibilityByScript",
    "visible",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "matrix3D",
    "rawData",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "colorTransform",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "m",
    "properties_stream_strings",
    "registerScriptObject",
    "target",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "pInvalidateHierarchicalProperties",
    "properties_stream_f32_mtx_pos",
    "invalidatePosition",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/Transform",
    "Matrix3D",
    "Matrix3DUtils",
    "Vector3D",
    "TransformEvent",
    "Transform",
    "_matrix3D",
    "_rotation",
    "_skew",
    "_scale",
    "_components",
    "director",
    "getForward",
    "negate",
    "_colorTransform",
    "val",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_matrix3DDirty",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "z",
    "invalidateMatrix3D",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "Y_AXIS",
    "moveDown",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "Math",
    "sqrt",
    "appendTranslation",
    "prependTranslation",
    "identity",
    "clear",
    "INVALIDATE_MATRIX3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "recompose",
    "elements",
    "decompose",
    "vec",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/events/TransformEvent",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "ElementsType",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "entity",
    "_x",
    "_y",
    "_z",
    "_depth",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "getBox",
    "matrix",
    "sceneTransform",
    "hx",
    "hy",
    "hz",
    "depth",
    "cx",
    "cy",
    "cz",
    "raw",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "LINE",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/graphics/ElementsType",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "getSphere",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "AbstractMethodError",
    "invalidate",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "invalidatePartitionBounds",
    "_iController",
    "update",
    "interpolate",
    "updateController",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "MathConsts",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "rotationX",
    "rotationY",
    "sin",
    "DEGREES_TO_RADIANS",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "lookAt",
    "scenePosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "SCENETRANSFORM_CHANGED",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "copyFrom",
    "incrementBy",
    "Rectangle",
    "DisplayObject",
    "RenderableEvent",
    "SurfaceEvent",
    "DefaultMaterialManager",
    "material",
    "pixelSnapping",
    "smoothing",
    "_pIsEntity",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "_updateDimensions",
    "_boundsType",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "_material",
    "iRemoveOwner",
    "INVALIDATE_TEXTURE",
    "iAddOwner",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "_style",
    "_iTestCollision",
    "pickingCollision",
    "pickingCollider",
    "testBillboardCollision",
    "_acceptTraverser",
    "traverser",
    "applyRenderable",
    "getTextureAt",
    "getDefaultSampler",
    "imageRect",
    "rect",
    "frameRect",
    "_pInvalidateBounds",
    "INVALIDATE_ELEMENTS",
    "invalidateSurface",
    "INVALIDATE_RENDER_OWNER",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/display/DisplayObject",
    "awayjs-display/lib/events/RenderableEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "DisplayObjectContainer",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "bitFlag",
    "_hierarchicalPropsDirty",
    "append",
    "nX",
    "nY",
    "_applyRenderer",
    "_iSourcePrefab",
    "_iValidate",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/display/DisplayObjectContainer",
    "LightBase",
    "DirectionalShadowMapper",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "pUpdateSceneTransform",
    "_direction",
    "_tmpLookAt",
    "copyColumnTo",
    "normalize",
    "pCreateShadowMapper",
    "iGetObjectProjectionMatrix",
    "cameraTransform",
    "RAW_DATA_CONTAINER",
    "getRenderSceneTransform",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "copyRawDataFrom",
    "prepend",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/display/LightBase",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "_pIsContainer",
    "_updateMouseEnabled",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "_pParent",
    "removeChildAtInternal",
    "getChildIndex",
    "iSetParent",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "newInstance",
    "copyTo",
    "mouseChildren",
    "contains",
    "disposeValues",
    "removeChild",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "point",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "box",
    "setEmpty",
    "_iSetScene",
    "splice",
    "_hitTestPointInternal",
    "shapeFlag",
    "masksFlag",
    "hitTestPoint",
    "_updateMaskMode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "Box",
    "Sphere",
    "Point",
    "PickingCollision",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "zOffset",
    "_transform",
    "_onInvalidateMatrix3D",
    "_onInvalidateColorTransform",
    "_adapter",
    "scaleZ",
    "_setScaleZ",
    "_eulers",
    "rotationZ",
    "scaleY",
    "_setScaleY",
    "_inverseSceneTransformDirty",
    "invert",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iAssignedPartition",
    "_pivot",
    "pivot",
    "_pivotScale",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "scale",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "_shaderPickingDetails",
    "_debugVisible",
    "_explicitMasks",
    "scaleX",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "_listenToSceneTransformChanged",
    "boundsType",
    "mouseEnabled",
    "extra",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "transformBox",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "setTo",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "maskHit",
    "isMask",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "subtract",
    "crossProduct",
    "localToGlobal3D",
    "movePivot",
    "reset",
    "comps",
    "hasEventListener",
    "_pImplicitPartition",
    "_pickingCollision",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "queueDispatch",
    "_sceneTransformChanged",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_sceneChanged",
    "_iIsRoot",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iInternalUpdate",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "collector",
    "concat",
    "numLayers",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "INVALIDATE_PARTITION_BOUNDS",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/pick/PickingCollision",
    "awayjs-display/lib/display/IEntity",
    "LightEvent",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_shadowsEnabled",
    "_shadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "awayjs-display/lib/events/LightEvent",
    "SamplerCube",
    "ErrorBase",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "specularSampler",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "startPosition",
    "endPosition",
    "thickness",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "invalidateGraphics",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/display/LoaderContainer",
    "AssetLibraryBundle",
    "Loader",
    "AssetEvent",
    "URLLoaderEvent",
    "LoaderEvent",
    "ParserEvent",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "LOAD_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "LOAD_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "MouseEvent",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "isAsset",
    "text",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "pop",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-display/lib/events/MouseEvent",
    "CubeMapShadowMapper",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "BasicPartition",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "Graphics",
    "GraphicsEvent",
    "_tempPoint",
    "_onGraphicsBoundsInvalidDelegate",
    "onGraphicsBoundsInvalid",
    "_graphics",
    "BOUNDS_INVALID",
    "animator",
    "removeOwner",
    "addOwner",
    "bakeTransformations",
    "applyTransformation",
    "_shapes",
    "shape",
    "graphics",
    "union",
    "getBoxBounds",
    "_center",
    "getSphereBounds",
    "acceptTraverser",
    "count",
    "local",
    "awayjs-display/lib/events/GraphicsEvent",
    "awayjs-display/lib/graphics/Graphics",
    "BlendMode",
    "SingleCubeTexture",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "NORMAL",
    "_curves",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "INVALIDATE",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_sprites",
    "sprite",
    "AttributesView",
    "Float3Attributes",
    "Float2Attributes",
    "Matrix",
    "TextFieldType",
    "TriangleElements",
    "Sampler2D",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGraphicsDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "color",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textFields",
    "vertices",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "getChar",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "positions",
    "numVertices",
    "curveData2",
    "getCustomAtributes",
    "leading",
    "attributesView",
    "Float32Array",
    "vertexBuffer",
    "buffer",
    "curveElements",
    "setPositions",
    "setCustomAttributes",
    "addGraphic",
    "uvMatrix",
    "uv_values",
    "animateUVs",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathCommand",
    "GraphicsPathCommand",
    "NO_OP",
    "MOVE_TO",
    "LINE_TO",
    "CURVE_TO",
    "CURVE_TO_2",
    "WIDE_LINE_TO",
    "WIDE_MOVE_TO",
    "CUBIC_CURVE",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/GraphicsPath",
    "GraphicsPath",
    "commands",
    "winding",
    "_data",
    "_commands",
    "_draw_directions",
    "_contours_closed",
    "_startPoint",
    "_cur_point",
    "_tmp_point",
    "isFill",
    "_winding",
    "_isFill",
    "curveTo",
    "controlX",
    "controlY",
    "anchorX",
    "anchorY",
    "testpoint",
    "degree_anchor",
    "acos",
    "PI",
    "degree_control",
    "atan2",
    "lineTo",
    "finalizeContour",
    "wideLineTo",
    "wideMoveTo",
    "awayjs-display/lib/draw/Graphics",
    "PartialImplementationError",
    "_current_position",
    "_target",
    "_queued_fill_pathes",
    "_queued_stroke_pathes",
    "_active_fill_path",
    "_active_stroke_path",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "draw_fill",
    "beginFill",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "drawCircle",
    "radius2",
    "degree",
    "degree2",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "draw_strokes",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "contour_commands",
    "contour_data",
    "contour_closed",
    "contours_closed",
    "vert_cnt",
    "data_cnt",
    "draw_started",
    "final_vert_list",
    "final_vert_cnt",
    "lastPoint",
    "start_point",
    "end_point",
    "start_left",
    "start_right",
    "ctr_left",
    "ctr_right",
    "ctr_left2",
    "ctr_right2",
    "end_left",
    "end_right",
    "tmp_point",
    "tmp_point2",
    "first_point",
    "first_point_set",
    "closed",
    "tessVerts",
    "_tess_obj",
    "newTess",
    "contour_points",
    "contour_types",
    "curve_direction",
    "control_x",
    "control_y",
    "end_x",
    "end_y",
    "con_length",
    "next_start_right",
    "next_start_left",
    "next_end_right",
    "next_end_left",
    "prevLeft",
    "prevRight",
    "nextIdx",
    "cur_vertical",
    "next_vertical",
    "cur_horizontal",
    "next_horizontal",
    "factor1",
    "offsetY1",
    "factor2",
    "offsetY2",
    "factor3",
    "offsetY3",
    "factor4",
    "offsetY4",
    "finished_curves",
    "finished_curves_types",
    "test_concave_curves",
    "test_convex_curves",
    "curve_sign",
    "getSign",
    "curve_sign2",
    "curve_sign3",
    "subdivided",
    "subdivided2",
    "subdivideCurve",
    "sc",
    "verticesF32",
    "addContour",
    "tesselate",
    "verts",
    "all_verts",
    "vertIndicess",
    "elems",
    "getVertices",
    "getElements",
    "numVerts",
    "numElems",
    "p1",
    "p2",
    "p3",
    "attributesBuffer",
    "setUVs",
    "getDefaultMaterial",
    "bothSides",
    "useColorTransform",
    "curves",
    "isClockWiseXY",
    "point1x",
    "point1y",
    "point2x",
    "point2y",
    "point3x",
    "point3y",
    "bx",
    "by",
    "pointInTri",
    "xx",
    "xy",
    "b1",
    "b2",
    "b3",
    "startx",
    "starty",
    "endx",
    "endy",
    "startx2",
    "starty2",
    "cx2",
    "cy2",
    "endx2",
    "endy2",
    "array_out",
    "array2_out",
    "c1x",
    "c1y",
    "c2x",
    "c2y",
    "c1x2",
    "c1y2",
    "c2x2",
    "c2y2",
    "ax2",
    "ay2",
    "contour_draw_directions",
    "draw_directions",
    "draw_direction",
    "contours_vertices",
    "curve_attr_1",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "EventBase",
    "_camera",
    "awayjs-core/lib/events/EventBase",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/ElementsEvent",
    "ElementsEvent",
    "_attributesView",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "apply",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderable",
    "uv",
    "normal",
    "elementIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "_renderable",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "surface",
    "_surface",
    "INVALIDATE_ANIMATION",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/graphics/ElementsBase",
    "Short3Attributes",
    "ElementsBase",
    "concatenatedBuffer",
    "_customAttributesNames",
    "_customAttributes",
    "_numElements",
    "_verticesDirty",
    "_invalidateVertices",
    "_concatenatedBuffer",
    "_indices",
    "getCustomAtributesNames",
    "setIndices",
    "values",
    "offset",
    "clearIndices",
    "invalidateIndicies",
    "clearVertices",
    "invalidateVertices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "center",
    "_invalidateIndices",
    "awayjs-core/lib/attributes/Short3Attributes",
    "TRIANGLE",
    "Graphic",
    "ElementsUtils",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "graphic",
    "invalidateElements",
    "_iInvalidateSurfaces",
    "_iGetExplicitMaterial",
    "newGraphic",
    "_available",
    "parent",
    "_invalidateBounds",
    "removeGraphic",
    "getGraphicAt",
    "particles",
    "numParticles",
    "_iGetExplicitStyle",
    "_boxBounds",
    "setBoundIdentity",
    "hitTestTriangleElements",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/utils/ElementsUtils",
    "_iIndex",
    "awayjs-display/lib/graphics/LineElements",
    "Byte4Attributes",
    "Float1Attributes",
    "LineElements",
    "_numVertices",
    "_positions",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "floor",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "cells",
    "lastCollisionIndex",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_uvs",
    "_condensedIndexLookUp",
    "getTriangleGraphicsBoxBounds",
    "getTriangleGraphicsSphereBounds",
    "generateNormals",
    "faceNormals",
    "generateTangents",
    "faceTangents",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "uvs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "scaleUVs",
    "generateFaceTangents",
    "numElements",
    "generateFaceNormals",
    "testTriangleCollision",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "draw",
    "setPixel",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collision",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollisionFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "collider",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "imageColor",
    "_preserveAlpha",
    "invalidateTexture",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ImageBase",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateSurfaces",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "shadowsEnabled",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "cullPlanes",
    "_pCullPlanes",
    "_iRenderCascades",
    "_pOverallDepthCamera",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "_autoUpdateShadows",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "NodeBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "isContainerNode",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "debugVisible",
    "_updateBounds",
    "onClear",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "awayjs-core/lib/library/AbstractionBase",
    "_maskPosition",
    "_partition",
    "globalRayPosition",
    "globalRayDirection",
    "isIntersectingMasks",
    "_iPickingCollision",
    "rayOriginIsInsideBounds",
    "applyEntity",
    "iMarkForUpdate",
    "children",
    "layerHit",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "applyLightProbe",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "assetClass",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_childDepths",
    "_childMasks",
    "_pEntityNode",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "SceneGraphNodePool",
    "isContainer",
    "displayObjectContainer",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleElements",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "posDim",
    "uvDim",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "lineElements",
    "_entities",
    "onlyMouseEnabled",
    "_rayPosition",
    "_rayDirection",
    "_view",
    "getSceneCollision",
    "getPickingCollision",
    "setIgnoreList",
    "entities",
    "_ignoredEntities",
    "isIgnored",
    "sortOnNearT",
    "entity1",
    "entity2",
    "sort",
    "_bestCollision",
    "_testCollision",
    "_testCollider",
    "MAX_VALUE",
    "updatePosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "elementsType",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidatePrimitive",
    "_pInvalidateUVs",
    "_pBuildGraphics",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGraphics",
    "horangle",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "_scaleU",
    "_scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGraphics",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_primitiveDirty",
    "_uvDirty",
    "_elementsType",
    "_elements",
    "updateGraphics",
    "updateUVs",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "dim",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "setChar",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "ImageUtils",
    "TextureBase",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "isImage2DValid",
    "setImageAt",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "index3",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "precheck",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/display/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/display/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport Shape\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Shape\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\n\nPartitionBase.registerAbstraction(CameraNode, Camera);\nPartitionBase.registerAbstraction(DirectionalLightNode, DirectionalLight);\nPartitionBase.registerAbstraction(EntityNode, Sprite);\nPartitionBase.registerAbstraction(EntityNode, Shape);\nPartitionBase.registerAbstraction(EntityNode, MovieClip);\nPartitionBase.registerAbstraction(EntityNode, Billboard);\nPartitionBase.registerAbstraction(EntityNode, LineSegment);\nPartitionBase.registerAbstraction(EntityNode, TextField);\nPartitionBase.registerAbstraction(LightProbeNode, LightProbe);\nPartitionBase.registerAbstraction(PointLightNode, PointLight);\nPartitionBase.registerAbstraction(SkyboxNode, Skybox);\n\n\n\n/**\n *\n * static shim\n */\nclass display\n{\n\n}\n\nexport = display;",
    null,
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t ******************clear********************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//render the contents of the scene\n\t\tthis._pRenderer.render(this._pCamera, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollision = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic elements:TriangleElements;\n}\n\nexport = ParticleData",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n *\n */\nclass Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _uvMatrix:Matrix;\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get uvMatrix():Matrix\n\t{\n\t\treturn this._uvMatrix;\n\t}\n\n\tpublic set uvMatrix(value:Matrix)\n\t{\n\t\tif (this._uvMatrix == value)\n\t\t\treturn;\n\n\t\tthis._uvMatrix = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\t\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties()\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n\nexport = Style;\n",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/display/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager\t\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tif(FrameScriptManager.frameScriptDebug){\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\n\t\t\t// try to get the functions name (it should be the first line as comment)\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\n\t\t\t}\n\t\t}\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D()\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform()\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents()\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform()\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D()\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents()\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n\nexport = Transform;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsType\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most sprites.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsType\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Sprite;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pEntity = null;\n\t\tthis._pBoundsPrimitive = null;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pInvalidated = true;\n\t\t}\n\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport RenderableEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport SurfaceEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderable\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:SurfaceEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:SurfaceEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:SurfaceEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tif (sampler.imageRect) {\n\t\t\t\tthis._billboardWidth = sampler.imageRect.width*image.width;\n\t\t\t\tthis._billboardHeight = sampler.imageRect.height*image.height;\n\t\t\t} else {\n\t\t\t\tthis._billboardWidth = image.rect.width;\n\t\t\t\tthis._billboardHeight = image.rect.height;\n\t\t\t}\n\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null)\n\t{\n\t\tthis.invalidateSurface();\n\n\t\tthis._updateDimensions();\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-sprites, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-core/lib/library/LoaderInfo\");\nimport EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pickingCollider:IPickingCollider;\n\tprivate _pickingCollision:PickingCollision;\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _boundsType:string;\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis.invalidate();\n\t\t\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pickingCollider:IPickingCollider;\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\t\tnewInstance.castsShadows = this.castsShadows;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(cameraTransform:Matrix3D):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = cameraTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollision():PickingCollision\n\t{\n\t\tif (!this._pickingCollision)\n\t\t\tthis._pickingCollision = new PickingCollision(this);\n\n\t\treturn this._pickingCollision;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartitionBounds();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc abstraction objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _acceptTraverser(collector:ITraverser)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent)\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent)\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartitionBounds();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\n\t\t\tthis.pickingCollider =  this._pParent.pickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n\n\tpublic invalidatePartitionBounds()\n\t{\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _shadowsEnabled:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get shadowsEnabled():boolean\n\t{\n\t\treturn this._shadowsEnabled;\n\t}\n\n\tpublic set shadowsEnabled(value:boolean)\n\t{\n\t\tif (this._shadowsEnabled == value)\n\t\t\treturn;\n\n\t\tthis._shadowsEnabled = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport RenderableEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderable\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateGraphics()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false; //TODO: detect line collisions\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n}\n\nexport = LineSegment;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport Loader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport URLLoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (sprites, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader()\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}\n\nexport = LoaderContainer;",
    "import AssetEvent                   = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform               = require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport DisplayObject                = require(\"awayjs-display/lib/display/DisplayObject\");\nimport Sprite                       = require(\"awayjs-display/lib/display/Sprite\");\nimport Billboard                    = require(\"awayjs-display/lib/display/Billboard\");\nimport TextField                    = require(\"awayjs-display/lib/display/TextField\");\nimport MouseEvent                   = require(\"awayjs-display/lib/events/MouseEvent\");\nimport IMovieClipAdapter\t    \t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                     = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager           = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends Sprite\n{\n\tprivate static _skipAdvance:boolean;\n\n\tprivate static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n\tpublic static assetType:string = \"[asset MovieClip]\";\n\n\tprivate _timeline:Timeline;\n\n\tprivate _isButton:boolean = false;\n\tprivate _onMouseOver:(event:MouseEvent) => void;\n\tprivate _onMouseOut:(event:MouseEvent) => void;\n\tprivate _onMouseDown:(event:MouseEvent) => void;\n\tprivate _onMouseUp:(event:MouseEvent) => void;\n\n\tprivate _time:number = 0;// the current time inside the animation\n\tprivate _currentFrameIndex:number = -1;// the current frame\n\n\tprivate _isPlaying:boolean = true;// false if paused or stopped\n\n\t// not sure if needed\n\tprivate _enterFrame:AssetEvent;\n\tprivate _skipAdvance : boolean;\n\tprivate _isInit:boolean = true;\n\n\tprivate _potentialInstances:Object = {};\n\tprivate _depth_sessionIDs:Object = {};\n\tprivate _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n\tconstructor(timeline:Timeline = null)\n\t{\n\t\tsuper();\n\n\t\tthis._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n\t\tthis.inheritColorTransform = true;\n\n\t\tthis._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n\t\tthis._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n\t\tthis._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n\t\tthis._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n\t\tthis._timeline = timeline || new Timeline();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tMovieClip._movieClips.push(this);\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._potentialInstances = {};\n\t\tthis._depth_sessionIDs = {};\n\t\tthis._sessionID_childs = {};\n\t}\n\n\tpublic reset_textclones()\n\t{\n\t\tif(this.timeline) {\n\t\t\tfor (var key in this._potentialInstances) {\n\t\t\t\tif (this._potentialInstances[key] != null) {\n\t\t\t\t\tif (this._potentialInstances[key].isAsset(TextField)) {\n\t\t\t\t\t\t(<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this._potentialInstances[key].isAsset(MovieClip)) {\n\t\t\t\t\t\t(<MovieClip>this._potentialInstances[key]).reset_textclones();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get isInit():boolean\n\t{\n\t\treturn this._isInit;\n\t}\n\tpublic set isInit(value:boolean)\n\t{\n\t\tthis._isInit = value;\n\t}\n\n\tpublic get timeline():Timeline\n\t{\n\t\treturn this._timeline;\n\t}\n\n\tpublic set timeline(value:Timeline)\n\t{\n\t\tthis._timeline = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic loop:boolean = true;\n\n\tpublic get numFrames() : number\n\t{\n\t\treturn this._timeline.numFrames;\n\t}\n\n\tpublic jumpToLabel(label:string)\n\t{\n\t\t// the timeline.jumpTolabel will set currentFrameIndex\n\t\tthis._timeline.jumpToLabel(this, label);\n\t}\n\n\t/**\n\t * the current index of the current active frame\n\t */\n\tpublic constructedKeyFrameIndex:number = -1;\n\n\tpublic reset():void\n\t{\n\t\tsuper.reset();\n\n\t\t// time only is relevant for the root mc, as it is the only one that executes the update function\n\t\tthis._time = 0;\n\n\t\tif(this.adapter)\n\t\t\tthis.adapter.freeFromScript();\n\n\t\tthis.constructedKeyFrameIndex = -1;\n\t\tfor (var i:number = this.numChildren - 1; i >= 0; i--)\n\t\t\tthis.removeChildAt(i);\n\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\t\tthis._isPlaying = Boolean(numFrames > 1);\n\t\tif (numFrames) {\n\t\t\tthis._currentFrameIndex = 0;\n\t\t\tthis._timeline.constructNextFrame(this, true, true);\n\t\t} else {\n\t\t\tthis._currentFrameIndex = -1;\n\t\t}\n\t}\n\n\n\tpublic resetSessionIDs()\n\t{\n\t\tthis._depth_sessionIDs = {};\n\t}\n\n\t/*\n\t* Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n\t */\n\tpublic get currentFrameIndex():number\n\t{\n\t\treturn this._currentFrameIndex;\n\t}\n\n\tpublic set currentFrameIndex(value:number)\n\t{\n\t\t//if currentFrame is set greater than the available number of\n\t\t//frames, the playhead is moved to the last frame in the timeline.\n\t\t//But because the frame specified was not a keyframe, no scripts are\n\t\t//executed, even if they exist on the last frame.\n\t\tvar skip_script:boolean = false;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\n\t\tif (!numFrames)\n\t\t\treturn;\n\n\t\tif (value < 0) {\n\t\t\tvalue = 0;\n\t\t} else if (value >= numFrames) {\n\t\t\tvalue = numFrames - 1;\n\t\t\tskip_script = true;\n\t\t}\n\n\t\tif (this._currentFrameIndex == value)\n\t\t\treturn;\n\n\t\tthis._currentFrameIndex = value;\n\n\t\t//changing current frame will ignore advance command for that\n\t\t//update's advanceFrame function, unless advanceFrame has\n\t\t//already been executed\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tthis._timeline.gotoFrame(this, value, skip_script);\n\t}\n\n\tpublic addButtonListeners()\n\t{\n\t\tthis._isButton = true;\n\n\t\tthis.stop();\n\n\t\tthis.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\t}\n\n\tpublic removeButtonListeners()\n\t{\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n\t}\n\n\tpublic getChildAtSessionID(sessionID:number):DisplayObject\n\t{\n\t\treturn this._sessionID_childs[sessionID];\n\t}\n\n\tpublic getSessionIDDepths():Object\n\t{\n\t\treturn this._depth_sessionIDs;\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\t//this should be implemented for all display objects\n\t\tchild.inheritColorTransform = true;\n\n\t\tchild.reset();// this takes care of transform and visibility\n\n\t\treturn super.addChildAtDepth(child, depth, replace);\n\t}\n\n\tpublic _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n\t{\n\t\tthis._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n\t\tthis._sessionID_childs[sessionID] = child;\n\n\t\treturn this.addChildAtDepth(child, depth);\n\t}\n\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif(child.adapter)\n\t\t\tchild.adapter.freeFromScript();\n\n\t\tthis.adapter.unregisterScriptObject(child);\n\n\t\t//check to make sure _depth_sessionIDs wasn't modified with a new child\n\t\tif (this._depth_sessionIDs[child._depthID] == child._sessionID)\n\t\t\tdelete this._depth_sessionIDs[child._depthID];\n\n\t\tdelete this._sessionID_childs[child._sessionID];\n\n\t\tchild._sessionID = -1;\n\n\t\treturn super.removeChildAtInternal(index);\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn MovieClip.assetType;\n\t}\n\n\t/**\n\t * Starts playback of animation from current position\n\t */\n\tpublic play()\n\t{\n\t\tif (this._timeline.keyframe_indices.length > 1)\n\t\t\tthis._isPlaying = true;\n\t}\n\n\t/**\n\t * should be called right before the call to away3d-render.\n\t */\n\tpublic update()\n\t{\n\t\tMovieClip._skipAdvance = true;\n\n\t\tthis.advanceFrame();\n\n\t\tMovieClip._skipAdvance = false;\n\n\t\t// after we advanced the scenegraph, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we want to execute the onEnter\n\t\tthis.dispatchEvent(this._enterFrame);\n\n\t\t// after we executed the onEnter, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we execute any intervals queued\n\t\tFrameScriptManager.execute_intervals();\n\n\t\t// finally, we execute any scripts that were added from intervals\n\t\tFrameScriptManager.execute_queue();\n\n\t\t//execute any disposes as a result of framescripts\n\t\tFrameScriptManager.execute_dispose();\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tif (!this._potentialInstances[id])\n\t\t\tthis._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n\t\treturn this._potentialInstances[id];\n\t}\n\n\n\t/**\n\t * Stop playback of animation and hold current position\n\t */\n\tpublic stop()\n\t{\n\t\tthis._isPlaying = false;\n\t}\n\n\tpublic clone():MovieClip\n\t{\n\t\tvar newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:MovieClip)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.timeline = this._timeline;\n\t\tnewInstance.loop = this.loop;\n\t}\n\n\tpublic advanceFrame()\n\t{\n\t\tif (this._isPlaying && !this._skipAdvance) {\n\t\t\tif (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n\t\t\t\tif (this.loop) // end of loop - jump to first frame.\n\t\t\t\t\tthis.currentFrameIndex = 0;\n\t\t\t\telse //end of timeline, stop playing\n\t\t\t\t\tthis._isPlaying = false;\n\t\t\t} else { // not end - construct next frame\n\t\t\t\tthis._currentFrameIndex++;\n\t\t\t\tthis._timeline.constructNextFrame(this);\n\t\t\t}\n\t\t}\n\n\t\tvar len:number = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i <  len; ++i) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).advanceFrame();\n\t\t}\n\n\t\tthis._skipAdvance = false;\n\t}\n\n// DEBUG CODE:\n\tlogHierarchy(depth: number = 0):void\n\t{\n\t\tthis.printHierarchyName(depth, this);\n\n\t\tvar len = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).logHierarchy(depth + 1);\n\t\t\telse\n\t\t\t\tthis.printHierarchyName(depth + 1, child);\n\t\t}\n\t}\n\n\tprintHierarchyName(depth:number, target:DisplayObject)\n\t{\n\t\tvar str = \"\";\n\t\tfor (var i = 0; i < depth; ++i)\n\t\t\tstr += \"--\";\n\n\t\tstr += \" \" + target.name + \" = \" + target.id;\n\t\tconsole.log(str);\n\t}\n\n\tpublic clear()\n\t{\n\t\t//clear out potential instances\n\t\tfor (var key in this._potentialInstances) {\n\t\t\tvar instance:DisplayObject = this._potentialInstances[key];\n\n\t\t\t//only dispose instances that are not used in script ie. do not have an instance name\n\t\t\tif (instance.name == \"\") {\n\t\t\t\tFrameScriptManager.add_child_to_dispose(instance);\n\t\t\t\tdelete this._potentialInstances[key];\n\t\t\t}\n\t\t}\n\n\t\tsuper.clear();\n\t}\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:ITraverser)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport GraphicsEvent\t\t\t\t= require(\"awayjs-display/lib/events/GraphicsEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Shape class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Shape object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Shape objects that contain the same graphics.\n * However, a Shape object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate static _shapes:Array<Shape> = new Array<Shape>();\n\n\tpublic static assetType:string = \"[asset Shape]\";\n\n\tprivate _center:Vector3D;\n\tprivate _graphics:Graphics;\n\tprivate _onGraphicsBoundsInvalidDelegate:(event:GraphicsEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Shape.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Shape.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Shape object.\n\t *\n\t * @param material    [optional]        The material with which to render the Shape.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onGraphicsBoundsInvalidDelegate = (event:GraphicsEvent) => this.onGraphicsBoundsInvalid(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Shape\n\t\tthis._graphics.addEventListener(GraphicsEvent.BOUNDS_INVALID, this._onGraphicsBoundsInvalidDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tShape._shapes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Shape instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this shape,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subShapees, children of the shape, and the animator.\n\t *\n\t * If you want to copy just the shape, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new shape manually:\n\t *\n\t * <code>\n\t * var clone : Shape = new Shape(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Shape\n\t{\n\t\tvar newInstance:Shape = (Shape._shapes.length)? Shape._shapes.pop() : new Shape();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(shape:Shape)\n\t{\n\t\tsuper.copyTo(shape);\n\n\t\tthis._graphics.copyTo(shape.graphics);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGraphicsBoundsInvalid(event:GraphicsEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport = Shape;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport RenderableEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport SurfaceEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderable, ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _owners:Array<IRenderable>;\n\tprivate _curves:boolean = false;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether skybox should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderable>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = Skybox;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport GraphicsEvent\t\t\t\t= require(\"awayjs-display/lib/events/GraphicsEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nclass Sprite extends DisplayObjectContainer\n{\n\tprivate static _sprites:Array<Sprite> = new Array<Sprite>();\n\n\tpublic static assetType:string = \"[asset Sprite]\";\n\n\tprivate _center:Vector3D;\n\tpublic _graphics:Graphics; //TODO\n\tprivate _onGraphicsBoundsInvalidDelegate:(event:GraphicsEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sprite.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Sprite object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Sprite.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Sprite object.\n\t *\n\t * @param material    [optional]        The material with which to render the Sprite.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onGraphicsBoundsInvalidDelegate = (event:GraphicsEvent) => this.onGraphicsBoundsInvalid(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\n\t\tthis._graphics.addEventListener(GraphicsEvent.BOUNDS_INVALID, this._onGraphicsBoundsInvalidDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tSprite._sprites.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Sprite instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this sprite,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subSpritees, children of the sprite, and the animator.\n\t *\n\t * If you want to copy just the sprite, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new sprite manually:\n\t *\n\t * <code>\n\t * var clone : Sprite = new Sprite(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Sprite\n\t{\n\t\tvar newInstance:Sprite = (Sprite._sprites.length)? Sprite._sprites.pop() : new Sprite();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(sprite:Sprite)\n\t{\n\t\tsuper.copyTo(sprite);\n\n\t\tthis._graphics.copyTo(sprite.graphics);\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGraphicsBoundsInvalid(event:GraphicsEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport = Sprite;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\n\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Style \t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Sprite\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGraphicsDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\n\t/**\n\t * The geometry used by the sprite that provides it with its shape.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._textGraphicsDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t}\n\n\t/**\n\t * Reconstructs the Graphics for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGraphicsDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\t\tthis._graphics.dispose();\n\t\tthis._graphics = new Graphics();\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:TriangleElements = this_char.elements;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar elements:TriangleElements = this_char.elements;\n\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\tvar positions2:ArrayBufferView = elements.positions.get(elements.numVertices);\n\t\t\t\t\t\tvar curveData2:ArrayBufferView = elements.getCustomAtributes(\"curves\").get(elements.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < elements.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v*2]*char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v*2 + 1]*char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v*3];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v*3 + 1];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v*3 + 2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// hack for multiline textfield in icycle.\n\t\t\ty_offset+=(this._textFormat.size+this._textFormat.leading*1.6);\n\t\t\tif(this._textFormat.leading>=11){\n\t\t\t\ty_offset+=2.5;\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 5);\n\t\tattributesView.set(vertices);\n\t\tvar vertexBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curveElements:TriangleElements = new TriangleElements(vertexBuffer);\n\t\tcurveElements.setPositions(new Float2Attributes(vertexBuffer));\n\t\tcurveElements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\n\n\t\tthis._graphics.addGraphic(curveElements);\n\n\t\tthis.material = this._textFormat.material;\n\t\tvar sampler:Sampler2D = new Sampler2D();\n\t\tthis.style = new Style();\n\t\tthis.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n\t\tthis.style.uvMatrix = new Matrix(0,0,0,0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n\t\tthis.material.animateUVs = true;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n* Defines the values to use for specifying path-drawing commands.\n* The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPathCommand\n{\n\t/**\n\t * Represents the default \"do nothing\" command.\n\t */\n\tpublic static NO_OP:number = 0;\n\t/**\n\t * Specifies a drawing command that moves the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static MOVE_TO:number = 1;\n\n\t/**\n\t * Specifies a drawing command that draws a line from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static LINE_TO:number = 2;\n\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO:number = 3;\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO_2:number = 13;\n\n\t/**\n\t * Specifies a \"line to\" drawing command,\n\t * but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_LINE_TO:number = 4;\n\n\t/**\n\t *   Specifies a \"move to\" drawing command,\n\t *   but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_MOVE_TO:number = 5;\n\n\t/**\n\t * Specifies a drawing command that draws a curve from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector, using 2 control points.\n\t */\n\tpublic static CUBIC_CURVE:number = 6;\n}\n\nexport = GraphicsPathCommand;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport GraphicsPathCommand\t\t= require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPath\n{\n    /**\n     * The Vector of drawing commands as integers representing the path.\n     */\n    private _commands:Array<Array<number>>;\n    /**\n     * The Vector of Numbers containing the parameters used with the drawing commands.\n     */\n    private _data:Array<Array<number>>;\n\n    private _draw_directions:Array<number>;\n    private _contours_closed:Array<boolean>;\n\n    /**\n     * Specifies the winding rule using a value defined in the GraphicsPathWinding class.\n     */\n    private _winding:string;\n\n    private _startPoint:Point;\n    private _tmp_point:Point;\n    private _cur_point:Point;\n    private _direction:Point;\n    private _isFill:boolean;\n\n    constructor(commands:Array<number> = null, data:Array<number> = null, winding:string = GraphicsPathWinding.EVEN_ODD)\n    {\n        this._data=[];\n        this._commands=[];\n        this._draw_directions=[0];\n        this._contours_closed=[false];\n\n        if(commands!=null && data!=null){\n            this._data[0]=data;\n            this._commands[0]=commands;\n        }\n        else{\n            this._data[0]=[];\n            this._commands[0]=[];\n\n        }\n\n        this._direction=new Point(0, -1);\n        this._startPoint=new Point();\n        this._cur_point=new Point();\n        this._tmp_point=new Point();\n        this.isFill=false;\n        this._winding=winding;\n    }\n\n    public get draw_directions():Array<number>\n    {\n        return this._draw_directions;\n    }\n    public get contours_closed():Array<boolean>\n    {\n        return this._contours_closed;\n    }\n\n    public get isFill():boolean\n    {\n        return this._isFill;\n    }\n    public set isFill(value:boolean)\n    {\n        this._isFill=value;\n    }\n    public get commands():Array<Array<number>>\n    {\n        return this._commands;\n    }\n\n    public get data():Array<Array<number>>\n    {\n        return this._data;\n    }\n\n    public curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.CURVE_TO);\n\n        if(this.isFill){\n            this._tmp_point.x=anchorX-this._cur_point.x;\n            this._tmp_point.y=anchorY-this._cur_point.y;\n            this._tmp_point.normalize();\n\n            var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\n            testpoint.normalize();\n            var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n            if(degree_anchor>180)degree_anchor-=360;\n            //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n            this._tmp_point.x=controlX-this._cur_point.x;\n            this._tmp_point.y=controlY-this._cur_point.y;\n            this._tmp_point.normalize();\n            //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n            var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\n            if(degree_control>180)degree_control-=360;\n            //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n            console.log(\"degree_control \"+degree_control);\n            console.log(\"degree_anchor \"+degree_anchor);\n            console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\n            this._direction.x=testpoint.x;\n            this._direction.y=testpoint.y;\n            if((degree_control)<0)\n                this._data[this._data.length-1].push(1);\n            else\n                this._data[this._data.length-1].push(2);\n\n        }\n        else{\n            this._data[this._data.length-1].push(1);\n        }\n        this._cur_point.x=anchorX;\n        this._cur_point.y=anchorY;\n        this._data[this._data.length-1].push(controlX);\n        this._data[this._data.length-1].push(controlY);\n        this._data[this._data.length-1].push(anchorX);\n        this._data[this._data.length-1].push(anchorY);\n\n    }\n\n    public lineTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.LINE_TO);\n        this._data[this._data.length-1].push(x);\n        this._data[this._data.length-1].push(y);\n        if(this.isFill) {\n            this._tmp_point.x = x - this._cur_point.x;\n            this._tmp_point.y = y - this._cur_point.y;\n            this._tmp_point.normalize();\n            this._direction.x=this._tmp_point.x;\n            this._direction.y=this._tmp_point.y;\n            var degree_anchor:number = Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n        }\n        this._cur_point.x=x;\n        this._cur_point.y=y;\n    }\n\n    public moveTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length>0){\n            this.finalizeContour();\n            this._draw_directions.push(0);\n            this._contours_closed.push(false);\n            this._commands.push([]);\n            this._data.push([]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    }\n\n    public finalizeContour()\n    {\n        if((this._startPoint.x != this._cur_point.x) || (this._startPoint.y != this._cur_point.y)){\n            if(this.isFill) {\n                this.lineTo(this._startPoint.x, this._startPoint.y);\n            }\n        }\n        else{\n            this._contours_closed[this._contours_closed.length-1]=true;\n        }\n\n    }\n    public wideLineTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n    public wideMoveTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n}\n\nexport = GraphicsPath;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\nimport GraphicsPath\t\t\t\t= require(\"awayjs-display/lib/draw/GraphicsPath\");\nimport GraphicsPathCommand\t\t= require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nimport DefaultMaterialManager\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MovieClip\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\n\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\")\nimport AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Sprite\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\n\n\nimport PartialImplementationError\t\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport TriangleElements = require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase = require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\tprivate _queued_fill_pathes:Array<GraphicsPath>;\n\tprivate _queued_stroke_pathes:Array<GraphicsPath>;\n\n\tpublic static _tess_obj:any;\n\n\tpublic _target:Sprite;\n\n\tprivate _active_fill_path:GraphicsPath;\n\tprivate _active_stroke_path:GraphicsPath;\n\n\tprivate _current_position:Point=new Point();\n\n\tconstructor(target:Sprite){\n\t\tthis._target=target;\n\t\tthis._queued_fill_pathes=[];\n\t\tthis._queued_stroke_pathes=[];\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\t\tthis._current_position=new Point();\n\t}\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\t// todo: do this the correct way\n\t\tthis._target.graphics.dispose();\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\t\tsourceGraphics._target.graphics.copyTo(this._target.graphics);\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tthrow new PartialImplementationError(\"cubicCurveTo\");\n\t\t/*\n\t\t t = 0.5; // given example value\n\t\t x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n\t\t y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n\t\t this.queued_command_types.push(Graphics.CMD_BEZIER);\n\t\t this.queued_command_data.push(controlX1);\n\t\t this.queued_command_data.push(controlY1);\n\t\t this.queued_command_data.push(controlX2);\n\t\t this.queued_command_data.push(controlY2);\n\t\t this.queued_command_data.push(anchorX);\n\t\t this.queued_command_data.push(anchorY);\n\n\t\t // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n\t\t this.draw_direction+=0;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tthis._current_position.x=anchorX;\n\t\tthis._current_position.y=anchorY;\n\t\t/*\n\t\tthis.queued_command_types.push(Graphics.CMD_CURVE);\n\t\tthis.queued_command_data.push(controlX);\n\t\tthis.queued_command_data.push(controlY);\n\t\tthis.queued_command_data.push(anchorX);\n\t\tthis.queued_command_data.push(anchorY);\n\t\t*/\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\t\tvar radius2=radius*1.065;\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x-radius, y);\n\t\t\tfor(var i=8; i>=0;i--){\n\n\t\t\t\tvar degree = (i) *(360/8)*Math.PI/180;\n\t\t\t\tvar degree2 = degree + ((360/16)*Math.PI/180);\n\t\t\t\tthis._active_fill_path.curveTo(x-(Math.cos(degree2)*radius2), y+(Math.sin(degree2)*radius2),x-(Math.cos(degree)*radius), y+(Math.sin(degree)*radius));\n\t\t\t}\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+radius);\n\t\t\tvar radius2=radius*0.93;\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y+(radius2), x-radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y-(radius2), x, y-radius);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y-(radius2), x+radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y+(radius2), x, y+radius);\n\t\t}\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\t\twidth/=2;\n\t\theight/=2;\n\t\tif(this._active_fill_path!=null){\n\n\t\t\tthis._active_fill_path.moveTo(x, y+height);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\t\t//this.draw_fill();\n\t\t/*\n\t\t for (var i:number=0; i<graphicsData.length; i++){\n\t\t //todo\n\t\t if(graphicsData[i].dataType==\"beginFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"Path\"){\n\n\t\t }\n\n\t\t }\n\t\t */\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\t\t//todo\n\t\t/*\n\t\t if(this._active_fill_path!=null){\n\t\t this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t if(this._active_stroke_path!=null){\n\t\t this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t this._current_position.x=anchorX;\n\t\t this._current_position.y=anchorY;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t\tif(!ellipseHeight){\n\t\t\tellipseHeight=ellipseWidth;\n\t\t}\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_fill_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_fill_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\t//todo\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\t//todo\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\t\tthis.draw_strokes();\n\t\tthis.draw_fill();\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\t}\n\n\tpublic draw_strokes(){\n\t\tif(this._active_stroke_path==null)return;\n\t\tthis._active_stroke_path.finalizeContour();\n\t\tvar contour_commands:Array<Array<number> >=this._active_stroke_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_stroke_path.data;\n\t\tvar contour_closed:Array<boolean >=this._active_stroke_path.contours_closed;\n\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_started:boolean=false;\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tvar start_point:Point=new Point();\n\t\tvar end_point:Point=new Point();\n\t\tvar start_left:Point=new Point();\n\t\tvar start_right:Point=new Point();\n\t\tvar ctr_left:Point=new Point();\n\t\tvar ctr_right:Point=new Point();\n\t\tvar ctr_left2:Point=new Point();\n\t\tvar ctr_right2:Point=new Point();\n\t\tvar end_left:Point=new Point();\n\t\tvar end_right:Point=new Point();\n\t\tvar tmp_point:Point=new Point();\n\t\tvar tmp_point2:Point=new Point();\n\t\tvar first_point:Point=new Point();\n\t\tvar first_point_set:boolean=false;\n\t\tvar closed:boolean=false;\n\t\tvar thickness:number=3;\n\t\tvar tessVerts:Array<number>=[];\n\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tvar contour_points:Array<Point>=[];\n\t\t\tvar contour_types:Array<number>=[];\n\t\t\tcommands = contour_commands[k];\n\t\t\tdata = contour_data[k];\n\t\t\tclosed=contour_closed[k];\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tdraw_started=false;\n\t\t\tfirst_point_set=false;\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.LINE_TO);\n\t\t\t\t\t\tend_point.x = data[data_cnt++];\n\t\t\t\t\t\tend_point.y = data[data_cnt++];\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_point.y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = end_point.x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tend_left.x  = end_point.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_point.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_point.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_point.y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tlastPoint.x=end_point.x;\n\t\t\t\t\t\tlastPoint.y=end_point.y;\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO);\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO_2);\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\n\n\t\t\t\t\t\ttmp_point.x = -1*(control_y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = control_x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tctr_left.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right.x, ctr_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left.x, ctr_left.y));\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_y-control_y);\n\t\t\t\t\t\ttmp_point.y = end_x-control_x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\tctr_left2.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left2.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right2.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right2.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tend_left.x  = end_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right2.x, ctr_right2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left2.x, ctr_left2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tlastPoint.x=end_x;\n\t\t\t\t\t\tlastPoint.y=end_y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar con_length:number=contour_points.length/4;\n\t\t\tvar next_start_right:Point=new Point();\n\t\t\tvar next_start_left:Point=new Point();\n\t\t\tvar next_end_right:Point=new Point();\n\t\t\tvar next_end_left:Point=new Point();\n\t\t\tvar prevLeft:Point;\n\t\t\tvar prevRight:Point;\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\tvar nextIdx:number = i + 1;\n\t\t\t\tif (i >= con_length - 1) {\n\t\t\t\t\t// last segment\n\t\t\t\t\tif (closed) {\n\t\t\t\t\t\tnextIdx = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextIdx = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nextIdx >= 0) {\n\t\t\t\t\tnext_start_right = contour_points[nextIdx * 4];\n\t\t\t\t\tnext_start_left = contour_points[nextIdx * 4 + 1];\n\t\t\t\t\tnext_end_right = contour_points[nextIdx * 4 + 2];\n\t\t\t\t\tnext_end_left = contour_points[nextIdx * 4 + 3];\n\n\t\t\t\t\tvar cur_vertical:boolean = false;\n\t\t\t\t\tvar next_vertical:boolean = false;\n\t\t\t\t\tvar cur_horizontal:boolean = false;\n\t\t\t\t\tvar next_horizontal:boolean = false;\n\n\t\t\t\t\ttmp_point.x = end_right.x - start_right.x;\n\t\t\t\t\ttmp_point.y = end_right.y - start_right.y;\n\t\t\t\t\tvar factor1:number=0;\n\t\t\t\t\tvar offsetY1:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor1 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY1 = -(factor1 * start_right.x - start_right.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_right.x - next_start_right.x;\n\t\t\t\t\ttmp_point.y = next_end_right.y - next_start_right.y;\n\t\t\t\t\tvar factor2:number=0;\n\t\t\t\t\tvar offsetY2:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor2 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY2 = -(factor2 * next_start_right.x - next_start_right.y);\n\t\t\t\t\t}\n\n\n\t\t\t\t\ttmp_point.x = end_left.x - start_left.x;\n\t\t\t\t\ttmp_point.y = end_left.y - start_left.y;\n\t\t\t\t\tvar factor3:number=0;\n\t\t\t\t\tvar offsetY3:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor3 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY3 = -(factor3 * start_left.x - start_left.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_left.x - next_start_left.x;\n\t\t\t\t\ttmp_point.y = next_end_left.y - next_start_left.y;\n\t\t\t\t\tvar factor4:number=0;\n\t\t\t\t\tvar offsetY4:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor4 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY4 = -(factor4 * next_start_left.x - next_start_left.y);\n\t\t\t\t\t}\n\t\t\t\t\tif ((cur_vertical && cur_horizontal)||(next_horizontal && next_vertical)) console.log(\"ERROR\");\n\t\t\t\t\tif((factor1==factor2)||(factor3==factor4)) {\n\t\t\t\t\t\tconsole.log(\"STRAIGHT LINE factor same\");\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor1);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor2);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor3);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor4);\n\t\t\t\t\t}\n\t\t\t\t\t//else\n\t\t\t\t\tif ((cur_horizontal && next_horizontal)||(cur_vertical && next_vertical)) console.log(\"STRAIGHT LINE\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ((cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\t\t\tend_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\t\t\tend_left.y = next_start_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((cur_vertical)&&(!next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(!next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor2 * start_right.x + offsetY2;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor4 * start_left.x + offsetY4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (next_start_right.y - offsetY1)/factor1;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = next_start_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (next_start_left.y - offsetY3)/factor3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(cur_horizontal)\");\n\t\t\t\t\t\t\tend_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tend_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(!cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * next_start_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * next_start_left.x + offsetY3;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (end_right.y - offsetY2)/factor2;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (end_left.y - offsetY4)/factor4;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.log(\"else\");\n\t\t\t\t\t\t\tconsole.log(\"factor1 - factor2 \"+(factor1 - factor2));\n\t\t\t\t\t\t\tconsole.log(\"offsetY1 - offsetY2 \"+(offsetY1 - offsetY2));\n\t\t\t\t\t\t\tconsole.log(\"factor3 - factor4 \"+(factor3 - factor4));\n\t\t\t\t\t\t\tconsole.log(\"offsetY3 - offsetY4 \"+(offsetY3 - offsetY4));\n\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = -((offsetY1 - offsetY2) / (factor1 - factor2));\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * end_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = -((offsetY3 - offsetY4) / (factor3 - factor4));\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * end_left.x + offsetY3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\tnext_start_left.y = end_left.y;\n\n\n\t\t\t\t\t// calculate the correct end points\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO_2)\n\t\t\t\t\tcontinue;\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\ti++;\n\t\t\t\t\tctr_right = contour_points[i * 4];\n\t\t\t\t\tctr_left = contour_points[i * 4 + 1];\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\n\t\t\t\t\tvar finished_curves:Array<Point>=[];\n\t\t\t\t\tvar finished_curves_types:Array<number>=[];\n\t\t\t\t\tvar test_concave_curves:Array<Point>=[];\n\t\t\t\t\tvar test_convex_curves:Array<Point>=[];\n\t\t\t\t\tvar curve_sign:boolean=this.getSign(start_right.x, start_right.y,  ctr_right.x, ctr_right.y, end_right.x, end_right.y )>0;\n\t\t\t\t\tvar curve_sign2:number=-1;\n\t\t\t\t\tvar curve_sign3:number=1;\n\t\t\t\t\ttessVerts.length=0;\n\t\t\t\t\tif(curve_sign){\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y,subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(tessVerts.length>0){\n\n\t\t\t\t\t\tvar verticesF32 = new Float32Array(tessVerts);\n\t\t\t\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, tessVerts.length / 2);\n\t\t\t\t\t}\n\t\t\t\t\tvar t:number=0;\n\t\t\t\t\tfor(t=0; t<finished_curves_types.length;t++){\n\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].y;;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t console.log(\"final verts stroke \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\t */\n\t\tGraphics._tess_obj.tesselate(4/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t}\n\n\t\t// todo: handle material / subsprite settings, and check if a material / subsprite already exists for this settings\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_stroke_path=null;\n\t}\n\n\tpublic isClockWiseXY(point1x:number, point1y:number, point2x:number, point2y:number, point3x:number, point3y:number):boolean\n\t{\n\t\treturn ((point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x) < 0);\n\t}\n\n\tpublic getSign(ax:number, ay:number, cx:number, cy:number, bx:number, by:number):number\n\t{\n\t\t/*if(this.isClockWiseXY(ax, ay, bx, by, cx, cy)) {\n\t\t return (bx - ax) * (cy - ay) - (by - ay) * (cx - ax);\n\t\t }*/\n\t\treturn (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n\n\t}\n\n\tpublic pointInTri(ax:number, ay:number, bx:number, by:number ,cx:number, cy:number, xx:number, xy:number):boolean\n\t{\n\t\tvar b1:boolean = this.getSign(ax, ay, xx, xy, bx, by) > 0;\n\t\tvar b2:boolean = this.getSign(bx, by, xx, xy, cx, cy) > 0;\n\t\tvar b3:boolean = this.getSign(cx, cy, xx, xy, ax, ay) > 0;\n\t\treturn ((b1 == b2) && (b2 == b3));\n\t}\n\tpublic subdivideCurve(startx:number, starty:number, cx:number, cy:number, endx:number, endy:number, startx2:number, starty2:number, cx2:number, cy2:number, endx2:number, endy2:number, array_out:Array<number>, array2_out:Array<number>):void\n\t{\n\t\t/*\n\t\t if(!this.pointInTri(startx2, starty2, cx2, cy2, endx2, endy2, cx, cy)){\n\t\t }\n\t\t */\n\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\n\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n\t\treturn;\n\t\tvar c1x = startx + (cx - startx) * 0.5;\n\t\tvar c1y = starty + (cy - starty) * 0.5;\n\t\tvar c2x = cx + (endx - cx) * 0.5;\n\t\tvar c2y = cy + (endy - cy) * 0.5;\n\t\tvar ax = c1x + (c2x - c1x) * 0.5;\n\t\tvar ay = c1y + (c2y - c1y) * 0.5;\n\n\t\tvar c1x2 = startx2 + (cx2 - startx2) * 0.5;\n\t\tvar c1y2 = starty2 + (cy2 - starty2) * 0.5;\n\t\tvar c2x2 = cx2 + (endx2 - cx2) * 0.5;\n\t\tvar c2y2 = cy2 + (endy2 - cy2) * 0.5;\n\t\tvar ax2 = c1x2 + (c2x2 - c1x2) * 0.5;\n\t\tvar ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n\t\tif(this.pointInTri(startx2, starty2, c1x2, c1y2, ax2, ay2, c1x, c1y)){\n\t\t\tthis.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n\t\t}\n\t\telse{\n\t\t\tarray_out.push(startx, starty, c1x, c1y, ax, ay);\n\t\t\tarray2_out.push(startx2, starty2, c1x2, c1y2, ax2, ay2);\n\t\t}\n\n\t\tif(this.pointInTri(ax2, ay2, c2x2, c2y2,  endx2, endy2, c2x, c2y)){\n\t\t\tthis.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n\t\t}\n\t\telse{\n\t\t\tarray_out.push(ax, ay, c2x, c2y, endx, endy);\n\t\t\tarray2_out.push(ax2, ay2, c2x2, c2y2, endx2, endy2);\n\t\t}\n\t}\n\tpublic draw_fill(){\n\t\tif(this._active_fill_path==null)return;\n\t\tthis._active_fill_path.finalizeContour();\n\n\t\tvar contour_commands:Array<Array<number> >=this._active_fill_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_fill_path.data;\n\t\tvar contour_draw_directions:Array<number>=this._active_fill_path.draw_directions;\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_direction:number=0;\n\t\tvar contours_vertices:Array<Array<number>> = [[]];\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tcontours_vertices.push([]);\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tcommands=contour_commands[k];\n\t\t\tdata=contour_data[k];\n\t\t\tdraw_direction=contour_draw_directions[k];\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar curve_attr_1 = -1;\n\t\t\t\t\t\tif (draw_direction > 0) {\n\t\t\t\t\t\t\tif (curve_direction == 1) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (curve_direction == 2) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!this.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)){\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPoint.x = end_x;\n\t\t\t\t\t\tlastPoint.y = end_y;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE:\n\t\t\t\t\t\t//todo\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contours_vertices.length; k++) {\n\t\t\tvar vertices=contours_vertices[k];\n\t\t\t/*\n\t\t\t for (i = 0; i < vertices.length / 2; ++i)\n\t\t\t console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n\t\t\t */\n\t\t\tvar verticesF32 = new Float32Array(vertices);\n\t\t\t//var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n\t\t\t//console.log(\"in vertices\", vertices);\n\t\t\t//var tess = new TESS();\n\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n\n\t\t}\n\t\tGraphics._tess_obj.tesselate(0/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\t//console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\t\t//console.log(\"out elements\", Graphics._tess_obj.getElements());\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t}\n\t\t//for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t//\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_fill_path=null;\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}\n\nexport = CameraEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\nclass DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nclass ElementsEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Elements's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a Elements's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a Elements's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a Elements's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsEvent\n\t{\n\t\treturn new ElementsEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = ElementsEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Graphic\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GraphicsEvent\n* @see away3d.core.base.Graphics\n*/\nclass GraphicsEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():GraphicsEvent\n\t{\n\t\treturn new GraphicsEvent(this.type);\n\t}\n}\n\nexport = GraphicsEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The entity inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderable\t\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableEvent\n * @see away.core.base.Graphics\n */\nclass RenderableEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_RENDER_OWNER:string = \"invalidateRenderable\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_ELEMENTS:string = \"invalidateElements\";\n\n\tprivate _renderable:IRenderable;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderable:IRenderable)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderable = renderable;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderable():IRenderable\n\t{\n\t\treturn this._renderable;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableEvent\n\t{\n\t\treturn new RenderableEvent(this.type, this._renderable);\n\t}\n}\n\nexport = RenderableEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}\n\nexport = ResizeEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n\nclass StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}\n\nexport = StyleEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\n\nclass SurfaceEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _surface:ISurface;\n\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, surface:ISurface)\n\t{\n\t\tsuper(type);\n\n\t\tthis._surface = surface;\n\t}\n\n\t/**\n\t * The surface of the renderable.\n\t */\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SurfaceEvent\n\t{\n\t\treturn new SurfaceEvent(this.type, this._surface);\n\t}\n}\n\nexport = SurfaceEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Transform\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\n\nclass TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}\n\nexport = TransformEvent;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * @class away.base.TriangleElements\n */\nclass ElementsBase extends AssetBase\n{\n\tprivate _indices:Short3Attributes;\n\tprivate _customAttributesNames:Array<string> = new Array<string>();\n\tprivate _customAttributes:Object = new Object();\n\t\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:ElementsEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\t\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._indices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributesNames():Array<string>\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributes(name:string):AttributesView\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\t\n\t/**\n\t * The total amount of triangles in the TriangleElements.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\tpublic copyTo(elements:ElementsBase)\n\t{\n\t\tif (this.indices)\n\t\t\telements.setIndices(this.indices.clone());\n\t\t\n\t\tfor (var name in this._customAttributes)\n\t\t\telements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\t\t}\n\t\t\n\t\tfor (var name in this._customAttributes) {\n\t\t\tthis._customAttributes[name].dispose();\n\t\t\tdelete this._customAttributes;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._indices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._indices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._indices)\n\t\t\t\tthis._indices = new Short3Attributes();\n\n\t\t\tthis._indices.set(values, offset);\n\t\t} else if (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._indices) {\n\t\t\tthis._numElements = this._indices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\t\n\t/**\n\t * Updates custom attributes.\n\t */\n\tpublic setCustomAttributes(name:string, array:Array<number>, offset?:number);\n\tpublic setCustomAttributes(name:string, arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setCustomAttributes(name:string, attributesView:AttributesView, offset?:number);\n\tpublic setCustomAttributes(name:string, values:any, offset:number = 0)\n\t{\n\t\tif (values == this._customAttributes[name])\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributes[name] = values;\n\t\t} else if (values) {\n\t\t\tif (!this._customAttributes[name])\n\t\t\t\tthis._customAttributes[name] = new Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\n\n\t\t\tthis._customAttributes[name].set(values, offset);\n\t\t} else if (this._customAttributes[name]) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n\t\t\tdelete this._customAttributes[name];\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._customAttributes[name]);\n\n\t\tthis._verticesDirty[this._customAttributes[name].id] = false;\n\n\t\tif (this._customAttributesNames.indexOf(name) == -1)\n\t\t\tthis._customAttributesNames.push(name);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies()\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new ElementsEvent(ElementsEvent.INVALIDATE_INDICES, this._indices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices()\n\t{\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._indices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new ElementsEvent(ElementsEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ElementsBase;",
    "class ElementsType\n{\n\t/**\n\t *\n\t */\n\tpublic static TRIANGLE:string = \"triangle\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINE:string = \"line\";\n}\n\nexport = ElementsType;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport GraphicsEvent\t\t\t= require(\"awayjs-display/lib/events/GraphicsEvent\");\nimport Style\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IAnimator \t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport ElementsEvent\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport StyleEvent\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IPickingCollider\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport ElementsUtils\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport ParticleData\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\n\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Sprite\n *\n * @class Graphics\n */\nclass Graphics extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Graphics]\";\n\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\n\tprivate _boxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tprivate _sphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _graphics:Array<Graphic> = new Array<Graphic>();\n\tprivate _animator:IAnimator;\n\tprivate _style:Style;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Graphics.assetType;\n\t}\n\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n\tpublic get count():number\n\t{\n\t\treturn this._graphics.length;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (graphic.material) {\n\t\t\t\tgraphic.material.iRemoveOwner(graphic);\n\t\t\t\tgraphic.material.iAddOwner(graphic);\n\t\t\t}\n\n\t\t\t//invalidate any existing graphic objects in case they need to pull new elements\n\t\t\tgraphic.invalidateElements();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\t/**\n\t * The material with which to render the Graphics.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iRemoveOwner(graphic);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iAddOwner(graphic);\n\t}\n\n\t/**\n\t * Creates a new Graphics object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t}\n\n\t/**\n\t * Adds a GraphicBase wrapping a Elements.\n\t *\n\t * @param elements\n\t */\n\tpublic addGraphic(elements:ElementsBase, material:MaterialBase = null, style:Style = null)\n\t{\n\t\tvar newGraphic:Graphic;\n\n\t\tif (Graphic._available.length) {\n\t\t\tnewGraphic = Graphic._available.pop();\n\t\t\tnewGraphic.parent = this;\n\t\t\tnewGraphic.elements = elements;\n\t\t\tnewGraphic.material = material;\n\t\t\tnewGraphic.style = style;\n\t\t} else {\n\t\t\tnewGraphic = new Graphic(this._graphics.length, this, elements, material, style);\n\t\t}\n\n\t\tthis._graphics.push(newGraphic);\n\n\t\telements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._invalidateBounds();\n\t}\n\n\tpublic removeGraphic(graphic:Graphic)\n\t{\n\t\tthis._graphics.splice(this._graphics.indexOf(graphic), 1);\n\n\t\tgraphic.elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tgraphic.elements = null;\n\t\tgraphic.material = null;\n\t\tgraphic.style = null;\n\n\t\tthis._invalidateBounds();\n\t}\n\n\tpublic getGraphicAt(index:number):Graphic\n\t{\n\t\treturn this._graphics[index];\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.applyTransformation(transform);\n\t}\n\n\tpublic copyTo(graphics:Graphics)\n\t{\n\t\tgraphics.material = this._material;\n\t\tgraphics.style = this.style;\n\t\tgraphics.particles = this.particles;\n\t\tgraphics.numParticles = this.numParticles;\n\t\tvar graphic:Graphic;\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\t\t\tgraphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle());\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tgraphics.animator = this._animator.clone();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scale(scale);\n\t}\n\n\tpublic clear()\n\t{\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].clear();\n\t}\n\n\t/**\n\t * Clears all resources used by the Graphics object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].dispose();\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar len:number = this._graphics.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic getBoxBounds():Box\n\t{\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._boxBoundsInvalid = false;\n\n\t\t\tif (!this._boxBounds)\n\t\t\t\tthis._boxBounds = new Box();\n\n\t\t\tif (this._graphics.length) {\n\t\t\t\tthis._boxBounds.setBoundIdentity();\n\t\t\t\tvar len:number = this._graphics.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\t\tthis._boxBounds = this._graphics[i].elements.getBoxBounds(this._boxBounds);\n\t\t\t} else {\n\t\t\t\tthis._boxBounds.setEmpty();\n\t\t\t}\n\t\t}\n\n\t\treturn this._boxBounds;\n\t}\n\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttarget = this._graphics[i].elements.getSphereBounds(center, target);\n\n\t\treturn target;\n\t}\n\n\tprivate _invalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.hasEventListener(GraphicsEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GraphicsEvent(GraphicsEvent.BOUNDS_INVALID));\n\t}\n\n\tpublic _iInvalidateSurfaces()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateSurface();\n\t}\n\n\n\tpublic invalidateElements()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateElements();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number):boolean\n\t{\n\t\t//TODO: handle lines as well\n\t\tvar len:number = this._graphics.length;\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tif (ElementsUtils.hitTestTriangleElements(x, y, 0, this.getBoxBounds(), <TriangleElements> this._graphics[i].elements))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttraverser.applyRenderable(this._graphics[i]);\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\n\t\t\treturn;\n\n\t\tthis._invalidateBounds();\n\t}\n}\n\nexport = Graphics;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport RenderableEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IRenderable \t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport IPickingCollider = require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision = require(\"awayjs-display/lib/pick/PickingCollision\");\nimport DisplayObject = require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Sprite\n *\n * @class away.base.Graphic\n */\nclass Graphic extends AssetBase implements IRenderable\n{\n\tpublic static _available:Array<Graphic> = new Array<Graphic>();\n\n\tpublic static assetType:string = \"[asset Graphic]\";\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _style:Style;\n\tprivate _material:MaterialBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic parent:Graphics;\n\n\t/**\n\t * The Elements object which provides the geometry data for this Graphic.\n\t */\n\tpublic elements:ElementsBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Graphic.assetType;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parent.animator;\n\t}\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parent.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parent.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * Creates a new Graphic object\n\t */\n\tconstructor(index:number, parent:Graphics, elements:ElementsBase, material:MaterialBase = null, style:Style = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._iIndex = index;\n\t\tthis.parent = parent;\n\t\tthis.elements = elements;\n\t\tthis.material = material;\n\t\tthis.style = style;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.parent.removeGraphic(this);\n\t\tthis.parent = null;\n\n\t\tGraphic._available.push(this);\n\t}\n\n\tpublic invalidateElements()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _iGetExplicitStyle():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn this.elements._iTestCollision(pickingCollider, this.material, pickingCollision)\n\t}\n\n}\n\nexport = Graphic;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * @class LineElements\n */\nclass LineElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset LineElements]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineElements.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineElements.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineElements\n\t{\n\t\tvar clone:LineElements = new LineElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this.indices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollision);\n\t}\n}\n\nexport = LineElements;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\n\n/**\n * @class away.base.TriangleElements\n */\nclass TriangleElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset TriangleElements]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:AttributesView;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:AttributesView;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = - 1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleElements.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\tif (!this._positions)\n\t\t\tthis.setPositions(new Float3Attributes(this._concatenatedBuffer));\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():AttributesView\n\t{\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._positions)\n\t\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer); //positions cannot be null\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._normals = ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._tangents = ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setUVs(attributesView:AttributesView, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._uvs)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = values;\n\t\t} else if (values) {\n\t\t\tif (!this._uvs)\n\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._uvs.set(values, offset);\n\t\t} else if (this._uvs) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._positions) {\n\t\t\tthis._positions.dispose();\n\t\t\tthis._positions = null;\n\t\t}\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\t}\n\n\tpublic copyTo(elements:TriangleElements)\n\t{\n\t\tsuper.copyTo(elements);\n\n\t\t//temp disable auto derives\n\t\telements.autoDeriveNormals = false;\n\t\telements.autoDeriveTangents = false;\n\n\t\telements.setPositions(this.positions.clone());\n\n\t\tif (this.normals)\n\t\t\telements.setNormals(this.normals.clone());\n\n\t\tif (this.tangents)\n\t\t\telements.setTangents(this.tangents.clone());\n\n\t\tif (this.uvs)\n\t\t\telements.setUVs(this.uvs.clone());\n\n\t\telements.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\telements.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\telements.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\telements.autoDeriveNormals = this._autoDeriveNormals;\n\t\telements.autoDeriveTangents = this._autoDeriveTangents;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleElements\n\t{\n\t\tvar clone:TriangleElements = new TriangleElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tthis.copyTo(clone);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tif (this.uvs) // only scale if uvs exist\n\t\t\tElementsUtils.scaleUVs(scaleU, scaleV, this.uvs, this._numVertices);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tElementsUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollision);\n\t}\n}\n\nexport = TriangleElements;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImageCube\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderable:IRenderable = null):MaterialBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Graphic) && (<Graphic> renderable).elements.isAsset(LineElements)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderable:IRenderable = null):TextureBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial(0xFFFFFF);\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D()\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// FrameScript debugging:\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\n\n\n\tpublic static frameScriptDebug:Object = undefined;\n\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollision:PickingCollision;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollision;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollision)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollision;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collision:PickingCollision = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collision == null)\n\t\t\tcollision = this._iCollision;\n\n\t\t// 3D properties.\n\t\tif (collision) {\n\t\t\t// Object.\n\t\t\tevent.entity = collision.entity;\n\t\t\tevent.renderable = collision.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collision.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collision.position? collision.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collision.normal? collision.normal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.elementIndex = collision.elementIndex;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollision)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollision:PickingCollision;\n\tprivate _previousCollidingObject:PickingCollision;\n\tpublic static _iCollisionFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollisionFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollision)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollision)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollision, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.entity = collider.entity;\n\t\t\tevent.renderable = collider.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collider.position? collider.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collider.normal? collider.normal.clone() : null;\n\t\t\t// ElementsIndex.\n\t\t\tevent.elementIndex = collider.elementIndex;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollision, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport SurfaceEvent\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderable> = new Array<IRenderable>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\tprivate _curves:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether material should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use an atlas. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderable as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderable that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * Removes an IRenderable as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateSurfaces()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateSurface();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number)\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidatePasses();\n\n\t\t//invalidate renderables for number of images getter (in case it has changed)\n\t\tthis.invalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity)\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = camera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:SingleCubeTexture, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tif (this._needsRender[i])\n\t\t\t\trenderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i)\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer)\n\t{\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(camera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = camera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(camera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((camera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((camera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((camera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(camera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tvar corners:Array<number> = camera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase extends AssetBase\n{\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(camera:Camera, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(scene, this._depthMap, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:TextureBase, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/display/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t// todo: dead end for now, if it has a debug sprite, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass DisplayObjectNode extends AbstractionBase implements INode\n{\n\tpublic numEntities:number = 0;\n\n\tpublic isSceneGraphNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\n\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\n\t\n\tpublic _displayObject:DisplayObject;\n\tprivate _boundsDirty:boolean = true;\n\tprivate _bounds:BoundingVolumeBase;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic parent:SceneGraphNode;\n\n\tpublic isContainerNode:boolean = false;\n\n\tprivate _boundsType:string;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._displayObject.debugVisible;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._boundsDirty)\n\t\t\tthis._updateBounds();\n\n\t\treturn this._bounds;\n\t}\n\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\n\t{\n\t\tsuper(displayObject, pool);\n\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\n\n\t\tthis._displayObject = displayObject;\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\n\t\tthis._boundsType = this._displayObject.boundsType;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this._displayObject.castsShadows;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\t\tthis._displayObject = null;\n\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tthis._bounds = null;\n\t}\n\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tif (this._boundsType != this._displayObject.boundsType) {\n\t\t\tthis._boundsType = this._displayObject.boundsType;\n\t\t\tthis._boundsDirty = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t// do nothing here\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\t// do nothing here\n\t}\n\n\tprivate _updateBounds()\n\t{\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tif (this._boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis._boundsDirty = false;\n\t}\n}\n\nexport = DisplayObjectNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends DisplayObjectNode\n{\n\tpublic numEntities:number = 1;\n\n\tprivate _partition:PartitionBase;\n\tprivate _maskPosition:Vector3D = new Vector3D();\n\n\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper(displayObject, partition);\n\n\t\tthis._partition = partition;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._partition = null;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(globalRayPosition:Vector3D, globalRayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\n\t\t\treturn false;\n\n\t\tvar pickingCollision:PickingCollision = this._displayObject._iPickingCollision;\n\t\tpickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\n\t\tpickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\n\n\t\tif (!pickingCollision.normal)\n\t\t\tpickingCollision.normal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollision.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollision.globalRayPosition = globalRayPosition;\n\t\tpickingCollision.globalRayDirection = globalRayDirection;\n\t\tpickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyEntity(this._displayObject);\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\tthis.bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tprivate isIntersectingMasks(globalRayPosition:Vector3D, globalRayDirection:Vector3D, masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tthis._maskPosition.x = globalRayPosition.x + globalRayDirection.x*1000;\n\t\t\tthis._maskPosition.y = globalRayPosition.y + globalRayDirection.y*1000;\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport NullBounds = require(\"awayjs-display/lib/bounds/NullBounds\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements IContainerNode\n{\n\tprivate _bounds:BoundingVolumeBase = new NullBounds();\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:IContainerNode;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n}\n\nexport = NodeBase;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/partition/IEntityNodeClass\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _rootNode:IContainerNode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:DisplayObjectNode;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(displayObject:DisplayObject)\n\t{\n\t\tthis._abstractionPool[displayObject.id] = null;\n\t}\n\n\tpublic traverse(traverser:ITraverser)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:DisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode._displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:IContainerNode;\n\t\tvar t:DisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n\t}\n}\n\nexport = PartitionBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends DisplayObjectNode implements IContainerNode\n{\n\tpublic isSceneGraphNode:boolean = true;\n\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _childDepths:Array<number> = new Array<number>();\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic _pEntityNode:EntityNode;\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tfor (i = this._pChildNodes.length - 1; i >= 0; i--)\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\tfor (i = this._childMasks.length - 1; i >= 0; i--)\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\n\n\t\tif (this._pEntityNode)\n\t\t\tthis._pEntityNode.acceptTraverser(traverser);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:DisplayObjectNode)\n\t{\n\t\tnode.parent = this;\n\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = <EntityNode> node;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.push(node);\n\t\t} else {\n\t\t\tvar depth:number = node._displayObject._depthID;\n\t\t\tvar len:number = this._childDepths.length;\n\t\t\tvar index:number = len;\n\n\t\t\twhile (index--)\n\t\t\t\tif (this._childDepths[index] < depth)\n\t\t\t\t\tbreak;\n\n\t\t\tindex++;\n\n\t\t\tif (index < len) {\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\n\t\t\t} else {\n\t\t\t\tthis._pChildNodes.push(node);\n\t\t\t\tthis._childDepths.push(depth);\n\t\t\t}\n\t\t}\n\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:DisplayObjectNode)\n\t{\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = null;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\n\t\t} else {\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\n\n\t\t\tthis._pChildNodes.splice(index, 1);\n\t\t\tthis._childDepths.splice(index, 1);\n\t\t}\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\n\t}\n}\nexport = SceneGraphNode;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tprivate _sceneGraphNodePool:SceneGraphNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool();\n\t}\n\n\tpublic traverse(traverser:ITraverser)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\tif (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\n\t\t\tthis._rootNode = <SceneGraphNode> node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\n\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;\n\n\n/**\n * @class away.pool.SceneGraphNodePool\n */\nclass SceneGraphNodePool implements IAbstractionPool\n{\n\tprivate _abstractionPool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdelete this._abstractionPool[displayObjectContainer.id];\n\t}\n}",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ITraverser\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applySkybox(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport LineElements\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport PickingCollision\t\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport AttributesView = require(\"awayjs-core/lib/attributes/AttributesView\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollision The collision object used to store the collision results\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollision:PickingCollision)\n\t{\n\t\tpickingCollision.renderable = null;\n\n\t\t//if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollision.renderable = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleElements:TriangleElements, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollision.rayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollision.rayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:ArrayBufferView = triangleElements.positions.get(triangleElements.numVertices);\n\t\tvar posDim:number = triangleElements.positions.dimensions;\n\n\t\tvar indices:Uint16Array;\n\t\tvar count:number;\n\t\tif (triangleElements.indices) {\n\t\t\tindices = triangleElements.indices.get(triangleElements.numElements);\n\t\t\tcount = indices.length;\n\t\t} else {\n\t\t\tcount = triangleElements.numVertices;\n\t\t}\n\n\t\tfor (var index:number = 0; index < count; index+=3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\tif (indices) {\n\t\t\t\ti0 = indices[index]*posDim;\n\t\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\t\ti2 = indices[index + 2]*posDim;\n\t\t\t} else {\n\t\t\t\ti0 = index*posDim;\n\t\t\t\ti1 = (index + 1)*posDim;\n\t\t\t\ti2 = (index + 2)*posDim;\n\t\t\t}\n\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp1x = positions[i1];\n\t\t\tp2x = positions[i2];\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\ts0y = p1y - p0y;\n\t\t\ts1y = p2y - p0y;\n\n\t\t\tif (posDim == 3) {\n\t\t\t\tp0z = positions[i0 + 2];\n\t\t\t\tp1z = positions[i1 + 2];\n\t\t\t\tp2z = positions[i2 + 2];\n\t\t\t\ts0z = p1z - p0z;\n\t\t\t\ts1z = p2z - p0z;\n\n\t\t\t\t// evaluate sides and triangle normal\n\t\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\t\tnx *= nl;\n\t\t\t\tny *= nl;\n\t\t\t\tnz *= nl;\n\t\t\t} else { //2d hittest\n\t\t\t\tnx = 0;\n\t\t\t\tny = 0;\n\t\t\t\tnz = 1;\n\t\t\t}\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < pickingCollision.rayEntryDistance) { // all tests passed\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollision.rayEntryDistance = t;\n\t\t\t\t\tpickingCollision.position = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollision.normal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tif (triangleElements.uvs) { //uv calculations\n\t\t\t\t\t\tvar uvs:ArrayBufferView = triangleElements.uvs.get(triangleElements.numVertices);\n\t\t\t\t\t\tvar uvDim:number = triangleElements.uvs.dimensions;\n\n\t\t\t\t\t\tvar uIndex:number = indices[index]*uvDim;\n\t\t\t\t\t\tvar uv0:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 1]*uvDim;\n\t\t\t\t\t\tvar uv1:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 2]*uvDim;\n\t\t\t\t\t\tvar uv2:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tpickingCollision.uv = new Point(u*uv0.x + v*uv1.x + w*uv2.x, u*uv0.y + v*uv1.y + w*uv2.y);\n\t\t\t\t\t}\n\t\t\t\t\tpickingCollision.elementIndex = collisionTriangleIndex;\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\t//\n\t///**\n\t// * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n\t// *\n\t// * @param triangleElements\n\t// * @param material\n\t// * @param pickingCollision\n\t// * @returns {boolean}\n\t// */\n\t//public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\n\t//{\n\t//\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\n\t//\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\n\t//\n\t//\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t//\t//this will only work while all points lie on the x/y plane\n\t//\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\t//\n\t//\tvar result:Vector3D = new Vector3D();\n\t//\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t//\tresult.x = rayPosition.x - ( plane.x*distance);\n\t//\tresult.y = rayPosition.y - ( plane.y*distance);\n\t//\tresult.z = rayPosition.z - ( plane.z*distance);\n\t//\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t//\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t//\trayDirection.scaleBy(t);\n\t//\tvar p:Vector3D = rayPosition.add(rayDirection);\n\t//\n\t//\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n\t//\tvar collisionCurveIndex:number = -1;\n\t//\tvar bothSides:boolean = material.bothSides;\n\t//\n\t//\n\t//\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n\t//\tvar posDim:number = curveElements.positions.dimensions;\n\t//\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n\t//\tvar curveDim:number = curveElements.curves.dimensions;\n\t//\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n\t//\tvar uvDim:number = curveElements.uvs.dimensions;\n\t//\tvar numIndices:number = indices.length;\n\t//\n\t//\n\t//\tfor(var index:number = 0; index < numIndices; index+=3)\n\t//\t{\n\t//\t\tvar id0:number = indices[index];\n\t//\t\tvar id1:number = indices[index + 1] * posDim;\n\t//\t\tvar id2:number = indices[index + 2] * posDim;\n\t//\n\t//\t\tvar ax:number = positions[id0 * posDim];\n\t//\t\tvar ay:number = positions[id0 * posDim + 1];\n\t//\t\tvar bx:number = positions[id1];\n\t//\t\tvar by:number = positions[id1 + 1];\n\t//\t\tvar cx:number = positions[id2];\n\t//\t\tvar cy:number = positions[id2 + 1];\n\t//\n\t//\t\tvar curvex:number = curves[id0 * curveDim];\n\t//\t\tvar az:number = positions[id0 * posDim + 2];\n\t//\n\t//\t\t//console.log(ax, ay, bx, by, cx, cy);\n\t//\n\t//\t\t//from a to p\n\t//\t\tvar dx:number = ax - p.x;\n\t//\t\tvar dy:number = ay - p.y;\n\t//\n\t//\t\t//edge normal (a-b)\n\t//\t\tvar nx:number = by - ay;\n\t//\t\tvar ny:number = -(bx - ax);\n\t//\n\t//\t\t//console.log(ax,ay,bx,by,cx,cy);\n\t//\n\t//\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot a\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = bx - p.x;\n\t//\t\tdy = by - p.y;\n\t//\t\tnx = cy - by;\n\t//\t\tny = -(cx - bx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot b\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = cx - p.x;\n\t//\t\tdy = cy - p.y;\n\t//\t\tnx = ay - cy;\n\t//\t\tny = -(ax - cx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot c\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\t//check if not solid\n\t//\t\tif (curvex != 2) {\n\t//\n\t//\t\t\tvar v0x:number = bx - ax;\n\t//\t\t\tvar v0y:number = by - ay;\n\t//\t\t\tvar v1x:number = cx - ax;\n\t//\t\t\tvar v1y:number = cy - ay;\n\t//\t\t\tvar v2x:number = p.x - ax;\n\t//\t\t\tvar v2y:number = p.y - ay;\n\t//\n\t//\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t//\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t//\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t//\t\t\tvar u:number = 1 - v - w;\n\t//\n\t//\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t//\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\t//\n\t//\t\t\tvar d:number = uu * uu - vv;\n\t//\n\t//\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t//\t\t\t\tcontinue;\n\t//\t\t}\n\t//\t\t//TODO optimize away this pointless check as the distance is always the same\n\t//\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t//\t\tif (distance < shortestCollisionDistance) {\n\t//\t\t\tshortestCollisionDistance = distance;\n\t//\t\t\tcollisionCurveIndex = index/3;\n\t//\t\t\tpickingCollision.rayEntryDistance = distance;\n\t//\t\t\tpickingCollision.localPosition = p;\n\t//\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\n\t//\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t//\t\t\tpickingCollision.index = index;\n\t//\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\n\t//\n\t//\t\t\t// if not looking for best hit, first found will do...\n\t//\t\t\tif (!this._findClosestCollision)\n\t//\t\t\t\treturn true;\n\t//\t\t}\n\t//\t}\n\t//\n\t//\tif (collisionCurveIndex >= 0)\n\t//\t\treturn true;\n\t//\n\t//\treturn false;\n\t//}\n\n\t/**\n\t * Tests a <code>LineElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineElements:LineElements, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollision\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollision\n */\nclass PickingCollision\n{\n\t/**\n\t * The entity to which this collision object belongs.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable associated with a collision.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The local position of the collision on the renderable's surface.\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the element where the collision took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * Creates a new <code>PickingCollision</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tthis.entity = entity;\n\t}\n}\n\nexport = PickingCollision;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport ITraverser\t\t\t\t\t= require(\"awayjs-display/lib/ITraverser\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollision\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollision\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker, ITraverser\n{\n\tprivate _rayPosition:Vector3D;\n\tprivate _rayDirection:Vector3D;\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _bestCollision:PickingCollision;\n\tprivate _testCollision:PickingCollision;\n\tprivate _testCollider:IPickingCollider;\n\tprivate _ignoredEntities:Array<IEntity>;\n\n\tprivate _entities:Array<IEntity> = new Array<IEntity>();\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic onlyMouseEnabled:boolean = true;\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollision\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollision\n\t{\n\t\tthis._rayPosition = rayPosition;\n\t\tthis._rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this);\n\n\t\t//early out if no collisions detected\n\t\tif (!this._entities.length)\n\t\t\treturn null;\n\n\t\tvar collision:PickingCollision = this.getPickingCollision();\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn collision;\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\n//\t\t{\n//\t\t\tthis._numRenderables = 0;\n//\n//\t\t\tvar renderable:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\trenderable = entities[c];\n//\n//\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollision(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities:Array<IEntity>)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\t\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tif (this._ignoredEntities) {\n\t\t\tvar len:number = this._ignoredEntities.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollision.rayEntryDistance > entity2._iPickingCollision.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollision():PickingCollision\n\t{\n\t\t// Sort entities from closest to furthest to reduce tests.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis._bestCollision = null;\n\t\t\n\t\tvar entity:IEntity;\n\t\tvar len:number = this._entities.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tentity = this._entities[i];\n\t\t\tthis._testCollision = entity._iPickingCollision;\n\t\t\tif (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\n\t\t\t\tthis._testCollider = entity.pickingCollider;\n\t\t\t\tif (this._testCollider) {\n\t\t\t\t\tthis._testCollision.rayEntryDistance = Number.MAX_VALUE;\n\t\t\t\t\tentity._acceptTraverser(this);\n\t\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\t\tif (this._bestCollision && !this._findClosestCollision)\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if (!this._testCollision.rayOriginIsInsideBounds) {\n\t\t\t\t\t// A bounds collision with no picking collider stops all checks.\n\t\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\t\tthis._bestCollision = this._testCollision;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._bestCollision)\n\t\t\tthis.updatePosition(this._bestCollision);\n\n\t\treturn this._bestCollision;\n\t}\n\n\tprivate updatePosition(pickingCollision:PickingCollision)\n\t{\n\t\tvar collisionPos:Vector3D = pickingCollision.position || (pickingCollision.position = new Vector3D());\n\n\t\tvar rayDir:Vector3D = pickingCollision.rayDirection;\n\t\tvar rayPos:Vector3D = pickingCollision.rayPosition;\n\t\tvar t:number = pickingCollision.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tif (!this.isIgnored(entity))\n\t\t\tthis._entities.push(entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tif (renderable._iTestCollision(this._testCollision, this._testCollider))\n\t\t\tthis._bestCollision = this._testCollision;\n\t}\n\t\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = RaycastPicker;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive sprite.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive sprite.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar numIndices:number = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGraphics() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive sprite.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive sprite.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper(material, elementsType);\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGraphics.numVertices) {\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar uvs:ArrayBufferView;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidatePrimitive()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive sprite.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport Sprite\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _primitiveDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _elements:ElementsBase;\n\tprivate _elementsType:string;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get elementsType():string\n\t{\n\t\treturn this._elementsType;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Sprite> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\")\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._material = material;\n\t\tthis._elementsType = elementsType;\n\n\t\tif (this._elementsType == ElementsType.TRIANGLE) {\n\t\t\tvar triangleElements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\ttriangleElements.autoDeriveNormals = false;\n\t\t\ttriangleElements.autoDeriveTangents = false;\n\t\t\tthis._elements = triangleElements;\n\t\t} else if (this._elementsType == ElementsType.LINE) {\n\t\t\tthis._elements = new LineElements(new AttributesBuffer());\n\t\t}\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\t\n\t/**\n\t * Invalidates the primitive, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidatePrimitive()\n\t{\n\t\tthis._primitiveDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGraphics()\n\t{\n\t\tthis._pBuildGraphics(this._elements, this._elementsType);\n\n\t\tthis._primitiveDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._elements, this._elementsType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._primitiveDirty)\n\t\t\tthis.updateGraphics();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar sprite:Sprite = new Sprite(this._material);\n\t\tsprite.graphics.addGraphic(this._elements);\n\t\tsprite._iSourcePrefab = this;\n\n\t\treturn sprite;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive sprite.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:ArrayBufferView = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive sprite.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nclass Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * Elements for this char\n\t */\n\tpublic elements:TriangleElements;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(elements:TriangleElements)\n\t{\n\t\tthis.elements = elements;\n\n\t\tthis.char_width = 0;\n\n\t\tif (this.elements != null) {\n\t\t\tvar positions2:ArrayBufferView = this.elements.positions.get(this.elements.numVertices);\n\t\t\tvar count:number = this.elements.positions.count;\n\t\t\tvar dim:number = this.elements.positions.dimensions;\n\t\t\tfor (var v:number = 0; v < count*dim; v+=dim) {\n\t\t\t\tif(positions2[v] > this.char_width)\n\t\t\t\t\tthis.char_width = positions2[v];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getChar(name:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[name];\n\t}\n\t/**\n\t *\n\t */\n\tpublic setChar(name:string, elements:ElementsBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<TriangleElements> elements);\n\t\telements.name = name;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[name]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "/**\n\n\n */\nclass MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\n}\n\nexport = MappingMode;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport MappingMode\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\n/**\n *\n */\nclass TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number)\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport = TextureBase;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nclass ElementsUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tif (positionDim == 3) {\n\t\t\twhile (i < count) {\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx1 = positions[index];\n\t\t\t\ty1 = positions[index + 1];\n\t\t\t\tz1 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx2 = positions[index];\n\t\t\t\ty2 = positions[index + 1];\n\t\t\t\tz2 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx3 = positions[index];\n\t\t\t\ty3 = positions[index + 1];\n\t\t\t\tz3 = positions[index + 2];\n\t\t\t\tdx1 = x3 - x1;\n\t\t\t\tdy1 = y3 - y1;\n\t\t\t\tdz1 = z3 - z1;\n\t\t\t\tdx2 = x2 - x1;\n\t\t\t\tdy2 = y2 - y1;\n\t\t\t\tdz2 = z2 - z1;\n\t\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t\t// length of cross product = 2*triangle area\n\n\t\t\t\tfaceNormals[j++] = cx;\n\t\t\t\tfaceNormals[j++] = cy;\n\t\t\t\tfaceNormals[j++] = cz;\n\t\t\t\tfaceNormals[j++] = d;\n\t\t\t}\n\t\t} else if (positionDim == 2) {\n\t\t\twhile (i < count) {\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\ti += 3;\n\t\t\t}\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:AttributesView, uvAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = <Float32Array> uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar v0:number;\n\t\tvar v1:number;\n\t\tvar v2:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tv0 = index1*positionDim;\n\t\t\tv1 = index2*positionDim;\n\t\t\tv2 = index3*positionDim;\n\n\t\t\tx0 = positions[v0];\n\t\t\tdx1 = positions[v1] - x0;\n\t\t\tdx2 = positions[v2] - x0;\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\n\t\t\ty0 = positions[v0 + 1];\n\t\t\tdy1 = positions[v1 + 1] - y0;\n\t\t\tdy2 = positions[v2 + 1] - y0;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\n\t\t\tif (positionDim == 3) {\n\t\t\t\tz0 = positions[v0 + 2];\n\t\t\t\tdz1 = positions[v1 + 2] - z0;\n\t\t\t\tdz2 = positions[v2 + 2] - z0;\n\t\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\t} else {\n\t\t\t\tcz = 0;\n\t\t\t}\n\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:AttributesView, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\t//todo: make this compatible with 2-dimensional positions\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = ElementsUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestTriangleElements(x:number, y:number, z:number, boundingBox:Box, triangleElements:TriangleElements):boolean\n\t{\n\t\tvar positionAttributes:AttributesView = triangleElements.positions;\n\t\tvar curveAttributes:AttributesView = triangleElements.getCustomAtributes(\"curves\");\n\t\tvar count:number = triangleElements.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count);\n\t\tvar curves:ArrayBufferView = curveAttributes? curveAttributes.get(count) : null;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = triangleElements.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvex:number = curves[id0 * curveDim + 1];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = triangleElements.cells;\n\t\t\tvar divisions:number = cells.length? triangleElements.divisions : (triangleElements.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvex:number = curves[id0 * curveDim + 1];\n\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\n\t\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tif (curves) {\n\t\t\t\tvar curvex:number = curves[id0 * curveDim + 1];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getTriangleGraphicsBoxBounds(positionAttributes:AttributesView, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = 0, minY:number = 0, minZ:number = 0;\n\t\tvar maxX:number = 0, maxY:number = 0, maxZ:number = 0;\n\n\t\tvar len:number = count*posDim;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tif (i == 0) {\n\t\t\t\tmaxX = minX = positions[i];\n\t\t\t\tmaxY = minY = positions[i + 1];\n\t\t\t\tmaxZ = minZ = (posDim == 3)? positions[i + 2] : 0;\n\t\t\t} else {\n\t\t\t\tpos = positions[i];\n\t\t\t\tif (pos < minX)\n\t\t\t\t\tminX = pos;\n\t\t\t\telse if (pos > maxX)\n\t\t\t\t\tmaxX = pos;\n\n\t\t\t\tpos = positions[i + 1];\n\n\t\t\t\tif (pos < minY)\n\t\t\t\t\tminY = pos;\n\t\t\t\telse if (pos > maxY)\n\t\t\t\t\tmaxY = pos;\n\n\t\t\t\tif (posDim == 3) {\n\t\t\t\t\tpos = positions[i + 2];\n\n\t\t\t\t\tif (pos < minZ)\n\t\t\t\t\t\tminZ = pos;\n\t\t\t\t\telse if (pos > maxZ)\n\t\t\t\t\t\tmaxZ = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (output.x > minX)\n\t\t\toutput.x = minX;\n\n\t\tif (output.y > minY)\n\t\t\toutput.y = minY;\n\n\t\tif (output.z > minZ)\n\t\t\toutput.z = minZ;\n\n\t\tif (output.right < maxX)\n\t\t\toutput.right = maxX;\n\n\t\tif (output.bottom < maxY)\n\t\t\toutput.bottom = maxY;\n\n\t\tif (output.back < maxZ)\n\t\t\toutput.back = maxZ;\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGraphicsSphereBounds(positionAttributes:AttributesView, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = count*posDim;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = (posDim == 3)? positions[i + 2] - center.z : -center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = ElementsUtils;"
  ],
  "sourceRoot": ""
}